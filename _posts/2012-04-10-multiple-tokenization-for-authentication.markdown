---

title: Multiple tokenization for authentication
abstract: Embodiments of the present invention are directed generally to systems, methods, and apparatuses for authenticating a cardholder using multiple tokenization authentication. Embodiments of the invention are directed at a method. The method includes receiving at a first entity a first token from a consumer and determining a second token associated with the first token. Once the second token is determined, the second token is sent to a server computer at a second entity. The server computer then determines an account identifier associated with the second token and processes a transaction using the account identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280765&OS=09280765&RS=09280765
owner: Visa International Service Association
number: 09280765
owner_city: San Francisco
owner_country: US
publication_date: 20120410
---
This application claims the benefit of U.S. Provisional Application No. 61 474 084 filed Apr. 11 2011 titled DOUBLE TOKENIZATION FOR AUTHENTICATING A CARDHOLDER which is incorporated by reference in its entirety for all purposes.

Data theft due to hacking viruses and malicious software is a serious problem in the our digital information society. Data breaches of secure databases containing consumer information are a regular occurrence. Merchants store vast databases of sensitive account and personal information for financial related purposes. Hackers interested in identify theft have found these merchant databases to be easy targets. Security breaches at merchants and other entities have led to countless unauthorized transactions being completed using consumers account information. This problem may be compounded by small business merchants that do not have the resources to secure their data against sophisticated hackers. Accordingly merchants may store sensitive information about their consumers that may cause the merchant to be liable if the information is stolen and used to complete unauthorized transactions.

Additionally some owners and or employees of a merchant may also access sensitive consumer information from the vast records of sensitive data and use information from the databases to initiate unauthorized transactions at other merchants. Because no data is breached during an attack from an outside entity many times no one may know that the consumer s information has been stolen or when it was stolen. Accordingly malicious merchants with access to sensitive information may open the consumer to loss through fraudulent transactions. Because no particular merchant may be traceable to the data breach it may be hard to find the appropriate merchant responsible and thus the consumer may bear the liability for the unauthorized transaction.

Additionally as payment transactions using accounts associated with portable consumer devices become more prevalent consumers demand more flexible payment options. One solution may be to allow consumers to use personal information to initiate transactions. However allowing consumers to initiate transactions with the use of personal information makes the personal information more sensitive data because third parties may use the personal information to initiate unauthorized transactions. Furthermore personal information related to the consumer may be easier for malicious parties to gain access to then account passwords personal identification numbers and other such authentication techniques used in the past. For example if consumers are allowed to initiate a transaction by merely providing their phone number the ability for third parties to initiate unauthorized transactions by merely submitting a phone number that can be found in a phone book increases the chances of an unauthorized transaction being initiated astronomically. Accordingly as personal information that used to be non sensitive are becoming more sensitive as it is being used to initiate payment transactions. Therefore a need exists to protect the consumers personal information from being stored in merchant records while providing more flexible payment options.

Consumers are constantly in need of access to their payment accounts no matter what circumstances they find themselves in. For example a consumer may have misplaced or lost their portable consumer device. As such there exists a need for authentication procedures that are both secure as well as consumer friendly. Consumer friendly authentication means that the consumer may use information that is recognizable relevant and easily remembered to initiate a transaction. Furthermore it may mean that transactions may be initiated without the need for a device to be carried or swiped.

However the use of tokens that are recognizable easy to remember and familiar to consumers can also be easily overheard sniffed or otherwise compromised by a third party. Once a consumers information is compromised it is possible to use it at different merchants. Accordingly there is a need for a simple flexible and mobile form of payment that is also secure from interception from third parties and use at multiple merchants.

Furthermore consumers use their sensitive data with so many different merchants that it may be difficult to keep their sensitive or personal information secure. Many consumers ask consumers for their personal information as a matter of course during transactions presently. Accordingly there is a need for an authentication system that can be implemented at individual merchants where any tokens used in the authentication may not be relevant or usable by other merchants.

Storing consumer financial and personal information at a merchant uses a vast amount of system resources and may leave the merchant liable for any data breaches. Furthermore merchant attempts to secure this sensitive information uses further system resources and for small entities with limited budgets appropriate security may not be feasible. Accordingly there is a need to design an authentication technique that is secure flexible and does not require the storing of sensitive consumer information.

Embodiments of the present invention address these problems and other problems individually and collectively.

Embodiments of the present invention are directed generally to techniques for authenticating a cardholder using multiple tokenization authentication.

One embodiment of the invention is directed at a method. The method includes receiving at a first entity a first token from a consumer and determining a second token associated with the first token. Once the second token is determined the second token is sent to a server computer at a second entity. The server computer then determines an account identifier associated with the second token and processes a transaction using the account identifier.

In some embodiments the second token may be determined by electronically searching a second token database for a second token associated with the first token. The second token may be derived from a first entity identifier. The second entity may use a predetermined algorithm to determine the account identifier associated with the second token.

In some embodiments the second token may be determined by electronically searching a database to determine a second token associated with the first token. The second token may then be sent to the server computer by generating an authorization request message including the second token. The authorization request message may then be sent to the server computer at the second entity. The server computer may receive the authorization request message and determine the account identifier by electronically searching a database for an account identifier associated with the second token. The server computer may then modify the authorization request message to include the account identifier and send the modified authorization request message to an account issuer computer for processing.

Some embodiments of the invention may further include receiving during a transaction at a merchant a first token and a consumer identifier from a consumer. The merchant determines whether the first token is associated with the consumer identifier. If the first token is associated with the consumer identifier the merchant determines a second token associated with the consumer identifier. The second token is sent to the payment processing network. The payment processing network determines an account number associated with the second token and processes the transaction using the account number.

Another embodiment of the technology is directed at an apparatus. The apparatus may include a processor and a non transitory computer readable storage medium coupled to the processor. The computer readable storage medium may comprise code executable by the processor for implementing a method. The method may comprise receiving a first token from a consumer and determining a second token associated with the first token. The method may then include sending the second token to a server computer at a second entity. The server computer may determine an account identifier associated with the second token. The server computer may then process a transaction using the account identifier.

Another embodiment of the invention is directed at a method. The method may include receiving a second token at a second entity from a first entity. The second token may be associated with a first token that is received by the first entity from a consumer. The second entity may also determine an account identifier associated with the second token and process a transaction using the account identifier.

Another embodiment of the invention is directed at an apparatus. The apparatus may include a processor and a non transitory computer readable storage medium coupled to the processor. The computer readable storage medium may comprise code executable by the processor for implementing a method. The method may include receiving a second token from a first entity wherein the second token is associated with a first token that is received by the first entity from a consumer. The method may further include determining an account identifier associated with the second token and processing a transaction using the account identifier.

Embodiments disclosed herein are directed to techniques for authenticating a user using a multiple tokenization process. A token can be any information that can be used to authenticate the identity of the cardholder. In one embodiment when a consumer initiates a financial transaction at a merchant instead of providing account information for a payment account of the consumer the consumer may provide a first token. The first token may include personal information that is requested by the merchant. The personal information may include for example a phone number billing address email address or any other personal information. A computer at the merchant may receive the first token and may generate a second token by altering the information contained in the first token. The second token may also include a first entity identifier that identifies the first entity to the second entity and allows the second entity to determine the appropriate predetermined algorithm to use when determining recognizable data from the second token.

As an illustration the first token could include the phone number and zip code of the consumer and the second token could be generated by using the last four digits of the zip code and the last four digits of the phone number combined according to a predetermined algorithm. The second token could look like a random alphanumeric data stream made up of 16 digits 4111 220A 4158 2041. However within this data stream is a payment processing network indicator 4 the first three digits of the consumer s phone number 111 a second entity identifier 220A the last four digits of the consumer s zip code 4158 last three digits of the consumer s phone number 204 and finally a check sum digit 1 that informs the payment processing system that the data is not flawed. The second entity could then generate recognizable data including a large portion of the consumer s phone number xxx 111 x204 and a large portion of the consumer s zip code x4158 . Using this recognizable data the system could search for an account identifier that is associated with a registered consumer with that phone number and zip code. If the system found a suitable account identifier the system could process the transaction as a typical transaction using the account identifier instead of the second token. In this manner merchants do not have to store any sensitive information and the consumer can initiate a transaction without using their account information.

In another embodiment when a consumer initiates a financial transaction at a merchant instead of providing account information for a payment account of the consumer the consumer can instead provide the merchant with a first token. The first token can include information that is less sensitive than e.g. the consumer s primary account number PAN . For example the first token can be the name of the consumer s pet. The merchant can look up a second token associated with the consumer identifier and provide the second token to a payment processing network associated with the payment account. The second token can be also be less sensitive that e.g. the consumer s PAN. However in one embodiment the second token can be more sensitive than the first token. For example the second token can be the consumer s mobile phone number. The second token can be sent to the payment processing network via the merchant s acquirer within an authorization request message. The payment processing network can use the second token to access the corresponding PAN. Once the PAN is determined the payment processing network can modify the authorization request message to include the PAN. The modified authorization request message including the PAN is then sent to the consumer s issuer for authorization of payment. From this point a typical payment authorization process can be performed.

The multiple tokenization authentication processes described herein are advantageous because the merchant does not have to store any sensitive information whose theft may subject the merchant to liability for any unauthorized charges as a result of the theft. Additionally some embodiments may allow the merchant to avoid saving any personal information related to the consumer whatsoever. Furthermore some embodiments of the multiple tokenization authentication do not require the consumer to provide account information to the merchant thereby preventing misuse of the consumer s payment account by a malicious owner or employee. Also the multiple tokenization authentication process allows the consumer to make a purchase by simply providing a non physical token eliminating the need for the consumer to carry a consumer device. The multiple tokenization authentication systems and methods will be described in more detail below.

Prior to discussing the specific embodiments of the invention a further description of some terms can be provided for a better understanding of embodiments of the invention.

A first token may be any data input into an electronic device which can be used to authenticate a user. The first token may comprise a word a combination of words a collection of alphanumeric characters a biometric input e.g. a fingerprint eye scan voice recognition etc. or any other repeatable information that has been provided during registration with an entity and can be used to authenticate a consumer. For example the first token could be as simple as the name of the consumer s favorite pet the name of the consumer s family member or the name of the consumer s favorite color. On the other hand the token could be as complex as an output from a voice recognition program that recognizes a consumer s voice or the digital signature of a consumer s voice saying a predetermined or random statement. Furthermore the first token may represent sensitive data such as an account number CVV number expiration date etc. or the first token may represent non sensitive data such as a name date of birth or unrecognizable collections of sensitive information that when combined make the information not sensitive. Additionally the tokens may be provided through the swipe of a portable consumer device through near field communications elements in a wireless device or by a consumer or other person physically entering the data into an access device.

The first token may be any input into an electronic device by a consumer that is received at a first entity. The first token may be input by the consumer directly or may be input by another party at the direction of the consumer. For example the first token could be told to a cashier and the cashier could enter the token into an access device. The first token may be the same for the consumer over multiple merchants or may be different for every merchant. In some embodiments the first token may be repeatable and include personal information that allows identification of the consumer. For example the first token may comprise the combination of a phone number and a zip code such that the first entity can determine the identity of the consumer that matches consumer registration information. Depending on the embodiment of the multiple tokenization authentication process being implemented the first token may include large amounts of data that may be sensitive or small amounts of data that are not particularly sensitive.

In some embodiments the first token may be a non sensitive word or input that may not be related to the transaction at all. According to this embodiment the first token can include information associated with the consumer that is less sensitive than e.g. the consumer s primary account number for the payment account. For example the first token can include information such as a pet s name a mother s maiden name the first street on which the consumer lived a childhood nickname a best friend s name a name of the consumer s high school a word or phrase arbitrarily chosen by the consumer an email address of the consumer a work password etc. In this embodiment the first token may be maintained in secrecy such that others would not know the first token associated with the consumer at the merchant. However if the first token was disclosed to a third party the first token could be used by the third party to initiate unauthorized transactions at the merchant. Therefore in such embodiments it may be beneficial to validate the token with a consumer identifier as well. The consumer identifier could include any suitable information that could be provided by a consumer. The consumer identifier could be input in any suitable manner e.g. through a swipe of a card by consumer input into an access device or through a portable consumer device etc. .

Additionally the first token may be recognizable or unrecognizable. For example names addresses and certain collections of numbers e.g. years dates etc. may be easily recognizable by an observer. As such it may be possible to implement a first token that is not easily recognizable by combining pieces of information or alphanumeric characters in a manner that a person may not easily remember the first token if someone hears or otherwise gains access to the first token.

A second token may be any information that is stored or generated by a first entity. The second token may be repeatable modifiable and transferable such that it may be transferred to a second entity through any suitable method. The second token may be associated with the first token. For example the second token may be generated by altering information from the first token. Information from the first token may be altered in any suitable manner. For example the second token may be a hash of the first token. Hashing may be accomplished by separating and combining portions of information provided in the first token according to a known algorithm or hashing scheme. For example if a consumer provided their billing address phone number and date of birth in a first token the second token could be created by taking the first three digits of the phone number the month of the consumer s birth and the zip code of the billing address to make a second token that is of a predetermined length. The second token could then be decrypted by using the predetermined algorithm to convert the second token back into consumer information comprised in the first token.

The second token could also comprise other data not related to the information in the first token as well so that the multiple tokenization authentication process could be implemented on existing infrastructure. The other data not related to the first token could include a first entity identifier which could be unique for every entity and would inform the second entity who generated the second token. Additionally the second token could be in the format of a payment card number. The payment card number format could include a payment processing network indicator and a check sum digit. Current payment processing systems may require a payment process network indicator field that informs an acquirer of which payment processing network services the type of payment device being used. Additionally a check sum digit could be added to the second token so that current systems would know the data has not been corrupted. Accordingly the multiple tokenization authentication process could be implemented using existing infrastructure without requiring upgrades.

Additionally the second token could comprise binary or alphanumeric data characters and could be any length or format. For example the second token could be generated in a manner that it could be used in preexisting systems that require data of a specific length or format. The second token could include the required processing information described above and then use the information of the first token to fill in the available data element positions that are available. For example using the example above the second token could include a payment processing network indicator a check sum digit 4 data elements corresponding to a first entity identifier 3 data elements corresponding to the last three digits of the zip code 4 data elements corresponding to the home address street number and 2 data elements corresponding to the month of the consumer s birth to generate a second token of 15 data elements long. If the transaction system typically used payment card numbers of 16 or 19 data elements the additional data elements could be padded with ones or zeros as well to fill the available data elements. The second token could then be used in an existing payment processing network without requiring infrastructure upgrades. Additionally the first and second entity could implement both multiple tokenization authentication transactions as well as typical transactions on the same equipment. This second token could then be included in a typical transaction message on the transaction system and the multiple tokenization authentication process could be implemented using preexisting systems. Any other suitable and repeatable process for altering or using information in the first token that allows a second entity to determine the original information from the second token could be used.

In some embodiments the second token is not related to the first token and instead is separate information associated with the first token. For example information could be stored during a registration period that associates a secret first token e.g. the consumer s dog s name Spike to a consumer s phone number. The first token would be spike and the second token would be the consumer s phone number. When the first entity receives the first token the first entity may electronically search a database of associated second tokens and may find that the consumer s phone number is associated with the secret first token Spike. Accordingly the two tokens are separate information but they are associated through a registration process and have stored relationships at the first entity.

A first entity may be any party that interacts with a consumer in a transaction. The identity of the first entity may depend on the type of transaction occurring. For example in a consumer purchase transaction the first entity may be a merchant. However if the merchant were using a third party to accomplish their billing the first entity may be a billing entity. In either case the first entity may communicate with a consumer directly or indirectly with the purpose of accomplishing a transaction. The first entity may also be part of a larger payment system with multiple entities. For example entities in the payment system may include a merchant an acquirer a payment processing network and an issuer. Other entities may also be included as one of ordinary skill in the art would recognize. The first entity may communicate with each and every other entity in the transaction system either directly or through other entities relaying messages between one another. For example a merchant may communicate with a payment processing network through an acquirer. The first entity may comprise a server computer as described in further detail below or any other equipment that one or ordinary skill in the art would recognize as necessary for communication as well as other purposes. The first entity may also perform other duties outside of communication and multiple token authentication as one or ordinary skill in the art would recognize.

A second entity may be any party that interacts with the first entity in a transaction. For example the second entity may be an acquirer. In some embodiments the second entity may comprise a payment processing network. The second entity may be any entity that is capable of communicating with the first entity and may be capable of determining an account identifier associated with a second token. The second entity is similar to the first entity in that it may comprise a server computer and one or more databases with the capability to communicate between parties as well as accomplish features and functions outside of the multiple tokenization authentication procedure described herein.

A merchant may be any entity that offers a service or product to another entity typically a consumer or business. The merchant typically has one or more server or other computers that send and receive messages between parties and perform necessary functions for accomplishing the processing of a transaction. The merchant may also have an access device whereby the merchant receives information input from the consumer. Furthermore the merchant may have other specialized equipment to receive data through a portable consumer device including near field communication methods.

An acquirer may be a business entity e.g. a commercial bank that has a business relationship with a particular merchant. The acquirer typically has one or more server or other computers that send and receive messages between parties and perform necessary functions for accomplishing the processing of a transaction.

An Issuer is typically a computer at a business entity e.g. a bank which issues a payment device such as a credit or debit card to a consumer. The issuer typically has one or more server or other computers that send and receive messages between parties and perform necessary functions for accomplishing the processing of a transaction. Some entities may perform both issuer computer and acquirer computer functions and those entities would have a computer that could implement both functions.

A transaction can refer to any interaction between one or more parties capable of communicating transaction details. These parties may include persons businesses corporations organizations or any other entities capable of performing obligations and agreements. The transaction may include an exchange of monetary value or merely the exchange of obligations or information. The transaction may occur through any suitable manner as described below and recognized by one of ordinary skill in the art. The transaction may occur in person meaning both parties or party representatives are interacting in the same physical location or the transaction may occur between parties that are remote from one another. Additionally a transaction may be unilateral meaning only one party is initiating or participating in the transaction or bilateral meaning there are two active parties. For example in one embodiment a single consumer can initiate a payment to a party that is not aware of the payment until the transaction has occurred. Such a case may involve an online bank account transfer to another party who is unaware of the transaction before the payment appears in their account.

An account identifier may be any information or data that identifies an account being held by an account issuer. The account identifier may be a typical account number or may be any other collection of data that identifies an account being held by a consumer. Depending on how the account issuer identifies their accounts the account identifier could be any collection of data capable of identifying a financial or other account at an issuer e.g. primary account number social security number full name etc. . The account identifier may be stored at the second entity in an encrypted manner such that it is secure even if third parties gain access to the data.

 Processing a transaction may be any number of steps or functions necessary to accomplish a transaction. For example in a typical payment transaction system processing a transaction may include authorizing a payment transaction with an account issuer. Typically an electronic payment transaction is authorized if the consumer conducting the transaction is properly authenticated i.e. their identity and their valid use of a payment account is verified and if the consumer has sufficient funds or credit to conduct the transaction. These actions may be accomplished through any number of steps and using any number of entities as one or ordinary skill in the art would recognize.

A first entity identifier may be an identifier for a first entity. It may be transmitted along with the second token to the second entity. The first entity identifier may be part of the second token or may be sent along with the second token in the same message. The second entity may use the first entity identifier to determine the account identifier associated with the second token. The second entity may recognize the first entity identifier as part of the second token by the location of the data in the second token or the message the second token is transmitted in. For example the fourth data position of the second token through the eighth data position of the second token may always comprise the first entity identifier in one implementation of the multiple tokenization authentication. Therefore the second entity may determine the first entity identifier by extracting the data corresponding to these data positions. The second entity may then determine the identity of the first entity by comparing the first entity identifier to a list of first entities in a first entity identifier database.

Because the system may be implemented on an existing transaction system not all first entities may be participating in a multiple tokenization authentication process. As such the second entity may use the second entity identifier to determine whether the second entity is participating in the multiple tokenization authentication process. For example if the second entity recognizes the data contained in the pre assigned data location for the first entity identifier as belonging to a first entity that is participating in the multiple tokenization authentication process then the second entity may process the transaction message using multiple tokenization procedures as described herein. However if the first entity identifier extracted from the data stream or message does not correspond to a first entity identifier or the first entity identifier that it corresponds to does not participate in the multiple tokenization authentication procedure then the second entity may process the transaction as a typical transaction without using multiple tokenization.

A predetermined algorithm may be any method of altering data that can be shared between multiple entities. Suitable algorithms may include encryption and hashing algorithms. The predetermined algorithm may be used to alter the data as well as deconstruct the method by which the data was altered. As such the predetermined algorithm is used to generate the second token and is used to convert the second token into one or more recognizable values. For example if a hash is used to alter the data the predetermined algorithm would indicate which digits are generated from which input data. In this manner a party that knows the predetermined algorithm can reconstruct the original input data while a party without this data has no means for determining what the information means. For instance using the example described above the predetermined algorithm may inform the first entity how to generate and the second entity how to convert the hashed second token by informing the entities what data corresponds to each bit or byte in the second token. The first entity would use the predetermined algorithm to generate the hashed second token by applying the predetermined algorithm to the input first token to generate the second token. The second entity would use the predetermined algorithm to convert the second token into a recognizable value that corresponds to some consumer personal information or other information provided by the consumer during a registration phase. The consumer information obtained during the registration phase may be associated with information included in the first token. Because each entity may have a different predetermined algorithm the first entity identifier may also be used by the second entity to determine which predetermined algorithm to use when converting the second token. The second entity may use the predetermined algorithm to interpret the second token by looking up the predetermined algorithm that corresponds to the first entity identifier in a predetermined algorithm database.

A recognizable value may be any value that has meaning for the second entity. The recognizable value may be associated with the first token. This association may arise from a stored value in a database located at the second entity that corresponds to the recognizable value in part or in entirety. In such a case the recognizable value may be used to electronically search a consumer account database for the account identifier. For example a first token may include a portion of a phone number of a consumer. The second token may be generated by hashing portions of the phone number according to a predetermined algorithm. The second entity may use the predetermined algorithm to determine the portions of the phone number included in the second token. Accordingly the recognizable value may be a portion of the phone number that is associated with the first token.

The recognizable value may be determined using the predetermined algorithm. The second entity may apply the predetermined algorithm to the second token in a manner that decrypts or converts the data into meaningful and recognizable information that can be used to associate the data to an account identifier. For example the recognizable value may be the last four digits of the phone number that is extracted from the second token and those last four digits may be used by the second entity to determine the identity of the account holder and a corresponding account identifier for the account belonging to the account holder. Additionally in some embodiments no conversion is required to determine a recognizable value because the second token may be a recognizable value that is stored in a database at the second entity. For example the second token could be the recognizable value a consumer s phone number used to find an associated consumer account identifier in the consumer account database. In this case the predetermined algorithm may inform the server computer that the second token is a phone number or there may not be a predetermined algorithm at all.

A payment card number may be any information that identifies a card used during a payment transaction. Payment card numbers may be examples of account identifiers. The card is associated with an account number or other identifier determined by an issuer that identifies the consumer and or the account held by the consumer such that transactions can be accomplished using the account. The payment card number may comprise a series of numbers or alphanumeric characters that identify an account in a typical transaction system. The payment card number may typically be used to identify an account during a transaction. The payment card number s length may be different depending on the payment processing network and or card issuer. Furthermore as explained above the payment card number may comprise a payment processing network indicator as well as a check sum digit.

A payment processing network indicator may be any information field in a second token or message comprising a second token that informs an acquirer which payment processing network to route the transaction to. The information field may be any suitable data that can be implemented in a message or data stream. For example the payment processing network indicator may be a simple as a binary digit or could be as complex as a word alphanumeric stream of data etc. For example a payment processing network indicator for a transaction originated with a portable consumer device using a first payment processing network may be included in a message sent to an acquirer such that the data stream starts with an alphanumeric digit 4 while transactions originated with a portable consumer device associated with a second payment processing network may start with a 5. As such when the acquirer receives the authorization request message or other message from the consumer requesting authorization from the account issuer the acquirer computer can determine quickly and easily which payment processing network to forward the request to based on the payment processing network indicator. If it is a 4 the message is forwarded to the first payment processing network server computer and if it is a 5 the message is forward to the second payment processing network server computer.

A check sum digit may be a fixed size piece of data computed from the digital data in the rest of the second token for the purpose of detecting accidental errors that may have been introduced during its transmission or storage. The integrity of the data can be checked at any later time by calculating the checksum and comparing it with the stored check sum digit. If the check sums match the data was most likely not altered or corrupted. The check sum digit is computed using a check sum function or algorithm that is known to the transaction system so that the preexisting transaction system can utilize the second token without requiring any upgrades or further infrastructure changes.

Data may be sensitive if its disclosure to third parties may allow those parties to initiate fraudulent or unauthorized transactions using the account holders information. Additionally there may be numerous levels of sensitivity meaning that some data may be more or less sensitive than other data. For example some data may be sensitive but also be publicly available. For instance a consumer s name may be used in an authentication process and is thus sensitive but it is also public information and easily determined thus it is not as sensitive as a consumer s account number. Additionally data that may be used at more access points may be more sensitive than information that can only be used a one or a minimal number of access points. The data is more sensitive because there are more options for the data to be used to initiate transactions.

An authorization request message may be a message that includes a second token that is sent to a second entity from a first entity such that the transaction may be authorized. The authorization request message may be sent to the second entity who may extract the second token from the authorization request message and determine the account identifier by electronically searching a database for an account identifier associated with the second token. The second entity may then modify the authorization request message to include the account identifier and may send the modified authorization request message to an account issuer computer for processing. The account identifier may be a payment card account identifier associated with a payment card. The authorization request message may request that an issuer of the payment card authorize the transaction. An authorization request message according to an embodiment of the invention may comply with ISO 8583 which is a standard for systems that exchange electronic transactions made by cardholders using payment cards or other electronic data interchange formats.

An authorization response message may be a message that includes a response from the issuer computer as to whether the transaction is authorized or not. The authorization response message is generated by the issuer computer and sent to the second entity and may include the account identifier. The second entity may convert the account identifier back to the second token by using the same generation process as explained above or by storing the corresponding second token. Additionally the first entity may convert the second token back into the first token in some embodiments and modify the authorization response message to protect the second token. Accordingly when the authorization response message is sent back to the first entity and eventually the consumer the sensitive information used in the multiple tokenization authentication may not be disclosed. This may ensure that the first entity does not gain access to the sensitive account identifier at any time while still informing the first entity and the consumer the outcome of the authorization request.

A server computer can be a powerful computer or a cluster of computers. For example the server computer can be a large mainframe a minicomputer cluster or a group of servers functioning as a unit. In one example the server computer may be a database server coupled to a Web server.

 Derived from may mean any use of data be included a factor of multiplied by or otherwise have a relationship with a set of data. Data A may be derived from Data B if Data A includes Data B was generated using Data B in whole or in part or was relied upon directly or indirectly in generating the second set of data. As such data that is derived from another piece of data may have been added to subtracted from multiplied by or any other operation that relies directly or indirectly on the original data.

Generally embodiments relate to apparatuses systems and methods of authenticating cardholders during a transaction. In particular some embodiments may provide multiple tokenization authentication of a cardholder during a payment transaction.

An exemplary system for embodiments of the technology can be seen in . For simplicity of discussion only one of each component is shown. It is understood however that embodiments of the technology may include more than one of each component. In addition some embodiments of the technology may include fewer than all of the components shown in . Also the components in may communicate via any suitable communication medium including the internet using any suitable communication protocol. The exemplary system depicts an example of the system in which multiple tokenization for authentication may take place.

The portable consumer device may be in any suitable form. For example suitable portable consumer devices can be hand held and compact so that they can fit into a consumer s wallet and or pocket e.g. pocket sized . The portable consumer device typically comprises a processor and a memory input devices and output devices operatively coupled to the processor. Specific examples of portable consumer devices can include forms of portable communication devices such as cellular or wireless phones tablets smartphones personal digital assistants PDAs pagers portable computers and the like. The portable consumer devices can also be payment cards such as smartcards debit devices e.g. a debit card credit devices e.g. a credit card or stored value devices e.g. a stored value card . In some embodiments the portable consumer device may be associated with multiple financial accounts such as being associated with different payment accounts e.g. credit debit or prepaid . Likewise it is possible for the consumer to have multiple portable consumer devices that are associated with the same underlying financial account.

The payment processing network may include data processing subsystems networks and operations used to support and deliver authorization services exception file services and clearing and settlement services. An exemplary payment processing network may include VisaNet . Payment processing networks such as VisaNet are able to process credit card transactions debit card transactions and other types of commercial transactions. VisaNet in particular includes a VIP system Visa Integrated Payments system which processes authorization requests and a Base II system which performs clearing and settlement services.

The payment processing network may include a server computer. A server computer is typically a powerful computer or cluster of computers. For example the server computer can be a large mainframe a minicomputer cluster or a group of servers functioning as a unit. In one example the server computer may be a database server coupled to a Web server. The payment processing network may use any suitable wired or wireless network including the Internet.

The merchant may also have or may receive communications from an access device that can interact with the portable consumer device . The access devices according to embodiments of the technology can be in any suitable form. Examples of access devices include point of sale POS devices cellular phones PDAs personal computers PCs tablet PCs handheld specialized readers set top boxes electronic cash registers automated teller machines ATMs virtual cash registers kiosks security systems access systems and the like.

If the access device is a POS terminal any suitable point of sale terminal may be used including card or phone readers. The card or phone readers may include any suitable contact or contactless mode of operation. For example exemplary readers can include RF radio frequency antennas magnetic stripe readers etc. to interact with the portable consumer devices .

In a typical purchase transaction the consumer purchases a good or service at the merchant using the portable consumer device . The consumer s portable consumer device can interact with an access device such as a POS terminal at the merchant . For example the consumer may take a wireless phone and may pass it near a contactless reader in a POS terminal.

An authorization request message is then forwarded to the acquirer . After receiving the authorization request message the authorization request message is then sent to the payment processing network . The payment processing network then forwards the authorization request message to the issuer of the portable consumer device .

After the issuer receives the authorization request message the issuer sends an authorization response message back to the payment processing network to indicate whether or not the current transaction is authorized or not authorized . The transaction processing system then forwards the authorization response message back to the acquirer . The acquirer then sends the response message back to the merchant .

After the merchant receives the authorization response message the access device at the merchant may then provide the authorization response message for the consumer . The response message may be displayed by the POS terminal or may be printed out on a receipt.

At the end of the day a normal clearing and settlement process can be conducted by the payment processing network . A clearing process is a process of exchanging financial details between an acquirer and an issuer to facilitate posting to a consumer s account and reconciliation of the consumer s settlement position. Clearing and settlement can occur simultaneously. Typically the merchant sends the clearance information to the acquirer at the end of the day and the acquirer and issuer can subsequently facilitate the clearing and settlement process.

In some cases the consumer may conduct a financial transaction using the portable consumer device . As described above in the typical purchase transaction the portable consumer device may include portable communication devices such as a cellular or wireless phones personal digital assistants PDAs pagers portable computers tablets and the like. As such the portable consumer device may also be used to conduct the typical purchase transaction.

The access device may comprise any portable consumer device merchant POS device or any other device described above that allows consumer input to be received by a first entity. The access device may receive input from the consumer directly or indirectly through a cashier inputting information for the consumer. Furthermore the access device may be a consumer device such as a wireless communication device or other portable consumer device capable of transmitting data to the merchant A. For example the consumer could use a mobile phone utilizing a digital wallet to input the first token . The data could then be encrypted and transmitted to an access device at the merchant A configured to receive communications from the portable consumer device. Any suitable method of transmitting the information may be used including the use of near field communications components wireless communications protocols docking plugging a communications line from the access device into the portable consumer device short message system or texting systems or submitting the payment over an internet connection. One or ordinary skill in the art would recognize the many methods through which the data could be transmitted to the merchant A from a portable consumer device.

The access device in one exemplary embodiment of a payment processing system may also be dedicated to a particular merchant A and allow the consumer to input the information through a data input interface on the access device. The data input interface may be digital or analog and could allow input of any suitable information. For example the access device may be configured to accept biometric information eye voice fingerprint etc. or any other suitable information.

The consumer may be prompted to enter the first token by any suitable access device or may offer the information without being prompted. Any method may be implemented for receiving the first token . For example a challenge response type of prompt may be provided to the consumer or the consumer may be given a choice of multiple methods of authentication. For instance when a consumer chooses products to purchase at a merchant A a cashier may ask the consumer for their first token . Alternatively an access device may prompt the consumer to enter the first token manually.

The access device may also accept a consumer identifier. The consumer identifier may be any information that the merchant A either provided to the consumer or the consumer provided to the merchant A during registration that allows the merchant A to quickly and easily recognize the consumer. The consumer identifier could be provided by the consumer s portable consumer device or by manual input by the consumer or other party to the transaction. The merchant server computer A may receive the consumer identifier along with the first token or in a separate consumer input. For example if the consumer is using a wireless device to provide the first token any transmitted information could contain both a first token and the consumer identifier. Additionally the consumer identifier could be an account number of a consumer rewards card or other secondary information related to the merchants records for the consumer. During a multiple tokenization authentication process the merchant server computer A may determine whether the first token is associated with the consumer identifier in order to verify that the first token is not being used by an unauthorized third party. For example if a third party intercepts a consumer s first token during a transaction at a merchant A it may be possible in certain embodiments of the present invention to complete a transaction with only the knowledge of the first token . Accordingly using the second piece of data to verify the first token may be beneficial. This feature may be especially useful in systems where the first token is simple or is based on publicly available information about the consumer e.g. consumer s son s name that may be easily overheard sniffed or otherwise intercepted by a malicious third person not authorized to complete a transaction using the consumer s account.

The merchants A C may communicate with the access device in any suitable manner. However the access device may not be connected to each merchant A C at the same time as shown in the figure. The access device is shown as one block in the interest of simplicity and the access device does not necessarily need to connect to more than one particular merchant at any given time. Each merchant A C may have their own access device or the consumer may provide the access device through a mobile phone or other device.

In all of the merchants A C are shown as containing the same components to simplify the explanation of the system. However each merchant A C may have a different embodiment of the multiple tokenization authentication system described herein. Because the merchants A C and the acquirers A B have a preexisting relationship and the information is being passed between the two entities any scheme may be used for each merchant A C as long as the acquirer A and merchant A are both aware of the type of multiple tokenization authentication procedure being implemented. Furthermore a single acquirer A B may offer different multiple tokenization authentication methods to the merchants A C so that the merchants A C are provided with flexibility in choosing their preferred method. However because each merchant A C contains the same functionality in this example the merchants A C will be described in reference to merchant A A.

Merchant A A comprises a server computer A that may communicate directly or indirectly with each and every other entity in the transaction processing system . A server computer is typically a powerful computer or cluster of computers. For example the server computer can be a large mainframe a minicomputer cluster or a group of servers functioning as a unit. In one example the server computer may be a database server coupled to a web server.

The server computer A may comprise a token generation module A. The token generation module A is used by the merchant A server computer A to generate a second token based on a first token received from the access device . The second token may be based on the first token in any suitable manner. For example the token generation module A may generate the second token by altering information from the first token . The information in the first token may be altered by taking a hash of information contained in the first token applying an algorithm to computer new values derived from the information in the first token amending or subtracting particular data from the first token or any other suitable manner as one of ordinary skill in the art would recognize.

Additionally the second token may be derived from a first entity identifier in this case a merchant identifier . The merchant identifier may be any data that informs a second entity in this case an acquirer A the identity of the merchant A. For example a merchant A could be given a number 220A that identifies the merchant A to the acquirer server computer A. The acquirer server computer A could then store the merchant identifiers in a predetermined algorithm database A.

The predetermined algorithm database A may also include a predetermined algorithm to apply to a second token to determine a recognizable value for associating the second token with an account identifier . Additionally the predetermined algorithm database A may contain any information about the merchant A that the acquirer A needs in order to complete the transaction or the multiple tokenization authentication process. For example the predetermined algorithm database A could inform the acquirer A which embodiment of the multiple tokenization authentication the merchant A has implemented. A benefit of some embodiments of the multiple tokenization authentication process described herein is that data flows may appear to be uniform with older transaction systems so that the process will work on existing infrastructure. However in order for the multiple tokenization authentication to be recognized by the acquirer A so that it may be processed differently than other standard transactions the acquirer A must be able to determine whether a message from the merchant A is utilizing a multiple tokenization authentication process. Accordingly the use of a merchant identifier in a predetermined algorithm database A may inform the acquirer A whether and which type of multiple tokenization authentication is being performed.

Other identifiers may also be used to inform the acquirer A that multiple tokenization authentication is being implemented for the transaction. For example a flag within the second token that is significantly different than in a typical authorization request message may notify the acquirer A that the message is requesting multiple tokenization authentication. Additionally a preliminary message may be sent to the acquirer A the message would inform the acquirer A that a second message may need multiple tokenization authentication performed and identify the message in some suitable manner.

The first token may be provided by a consumer through the access device or through any other means. The first token provided by the consumer may be the same for each merchant A C shown or may be different for each merchant A C See . The first token may include a very minimal amount of information or may comprise vast amounts of data. For example a first token could be as simple as a consumer s dog s name or as complex as a representation of a consumer s biometric information or other input. The type and amount of information provided may change depending on which embodiment of the multiple tokenization authentication process is being implemented. For example a merchant A that maintains a second token in a token association database may only need a single piece of information that associates the consumer to the stored second token . In contrast a merchant A that generates a second token each time the consumer performs a transaction may need more information from the consumer in order to increase the security and allow a large number of consumers to use the system. However the multiple tokenization authentication may work with any first token input that correlates a consumer to a pre generated second token or allows a second token to be generated. Accordingly there is no limit on the first token s complexity or simplicity.

The first tokens being provided in the exemplary system of include a consumer s phone number 415 111 1204 and zip code 94158 . The consumer may have previously registered with the acquirer A for multiple tokenization so that personal consumer information is stored at the acquirer A along with an account identifier that identifies an account issued by an account issuer not shown . Therefore when the consumer provides their phone number and zip code in the first token the merchant A may use the phone number and zip code in the first token to generate a second token that may be sent to an acquirer A to find an account identifier associated with the information contained in the second token . The consumer information in the first token may be used in entirety or only portions may be used. For example the token generation module A may only use the last four digits of the phone number 1204 or some other portion of the information when generating the second token .

The amount of data necessary to create a second token may depend on the number of consumers the system is designed for as well as other variables including the method used by consumers to enter the first token . For example if a consumer uses a mobile device that contains the first token and merely swipes the mobile device over a near field communication receiving device then more data may be received because the consumer does not have to input the data manually. However if the consumer is manually entering the information into an access device located at the merchant A the first token may include one or two pieces of personal data such as a phone number and or zip code.

The second tokens of provide an example of generating the second tokens by altering information in the first token . For example the token generation module A of the server computer located at the merchant A alters the consumer information provided in the first token phone number of 415 111 1204 and zip code of 94158 and generates a second token 4415 220A 4158 2041 . The second token may be derived from a first entity identifier in this case the merchant identifier A where being derived from can mean the second token comprises the merchant identifier or some set of values that are related to the merchant identifier. For example each digit of a merchant identifier A could be doubled to create a merchant identifier of A to create more complexity. Either way the second token may comprise or be derived from a merchant identifier of the merchant server computer A generating the second token . The second token may be stored at the merchant A but there it is not necessary in this embodiment. In order to provide the highest level of protection the merchant A may not store the second token so that there is no consumer data to be stolen if a malicious third party gains access to the merchant server computer A or the merchant s A corresponding databases. Accordingly the merchant A has no liability for hacking or data theft activities that result in the theft of sensitive consumer information.

The token generation module A may generate the second token in any suitable manner e.g. hashing substitution etc. as one of ordinary skill in the art would recognize. In one embodiment the token generation module A may contain a predetermined algorithm that is shared with the acquirer A. The acquirer A may provide the predetermined algorithm to the merchant A during the merchant registration phase or the merchant A may determine the predetermined algorithm and provide it to the acquirer A. Either way the two parties may share the predetermined algorithm that may be used to generate the second token . The predetermined algorithm may be stored at the acquirer A in a predetermined algorithm database A that correlates the predetermined algorithm with the merchant identifier so that when the acquirer A determines the merchant identifier the acquirer A may know which predetermined algorithm is being used. In this manner the acquirer A may use a unique algorithm with each and every merchant A B it has a relationship with. Accordingly the system is secure even if a predetermined algorithm of one merchant A is discovered by a malicious third party because the second token generated by one merchant A may be completely meaningless at another merchant B. As such if the merchant A is hacked the malicious third party may not be able to charge any unauthorized transactions at any other merchants B C.

For example the second token generated at merchant A A 4415 220A 4158 2041 is different from the second token generated at merchant B B 4158 220B 1204 1111 and the second token generated at merchant C C 4120 220C 4158 4151 even though the first token is consistent between each merchant A C. Accordingly each token generation module A C operating at each server computer A C at each merchant A C is using a different predetermined algorithm to generate the second token . Therefore acquirer A A must be able to tell which merchant A B is sending the second token so that the correct predetermined algorithm is used. If the acquirer A did not have the correct predetermined algorithm in order to convert decode or decrypt the second token the data contained therein would be meaningless.

Accordingly the second token is derived from the merchant identifier A C of each second token generation module A C. The second token may have a data position or plurality of data positions wherein the merchant identifier may be found by the acquirer A. For example as can be seen in the fifth through the eighth digit of each second token comprises the merchant identifier A C for the corresponding merchant A C generating the second token . As such the acquirer A may know where to find the merchant identifier in the second token and extract the merchant identifier from the second token . The acquirer server computer A would then use the merchant identifier extracted from the second token to electronically search for the predetermined algorithm that corresponds to the merchant identifier in the predetermined algorithm database A.

Examples of predetermined algorithms may be shown by dissecting the values of the first tokens in . The predetermined algorithms are different for each merchant A C but all of the predetermined algorithms implement a hash type of alteration of the first token data. For example merchant A A implements a predetermined algorithm that applies a payment processing network indicator 4 and uses the area code of the consumer s phone number as the next three digits 415 . The predetermined algorithm then applies the merchant identifier for the next four digits 220A . The third set of data is the last four digits of the consumer s zip code from the first token 4158 . The predetermined algorithm then hashes the last three digits of the consumer s phone number as the next three digits 204 and then implements a check sum digit 1 to inform the acquirer A that the data has not been altered intentionally or unintentionally during transmission of the second token . Accordingly the predetermined algorithm defines which data to hash from the first token and how to combine the data. The data may be from multiple sources including the first token the merchant identifier and the data required for processing payment processing network indicator and check sum digit . Any other type of alteration may be applied to the data as one of ordinary skill in the art would recognize.

In contrast merchant B B generates a different second token using the same first token input by applying a different predetermined algorithm to alter the first token information. For example merchant B B implements a predetermined algorithm that applies a payment processing network indicator 4 and uses the last three digits of zip code as the next three digits 158 . The predetermined algorithm then applies the merchant identifier for the next four digits 220B . Note that the merchant identifier may be placed in the same data locations as by the token generation module A of merchant A A. As such the predetermined algorithms used at one or more merchants A C may share some characteristics. The third set of data is the last four digits of the consumer s phone number from the first token 1204 . The predetermined algorithm then hashes the first three digits of the consumer s phone number as the next three digits 111 and then implements a check sum digit 1 to inform the acquirer A that the data has not been altered intentionally or unintentionally during transmission of the second token . Accordingly the second token generated by merchant B B is 4158 220B 1204 1111 and the second token generated by merchant A A is 4415 220A 4158 2041. Accordingly the different predetermined algorithms create very different second tokens by altering the data included in the same first token . Furthermore the predetermined algorithm used by merchant C C is different as well and generates a second token that is different than the prior two merchants as well 4120 220C 4158 4151 .

Accordingly although the same first token information was used by both predetermined algorithms the generated second tokens are much different and if the predetermined algorithm was not known by the receiving entity the data would be meaningless. Furthermore because the data may be in the format of a payment card number being 16 digits and including payment processing network indicator and check sum digit an entity receiving the second token would not know that the received information was not an account number or other account indicator.

For example the second tokens shown in are all 16 digits long just as some typical payment card numbers. Furthermore each second token starts with a digit 4 that signifies the payment processing network indicator. The payment processing network indicator informs the acquirer A of which payment processing network to forward the second token is associated with. Acquirers A B may store their account identifiers based on the payment processing network indicator or may store all account identifiers in a central location. Additionally each of the second tokens end with a 1 digit. This signifies the check sum digit in the exemplary embodiment. The check sum digit may inform the payment processing network whether the data has been modified intentionally or accidentally while being stored or transmitted. Here the 1 indicates that the data has not been modified. The check sum digit may also comprise any other numerical or alphanumeric value indicating that the data is legitimate.

After generating the second token using the token generation module A the merchant server computer A sends the second token to an acquirer A that the merchant A has a preexisting relationship with in this case acquirer A A . The second token may be sent to the server computer located at the acquirer A through any suitable manner. For example the server computer at the merchant A may include the second token in an authorization request message. The authorization request message may be sent to the acquirer A who may extract the second token from the authorization request message and determine the account identifier by electronically searching a database for an account identifier associated with the second token . The authorization request message according to an embodiment of the invention may comply with ISO 8583 which is a standard for systems that exchange electronic transactions made by cardholders using payment cards or other electronic data interchange formats.

The acquirers A B may comprise a server computer A B a consumer account database A and a predetermined algorithm database A. The acquirers A B all share similar components in this exemplary embodiment shown in . However the acquirers A B could implement different embodiments of the multiple tokenization authentication as long as the acquirers A B and merchants A C agreed to the type of authentication being implemented.

The acquirer server computer A may comprise any necessary modules functions or components such that it may communicate with the merchant server computers A C. A server computer is typically a powerful computer or cluster of computers. For example the server computer can be a large mainframe a minicomputer cluster or a group of servers functioning as a unit. In one example the server computer may be a database server coupled to a web server. The acquirer sever computer may receive the authorization request message from the merchant server computer A and extract the second token from the authorization request message.

The predetermined algorithm database A may store merchant identifiers and predetermined algorithms corresponding to each merchant identifier. The merchant identifier may be used to determine the correct predetermined algorithm to use to convert or decode the second token received from the merchant A. As explained previously the second token may be derived from a merchant identifier that identifies the merchant A to the acquirer A. Prior to the multiple tokenization authentication the acquirer A may share a predetermined algorithm with the merchant A that may be stored in a predetermined algorithm database A during a merchant registration process. The predetermined algorithm that is determined by the acquirer A and merchant A during registration may be saved in a predetermined algorithm database A in such a manner that the predetermined algorithm may be returned if the merchant identifier is known. As such the predetermined algorithm database A may be organized according to a merchant identifier or other identifying information that informs the acquirer A of the predetermined algorithm that a merchant A used to generate the second token .

The second entity may use the first entity identifier to determine the account identifier associated with a second token . For example the acquirer server computer A may determine the first entity identifier in this case a merchant identifier and may determine the predetermined algorithm that is associated with the merchant identifier. As such the second entity may use the first entity identifier to determine the predetermined algorithm. The acquirer A may then determine the account identifier by using the predetermined algorithm to determine the account identifier associated with the second token . The predetermined algorithm may be used to convert decrypt or decode the second token into a recognizable value. The recognizable value may contain one or more pieces of information that are associated with the consumer. The recognizable value may only be a portion of consumer information e.g. a phone number missing two digits .

As such the second entity may use the predetermined algorithm to convert the second token into a recognizable value associated with the first token . For example using the second token from merchant B B in the acquirer A could use the merchant identifier contained in the second token B to determine the merchant s predetermined algorithm. The acquirer A could then use the predetermined algorithm to convert the second token 4158 220B 1204 1111 into a recognizable value. As explained above the predetermined algorithm for merchant B B includes hashing the consumer s phone number and zip code. Therefore the predetermined algorithm could be used to convert the data back into recognizable portions of the consumer s phone number and zip code.

For example recognizable values may be determined by using the predetermined algorithm to determine the meaning of information contained in the second token . Such as portions of the consumer s phone number constituting xxx 111 1204 and zip code xx158 . Accordingly the recognizable value would be the portions of the phone number and zip code converted from the second token using the predetermined algorithm. The acquirer A could then search a consumer account database A for a consumer with a zip code with the last three digits 158 and phone number of 111 1204. Accordingly the first entity could use the recognizable value associated with the first token to electronically search a consumer account database A for the account identifier . Most likely if the consumer is registered with the acquirer A only one consumer will have both information matched in the registered consume database. In this case the recognizable value matches an account identifier of 4111 1111 1111 1111. Note that the numbering of the account identifier may not have any relationship to that of the second token . Accordingly the multiple tokenization authentication process has generated a second token that an acquirer A can now recognize as associated with a particular account identifier 4111 1111 1111 1111 .

The consumer account database A may be any type of information storing apparatus that allows the server computer to access data when requested. The consumer account database A may store information such that an account identifier may be returned whenever a recognizable value is determined from the second token and associated with an account identifier . As such a second entity may use the first entity identifier to determine the account identifier associated with the second token . The recognizable value may be any consumer information that was saved to the consumer account database A during a consumer registration process.

The consumer registration process may include any suitable process for receiving information from the consumer regarding their account. The process may be initiated by the consumer not shown the merchant A or the acquirer A. Furthermore if the acquirer A already has account information for a consumer stored the acquirer A may automatically register the consumer for the multiple tokenization authentication using the consumer s personal information. The consumer could then be informed upon the next initiated transaction through any suitable means. The consumer could then initiate transactions using only their first token instead of typical transaction information. Furthermore the consumer registration process may be performed by the merchant server computer A or by the acquirer server computer A. For example the merchant A could ask the consumer for their personal information first token etc. and then forward all the information to the acquirer A to be stored. The merchant A may not store this information locally so that they may not be liable for any data breaches.

In some embodiments a second token may be generated during the consumer registration process and stored at the merchant A for future use during transactions. This may be beneficial for the merchant A not to have to generate a new second token each and every time a transaction occurs. The second token may be generated during the consumer registration process and stored at a second token database through any suitable means as will be discussed in further detail below.

The payment processing network may comprise data processing subsystems networks and operations used to support and deliver authorization services exception file services and clearing and settlement services. The payment processing network may include a server computer. A server computer is typically a powerful computer or cluster of computers. For example the server computer can be a large mainframe a minicomputer cluster or a group of servers functioning as a unit. In one example the server computer may be a database server coupled to a web server. The payment processing network may be connected to an account issuer computer as shown in .

Instead of generating a second token each time the merchant A receives a first token from a consumer in some embodiments the merchant A may store the second token in a second token database A during the registration phase. The second token database A may store the generated second token in any suitable manner. For example the second token database A may store a consumer s second token corresponding to the received first token meaning that the second token is generated from the first token and then a reference to the first token is stored in the second token database A to facilitate easy searching. Furthermore a portion or the entire second token may be generated from the received first token and then compared to the second token database A to ensure there is an existing second token for the received first token prior to sending the second token to the second entity. In this manner the system may also validate the first token as belonging to a registered consumer. For example if a consumer provides their phone number as part of the first token and the predetermined algorithm uses the first three digits of the consumer s phone number in a second token the token generation module A may generate the portion of the second token that comprises the phone number digits and use that portion of the second database to search for the associated stored second token in the second token database A. Other short cuts to determining an appropriate second token that is stored in a second token database A for a particular consumer may be implemented in the system as well.

Note that because the second token is meaningless without knowing how the information contained in the first token is altered storing the second token at the merchant A does not undermine the merchant s ability to limit their liability. If a third party gained access to the second token database A which would be associated with a number of first tokens the second token may not be usable by other merchants B C nor would they reveal sensitive information about the consumer to a third party. Therefore storing the second token in a database at the merchant A does not undermine the purpose of limiting the liability of a merchant A for data breaches.

Once the server computer gains the appropriate second token associated with the first token from the second token database A the merchant A may send the second token to the acquirer server computer A as explained in reference to above. The rest of the system operates in the same manner as above.

One example of a portable consumer device that may be used to implement embodiments of the present invention is a mobile wireless phone equipped with a NFC capability. is a functional block diagram illustrating the primary components of a portable consumer device e.g. element of such as a mobile phone that may be used as part of the inventive system and methods.

As illustrated in mobile communication device may include circuitry that is used to enable certain telephony and other device functions. The functional elements responsible for enabling those functions may include a processor for executing instructions that implement the functions and operations of the device. Processor may access data storage or another suitable memory region or element including the secure memory located on the contactless element to retrieve instructions or data used in executing the instructions.

Data input output elements may be used to enable a consumer to input data via a microphone keyboard touchscreen fingerprint detector biometric data input device for example or receive output data via a display screen or speaker for example . Communications element may be used to enable data transfer between mobile communication device and a wireless network via antenna for example to assist in enabling telephony and data transfer functions. The mobile communication device may also include contactless element interface to enable data transfer between contactless element and other elements of the device where contactless element may include a secure memory and a near field communications data transfer element. The contactless element may implement a near field communications capability that enables communication and data transfer between mobile communication device and an access device including a device reader or POS terminal that is part of a transaction processing system .

Data storage may be a memory that stores data and may be in any suitable form including a memory chip disk drive flash memory etc. The memory may be used to store data such as consumer identification or authentication information consumer account information transaction data etc. Stored financial information may include information such as bank account information bank identification number BIN credit or debit card account number information account balance information expiration date consumer information such as name date of birth etc. Note that such data may instead or also be stored in a secure memory element such as secure memory or a similar secure memory that is part of contactless element . As described data storage may also contain instructions which when executed by processor implement operations or processes that are part of the operation of the device or of applications installed on the device.

Data storage or a secure memory element that is part of contactless element may include a mobile payment application that is activated in order to initiate or otherwise facilitate a payment transaction. The processor of the mobile communication device may execute the mobile payment application or a processor included as part of the contactless element may operate the mobile payment application. The mobile payment application may access a data storage element to obtain data used to participate in a payment transaction or to record or update a data record for a transaction. Additionally the mobile payment application may access a secure memory that is part of the contactless element . Furthermore the data stored in the secure memory may be encrypted to provide further security. The mobile payment application may communicate and exchange data with other elements of device as the result of an application programming interface API or other suitable form of interface or as a result of interactions with a controller or application that functions to receive data inputs from a consumer and provides the received data to the mobile payment application.

The merchant A may comprise a server computer A and in some embodiments a second token database A. The server computer A of the merchant A may comprise a consumer registration module a token generation module A a token association module and an authorization request message generation module . The modules may interact and or communicate with one another. Additionally the modules may include any necessary components or software in order to perform their function or functions. Computer code for performing the functions of the above described modules may be present on a computer readable medium that causes a processor to execute the function. Note that these each and every module may not be used or required in each embodiment. For example the token association module is only used in the embodiment that stores a second token at the merchant A.

In some embodiments a consumer registration module may be used by the server computer A during a registration phase to capture and store consumer information related to the multiple token authentication. The consumer registration module may be invoked the first time a consumer registers for the multiple token authentication service. The consumer may be provided with an option to use the multiple token authentication or the merchant A may require the consumer to register for the multiple token authentication. The consumer registration module may store consumer information at the merchant A or may communicate with the acquirer A to store account and personal information at the acquirer A. For example the embodiment of the multiple token authentication that generates a new second token for every consumer transaction may have a consumer registration process where no actual consumer data is stored at the merchant A. Instead the consumer registration module may communicate with the acquirer A to gather consumer information including the account identifier that will be used in future transactions and store this information at the acquirer A.

Although do not show an embodiment implementing token validation as will be discussed in more detail in a token validation module not shown may be implemented in some embodiments to provide further security to a first token . Although this embodiment is not shown in it may be included in all embodiments of the multiple tokenization authentication. The token validation module would operate in the current embodiment in the same manner as that described below in regards to the token validation module included in embodiments described by below.

The token generation module A may be used by the server computer A to generate the second token . In some embodiments the second token is generated during every transaction based on the first token . In other embodiments the token generation module A is only used during a consumer registration phase and the second token is stored in a second token database A for later use in the multiple tokenization authentication process.

The token association module may be used by the server computer A in some embodiments to determine a second token that is associated with a first token provided by the consumer. For example a consumer may provide a first token that is associated with a second token . As explained above in the description of the second token database there are many methods for determining the association.

The authorization request message generation module may be used by the server computer A to generate an authorization request message comprising the second token . The second token could be included in the authorization request message in any suitable manner. For example the second token could be stored in the format of a payment card number such that the multiple tokenization authentication process could be implemented on existing infrastructure. Accordingly after generating the authorization request message comprising the second token the authorization request message would be sent to the acquirer computer A associated with the merchant. The acquirer computer A may then receive the authorization request message and process the multiple tokenization authentication process as described in further detail below.

The second token database A may store a second token generated during a registration phase for each consumer. The second token may be stored according to a consumer identifier or through any other information that allows the server computer A to easily retrieve an associated second token to a first token . As explained above the token association module may access information stored at the second token database A to determine an associated second token .

The access device may be in any suitable form. Examples of access devices include point of sale POS devices cellular phones PDAs personal computers PCs tablet PCs handheld specialized readers set top boxes electronic cash registers automated teller machines ATMs virtual cash registers kiosks security systems access systems and the like. The access device may be operated by the consumer or the merchant A.

The acquirer computer A may be the second entity according to the exemplary embodiment shown in . The acquirer computer may be a server computer A and may comprise any and all of the features described in further detail below.

The merchant identifier determination module may be used by the server computer A to determine a merchant identifier that the second token may be derived from or may be comprised in the second token . For example the server computer A may receive a second token in an authorization request message from the merchant A. The server computer A would extract the second token from the authorization request message using any suitable method. The server computer A may then use the merchant identifier determination module to determine a merchant identifier from the second token . For example the second token may have predetermined data elements that may comprise the merchant identifier in any given second token or authorization request message. The acquirer may inform all the merchants A B that it is associated with to include a determined merchant identifier associated with the merchant A during a merchant registration. The acquirer could inform the merchant A that the merchant identifier should be provided in the same portion of the second token or the authorization request message for all transactions. Additionally the authorization request message could include a flag informing the acquirer that the message is requesting multiple tokenization authentication so that the acquirer server computer A will initiate the merchant identifier determination module whenever that flag is received. Alternatively the acquirer may always use the merchant identifier determination module to determine whether any message it receives is trying to use multiple tokenization authentication. Accordingly the merchant identifier determination module may always inspect a particular portion of the second token or authorization request message and determine whether a merchant identifier is present or not. The merchant identifier determination module may determine whether a merchant identifier exists by extracting the corresponding data and electronically searching a predetermined algorithm database A to determine if a stored merchant identifier matches the received merchant identifier. The merchant identifier data may be designed such that regular transaction data would not accidentally be associated with a merchant identifier stored on the system.

The predetermined algorithm determination module may be used by the server computer A to determine a predetermined algorithm that is associated with the merchant identifier determined by the merchant identifier determination module . The predetermined algorithm determination module uses the received merchant identifier to electronically search a predetermined algorithm database A for a corresponding predetermined algorithm that was determined during registration of the merchant A with the acquirer A. During merchant registration the predetermined algorithm may be shared between the acquirer A and the merchant A such that the merchant A may use the predetermined algorithm when generating a second token by altering a first token . The second token may then be transmitted to the acquirer A and may be converted into a recognizable value using the predetermined algorithm.

The predetermined algorithm database A may store predetermined algorithms for converting second tokens into recognizable values as described above as well as merchant identifiers that correspond to the predetermined algorithm. The predetermined algorithm database A may also comprise other information about registered merchants A B. Accordingly the predetermined algorithm database A may be used to determine whether a merchant identifier corresponds to a registered merchant A or not. If the merchant identifier is not recognized then the authorization request message may be processed as a typical transaction that is not requesting multiple tokenization authentication. However if the authorization request message comprises a flag informing the acquirer that multiple tokenization authentication is being requested but the merchant identifier is not recognized the transaction may be denied.

The token conversion module may be used by the server computer A once the predetermined algorithm is determined. The token conversion module may use the predetermined algorithm to convert the second token into a recognizable value associated with the first token . The recognizable value may be associated with the first token through any suitable means. This association may arise from a stored value in the consumer account database A corresponding to the recognizable value in part or in entirety. In such a case the recognizable value may be used to electronically search a consumer account database A for the account identifier . For example a first token may include a portion of a phone number of a consumer. The second token may be generated by hashing portions of the phone number according to a predetermined algorithm. The acquirer A may use the token conversion module to determine the phone number by applying the predetermined algorithm to the second token to determine the portions of the phone number included in the second token . Accordingly the recognizable value may be a portion of the phone number that is associated with the first token .

The account identifier association module may be used by the server computer A once the one or more recognizable values are determined by the token conversion module . The account identifier association module may electronically search the consumer account database A to determine an account identifier associated with the one or more recognizable values. The recognizable values may only be a portion of a consumer s information. For example the recognizable value may only be the last four digits of a consumer s phone number. As such the account identifier association module may electronically search the consumer account database A to determine an account identifier that is associated with a consumer with a phone number comprising the recognizable value the last four digits . The one or more recognizable values may comprise different types of data as well. For example the data may comprise both the last four digits of the consumer s phone number as well as the consumer s zip code. In this manner if two consumer s have the same last four digits of a phone number the zip code information will most likely distinguish the two consumers from one another. Accordingly depending on the type of multiple token authentication implemented the system may examine the consumer records and design a predetermined algorithm that will ensure that no consumer will be mistaken for another during a multiple tokenization authentication process. In this manner the account identifier association module may determine an account identifier that is associated with the consumer.

The consumer account database A may store account identifiers corresponding to registered consumers with the merchant A or acquirer. The account identifiers may be stored along with consumer personal information or other information provided during a registration phase of data that may be contained in the first token . For example a consumer may provide a phone number billing address and primary account number for a payment account during a registration phase. An account identifier may be created that identifies the consumer to the acquirer A. The account identifier may be the primary account number or may be derived from the primary account number. The registration process may be implemented either through the merchant A or directly with the acquirer A through a consumer registration module as explained above in reference to the merchant server computer A of . Accordingly the consumer registration module may save the consumer s account number personal information first token or any other information that may be used during the multiple tokenization authentication process in the consumer account database A and associate the information to an account identifier .

The authorization message modification module is used by the server computer A once an account identifier has been determined. The authorization message modification module receives the account identifier from the account identifier association module and modifies the received authorization request message from the merchant A to include the account identifier . The account identifier may be added to the authorization request message or may replace the second token in the authorization request message. In embodiments where the second token is in the format of a payment card number the second token may be replaced with the account identifier may be the consumer s payment card number and may replace the second token in the authorization request message. Accordingly when the modified authorization request message is sent to a payment processing network the payment processing network will process the authorization request message as any other transaction. The payment processing network may not receive any indication that the authorization request message ever included a second token . Accordingly the multiple tokenization authentication process described herein may be implemented using existing payment transaction system infrastructure.

Another embodiment of the multiple tokenization authentication process may use second tokens that are not derived from the first token but may be associated with consumer information and associated during a registration process instead. illustrates one exemplary embodiment of such a multiple tokenization process. This embodiment of the multiple tokenization authentication process allows for easy transaction processing for consumers. Consumers may not need a portable consumer device at all as they may only need to remember a simple first token to initiate a transaction. For example the first token could be the name of their first dog. The consumer may even be provided with a hint or challenge response type of prompt in order to help the consumer remember what their first token is for that particular merchant A. The consumer may implement different first tokens for each of the merchants A C that utilize a multiple tokenization authentication so that employees or owners at one merchant A may not use the first token to initiate unauthorized transactions at other merchants B C. Although embodiments of the multiple tokenization authentication process described in may need the merchant A to store some consumer information the consumer information may not be sensitive and the second token stored at the merchant A may be encrypted so that any malicious party may not access the data. Accordingly this embodiment is still secure and protects sensitive consumer information from data breaches by employees and owners of merchants A C as well as third parties.

The merchants A C are first entities in this exemplary embodiment of the multiple tokenization authentication process. These merchants A C may be the same as the merchants described in reference to but may comprise additional modules in their server computers A C and may comprise a consumer registration database A as well. Because all of the merchants shown in comprise the same functionality the capabilities of the merchants will be discussed with reference to a single merchant merchant A A. Merchant A A may comprise a server computer A a consumer registration database A and a token association database A.

According to this embodiment the first token can include information associated with the consumer that is less sensitive than e.g. the consumer s primary account number for the payment account. For example the first token can include information such as a pet s name a mother s maiden name the first street on which the consumer lived a childhood nickname a best friend s name a name of the consumer s high school a word or phrase arbitrarily chosen by the consumer an email address of the consumer a work password etc. The consumer may be prompted by the merchant A to provide their first token during the consumer registration process such that the first token may be associated with a second token . The second token may be generated during consumer registration but may or may not be generated by altering data in the first token . For example if the first token provided by the consumer is the name of the consumer s first dog Spike the second token could be any type of information and does not have to be related to spike or generated using spike. For example the second token could be an arbitrary number a phone number of the consumer or any other data stored in the token association database A. The second token may also be sent to a payment processing network to be stored for future reference along with an account identifier that corresponds to the consumer s account information with a payment account issued by an account issuer . The second token could be consumer identifiable phone number etc. or could be unidentifiable a series of letters and numbers that are not easily recognizable or memorized .

Another example may be that the first token is the name of a consumer s daughter Jane. The second token may be determined to be the phone number of the consumer. Accordingly the second token is not generated using the first token but they are associated through the consumer providing both pieces of information during the registration process. Finally another first token may be the answer to a question what is your first cats name The consumer s first token may be Garfield. Accordingly the merchant server computer A may use the consumer s social security number as the second token . The second token is much more sensitive than the first token but is still less sensitive than the consumer s transaction account number. Furthermore as before the second token is not generated using information contained in the first token and instead is associated with the consumer through a registration process.

The consumer registration database A may be used by the server computer A during a registration phase to capture and store consumer information related to the multiple token authentication. Consumer information may also comprise a consumer identifier that is stored in the consumer registration database A such that a token validation can occur. The consumer identifier may include a consumer number date of registration particular consumer personal information or other data that may be provided to further secure the multiple tokenization authentication.

The token association database A may be used to store consumer information related to the first token and second token association process of the multiple tokenization authentication process as described above. The consumer information may comprise a first token and a second token that will be associated and stored in a token association database A.

The payment processing network may be any network of computers that is configured to process transactions. The payment processing network may be determined according to a payment processing network indicator included in the second token or may be included in the consumer registration database A. The capabilities and functionality contained in the payment processing network will be described in further detail below.

The server computer located at the payment processing network may be coupled to a token association database that may store a second token and an account identifier corresponding to the second token . The second token and account identifier may be stored at the token association database of the payment processing network during a registration phase as described above. The payment processing network may receive an authorization request message comprising the first token . The payment processing network may then determine the first token from the authorization request message and may search a token association database to determine an associated account identifier with the second token .

The token association database may be coupled to the server computer and may store a second token and an account identifier . The token association database may be accessed by the server computer and return an account identifier associated with a received second token by the server computer of the payment processing network .

The payment processing network may receive the authorization request message with the second token and determine whether the second token is valid. For example the payment processing network may determine whether the second token is associated with an account identifier . If the second token is not valid the payment processing network may return an authorization response message to the merchant A declining the transaction.

If the second token is valid the payment processing network accesses the account identifier associated with the second token and modifies the authorization request message to include the account identifier . The payment processing network provides the modified authorization request message with the account identifier to the issuer. From this point a typical transaction authorization process can occur as described in .

The merchant A may include a server computer A a consumer registration module a token validation module a token association module and an authorization request message generation module . The modules may interact and or communicate with one another. Additionally the modules may include any necessary components or software in order to perform their function or functions. Computer code for performing the functions of the above described modules may be present on a computer readable medium that causes a processor to execute the function.

The consumer registration module may be used by the server computer to register new consumer s to use the multiple tokenization authentication process. The consumer registration module may operate similarly to the consumer registration module described above in reference to but the consumer registration module may save a second token that is associated with the first token to the token association database A. The second token may not necessarily be derived from the first token . The association between the first token and second token may be created through the registration phase where the consumer or the merchant A determines the corresponding association instead of the second token being generated through the information contained in the first token . For example the first token may be the name of the consumer s first dog spike. The registration database would store the first token spike and would also determine a second token to associate with the consumer. The second token may be more sensitive than the first token and as such may be personal information related to the consumer or may not be sensitive and instead is a random number or other information. However the second token may not necessarily be created by using the information contained in the first token spike. For example the consumer registration module may create a second token based on the consumer s phone number. Additionally the consumer registration module could make up a consumer number to use as the second token . For example the second token could be c12345. The second token is not created using spike but is still associated with the consumer through the registration associating the two tokens during the registration phase. Finally even more sensitive information could be stored such as a social security number. If the token association database A is breached and an unauthorized or malicious entity gains access to the token association database A the second token may not be able to be used by unauthorized entities to use transactions because each merchant A may create their own second token that is different than any other merchant B C. Accordingly malicious merchants A C or merchant A employees may not steal consumer information to be used at other merchants B C. Accordingly the system is secure because account identifiers are not provided by the consumer except during a registration phase that is operated by the acquirer. Accordingly in embodiments of the invention the merchant A may not gain access to the second token stored in the token association database A. The second token may be encrypted and the authentication process may be ran by computers such that any employee owner or third party at a merchant A would never gain access to the second token .

The token validation module may be used by the server computer A as an additional security measure in some embodiments of the multiple tokenization authentication process. Because embodiments of the invention initiate transactions with the mere knowledge of a single first token the system may be susceptible to unauthorized fraudulent transactions if a third party gains access to the first token . Accordingly it may be beneficial to prompt the consumer to provide a consumer identifier as well as the first token in order to verify that the presenter of the first token is in fact the corresponding consumer. As explained above the token validation module may cause the merchant A to receive and store a consumer identifier from the consumer. The server computer A would then use the token validation module to determine whether the first token is associated with the consumer identifier.

The token validation module may determine if the first token is associated with the consumer identifier by electronically searching a consumer registration database A for a first token that corresponds to a consumer identifier. The consumer registration database A may store first tokens by consumer identifier to facilitate easy searching by consumer identifier or could store the first tokens by any other consumer information that allows the token validation module to determine whether the received first token matches a stored first value associated with the received consumer identifier. Finally in embodiments implementing a token validation module the server computer A would continue the process of determining the second token associated with the consumer identifier if the first token is associated with the consumer identifier. If the received first token is not associated with the received consumer identifier the token validation module may end the transaction in order to limit unauthorized transactions.

The token association module may be used by the server computer A to determine the second token associated with the first token received from the consumer. The token association module may electronically search the token association database A to find the associated second token that corresponds to any first token that matches the received token . Accordingly the token association database A would return to the token association module the second token that was stored with the matching first token in the database.

The authorization request message generation module would be used by the server computer A to generate an authorization request message comprising the second token . The second token could be included in the authorization request message in any suitable manner. For example the second token could be stored in the format of a payment card number such that the multiple tokenization authentication process could be implemented on existing infrastructure. Accordingly after generating the authorization request message comprising the second token the authorization request message would be sent to the payment processing network indicated as associated with the consumer during the registration phase. The payment processing network may then receive the authorization request message and process the multiple tokenization authentication process as described in further detail below.

The payment processing network may comprise a server computer coupled to a token association database . The server computer of the payment processing network may comprise a token association module an authorization message modification module and a clearance and settlement module . The modules may interact and or communicate with one another. Additionally the modules may include any necessary components or software in order to perform their function or functions. Computer code for performing the functions of the above described modules may be present on a computer readable medium that causes a processor to execute the function.

The token association module may be used by the server computer to determine the account identifier associated with the second token received from the merchant A. The token association module may electronically search the token association database to find the associated account identifier that corresponds to any second token in the database that matches the received second token . Accordingly the token association database would return to the token association module the account identifier that was stored with the matching second token in the database.

The token association database may be used to store consumer information related to the second token and account identifier association process of the multiple tokenization authentication process as described above. The consumer information may comprise a second token and a corresponding account identifier .

The authorization message modification module may be used by the server computer once an account identifier has been determined. The authorization message modification module receives the account identifier from the token association module and modifies the received authorization request message from the merchant A to include the account identifier . The account identifier may be added to the authorization request message or may replace the second token in the authorization request message. In embodiments where the second token is in the format of a payment card number the second token may be replaced with the account identifier may be the consumer s payment card number and may replace the second token in the authorization request message. Accordingly when the modified authorization request message is sent to the account issuer corresponding to the account identifier the account issuer may process the authorization request message as any other transaction. The account issuer may not receive any indication that the authorization request message ever included a second token . Accordingly the multiple tokenization authentication process described herein may be implemented using existing payment transaction system infrastructure.

Note that authorization message modification module may also be used to modify an authorization response message received from the account issuer once the authorization decision has been made. For example a similar process to that described above may occur to replace the account identifier in the authorization response message with the second token so that the merchant A will not gain access to the sensitive account information after the transaction has been approved or declined.

The clearance and settlement module is a typical module that the server computer may use during any transaction. This module organizes the settlement process of consumer accounts between acquirer computers not shown and issuer computers . The clearance and settlement module may be used by the server computer after an authorization response message is received from the account issuer that informs the payment processing network that the transaction is approved and the consumer has been successfully authenticated using the multiple tokenization authentication process.

In step the consumer provides a first token to a merchant server computer. The merchant server computer receives the first token from the consumer. The consumer may provide the first token to the merchant server computer in any suitable manner. For example in the context of a grocery store the consumer may be prompted to enter their first token when the groceries have been rung up by a cashier. The consumer may swipe a card comprising their first token swipe a mobile phone comprising a mobile payment application configured to provide the first token or may manually enter their information into a POS device located at the merchant. The consumer may enter the same information at every merchant or may have different first tokens for every merchant. For the embodiment shown in the consumer may provide at least one piece of personal information in the first token. For example the consumer may provide their phone number and zip code through any suitable manner. Assuming the first token is provided through a POS access device located at the merchant the POS display could ask for the consumers token or could specifically ask for the particular token information the merchant may use to generate a second token. For example the POS device could ask the consumer to enter their phone number and zip code.

In step the merchant server computer determines a second token associated with the first token. The second token is determined by the merchant server computer receiving the first token and determining the type of information contained in the first token. Assuming appropriate information has been provided by the consumer the merchant server computer uses a predetermined algorithm to generate a second token. The second token may be derived or may include the merchant identifier of the merchant generating the second token. The second token is generated by altering information in the first token according to a predetermined algorithm. For example the predetermined algorithm may instruct the merchant to use the first three digits of the consumer s phone number at data positions 2 5 the first four digits of the zip code as data positions 8 11 etc. The predetermined algorithm is shared between the merchant and acquirer such that they both have access to the particular algorithm being applied.

In step the merchant server computer generates an authorization request message including the second token. After the second token has been generated the merchant server computer generates an authorization request message and includes the generated second token in the authorization request message. Authorization request messages are typically used in payment transactions. The generated authorization request message may be generated using the same protocol or standards as typical authorization request messages the system typically sends to acquirers payment processing networks and account issuers in order to process a transaction. Accordingly the second token may be sent to the acquirer using preexisting infrastructure already being implemented in payment transaction systems.

In step the merchant server computer sends the second token to a server computer at an acquirer. As explained in the prior step the merchant server computer may send the second token in an authorization request message to the acquirer server computer.

In step the acquirer server computer determines whether the authorization request message requires multiple tokenization authentication. The acquirer server computer may make this determination in any suitable manner. For example the authorization request message may comprise a flag informing the acquirer computer that multiple tokenization authentication is required. Additionally a merchant identifier used to derive the second token may inform the acquirer that the merchant is implementing multiple tokenization authentication. No matter how the acquirer determines whether the message requires multiple tokenization authentication the acquirer may decide whether to apply multiple tokenization authentication or to process the transaction as a typical payment transaction.

In step the acquirer server computer determines the merchant identifier from the authorization request message. The acquirer and merchant may have determined prior to the sending of the authorization request message a predetermined position that the merchant identifier will be located. Any manner of informing the acquirer computer of where to extract the merchant identifier from the authorization request message may be used. In some embodiments this server computer may determine the merchant identifier before determining whether the authorization request message is requesting multiple tokenization authentication. As such the steps may be inverted where the acquirer determines the merchant identifier before determining if multiple tokenization authentication is required. In this embodiment the acquirer server computer may determine whether the merchant identifier corresponds to a merchant utilizing multiple tokenization authentication processing. If so the acquirer computer would continue with the multiple tokenization authentication. If not the authorization request message would be forward to a payment processing network for further processing.

In step the acquirer server computer determines the predetermined algorithm corresponding to the merchant identifier. The acquirer server computer determines the predetermined algorithm corresponding to the merchant identifier by searching a predetermined algorithm database A for the determined merchant identifier. The predetermined algorithm corresponding to the merchant identifier stored in the predetermined algorithm database A may then be returned to the server computer for conversion of the second token.

In step the acquirer server computer uses the predetermined algorithm to convert the second token into a recognizable value. The predetermined algorithm may inform the acquirer server computer which data in the second token correspond to which consumer data. For example using the example above the acquirer server computer may be informed to take the fifth through eighth data elements and the eighth through eleventh data elements to gain large portions of the consumer phone number and zip code. The portions of the phone number and zip code may be recognizable values that may be used to determine an associated account identifier to the second token. In this manner the one or more recognizable values may correspond to information contained in first token.

In step the acquirer server computer searches a consumer account database for an account identifier associated with the recognizable value. Once the one or more recognizable values are determined the acquirer computer may use the one or more recognizable values to search a consumer account database for a corresponding consumer with personal information matching those of the one or more recognizable values. For example the acquirer server computer would search the consumer account database for a consumer that shared both the portions of the phone number and zip code matching the recognized values.

In step the acquirer server computer determines whether the second token is associated with an account identifier. The server computer may determine whether the second token is associated with an account identifier by determining whether the search of the consumer account database provided any account identifiers that corresponded to the recognizable value.

In step if the acquirer server computer determines that there is no corresponding account identifier than the transaction is declined. A denial message could be generated and returned to the merchant server computer to be forwarded or displayed to the consumer. For example if no consumer was found with the one or more recognizable values of zip code and phone number the determination may be that the second token is not associated with a legitimate account identifier. Accordingly the transaction may be denied and the process may end.

In step if the acquirer server computer determines an associated with account identifier corresponding to the second token the acquirer server computer modifies the payment authorization request message to include the account identifier. The account identifier may replace the second token or may be added to the authorization request message if there is available space within the message. For example if the acquirer computer found an account identifier that corresponded to the portions of the phone number and zip code determined from the second token the account number would be returned to the server computer. The server computer may then modify the received authorization request message to include the account identifier. In embodiments where the second token is in the same format as a payment card number the account identifier may be the consumer s actual payment card number and may be substituted in for the second token. Accordingly the multiple tokenization authentication process may be implemented on currently existing infrastructure using currently implemented payment messaging protocols.

In step the acquirer server computer sends the modified payment authorization request message containing the account identifier to the payment processing network server computer. The payment processing network server computer then processes the transaction as any typical purchase transaction authorization request message would be. This may include forwarding the authorization request message to an issuer as well as processing any authorization response message received from the account issuer.

In some embodiments instead of generating a second token during every transaction based on the first token the merchant may generate the second token during a registration phase and then store the second token. Furthermore the second token may not be derived from the first token and instead may be associated with the consumer through a consumer registration process. The relationship between the first token and the second token is determined during a registration period where the consumer provides a first token and provides account information to the merchant and acquirer. The merchant acquirer or consumer may choose the second token to be stored at the merchant. Furthermore the second token may be more sensitive than the first token but the second token may not be an account identifier.

In step the consumer provides a first token to a merchant server computer. Similar to the providing of the first token in described above the providing of the first token may be provided in any suitable manner. It is worth noting that because the second token is not generated using the first token in this embodiment the first token may be very simple and may not be related to any account or personal information of the consumer. For example the token may be the name of the consumer s dog.

In step the merchant server computer receives the first token and electronically searches a token association database to determine a second token associated with the first token. The second token may be generated during consumer registration and the second token may not be generated by altering data in the first token.

In step the merchant server computer determines whether the first token is associated with a second token in the token association database. The merchant server computer may search the token association database using the first token and the token association database may return a second token that is stored according to a matching first token. For example if the first token is spike the token association database would return the second token that is stored with the first token spike. It may be that the second token generated when during the consumer s registration was c12345 because the consumer was the 12 345 consumer to register for the multiple tokenization authentication process. When the merchant server computer searches the token association database the first token spike would return a second token of c12345.

In step if the first token is not associated with a second token in the token association database the transaction is declined by the merchant. Accordingly if no first token is determined to match the received first token than no second token may be returned and the transaction may be denied.

In step the merchant server computer generates an authorization request message including the second token associated with the first token. The merchant may not be given access to the second token and instead the system may automatically generate the authorization request message once the second token is determined. Additionally the second token may be encrypted in the database so that even if access were provided the merchant may not determine the contents of the second token.

In step the merchant server computer sends the authorization request message to the payment processing network server computer. The authorization request message may be relayed through an acquirer server computer if no direct connection exists between the merchant server computer and the payment processing network server computer.

In step the payment processing network server computer receives the authorization request message and extracts the second token. The payment processing network server computer electronically searches a token association database to determine an account identifier associated with the second token. During the registration process the consumer s account information was provided and stored in the payment processing network along with the second token. Accordingly the merchant may search for the account identifier corresponding to the second token received and if the consumer is registered with the payment processing network an account identifier corresponding to the consumer s account may be returned.

In step the payment processing network server computer determines whether a second token is associated with an account identifier. Accordingly the consumer account database may electronically searched for the account identifier corresponding to the second token received from the merchant computer.

In step if there is no account identifier associated with the second token the payment processing network server computer declines the transaction.

In step if an account identifier associated with the second token is determined the payment processing network server computer modifies the payment authorization request message to include the account identifier. Similar to the authorization request message being modified in relation to above the second token contained in the authorization request message may be replaced or the account identifier may merely be amended to the authorization request message in addition to the second token.

In step the payment processing network server computer sends the payment authorization request message containing the account identifier to an account issuer server computer that is associated with the account identifier. The account issuer server computer may then process the transaction as a typical transaction. Accordingly the account issuer may determine whether to approve or deny the transaction and would generate and send an authorization response message to the consumer returning the determination. Accordingly because the account issuer may not know that the multiple tokenization authentication is occurring the account issuer authorization response message may comprise the consumer s account identifier. As such the payment processing network may receive the authorization response message and convert the account identifier back into a second token according to the reverse of the process detailed above. Furthermore the merchant may convert the second token back into the first token and modify the authorization response message to protect the consumer s information.

Accordingly the multiple tokenization authentication process may be used with existing payment transaction systems without requiring infrastructure upgrades. Accordingly the first and second entities may implement both multiple tokenization authentication transactions as well as typical transactions on the same equipment. Accordingly more flexibility is provided to transaction processing entities and infrastructure upgrade costs are minimized.

Embodiments of the invention provide the technical benefits of increased security and fraud reduction which result in conserved system resources and more efficient use of system resources. Embodiments of the present invention implement authentication techniques including multiple tokenization. A consumer provides a first token to a first entity which uses the first token to determine a second token. The second token may be generated using information contained in the first token or may be determined by searching a database for a second token that is associated with the first token.

In the case of the second token being generated using information contained in the first token a first entity may not need to store any information about the consumer and may still authenticate the consumer for the transaction. Accordingly vast system resources are saved by the lack of required storage. Additionally the first entity does not have to expend system resources on securing any sensitive financial or personal information of the consumer. This leads to a more efficient authentication system because the authentication procedures are pushed to a second entity that may focus on data security and processing speeds instead of every first entity being forced to provide such capabilities. There may be many more first entities in a system than second entities and as such the system may operate more efficiently by pushing sensitive data security to the second entity.

In the embodiment where the first entity determines a second token that is stored at the first entity and is associated with the first token the first entity may not have to store any sensitive information about the consumer. Although the first entity may store the second token the second token may be unique to that first entity and thus may not be sensitive outside of the relationship between the first entity and the second entity. Furthermore the information contained in the second token may be unrecognizable if it is generated from consumer information originally or may have no meaning outside of the relationship between the particular first entity and the second entity. Accordingly multiple tokenization authentication provides a more efficient and secure system by not storing sensitive information at the first entity. Additionally the second token may be stored in an encrypted manner that the first entity never gains access to. Furthermore even if the second token were decrypted the second token would be meaningless outside of the first entity so any malicious owner or employee of the first entity that gains access to the information cannot initiate any transactions outside of the first entity.

Accordingly embodiments of the present invention provide increased security from both malicious third parties as well as malicious owners employees or contractors of the first entity. Increased security leads to fewer fraudulent transactions being processed on a transaction processing system and thus less network wide traffic. This leads to more efficient use of system resources and savings in system infrastructure costs. Accordingly embodiments of the present invention provide multiple technical benefits.

In other embodiments an electronic wallet may be used to conduct a transaction. An electronic wallet may be used in a variety of transactions including but not limited to eCommerce social networks money transfer personal payments mobile commerce proximity payments gaming and or the like. For example consumers may engage in eCommerce via the electronic wallet for retail purchases digital goods purchases and utility payments. Consumers may also for example use the electronic wallet to purchase games or gaming credits from gaming websites and transfer funds to friends via social networks. Further for example consumers may also use the electronic wallet on a smart phone for retail purchases buying digital goods NFC RF payments at point of sale POS terminals.

In an exemplary transaction involving an electronic wallet a consumer may submit an indication to purchase or transfer funds. For example the consumer may visit a merchant website e.g. Facebook.com Amazon.com etc. and request to purchase an item from the website transfer funds to a friend and or the like. The merchant website may determine whether the electronic wallet is authorized on its website and may provide a list of payment options. If the merchant is registered with a electronic wallet server the electronic wallet server may authorize the merchant to collect consumer credentials for login to the electronic wallet and the merchant website may prompt the consumer to login to the electronic wallet. Otherwise the merchant website may request the consumer to provide payment details for alternative payment options e.g. credit card debit card PayPal account .

The consumer may authorize submission of their wallet consumer credentials such as but not limited to a Wallet Consumer ID a password and or the like. For example the consumer may enter the Wallet Consumer ID and password into a pop up window provided from the merchant website and or electronic wallet server. In another example the consumer may authorize the merchant website to provide the consumer credentials e.g. previously stored in HTML5 cookies etc. to the electronic wallet server. In yet another example the consumer may authorize the electronic wallet server via a remote component running on the merchant website e.g. a Java applet etc. to provide consumer credentials to the electronic wallet server for validation.

When the consumer submits consumer credentials to log into the electronic wallet the merchant website may forward the consumer credentials and transaction details to the electronic wallet server which may determine the validity of the consumer credentials. If the consumer s credentials are not valid the electronic wallet server may deny the payment request and send a notification of denial to the merchant website. In other embodiments if the consumer provided credentials are valid the electronic wallet server may process payment from the electronic wallet. For example the electronic wallet server communicates with the consumer s bank account associated with the electronic wallet and requests a fund transfer of an indicated amount. The electronic wallet server may then store a transaction record.

In some embodiments after processing the payment the electronic wallet server sends a payment confirmation notice to the merchant website which in turn completes the order and stores the transaction record in the database. The merchant website may provide a confirmation page comprising transaction confirmation to the consumer.

The various participants and elements of the embodiments may operate one or more computer apparatuses to facilitate the functions described herein. Any of the elements in may use any suitable number of subsystems to facilitate the functions described herein. Examples of such subsystems or components are shown in . The subsystems shown in are interconnected via a system bus . Additional subsystems such as a printer keyboard fixed disk or other memory comprising computer readable media monitor which is coupled to display adapter and others are shown. Peripherals and input output I O devices which couple to I O controller can be connected to the computer system by any number of means known in the art such as serial port . For example serial port or external interface can be used to connect the computer apparatus to a wide area network such as the Internet a mouse input device or a scanner. The interconnection via system bus allows the central processor to communicate with each subsystem and to control the execution of instructions from system memory or the fixed disk as well as the exchange of information between subsystems. The system memory and or the fixed disk may embody a computer readable medium.

One embodiment of the present invention may be directed to a method. The method comprising receiving at a first entity a first token from a consumer determining a second token associated with the first token and sending the second token to a sever computer at a second entity wherein the first token is provided by consumer input through an access device. The first token may also be provided by a portable consumer device.

The method may further comprise receiving at the first entity a consumer identifier from the consumer determining whether the first token is associated with the consumer identifier and determining the second token associated with the consumer identifier only if the first token is associated with the consumer identifier. Lastly the method may further comprise receiving at the first entity an authorization response message comprising the second token indicating whether the transaction is authorized.

Another embodiment of the present invention may be directed to an apparatus. The apparatus may comprise a processor and a non transitory computer readable storage medium coupled to the processor the computer readable storage medium comprising code executable by the processor for implementing a method. The method comprising receiving at a first entity a first token from a consumer determining a second token associated with the first token and sending the second token to a sever computer at a second entity wherein the first token is provided by consumer input through an access device. The first token may also be provided by a portable consumer device. The method may further comprise receiving an authorization response message comprising the account identifier wherein the authorization response message indicates whether the transaction is approved modifying the authorization response message to remove the account identifier and sending the authorization response message to the first entity.

Another embodiment of the present invention may be directed to a method. The method comprising providing a first token to a first entity wherein the first token is used to determine a second token associated with the first token and wherein the second token is sent to a server computer at a second entity.

The software components or functions described in this application may be implemented as software code to be executed by one or more processors using any suitable computer language such as for example Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may also reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

The present invention can be implemented in the form of control logic in software or hardware or a combination of both. The control logic may be stored in an information storage medium as a plurality of instructions adapted to direct an information processing device to perform a set of steps disclosed in embodiments of the present invention. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the present invention.

In embodiments any of the entities described herein may be embodied by a computer that performs any or all of the functions and steps disclosed.

Any recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary.

The above description is illustrative and is not restrictive. Many variations of the invention will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention may therefore be determined not with reference to the above description but instead may be determined with reference to the pending claims along with their full scope or equivalents.

