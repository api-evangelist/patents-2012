---

title: Method and apparatus for operation of a computing device
abstract: A method and computing device are provided for showing affordance of list scroll-ability within a display of a computing device. As part of the rendering process of the graphical user interface a user is prompted through the provision of additional data to that ultimately displayed to consider that the final displayed list is a subset of data which may be accessed through the graphical user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09285952&OS=09285952&RS=09285952
owner: BlackBerry Limited
number: 09285952
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20120928
---
The present application relates generally to the operation of a computing device and particularly to a display of information and the input of data to a communications device.

The use of communication devices and in particular mobile communication devices has extended to allow a user to receive voice calls and to send and receive electronic communications which may include e mail short message service SMS multimedia messaging service MMS and video messaging service VMS messages as well as other forms of messages. This messaging is typically provided in one or more modules which are executable within a processor of the device and which are individually accessible by a user on demand.

With the increase in processing capacity of these devices more and more functionality is provided within the device and is available to a user. For example it is known to provide devices with calendar functionality whereby a user can enter and store calendar data within the device. This calendar data may be accessed directly on the device and can be input directly on the device. It can also be entered in a second computing device for example a personal computer and then relayed for subsequent storage on the device. While the storage of such information in a portable device is very useful there are associated problems related to the dimensions of these devices. While display screen sizes have increased they are still relatively small compared to conventional computing displays. With a limited footprint there are difficulties in how to enable a user to access the information that is stored within the device. Typically a user needs to switch between distinct modules to access different functionality or data within the device. As a result of the limited display footprint on the device the switching between modules typically effects a replacement of information from a displayed module with information from the new module.

For example when scheduling a meeting or other time based event in order to ensure that the intended meeting does not conflict with an already scheduled event a user needs to access their calendar to confirm availability based on pre stored events. This accessing of the calendar module effects a display on the display of the device of calendar information. The user then needs to switch to a separate scheduling module to enter details of the new meeting. This effects a replacement of the calendar information on the display with the information specific to the schedule module. As a result the calendar information is lost and the user needs to rely on memory when determining an appropriate time slot.

The embodiments described herein provide a system method and apparatus for improved processing of image data as part of generation of a user interface display. In a first aspect a method of generating a graphical user interface on a display of a computing device is provided. The method is particularly suitable for displays whose area and as a result capacity for display is less than the total area of the data to be displayed. Such displays are typically found in wireless computing devices which are battery powered. There is in the context of such devices a tradeoff between screen area and the power consumption of displays of increased size. Where the devices are primarily battery powered it is important that the power consumption of hardware and software modules of the device are designed so as to optimize the time within which the device may operate in the absence of recharging. This in combination with the intended use of the devices as portable devices usually results in small screen sizes.

Where there is a desire to display data from two or more data sources or modules executable within the device there is often a difficulty in having a sufficient area in the display of the device to display that data concurrently. A solution is to allow a user to toggle or switch between the applications that use each of the data sources such that the display can sequentially display information related to each of the data sources respectively. This information is typically provided as a rendered graphic on the display of the computing device. It will be appreciated however that each toggle or activation of a specific program or module executing on the device is a drain on the battery as the refresh of the information provided on the display requires processing. Furthermore the user is required to provide additional interface commands to the device to effect a changeover of the information being displayed. This requirement for multiple sequential commands and their subsequent execution by the processor of the computing device has an effect on the processor activity of the mobile device and the associated battery consumption

In the context of scheduler and calendar modules it will be appreciated that while both are time and or date related and provide a user with a different interface to time and date information stored within the computing device it is typical for these modules to be distinct modules within the computing device and require specific independent activation by a user to access the data relevant to each of the scheduler and calendar modules. Within the context of the present teaching this information may be considered as being stored in distinct first and second data stores for each of the scheduler and calendar modules respectively. It will be appreciated that data architectures employed within computing devices may allow for the use of a single data structure which is configured using flags or the like to include data fields that are specific to each of the scheduler and calendar modules. When retrieving scheduler information the device is configured to access those fields that are associated or defined for the scheduler. Similarly when retrieving calendar information the device is configured to access those fields that are associated or defined for the calendar. Some of the scheduler fields could also be calendar fields i.e. there is common data to each of the scheduler and calendars. Other architectures may provide for complete separation of the data for each of the scheduler and calendar. Within the context of the present teaching the general terms first and second data sources will be used for that data that is specific to each of the scheduler and calendars respectively irrespective of whether it is sourced from a common data structure or distinct independent data structures.

It will be appreciated that irrespective of how it is actually stored the specific data for a calendar will typically will be addressed and retrieved differently than the data for a scheduler. Each time a user accesses their calendar data a processing command is required and this is a battery consumption event. Similarly for a scheduler and the access of scheduler data the retrieval of scheduler information from data stores requires processing activity.

These scheduler and calendar modules provide interfaces to time and date information within the computing device. It is possible within the context of many so called smartphones or other computing devices to provide for a parallel running of scheduler and calendar modules. While both modules are concurrently executing only the information relating to the module that is executing in the foreground is presented to the user on the display of the computing device. In this way the user only sees the information from one of the two modules while at the same time the concurrent execution of the two modules is a drain on the battery of the device. These and other problems are addressed in accordance with the present teaching by a method comprising 

In this way when a user accesses a first module of a device in addition to data consistent with what they would expect to retrieve for that first module i.e. data from a first data store they are also concurrently and without having to activate a second module provided with data from a second data store. The device provides the user with a concurrent display of data which traditionally was only accessed and displayed separately.

In an aspect the method may further comprise subsequent to the concurrent display of the data from the first and second data sources and in response to an input to the device permitting a writing of data to the first data source. In this way the display presents data from two different sources concurrently to facilitate the input of data to one of the two data sources. In the context of a scheduler and calendar the device is configured to provide the user with calendar data to assist in their selection of appropriate times for generating and storing schedule events.

The data from the second data source may be overlaid on the data from the first data source such that the graphical user interface correlates the data from the first and second data sources to provide contextual data. This is particularly useful in where the data from one of the two sources will determine whether or not it is appropriate to write data to the other of the two sources. Such an example is where a user wishes to schedule an event and to record that within a scheduler module s data store of the computing devices but does not want to schedule that event to conflict with another already stored diary event in a calendar module s datastore. By providing an overlay or other layering arrangement it may be possible to provide a display wherein the representation of data from the second data source is visible through the data displayed from the first data source in the example of a scheduler and calendar calendar information is visible through the scheduler fields

As was discussed heretofore the above may be particularly advantageous in the scenario of correlating or cross referencing time information between two different data sources. In one aspect of the present teaching the first data source is a scheduler module of the computing device and the second data source is a calendar module of the computing device.

To allow a user to input data to the first data store the method may provide in one aspect an arrangement wherein the generating a graphical display consistent with data from a first data source generates first and second data input fields.

These first and second data fields may be configured to define time and date fields. Such a definition will allow a user to separately input time and date information for subsequent storage within the first data store of the device.

In one aspect of the present teaching the data from the second data source includes previously stored data from a calendar relating to the displayed time and date fields and indicating availability of a user within the displayed time and date fields. This data from the second data source may include previously stored data from a plurality of calendars and indicating availability of a plurality of users within the displayed time and date fields.

In an aspect of the present teaching the data from the second data source is displayed as a color the color providing a visual indicator to the presence of prestored data from second data source relevant to the displayed time and date fields.

In an aspect of the present teaching a method is provided for generating a graphical user interface on a display of a computing device the method comprising 

selecting a subset of the first set of the data from the first data source for display within an available space within a display area 

In this way a user of the device is presented during the rendering of the image of the subset of the first set of the data from the first data source with a moving image indicating to the user that the ultimately displayed image within the area is a portion of the available data that could be displayed. As a result the display of at least a portion of the first set of data as a moving image prompts a user to subsequently scroll through the displayed subset to access data fields within the first set but not initially displayed in the displayed subset. The displayed subset does not have to be accompanied by a scroll bar or other conventional visual indicators of the possibility of scrolling through the displayed data the user has been advised a priori to the final generated displayed subset that scrolling is possible.

In one aspect the subset of the first set is selected from within the first set such that the first set of data comprises data that sequentially leads into and follows the displayed subset.

The generation of the graphical display may comprise generating a drop down field within the display and populating that drop down field.

These embodiments will be described and illustrated primarily in relation to computing devices such as communication devices that are adapted to communicate wirelessly various types of networks. It will be appreciated by those skilled in the art however that this description is not intended to limit the scope of the described embodiments to implementation on these particular systems or to wireless enabled devices. For example the embodiments described herein may be applied to any appropriate communication device or data processing device whether or not it is adapted to communicate with another communication or data processing device over a fixed or wireless connection whether portable or wirelessly enabled or not whether provided with voice communication capabilities or not. The computing device can be adapted to process data and carry out operations on data in response to user commands for any number of purposes including productivity and entertainment. Thus the embodiments described herein may be implemented on computing devices adapted for content browsing communication or messaging including without limitation cellular phones smartphones wireless organizers personal digital assistants desktop computers terminals laptops tablets handheld wireless communication devices notebook computers ebook readers entertainment devices such as MP3 or video players and the like. Unless expressly stated a computing or communication device may include any such device.

The communication subsystem receives messages from and sends messages to a wireless network . In this exemplary embodiment of the computing device the communication subsystem is configured in accordance with one or more of Global System for Mobile Communication GSM General Packet Radio Services GPRS standards Enhanced Data GSM Environment EDGE and Universal Mobile Telecommunications Service UMTS . New standards are still being defined but it is believed that they will have similarities to the network behavior described herein and it will also be understood by persons skilled in the art that the embodiments described herein are intended to use any other suitable standards that are developed in the future. The wireless link connecting the communication subsystem with the wireless network represents one or more different Radio Frequency RF channels operating according to defined protocols specified for GSM GPRS EDGE or UMTS and optionally other network communications. With newer network protocols these channels are capable of supporting both circuit switched voice communications and packet switched data communications.

Other wireless networks can also be associated with the computing device in variant implementations. The different types of wireless networks that can be employed include for example data centric wireless networks voice centric wireless networks and dual mode networks that can support both voice and data communications over the same physical base stations. Combined dual mode networks include but are not limited to Code Division Multiple Access CDMA or CDMA2000 networks GSM GPRS networks third generation 3G networks like EDGE HSPA HSPA EVDO and UMTS or fourth generation 4G networks such as LTE and LTE Advanced. Some other examples of data centric networks include WiFi 802.11 Mobitex and DataTAC network communication systems. Examples of other voice centric data networks include Personal Communication Systems PCS networks like GSM and Time Division Multiple Access TDMA systems.

The mobile device may be provided with additional communication subsystems such as the wireless LAN WLAN communication subsystem also shown in . The WLAN communication subsystem may operate in accordance with a known network protocol such as one or more of the 802.11 family of standards developed by IEEE. The communication subsystem may be separate from or integrated with the communication subsystem or with the short range communications module . As noted above voice communication capabilities and connectivity to voice centric networks is not mandatory for the operation of the computing device with the within embodiments. Thus the wireless communication subsystem may be omitted. If so optionally a dongle or other peripheral device not shown may be connected to the device to provide the device with access to the wireless network .

The main processor also interacts with additional subsystems such as a Random Access Memory RAM a flash memory a display other data and memory access interfaces such as an auxiliary input output I O subsystem or a data port a keyboard a speaker a microphone the short range communications and other device subsystems . Each interaction causes a power event that has an effect on the battery consumption of the device. Certain subsystems are more intensive power consumers than other subsystems. The communication device may also be provided with an accelerometer which may be used to detect gravity or motion induced forces and their direction.

Detection of such forces applied to the device may be processed to determine a response of the device such as an orientation of a graphical user interface displayed on the display assembly in response to a determination of the current orientation of the device .

In some embodiments the user device may comprise a touchscreen based device in which the display interface is a touchscreen interface that provides both a display for communicating information and presenting graphical user interfaces as well as an input subsystem for detecting user input that may be converted to instructions for execution by the device . Indeed the present teaching is particularly suited for such touchscreen display interfaces.

The touchscreen display interface may be the principal user interface provided on the device although in some embodiments additional buttons variously shown in the figures or a trackpad or other input means may be provided. In one embodiment a transmissive TFT LCD screen is overlaid with a clear touch sensor assembly that supports single and multi touch actions such as tap double tap tap and hold tap and drag scroll press flick and pinch. The touchscreen display interface detects these single and multi touch actions for example through the generation of a signal or signals in response to a touch which may then be processed by the processor or by an additional processor or processors in the device to determine the location of the touch action whether defined by horizontal and vertical screen position data or other position data. Touch location data may include an area of contact or a single point of contact such as a point at or near a center of the area of contact. The touchscreen display interface may be provided with separate horizontal and vertical sensors or detectors to assist in identifying the location of a touch. A signal is provided to the controller shown in in response to detection of a touch. The controller and or the processor may detect a touch by any suitable contact member on the touch sensitive display . It will be appreciated that this touch interface is exemplary of the type of user interaction that may be provided to a user to allow activation of specific functions on the computing device. Other interface means may include those that make use of voice commands or other non tactile interaction.

Some of the subsystems of the computing device perform communication related functions whereas other subsystems can provide resident or on device functions. By way of example the display and the keyboard can be used for both communication related functions such as entering a text message for transmission over the network and device resident functions such as a calculator or task list.

A rendering circuit is included in the device . When a user specifies that a data file which is accessed from one or more identifiable data stores within the device is to be viewed on the display the rendering circuit analyzes and processes the data file for visualization on the display . Rendering data files originally optimized or prepared for visualization on large screen displays on a portable electronic device display often requires additional processing prior to visualization on the small screen portable electronic device displays. This additional processing may be accomplished by the rendering engine . As will be appreciated by those of skill in the art the rendering engine can be implemented in hardware software or a combination thereof and can comprise a dedicated image processor and associated circuitry or can be implemented within main processor .

The computing device can send and receive communication signals over the wireless network after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of the computing device . To identify a subscriber the computing device requires a SIM RUIM UICC card i.e. Subscriber Identity Module Removable User Identity Module Universal Integrated Circuit Card or the like or another suitable identity module to be inserted into a SIM RUIM UICC interface in order to communicate with a network. The SIM RUIM UICC card is one type of a conventional smart card that can be used to identify a subscriber of the computing device and to personalize the computing device among other things. Without the SIM RUIM UICC card the computing device is not fully operational for communication with the wireless network . By inserting the SIM RUIM UICC card into the SIM RUIM UICC interface a subscriber can access all subscribed services. Services can include web browsing and messaging such as e mail voice mail Short Message Service SMS and Multimedia Messaging Services MMS . More advanced services can include point of sale field service and sales force automation. The SIM RUIM UICC card includes a processor and memory for storing information. Once the SIM RUIM UICC card is inserted into the SIM RUIM UICC interface it is coupled to the main processor . In order to identify the subscriber the SIM RUIM UICC card can include some user parameters such as an International Mobile Subscriber Identity IMSI . An advantage of using the SIM RUIM UICC card is that a subscriber is not necessarily bound by any single physical mobile device. The SIM RUIM UICC card can store additional subscriber information for a mobile device as well including datebook or calendar information and recent call information. Alternatively user identification information can also be programmed into the flash memory .

The computing device may be a battery powered device including a battery interface for receiving one or more rechargeable batteries . In at least some embodiments the battery can be a smart battery with an embedded microprocessor. The battery interface is coupled to a regulator not shown which assists the battery in providing power V to the computing device . Although current technology makes use of a battery future technologies such as micro fuel cells can provide the power to the computing device .

The computing device also includes an operating system and software components to which are described in more detail below. The operating system and the software components to that are executed by the main processor are typically stored in a persistent store such as the flash memory which can alternatively be a read only memory ROM or similar storage element not shown . Those skilled in the art will appreciate that portions of the operating system and the software components to such as specific device applications or parts thereof can be temporarily loaded into a volatile store such as the RAM . Select other modules may also be included such as those described herein. Other software components can also be included as is well known to those skilled in the art.

The subset of software applications that control basic device operations including data and voice communication applications will normally be installed on the computing device during its manufacture. Other software applications include a message application that can be any suitable software program that allows a user of the computing device to send and receive electronic messages. Various alternatives exist for the message application as is well known to those skilled in the art. Messages that have been sent or received by the user are typically stored in the flash memory of the computing device or some other suitable storage element in the computing device . In at least some embodiments some of the sent and received messages can be stored remotely from the device such as in a data store of an associated host system with which the computing device communicates.

The software applications can further include a device state module a Personal Information Manager PIM and other suitable modules not shown . The device state module provides persistence i.e. the device state module ensures that important device data is stored in persistent memory such as the flash memory so that the data is not lost when the computing device is turned off or loses power.

The PIM includes functionality for organizing and managing data items of interest to the user such as but not limited to e mail contacts calendar events voice mails appointments and task items. A PIM application has the ability to send and receive data items via the wireless network . Within the context of the present teaching and as shown in a scheduler A and a calendar B module may be considered as examples or representative of individual PIM applications. It will be understood that this reference to applications is not to limit the present teaching to explicit independent executable applications in that certain configurations may provide each of the modules as different interfaces to time and date information and data. Furthermore certain configurations may allow for independent access to calendar and scheduler information whereas other configurations may only allow a user to access schedule information through an already open calendar. These and other configurations should be considered as falling within the scope of the present teaching. In this way a calendar module within the context of the present teaching should be considered as any module that stores calendar data in a store that is identifiable as a calendar data store . A scheduler module should be considered as any module that stores scheduler data in a store that is identifiable as a scheduler data store. This data is relevant to the user schedule. This may be updated by a user directly accessing the calendar module B or by a user creating a new scheduler event through the scheduler module A. The scheduler module A provides access to data that is stored in a scheduler data store .

PIM data items can be seamlessly integrated synchronized and updated via the wireless network with the mobile device subscriber s corresponding data items stored and or associated with a host computer system. This functionality creates a mirrored host computer on the computing device with respect to such items. This can be particularly advantageous when the host computer system is the mobile device subscriber s office computer system. Some or all of the data items stored at the computing device may be indexed for searching on the device either through a corresponding application such as the PIM or another suitable module. In addition the items may be searchable using a unified search process implemented in the device operating system . For example application data items can be encapsulated in a searchable entity class and registered with a unified search engine on the device that executes searches against all registered data repositories on the device based on received queries. The search engine can also be configured to invoke a search process of external resources such as Internet search engines or remote databases. In the context of entering data directly onto the computing device through the computing device it will be appreciated and understood however that the functionality available to user of the computing device is typically less than that available to the user of the host computer system.

The computing device also includes a connect module and an information technology IT policy module . The connect module implements the communication protocols that are required for the computing device to communicate with the wireless infrastructure and any host system such as an enterprise system with which the computing device is authorized to interface. The connect module includes a set of Application Programming Interfaces APIs that can be integrated with the computing device to allow the computing device to use any number of services associated with the enterprise system or with other systems accessible over the network . The connect module allows the computing device to establish an end to end secure authenticated communication pipe with the host system. A subset of applications for which access is provided by the connect module can be used to pass IT policy commands from the host system to the computing device . This can be done in a wireless or wired manner. These instructions can then be passed to the IT policy module to modify the configuration of the device . Alternatively in some cases the IT policy update can also be done over a wired connection.

Other types of software applications can also be installed on the computing device such as browsers other user agents and other modules . These software applications can be third party applications which are added after the manufacture of the computing device . Other examples of third party applications include games calculators utilities etc.

The additional applications can be loaded onto the computing device through at least one of the wireless network the auxiliary I O subsystem the data port the short range communications subsystem or any other suitable device subsystem . This flexibility in application installation increases the functionality of the computing device and can provide enhanced on device functions communication related functions or both. For example secure communication applications can enable electronic commerce functions and other such financial transactions to be performed using the computing device .

The data port enables a subscriber to set preferences through an external device or software application and extends the capabilities of the computing device by providing for information or software downloads to the computing device other than through a wireless communication network. The alternate download path can for example be used to load an encryption key onto the computing device through a direct and thus reliable and trusted connection to provide secure device communication. The data port can be any suitable port that enables data communication between the computing device and another computing device. The data port can be a serial or a parallel port. In some instances the data port can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery of the computing device .

The short range communications subsystem provides for communication between the computing device and different systems or devices without the use of the wireless network . For example the subsystem can include an infrared device and associated circuits and components for short range communication. Examples of short range communication standards include standards developed by the Infrared Data Association IrDA Bluetooth and the 802.11 family of standards.

In use a received signal such as a text message an e mail message or web page download will be processed by the communication subsystem and input to the main processor . The main processor will then process the received signal for output to the display or alternatively to the auxiliary I O subsystem . A subscriber can also compose data items such as e mail messages for example using the keyboard in conjunction with the display and possibly the auxiliary I O subsystem . The auxiliary subsystem can include devices such as a touchscreen mouse track ball infrared fingerprint detector or a roller wheel with dynamic button pressing capability. The keyboard may be an alphanumeric keyboard and or telephone type keypad. However other types of keyboards can also be used. A composed item can be transmitted over the wireless network through the communication subsystem . It will be appreciated that if the display comprises a touchscreen then the auxiliary subsystem may still comprise one or more of the devices identified above.

For voice communications the overall operation of the computing device is substantially similar except that the received signals are output to the speaker and signals for transmission are generated by the microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem can also be implemented on the computing device . Although voice or audio signal output is accomplished primarily through the speaker the display can also be used to provide additional information such as the identity of a calling party duration of a voice call or other voice call related information.

The communication subsystem component may include a receiver transmitter and associated components such as one or more embedded or internal antenna elements Local Oscillators LOs and a processing module such as a Digital Signal Processor DSP in communication with the transmitter and receiver. Signals received by an antenna through the wireless network are input to the receiver which can perform such common receiver functions as signal amplification frequency down conversion filtering channel selection and analog to digital A D conversion. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed in the DSP. In a similar manner signals to be transmitted are processed including modulation and encoding by the DSP then input to the transmitter for digital to analog D A conversion frequency up conversion filtering amplification and transmission over the wireless network via an antenna. The DSP not only processes communication signals but also provides for receiver and transmitter control including control of gains applied to communication signals in the receiver and the transmitter. When the computing device is fully operational the transmitter is typically keyed or turned on only when it is transmitting to the wireless network and is otherwise turned off to conserve resources. Similarly the receiver is periodically turned off to conserve power until it is needed to receive signals or information if at all during designated time periods. Other communication subsystems such as the WLAN communication subsystem or a WPAN communication subsystem not shown may be provided with similar components as those described above configured for communication over the appropriate frequencies and using the appropriate protocols. The particular design of the communication subsystem or other communication subsystem is dependent upon the communication network with which the computing device is intended to operate. Thus it should be understood that the foregoing description serves only as one example.

The host or enterprise system comprises a number of network components not shown connected to each other by a network. Within the system for example user including administrator computers may be situated on a LAN connection and one or more of these desktop computers can be provided with connection facilities for loading information e.g. PIM data private symmetric encryption keys to facilitate secure communications from the user computer to the computing device and can be particularly useful for bulk information updates often performed in initializing the computing device for use. To facilitate the operation of the computing device and the wireless communication of messages and message related data between the computing device and components of the host system a number of wireless communication support components are provided within the system not shown . In some implementations the wireless communication support components can include one or more data stores a message management server a mobile data server a web server such as Hypertext Transfer Protocol HTTP server a contact server and a device manager module including an information technology policy server and editor. HTTP servers can also be located outside the host or enterprise system as indicated by the HTTP server attached to the network . The mobile data server can also connect to the Internet or other public network through an enterprise HTTP server or other suitable web server such as a File Transfer Protocol FTP server to retrieve webpages and other data. Requests for webpages are typically routed through mobile data server and then to the enterprise HTTP server through suitable firewalls and other protective mechanisms. The web server then retrieves the webpage over the Internet and returns it to mobile data server. The mobile data server is typically provided or associated with an encoder that permits retrieved data such as retrieved webpages to be decompressed and compressed using any suitable compression technology e.g. YK compression JPEG MPEG x H.26 and other known techniques and encrypted e.g. using an encryption technique such as DES Triple DES or AES and then pushed to the computing device via the shared network infrastructure and the wireless network . Those skilled in the art know how to implement these various components. Other components can also be included as is well known to those skilled in the art.

The computing device s access to IP networks and to a public switched telephone network PSTN if applicable can be provided through the wireless network which comprises one or more nodes configured for communication in accordance with a suitable mobile telephony standard. In turn the wireless network provides the computing device with connectivity to the Internet or other public wide area network and thence to the host or enterprise system . At the same time if the computing device is a multiple mode device it may also communicate with the host or enterprise system over an enterprise LAN or WLAN represented by the access point . It will be appreciated by those skilled in the art however that access to the host system need not be limited to access via the enterprise network whether wireless or not . Instead the computing device may access the host or enterprise system over another network such as the wide area IP network via different access means such as an access point located at the communication device user s home or at a public or private Wi Fi hotspot.

In this exemplary embodiment the computing device communicates with the host or enterprise system through node of the wireless network and a shared network infrastructure such as a service provider network or the public Internet. Access to the host or enterprise system can be provided through one or more routers not shown and computing devices of the host or enterprise system can operate from behind a firewall or proxy server . A proxy server provides a secure node and a wireless internet gateway for the host or enterprise system . The proxy server intelligently routes data to the correct destination server within the host or enterprise system .

For some wireless networks or LANs the computing device may be registered or activated with the respective network. A process for identifying a subscriber to a cellular network using a SIM or other identifier card is described above. Other methods of registering or identifying the computing device to various networks will be known to those of ordinary skill in the art. However registration or activation may not be required for all wireless networks LANs or WLANs as some networks may allow access without prior registration or activation. The computing device may also be provisioned or configured to access one or more networks. Methods of provisioning services on a computing device will be generally known to those skilled in the art but as a non limiting example a request for registration may be sent from the computing device to a registration server of a service not shown . If the request is approved the registration server may transmit to the computing device a service book or similar data item containing data and instructions to enable the computing device to provision the service. The service book when received at the computing device may be self executing and permits the user to enter account information relevant to the associated service. This information is then transmitted from the computing device to a provisioning server of the service provider not shown which then creates a service account associated with the computing device . Provisioning may also be carried out in compliance with the OMA DM Open Mobile Alliance Device Management specification version 1.2 or its predecessor or successor versions published by the Open Mobile Alliance Ltd.

As is discussed with reference to and in one aspect of the present teaching the device is configured to generate an area within a display of the device to display data from a first data source Step . The device is also configured to provide for a retrieval of data from a second data source Step . The data from the first and second data sources may then be concurrently displayed within the area defined in the display of the device Step .

The computing device may receive user input by means of one or more user input systems such as a user input device or interface including without limitation the keyboard display where the display is comprised in a touchscreen interface referred to herein as a touchscreen display microphone trackball buttons trackpad scroll wheel optical joystick rocker switch and the like. Advantageously the computing device is provided with a touchscreen display . Several of these user input devices may be external to the computing device itself for example a pointing device such as a mouse trackball tablet or touchpad may be provided as a peripheral component. In the case of a mobile device such as a smartphone or tablet computer user input mechanisms are advantageously incorporated into the chassis of the computing device itself for improved portability and mobility. For example in a touchscreen computing device such as a tablet or smartphone the device is provided not only with a touchscreen display which may provide the main user input mechanism and permit alphanumeric data entry through display of an interactive virtual keyboard on the display but also with one or more buttons and or an optical joystick or trackpad. These various user input devices and interfaces may be actuated by the user for example through the application of touch pressure and or directional movement to control the operation of the computing device for example to navigate through graphical user interfaces menu structures and the like to select and initiate application or operating system commands for execution to input data for processing or transmission by the computing device or to change settings on the computing device.

On selection that time and date can then be written to the scheduler data store for subsequent retrieval. By providing independently scrollable fields it is possible for a user to select days independently of the time and hour. This is particularly useful where for example the user wishes to arrange a meeting for a particular time and has flexibility on the dates or indeed where the user has flexibility on the time but wants to vary the date. The scrolling of the fields will bring different data into view within the area . The user may touch and scroll through any one of the three fields and if scrolling through the time and date fields it is evident to the user that the date field stays stationary allowing the user to select different time options within a selected date. This can be visually relayed to the user by different coloring contrasts or the use of different identifiers. In the example of a horizontal box or window is generated about the selectable data entry fields to define what will ultimately become the user entry data window. This user data entry window in the examples of and allows a user to select through a series of possible START time from an initial data set of August 28 at 10 o clock and 20 minutes as shown in to the finally selected time of August 28 at 15 00 shown in . It is analogous to the selection window of a slot machine whereby three carousels may rotate relative to the window but ultimately the determined selection is what is visible within the window .

In the example of the selection is being made under the example of the Start time for a meeting. This is indicated by the Start field displayed in the window .

To assist the user in selection of an appropriate time the present teaching provides concurrently with the display of information related to the scheduler module information retrieved from the calendar module . To achieve this on accessing the scheduler module the present teaching also provides for a retrieval of data from a second data source the calendar data source. This data is time and date related to the data from the first data source .

As is shown in the data from the calendar is then concurrently displayed in the form of a representation of availability within said area . As this data is provided to assist the user in selection of appropriate time to start their meeting the representation of the data is selected in a form that will provide contextual information to a user. The representation of data from the calendar is visible through the data displayed from the scheduler. In the example of the calendar data is provided as a color and is superimposed on those times where the calendar data indicates that there are already appointments or other potential conflicts. In the example of this is in the time slots and .

In this example a single color is used to indicate whether the user of the device has potential conflicts. In other arrangements the device may be configured to access or interrogate calendars of third parties to provide generalized information as to the potential conflict for multiple party events. For example in an intended meeting of two or more persons the device may use a first color for example green where there is no conflict in the diaries of each of the intended parties. A second color for example red may be used where there is actual conflict. A third color for example amber may be used where there is availability for some of the parties or certain categories of the parties but not all. This provision of simultaneous information to the user within as single view obviates the user needing to toggle between the separate calendar and scheduler modules and recall during that toggling or transfer what is the data in each module. The concurrent display of data in a single view from each of the scheduler and calendar data stores reduces the number of times that the scheduler and calendar applications or interfaces need to be activated As a result the power consumption of the device may be reduced.

The active area remains but the data displayed in that area changes. In the example of it will be seen that there is no color overlay or indication of a conflict shown on the detailed dates and times. As a result the user is then provided with explicit information from their calendar that there is no conflicted prior engagements which then allows the user to select a time and date of their choice. Once the user has then made the necessary end time selection in this example August 30 at 18 20 the selection process terminates. The data entered within the START and END windows is then written to the data store associated with the scheduler module.

It will be understood that the concurrent display of scheduler and calendar data per the above examples has presented the calendar information in the form of a color that is overlaid with conflicting appointment times within the scheduler data fields. In other configurations the presence of a conflict could be visually communicated in another way. Examples include the presence of visual indicators that are provided to one side of the scheduler data fields such as a line provided along those times where there are potential conflicts. This may be appropriate in situations for example where there are extended block out periods identified from the calendar data.

The present teaching may also provide levels of granularity as to potential conflict by also highlighting specific minute regions where there is an identified calendar entry which may conflict with the new schedule event. In the examples illustrated the conflict color indicative of a potential clash with a calendar event has been described as being located only over the hour section of the displayed scheduler information. By highlighting the minute region specific time slots within an identified hour may be selectable although the entire hour may not be available. Furthermore highlighting the date field may provide an indication that the entire day is already booked.

It will also be appreciated that where the concurrent display of data from each of the scheduler and calendar may be effected through an overlay of scheduler and calendar data that the present teaching should be construed as so limiting as any arrangement whereby a representation of data from the second data source is simultaneously visible with a representation of data displayed from the first data source should be considered as falling within the scope of the present teaching.

To this end the representation of data from the second data source may be located within a same field of view as a representation of data displayed from the first data source. This could be located to at least one side of a representation of data displayed from the first data source or any other configuration.

It will be further appreciated that the above teaching has described the representation of data from the second data source as a visual representation. It will be appreciated that this concurrent display of information provides the user with an indicator of a potential conflict concurrent with their entry of scheduler events as opposed to advising them after an event has been entered that there is a potential conflict. The benefit of this concurrent warning of a user could be provided in another aspect of the present teaching by an audible indicator derived from data of the second data source. For example the user may wish to enter a scheduler event for a specific time period. The device may be configured on display of the available schedule data entry fields to issue an audible warning that one or more of the presented schedule time slots are not available due to a calendar conflict. In another configuration one or more vibration or other motion indicators could be provided indicative of a potential conflict. For example if the user interface requires a tactile interaction by the user with the computing device the device may be configured to generate a tactile warning to the user on detecting the user wishes to enter a schedule event that conflicts with a previously stored calendar event.

It will be appreciated from the above that the data presented in the area is a subset of the available data that can be accessed by the user. This is typical of a display of a computing device where the dimensions of the display limit the available footprint within which data can be displayed to a user. Typically in such instances a user is prompted that additional data is available by the presence of a scroll bar or other visual indicator which prompts the user to then scroll through the displayed data to change that data which is visible within the window. The presence of a scroll bar or other explicit identifier does however occupy space within the display area which could be otherwise used for data. To address this problem the present teaching provides an alternative indicator to indicate the presence of scrollable data within a display window.

In the example described above in the present teaching this alternative scrolling indicator is provided during the active generation of the graphical user interface on the display of the computing device. While it is particularly useful for the examples of the combined scheduler and calendar information described above it will be understood that the method has application beyond this specific example. shows how such an indicator of the presence of more data than that displayed may be provided to a user of a computing device in accordance with an aspect of the present teaching. The device is configured to populate an area within the display of the computing device with data from a first data source Step . A first set of data is then selected from a first data source Step . This data set is then processed to provide a selection of a subset of that first set of data Step . In rendering the display for presentation of the subset of data the device is configured to provide within the display area a portion of the first set of data Step . This is desirably provided as a moving image whose movement varies the displayed data within the display area. This pre display of a moving image prior to the display of a subset of the data Step indicates to a user of the device that there is more data available than that shown in the final subset.

An implementation of the method of will be described with respect to the specific data example of calendar and schedule data with the understanding that the present teaching should not be construed as being limited to such data set.

In response to an input to the device the device is configured to implement computing processes which will result in using an area of the user interface to display data from a first data source. In this example the data is time and date information from a scheduler module of the device. It is evident from the examples of that the area allows a user to view in full detail the information regarding four horizontal time bar segments shows these as being 18 00 18 10 18 20 and 18 30 of the 30 August. In the examples of three full time segments are identifiable and the lead in and lead out segments are cut off in a fashion similar to them disappearing from view through a window of a slot machine. The present teaching provides an arrangement whereby four appropriate time segments are selected as being intended for presentation within the area . These time segments represent a subset of the overall available time segments that could be presented to a user within the area and are selected on a number of different factors including that based on the determined available space within the area for displaying content of a certain size. It will be understood that these parameters may be user selected. During the rendering of the graphic that will present the ultimate subset the present teaching provides an initial presentation to the user of at least a portion of the first set of data as a moving image within the determined available space .

As is clear from when the user initial clicks or otherwise activates the END icon the displayed data within the active area changes. Initially the END icon moves upwardly within the area towards the START icon with the impression that it is covering the originally present data in the START window. At the same time time and date information within what is ultimately going to form the END window data fields changes. In the example of the user is initially presented with data reflective of August 31 at 19 20 and 19 30 with additional data both leaving and coming into view. This data is part of the overall set of scheduler data. During the migration of the display from START to END this data is cycled through as a moving image to the user until they are ultimately presented what is the intended displayed subset within the determined available space. In this example of this is a set of four data elements centred around a time on August 28 at 16 00 which is a sensible or default starting point for ending an event that is intended to start one hour previously at 15 00.

As the user is presented during this rendering process with a moving image comprising more data than the ultimately generated subset the user is motivated a priori of the generated data window that there is a possibility to access additional data than that initially presented to the user when the data window is ultimately formed. This then provides an impetus to scroll that would not have been present if the window had been rendered through a typical drop down window. The embodiments herein have been described and illustrated primarily in relation to resources such as calendar and scheduler modules may be extended as will be appreciated by those of skill in the art to other resources such as webpages web applications other rich media applications and widgets and to user agents such as browser applications browsers and drop down menus.

As described above when displayed on a computing device not all of the content that may be accessed through the device may be currently visible on the display area of the graphical user interface. To effect selection of a particular data element the present teaching has been described with reference to a user input mechanisms that receives user input through user contact primarily manual manipulation notionally these mechanisms may be considered as input mechanisms for detecting inputs either for cursor based control or for touch based control of the computing device . Cursor based control typically associated with pointing devices such as mice permits the user to control the positioning of a cursor or other sprite displayed in a graphical user interface rendered on the display . When the cursor is positioned hovering over a particular graphical user interface element the input mechanism may be actuated for example by pressing a mouse button to invoke a command associated with that element. Optical joysticks and trackpads may be used for cursor based control. Touch based control typically associated with touchscreen displays permits the user to more directly engage the graphical user interface elements displayed on the display by touching or tapping the surface of the display corresponding to that element. The touchscreen display and its associated controller and processor can be configured to also detect and identify gestures and multitouch input directional input and multiple concurrent touch input respectively .

In a browser or other runtime environment such as those described above user input detected a user event at one or more of the user input mechanisms provided on the device may be passed to the processor for determination of the type of detected input. In the case of directional input received from a pointing device or another cursor based control mechanism such as a trackpad or optical joystick the processor receives raw data concerning the user event such as an indication of the application of external force or contact magnitude directional location timing and or speed information and determines from the raw data what type of user event occurred such as a cursor event mouse event or a touch event which can include both gestures comprising a series of touch events and multitouch input comprising a series of touch events some of which may be concurrent as well as single touch inputs. In the case of a touch event the touchscreen display controller may process the raw data representative of the user input. The result of the processing of the processor and or controller is passed to the current application i.e. the application corresponding to the active screen currently displayed at the device . The taxonomy and models used to define user events and facilitate user input will be known to those skilled in the art. The foregoing embodiments thus provide systems and methods for provide contextual information within a display that facilitates data entry and yet minimizes processor activity.

The systems and methods disclosed herein are presented only by way of example and are not meant to limit the scope of the subject matter described herein. Other variations of the systems and methods described above will be apparent to those in the art and as such are considered to be within the scope of the subject matter described herein. For example it should be understood that steps and the order of the steps in the processing described herein may be altered modified and or augmented and still achieve the desired outcome. Throughout the specification terms such as may and can are used interchangeably and use of any particular term should not be construed as limiting the scope or requiring experimentation to implement the claimed subject matter or embodiments described herein.

The systems and methods data may be stored in one or more data stores. The data stores can be of many different types of storage devices and programming constructs such as RAM ROM flash memory programming data structures programming variables etc. It is noted that data structures describe formats for use in organizing and storing data in databases programs memory or other computer readable media for use by a computer program.

Code adapted to provide the systems and methods described above may be provided on many different types of computer readable media including computer storage mechanisms e.g. CD ROM diskette RAM flash memory computer s hard drive etc. that contain instructions for use in execution by a processor to perform the methods operations and implement the systems described herein.

The computer components software modules functions and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. Various functional units described herein have been expressly or implicitly described as modules and agents in order to more particularly emphasize their independent implementation and operation. It is also noted that an agent module or processor includes but is not limited to a unit of code that performs a software operation and can be implemented for example as a subroutine unit of code or as a software function unit of code or as an object as in an object oriented paradigm or as an applet or in a computer script language or as another type of computer code. The various functional units may be implemented in hardware circuits comprising custom VLSI circuits or gate arrays field programmable gate arrays programmable array logic programmable logic devices commercially available logic chips transistors and other such components. Modules implemented as software for execution by a processor or processors may comprise one or more physical or logical blocks of code that may be organized as one or more of objects procedures or functions. The modules need not be physically located together but may comprise code stored in different locations such as over several memory devices capable of being logically joined for execution. Modules may also be implemented as combinations of software and hardware such as a processor operating on a set of operational data or instructions.

A portion of the disclosure of this patent document contains material which is or may be subject to one or more of copyright design patent industrial design or unregistered design protection. The rightsholder has no objection to the reproduction of any such material as portrayed herein through facsimile reproduction of the patent document or patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all rights whatsoever.

