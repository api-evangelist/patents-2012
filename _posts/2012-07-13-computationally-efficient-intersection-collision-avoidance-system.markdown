---

title: Computationally efficient intersection collision avoidance system
abstract: A back-propagating intersection collision avoidance system is provided. The system can include a first vehicle and a second vehicle, the first and second vehicles each operable to approach an intersection at a definable velocity and acceleration. In addition, the intersection can have a collision zone in which the first and second vehicles will collide if they are present there at the same time. The first vehicle can have a processing unit with a controller and a microprocessor, the microprocessor having an algorithm with a disturbance model. The processing unit is operable to back-propagate from the collision zone a capture set as a function of a disturbance for the first and second vehicles.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08965676&OS=08965676&RS=08965676
owner: The Regents of the University of Michigan
number: 08965676
owner_city: Ann Arbor
owner_country: US
publication_date: 20120713
---
This application is a continuation in part of U.S. patent application Ser. No. 12 796 978 filed Jun. 9 2010 which is incorporated herein by reference in its entirety.

This invention was made with government support under CMMI0854907 awarded by the National Science Foundation. The government has certain rights in the invention.

The present invention is related to an intersection collision avoidance system and in particular an intersection collision avoidance system that has a processing unit with a disturbance model that can back propagate a capture set from a collision zone as a function of a disturbance for a motor vehicle.

Studies have shown that more than 30 of all accidents in the United States occur at intersections. As such the U.S. Department of Transportation has initiated a study into intersection collision avoidance systems and several publications and systems for reducing or eliminating collisions at intersections have been proposed. For example U.S. Pat. No. 7 295 925 discloses an accident avoidance system that includes a positioning system arranged in each vehicle that determines the absolute position of each vehicle and then uses the position information to prevent two or more vehicles from being at the same place at the same time. However such a system involves determination of the absolute position of a first vehicle and a second vehicle information regarding which lane the first and second vehicles are in weather conditions accident conditions and the like. As such a relatively complex system is disclosed and an intersection collision avoidance system that is relatively simple and yet reliable would be desirable.

A back propagating intersection collision avoidance system is provided. The system can include a first vehicle and a second vehicle the first and second vehicles each operable to approach an intersection at a definable velocity and acceleration. In addition the intersection can have a collision zone in which the first and second vehicles will collide if they are present there at the same time.

The first vehicle can have a processing unit with a controller and a microprocessor the microprocessor having an algorithm with a disturbance model. The processing unit is operable to back propagate from the collision zone a capture set as a function of a disturbance for the first and second vehicles. The processing unit can also determine if the first and second vehicles are within the capture set and if not determine if the first and second vehicles will enter the capture set. In the event that the first and second vehicles are not in the capture set the processing unit can also instruct the controller to accelerate or de accelerate the first vehicle in order to prevent the first vehicle from entering the capture set.

The processing unit with the disturbance model can calculate a disturbance as a function of uncertainty from actuator delays for the first vehicle actuator delays for the second vehicle discrete time steps used by the microprocessor and the algorithm communication time delays vehicle dynamics for the first vehicle and or vehicle dynamics for the second vehicle. In some instances the processing unit with the disturbance model calculates a worst case scenario for the first vehicle and or the second vehicle. Furthermore the processing unit with the disturbance model can also calculate a disturbance even though the current dynamics of the first vehicle are not known entirely the current dynamics of the second vehicle are not known entirely the current state of the first and second vehicle is not known due to communication delays the current state of the first and second vehicle is not known due to sensor noise and or the current state of the second vehicle is not known due to the fact that the second vehicle is a non communicating vehicle. In the event that the second vehicle is a non communicating vehicle the processing unit with the disturbance model can calculate or model the second vehicle as a complete disturbance.

The present invention discloses a back propagating intersection collision avoidance ICA system for preventing two or more vehicles from colliding at an intersection. The ICA system can calculate predicted positions of the two or more vehicles in the near future and both the current and future positions can be broadcast to surrounding vehicles using vehicle to vehicle communication. For each vehicle a set of states for example position speed acceleration and the like where a collision is imminent can be identified using state information for a local vehicle a remote vehicle and a known collision zone for the intersection. If the current states of the vehicles are determined to be in danger of entering the collision zone the ICA system can control the vehicles to perform evasive driving maneuvers and or alert the drivers.

The back propagating ICA system can include an intersection with a known collision zone a first vehicle and at least a second vehicle. The first vehicle and the second vehicle are each operable to approach an intersection at a definable velocity and acceleration and the collision zone is defined as an area of the intersection in which the first vehicle and the second vehicle will collide if present therewithin at a same time.

The back propagating ICA system can also include a microprocessor with an algorithm the microprocessor with the algorithm operable to back propagate from the collision zone a capture set as a function of a position velocity and acceleration of the first vehicle and the second vehicle. The capture set defines a plurality of locations that if occupied by the first vehicle and the second vehicle results in the two vehicles entering the collision zone at the same time. The microprocessor with the algorithm can also determine if the first vehicle and the second vehicle are within the capture set and or if the first vehicle and the second vehicle will enter the capture set during a predetermined time step given the position velocity and acceleration of each of the vehicles.

A controller can also be included the controller being in communication with the microprocessor and operable to afford acceleration and or de acceleration of the first vehicle and or the second vehicle. In this manner the controller can afford for the first vehicle and or the second vehicle to take an evasive driving maneuver and thereby prevent the vehicles from entering the collision zone at the same time.

The capture set can be an overlap of a first vehicle capture set and a second vehicle capture set. The first vehicle capture set defines a plurality of locations as a function of the position velocity and acceleration of the first vehicle that guarantee the first vehicle will enter the collision zone within a first range of time. Likewise the second vehicle capture set defines a plurality of locations as a function of the position velocity and acceleration of the second vehicle that guarantee the second vehicle will enter the collision zone within a second range of time. It is appreciated that the first range of time and the second range of time can at least partially overlap each other and thus the first vehicle and the second vehicle are prevented from entering the collision zone of the intersection at the same time.

In some instances the microprocessor with the algorithm can be attached to at least one of the vehicles. In addition the microprocessor can be a first microprocessor and a second microprocessor which may or may not be attached to the first vehicle and the second vehicle respectively. In such an instance each of the microprocessors is operable to back propagate from the collision zone a capture set for the respective vehicle as a function of the vehicle s position velocity and acceleration relative to the intersection. In addition each of the microprocessors is capable of determining if the respective vehicle is within the respective capture set and or if the respective vehicle will enter the capture set within a given predetermined time period. The first microprocessor can be in communication with the second processor via vehicle to vehicle wireless communication that affords for the position velocity and acceleration of each vehicle to be shared with the other vehicles.

The controller can include a first controller and a second controller that may or may not be attached to the first vehicle and the second vehicle respectively. The first controller can be in communication with the first microprocessor and be operable to afford for acceleration and or de acceleration of the first vehicle while the second controller can be in communication with the second microprocessor and be operable to afford for acceleration and or de acceleration of the second vehicle. In this manner if the microprocessor or the first microprocessor and the second microprocessor determine the first vehicle and or the second vehicle are not currently within the capture set but will enter the capture set without evasive driving maneuvers the controller or the first controller and the second controller can afford for acceleration and or de acceleration of the first vehicle and or the second vehicle. In the alternative if the microprocessor or the first microprocessor and second microprocessor determine the first vehicle and the second vehicle are currently within the capture set the driver of each vehicle can be alerted that a collision in the intersection is imminent. Upon being alerted it is appreciated that a driver can take additional evasive driving maneuvers in order to avoid a collision in or at the intersection.

A process for avoiding a collision between at least two vehicles approaching an intersection is also disclosed. The process includes providing an ICA system for example as described above the ICA system back propagating a capture set as a function of a position velocity and acceleration of a first vehicle and at least a second vehicle that are approaching the intersection. The process also includes determining if the first vehicle and the second vehicle are within the capture set and if not determining if the first vehicle and the second vehicle will enter the capture set within a predetermined period of time. In the event that the first vehicle and the second vehicle are within the capture set the process includes warning the driver of the first vehicle and or the second vehicle that a collision at the intersection is imminent. In the alternative if the process determines that the first vehicle and the second vehicle are not within the capture set but will enter the capture set within the predetermined period of time the ICA system can afford for acceleration and or de acceleration of the first vehicle and or the second vehicle. It is appreciated that the acceleration and or de acceleration can provide evasive maneuvering of the vehicle s in order to avoid a collision at the intersection.

In order to aid in the teaching of the invention and yet not limit its scope in any way one or more embodiments of the ICA system and or ICA system components are described below.

An ICA algorithm used in combination with an ICA system affords for control of one or more vehicles to avoid a variety of vehicle collision scenarios at intersections. For example the ICA algorithm can be used to avoid a two car collision at a T style intersection with such a scenario used below for teaching purposes.

Collisions are predicted based on a known collision zone and vehicle position information shared among vehicles approaching the intersection via vehicle to vehicle wireless communication. For the purposes of the present invention the term collision zone is defined as an area of an intersection where collisions are likely to occur if and or when two or more vehicles are present at the same time.

The ICA algorithm exploits structural properties of road systems such as 1 on a given path a vehicle can move in only one direction 2 for a fixed path a higher control force will lead to higher longitudinal position and speed along the path also known as partial ordering and 3 for a fixed path and control force two vehicles one in front of the other will remain in that order if the two vehicles maintain the same speed and wheel torque also known as order preserving dynamics .

The ICA algorithm is computationally efficient in that it is linear in complexity with the number of state variables. In addition the ICA algorithm is not conservative in that the algorithm commands control of the vehicle only when absolutely necessary. It is appreciated that the ICA algorithm can be used with a safety multi agent research test bed SMART system the SMART system platform allowing access of vehicle state information and sharing of the information among vehicles.

Time used by the ICA algorithm is represented in two different forms in order to reflect that while time is continuous it can be discretized for calculation by the microprocessor. The symbol k is used where discrete time steps are explicitly required and the symbol t is used in more theoretical examples where a continuous variable is appropriate. As such Equation 1 can be used for time calculations 0 1 2 3 1 where T is a predefined time step for example 100 milliseconds and tis an initial time where calculations data retrieval etc. are initiated.

Since the ICA system operates with at least two vehicles one vehicle is considered to be local L while the other vehicles are considered to be remote R .

The ICA system incorporates a longitudinal displacement along a predefined path for example a road lane to represent a vehicle position. It is appreciated that such a representation of vehicle position is a simplification of traditional collision detection which typically uses universal transverse Mercator UTM coordinates. The longitudinal displacement r of a vehicle i is equated to rwhere i is a subset of L R. The speed s and acceleration a are also defined along the predefined path with sdesignating the longitudinal speed of vehicle i and adesignating the longitudinal acceleration of vehicle i. Again i is a subset of L R.

A vehicle can have a current torque value where a negative torque is for braking and a positive torque is for acceleration. Each vehicle can have a range of allowable torque represented by a maximum and minimum torque value. The symbol represents a current torque value of vehicle i represents a minimum torque value of vehicle i and represents a maximum torque value of vehicle i. Similarly the vehicles have a minimum and maximum allowable speed with a minimum speed value set to be greater than zero and a maximum speed value set such that the speed of the vehicle is not uncomfortable and or unsafe for the driver. The symbol srepresents the minimum longitudinal speed of vehicle i and srepresents the maximum longitudinal speed of vehicle i.

Regarding a collision zone illustrates an intersection scenario where the ICA system can be applied. The collision zone also known as the bad set B can be represented by two longitudinal displacement intervals one for each vehicle where a collision will occur if both vehicles are within their interval at the same time. As such there is a collision if and only if at least two vehicles are in the bad set B simultaneously. The bad set can be defined for each vehicle by two longitudinal displacement values Land H where Lrepresents a lower bound of displacement and Hrepresents an upper bound of displacement for vehicle i.

The series of rectangles propagating back towards the origin of the graph represents back propagation steps from the bad set as a function of time. The capture set is the union of the back propagation rectangles and the bad set. As stated earlier the capture set represents all system configurations from which at least two vehicles are guaranteed to enter the bad set B regardless of control action taken.

For example consider a vehicle traveling at a speed along a straight line toward a wall. Assuming x to be a distance of the vehicle along the straight line from the wall and assuming that the vehicle can brake given any pair of distance and speed x and a maximum feasible braking if x is too small and is too high then even with maximum allowed braking the vehicle will be unable to avoid a crash with the wall. As such the set of all such pairs of distance and speed for which no control input exists that will avoid a crash with the wall is a capture set C for such a simple example and the role of the ICA system is to keep the vehicle out of the capture set and thereby avoid a crash of the vehicle with the wall by braking the vehicle before it is too late.

Referring back to the intersection of the bad set can be represented as shown in Equation 2 and the capture state can be stated to be all states that lead to B. 2 In addition a collision occurs if there is a time for which both vehicles are within the bounds of their respective bad sets represented mathematically as shown in Equation 3. and 3 It is appreciated that Equation 3 can be summarized by Equation 4 with the combined vehicle states r t being within the overall bad set B. 4 Algorithm

The ICA algorithm can perform four general steps 1 state estimation 2 back propagation 3 collision detection and 4 control. Avoiding or preventing a collision can be summarized as avoiding the capture set C. If a vehicle avoids the capture set it will not enter the bad set B and thus avoid a collision.

The algorithm can be applied to systems defined by 5 where equals the states U equals the inputs O equals the outputs f x u equals a piecewise continuous vector field and h equals an output map. In addition Equations 6 14 must hold and f x u must be at least piecewise continuous.

The ICA system uses a vehicle model to determine one or more states that will lead the vehicle to be within the capture set as well as to estimate the vehicle state in a subsequent step. A generic vehicle model can be a function of two parameters one parameter specialized or oriented towards speed z and one oriented towards acceleration w . The generic model considers three arguments 1 T 2 maximum speed of the vehicle and 3 minimum speed of the vehicle. It is appreciated that the generic model requires the vehicle speed to increase according to the acceleration unless the vehicle is outside a valid speed range. Expressed mathematically Equation 17 provides a relationship for the generic model with an additional term added to the function F to add uncertainty to the algorithm.

A specialized vehicle model as shown in the expressions below consists of two parameters a torque to acceleration factor m and a torque to acceleration offset m are used. It is appreciated that a more complicated vehicle model can be used with only a linear increase in computational complexity with the number of variables. The longitudinal displacement r speed s and acceleration a are defined for the local vehicle and a remote vehicle. The local vehicle and the remote vehicle can use the same model with the possibility of different vehicle model parameters. 1 18 1 19 20 where min a a aand i L R

It is appreciated that there are two distinct classes of conflict detection and resolution methods forward methods and backward methods. Forward methods predict a conflict in the future by propagating forward the current system state and checking where the system leads to conflict. In contrast backward methods compute online a set of all system configurations that will lead to a conflict. As such backward propagation methods require a predetermined set of states that are collisions for example the bad set. It is appreciated that an advantage of backward propagation methods is that such methods can provide control algorithms for conflict resolution that are mathematically guaranteed to be safe .

A recursive method Sis defined for calculating a current speed based on a speed at a previous time step and a current acceleration see Equations 21 and 22 and is used in back propagation to determine a distance the vehicle travels in one time step. 21 1 2 22 

The recursive method uses the following expressions with two methods defined for calculating a lower and upper bound of possible vehicle state sets at a previous time step. The first method is represented by Equations 23 26 and the second method represented by Equations 27 32. In particular for each value of h a new frame in the set is calculated 

Next a method Ccan be defined to calculate a capture set for a pair of vehicle states. Starting at the bad set that is L Land H H the method Ccreates sets that ultimately form the capture set. Mathematically the method Ccan be expressed by Equation 33 below.

Regarding collision detection the ICA algorithm checks and or determines if current vehicle states are in the final capture set C. Starting at the known bad set B and working backward the ICA algorithm iterates over all predefined times for the final capture set C and checks to determine if a vehicle state at that time is within the boundaries of the set. Mathematically the algorithm incorporates Equation 37 shown below. with and and 37 

It is appreciated that since a current vehicle state membership in the final capture set C is an exit condition for the back propagation steps calculations the check or analysis for if a vehicle state is within the boundaries of the capture set can already be completed by the back propagation procedure. Stated differently the back propagation stops or exits either if the current vehicle state is in the last generated frame or if the last generated frame is past the current vehicle state.

If the state of the vehicle is inside the frame for both Cand C it is known that the vehicle states are within the final capture set C. In addition this check analysis can be performed twice once for the capture set of the current vehicle state and once for the capture set of the next predicted vehicle state. The results of both checks can be used to determine a necessary control action and combined with a current state provide information as to whether or not a vehicle is approaching a collision scenario or is resolving a collision scenario.

A vehicle is considered to be at a boundary of the final capture set when the current state of the vehicle is outside the capture set and the next state of the vehicle is inside the capture set. In such an instance if no control is actuated the vehicle will enter the capture set in the next iteration. As such the ICA system allows for a non conservative control response in that the vehicle is controlled only when absolutely necessary. Stated differently if the current state of the vehicle is not in the capture set and the next state predicts the vehicle will not be in the captures set then the ICA system does not actuate control of the vehicle.

In the alternative the vehicle can be considered to be at the boundary of the final captures set when the next N states of the vehicle are predicted to be outside the capture set. In such an alternative it is appreciated that if the vehicle is predicted to be inside the capture set within the next N states then control is actuated. It is further appreciated that N can be an integer for example and for illustrative purposes only an integer equal to or less than 3 equal to or less than 5 or equal to or less than 10. It is still further appreciated that the prediction of the next N states of the vehicle can afford for a robust ICA system with respect to wireless communication delays.

A controller affords for one or more of the vehicles to accelerate or brake in order to avoid a collision. The controller also preserves liveliness of the system by observing minimum speeds for each vehicle. In the event that a current vehicle state and a next vehicle state lie outside of the capture set then any control input is allowed. In the alternative if a current vehicle state lies outside of the capture set but the next vehicle state is within the capture set the relationship between the current position and the capture set can be used to determine which vehicle should accelerate and which vehicle should brake.

Five cases handled by the control algorithm are illustrated in Table 1 and . The torques defined for control output are wheel torque and as such may be accomplished either by brake torque or engine torque. In addition any control can be acceptable as long as the control is measurable controllable and order preserving with the torque. Case 1 illustrates a scenario where braking is applied to the local vehicle and acceleration applied to the remote vehicle. Case 2 illustrates where acceleration is applied to the local vehicle and braking is applied to the remote vehicle.

Regarding Case 3 the algorithm affords for the vehicle with a lower identification ID to brake while the vehicle with a higher identification ID to accelerate. It is appreciated that the ICA system can afford for confirmation via wireless communication that each vehicle will take opposite control actions e.g. one vehicle will brake while another vehicle will accelerate before control is actuated. In this manner the ICA system can be robust to sensor uncertainties.

For Case 4 both the local vehicle and the remote vehicle are within the capture set and thus no control can be made to prevent the vehicles from entering the bad set B. As such no control of the vehicle is asserted by the ICA system but a strong warning is provided to the drivers. Finally for Case 5 neither vehicle is within the bad set and as such control is not necessary.

It is appreciated that a more traditional dynamic model can be used to determine acceleration of a vehicle rather than the vehicle model parameters mand m. Such a traditional model is provided by Equation 38 where the wheel torque is simply the product of the engine torque and the ratio of the current gear for acceleration or the pressure of the brakes times their effectiveness for de acceleration 1 38 where is wheel torque m is vehicle mass is the density of air Cis the drag coefficient A is the projected front area of the vehicle ris the radius of the vehicle wheels and is the vehicle speed. As such a map of engine torque to wheel torque can be provided if the current gear and brake pressure are known. The gear is determined by the speed however there can be overlap between gears and as such no one to one mapping between velocity and gear can be provided. In such a case g can be used to represent the gear at a certain velocity b can be used to represent brake pressure and p can be used to represent throttle pedal percentage. With such definitions Equations 39 and 40 provide expressions for torque at the wheels of the vehicle. In this manner the ICA system can map maximum torque and minimum torque to a throttle pedal percentage and a brake pedal percentage. 39 40 

As stated above two vehicles approaching an intersection will result in a collision if both vehicles occupying the collision zone of the vehicle at the same time. In order to prevent such an event from happening the ICA system gathers data for the current state of the local vehicle converts it to longitudinal displacement and speed and then calculates the next predicted position using the vehicle model. Thereafter the system calculates the capture set for the next predicted position which is the intersection of the capture sets of the two vehicles. If the next position is within the capture set the system generates a capture set for the current position. If the current position is not in the capture set the system recognizes that one or more of the vehicles is or will enter the set if no control is provided.

The ICA system also determines if the local vehicle is entering the capture set from below and if so applies a maximum torque or if the local vehicle is entering the capture set from above applies a minimum torque. In an alternative arbitrary control actuation can be performed by determining which vehicle should exhibit minimum torque and which vehicle should exhibit maximum torque in order to avoid a collision. If the current position is within the capture set no control is provided but the driver is warned of an imminent collision.

Preferably both vehicles have access to the same data from every iteration performed by the system and identical computation is performed by each microprocessor of the vehicles. However due to communication delays the computations can actually be up to three iterations apart and in order for the vehicles to agree on their control methods commands are broadcast and agreed upon before execution.

Turning now to a schematic representation of boundaries for a SMART system is shown. It is appreciated that the parameters capabilities and the like of the SMART system are known to those skilled in the art and thus not discussed in detail here. Within the outer rectangle are different high level functionalities or use cases indicated within the horizontal ovals. External to the rectangle are external actors that interact with the SMART system via the use cases. For the purposes of the present invention the term use case is defined as a sequence of actions that provide something of measurable value to an actor is drawn as a horizontal ellipse and or oval and is specified using upper camel case and lower camel case following Java like naming convention. The term actors is defined as a person organization and or external system that plays a role in one or more interactions within the SMART system and can be drawn as stick figures but are schematically shown as objects in .

The external actors of a driver a vehicle surrounding vehicles and a roadside infrastructure interact with the use cases informing the driver InformDriver and warning the driver WarnDriver and the like as shown in the figure. The SMART system architecture distributes the responsibility of implementing the functionalities or use cases among an Application Layer a Vehicle Layer and a Communication Layer which are indicated by the internal rectangles shown in . It is appreciated that the ICA algorithm belongs to the application layer.

The ICA system can have a plurality of assumptions and limitations as shown in Table 2 below. It is appreciated that the assumptions and limitations are included as nonfunctional requirements since some may or may not be relaxed or extended when desired.

For example for the present embodiment assumption AS is that the ICA system supports no more than two vehicles simultaneously. This assumption can be relaxed such that more than two vehicles can be supported by the ICA system disclosed herein. Referring now to Table 3 a series of functional requirements that specify what the ICA system does is shown. In contrast Table 4 provides a listing of non functional requirements that specify constraints placed on the ICA system.

As stated above a use case is a precise statement of a piece of system functionality and a collection of key use cases can be used to specify requirements on system functionalities. As such provides a schematic representation of the use cases employed by a vehicle to detect and respond to an upcoming collision and or to continue uninterrupted if a collision is not predicted.

It is appreciated that the remote vehicle and local vehicle actors can be connected with the collision avoidance use cases through the vehicle layer and the communication layer as illustrated in . Table 6 provides a list of specifications for the use cases illustrated in . As shown in this table use cases of no collision avoidance control needed NoCollisionAvoidanceControlNeeded collision avoidance of the local vehicle by acceleration CollisionAvoidanceLocalVehicleAccelerate collision avoidance of local vehicle by braking CollisionAvoidanceLocalVehicleBrake collision avoidance by arbitrary control CollisionAvoidanceArbitraryControl and collision avoidance of local vehicle by driver interruption CollisionAvoidanceLocalVehicleDriverInterrupt are possible use cases that can be employed by the ICA system.

Referring to boundaries for vehicle to vehicle communication are shown with use cases of receive remote data send local data missing local measurement data when predicting missing local measurement data when sending missing remote data and expired remote data being employed by the local vehicle and the remote vehicle actors to access the vehicle state broadcast the vehicle state via the vehicle to vehicle communication and to gather information from surrounding vehicles. Both the local vehicle and the remote vehicle can be robust to missing or incomplete data from vehicle measurements or remote vehicles. Table 7 provides a list of the use cases shown in .

Table 8 provides a requirement traceability matrix used to check consistency of the requirement specification. If the specification of the requirements and the use cases are properly performed there is at least one use case per functional requirement and vice versa. Stated differently the functional requirements can be traced back from the use cases.

The Application Layer Vehicle Layer and Communication Layer with the various use cases afford for the ICA system to detect upcoming collisions between at least two vehicles approaching an intersection and control one or more of the vehicles to take evasive action in order to avoid the collision. For example the microprocessor with the algorithm can load or already have data and or information such as model parameters for the local vehicle engine torque limits for the local vehicle and the like and such information can be updated through the vehicle layer. Vehicle measurements can be retrieved for a given time and then updated at predetermined time intervals. If any measurement is unable to be read the algorithm can set such a value as unusable and immediately return for an update.

Using the engine torque limits longitudinal displacement and speed a vehicle path can be calculated for a current time and predicted for a future time. The algorithm can store the displacement and speed data and then initiate a collision detection calculation.

The collision detection calculation can include the calculation or construction of a capture set for current vehicle states and a capture set for predicted vehicle states. In addition a collision zone of the intersection can be loaded and or already stored within the microprocessor and whether or not the vehicle is within its capture set can be determined. If the vehicle is determined not to be within the capture set for its current vehicle states whether or not the vehicle will enter the capture set for the next predicted state is determined. If the vehicle is predicted to be within the capture set for the next predicted state then the algorithm determines whether the vehicle should brake accelerate or do nothing in order to avoid a collision with a remote vehicle traveling towards the intersection.

For example the algorithm can instruct the controller to execute a torque value on the vehicle. If the torque value is positive acceleration is required whereas if the torque value is negative braking is required. In the event that the ICA system determines that both the local vehicle and at least one other remote vehicle are within the capture set then any control will be insufficient to prevent both vehicles from entering the collision zone and a severe collision warning can be provided to the drivers of the vehicles.

The ICA system with the algorithm can also collect and prepare data to be transmitted to a remote vehicle using vehicle to vehicle wireless communication. The data can be sent at a frequency defined by the ICA system for example every 100 milliseconds. It is appreciated that the data can include the vehicle state information for the local vehicle and once it has been transmitted and or sent such vehicle state information can be updated and transmitted again. In this manner the latest vehicle state information for the local vehicle is transmitted out to remote vehicles.

It is appreciated that the remote vehicles can do the same i.e. send its vehicle state information to the local vehicle. The ICA system can afford for receiving of remote data and use the remote data to update the construction and or calculation of the capture set. In some instances the ICA system interacts with the vehicle layer using the ICA local vehicle class. This class creates standard vehicle measurements to keep track of the vehicle state can be the exclusive link to the communication layer and can collect and store remote vehicle state information collected via vehicle to vehicle communication.

An ICA application class can be a central coordination point for all of the applications functions. The ICA application class can manage updating and sending of local vehicle state information and can determine how often the ICA algorithm should be executed. For example the ICA application class can revolve around an application thread that repeats a primary loop every 100 milliseconds. In some instances the local vehicle state information can be updated twice per primary loop once when executing the ICA algorithm and once before broadcasting the vehicle state information over the communication layer. In this manner the most up to date possible vehicle data can be used in every calculation.

ICA application classes related to gathering and manipulating of vehicle states can include an ICA vehicle abstract class an ICA local vehicle class an ICA remote vehicle class and or ICA remote vehicles class. The ICA vehicle abstract class can gather common functionality of the local and remote vehicles that run the ICA system and an ICA vehicle use case can be constructed from local vehicle measurements or from data received via vehicle to vehicle communication. The ICA algorithm can then access the vehicle state information of the two vehicles of interest exclusively by public methods of the ICA vehicle abstract class. It is appreciated that the ICA vehicle abstract class may or may not expose the source of the vehicle state information such information being irrelevant when detecting collisions.

Examples of use cases within the ICA vehicle abstract class can include getting engine torque limits getting vehicle model parameters getting an ID of each vehicle getting the prescribed path of the vehicle getting the current longitudinal displacement along the prescribed path getting the longitudinal speed along the prescribed path getting the predicted displacement of the vehicle on the prescribed path for a predetermined time period in the future getting the predicted speed for the vehicle on the prescribed path for a predetermined time period in the future updating the longitudinal displacement speed etc. for the vehicle and determining if the last update of data was successful or not.

The ICA local vehicle class can determine the current vehicle state by creating and querying vehicle measurements. In addition this class can manage the sending out of local vehicle data via the communication layer.

The ICA remote vehicle class can receive information from one or more remote vehicles and afford for the use of this data by the ICA algorithm.

The ICA algorithm can also have a number of classes illustratively including an escape controller class a capture set slice class and the like. The escape controller class can run or execute the ICA algorithm on one or more vehicles in order to detect future collisions as discussed above and if necessary afford for control of the vehicles in order to avoid a collision. A use case within the escape controller class can obtain updated state information for both the local and remote vehicles and a use case of calculation control can calculate and return the amount of torque needed to avoid a collision.

The capture set slice class can generate the capture set for two or more vehicles and a final capture set in order to determine if the current vehicle state is on a course for collision. It is appreciated that the capture set slice class can implement the ICA algorithm. The capture set slice class can also use the collision zone to determine if the local and remote vehicles are headed for a collision the collision zone stored in a configuration file on both vehicles.

In some instances if not all the collision zone should match for both vehicles. In addition the collision zone can be received via roadside infrastructure with or without a sanity check being performed in order to make sure both vehicles are operating with the same collision zone.

In another embodiment of the present invention assumptions for the above disclosed embodiment s are relaxed and a more versatile system is provided. In particular the following assumptions are not assumed to be accurate 

These assumptions or the lack thereof are handled with the use of a disturbance model where the system definition tuple is given by X U f where the set defines the admissible disturbance inputs and S defines a set of admissible disturbance signals. In addition the vector field is extended to accept a disturbance input given by f X U X which allows a disturbance to affect the evolution of the two vehicle system. The flow of the system i.e. of the two vehicles is also modified to include a disturbance input given by R X S U S X which hereafter is denoted as t x u for the time t R initial condition of x X an input signal of u S U and a disturbance signal of S .

In addition to the above the recursive method Sis redefined for calculating a current speed based on a speed at a previous time step and a current acceleration see Equations 41 and 42 and is used to in back propagation to determine a distance the vehicle travels in one time step. 41 1 2 42 

In addition the recursive method uses the following expressions with two methods defined for calculating a lower and upper bound of possible vehicle state sets at a previous time step. The first method is represented by Equations 43 46 and the second method represented by Equations 47 52. In particular for each value of h a new frame in the set is calculated.

Given the presence of one or more disturbances the capture set can be defined as the largest set such that given any input signal there exists a disturbance signal and time such that the flow of the system enters the bad set B. This can be mathematically defined by and such that 53 It is appreciated that the inclusion of one or more disturbances affords for the ability to treat a non communicating vehicle system identification errors communication delays and the like.

The embodiments disclosed above also assumed that the vector field f x u was known within the computation of restricted capture sets. However in some instances it can be desired to model the system as a nonlinear hybrid system composed of cascaded delay differential equations that can account for actuator delays and partial differential equations from combustion timed discrete event systems that account for the use of a computer system hybrid automata that accounts for transmission delays and a parameter varying nonlinear mechanical system that accounts for vehicle dynamics. Such uncertainties can be extremely complex if not impossible to model however the inventive ICA system disclosed herein accounts for such uncertainties by introducing disturbance inputs into the system.

Not being bound by theory the ICA system can be correctly or adequately modeled with the consideration of the dynamics under the control of input signals uand usince the capture set can be computed as the intersection of two restricted capture sets under or within these inputs e.g. see Equation 43 . Furthermore the inventive ICA system affords for a model that can be experimentally computed and loaded into vehicle configuration files within the processing unit.

Given a fixed input U the order preserving properties of the ICA system allow modeling of the dynamics within the differential inclusion and taking into account disturbances as 56 where xdenotes velocity. It is appreciated that the dynamics f x and f x can be experimentally determined by taking or determining a set of data trials from various initial conditions and taking a worst case performance. For example and for illustrative purposes only provides a graphical representation in which the solid horizontal lines depict a vehicle s slowest acceleration as a function of velocity for a given input uand provides a graphical representation in which the solid line depicts the vehicle s slowest de acceleration as a function of velocity for a given input u. By virtue of the order preserving properties of the vector field with respect to disturbance input and state the upper and lower bounds of the bad set B can be integrated backwards under the upper and lower bounds of the differential inclusion x using a slightly modified linear complexity algorithm to construct the capture set slice . Under this capture set slice can be used to construct a capture set under or using the presence of disturbances. Thereafter control can be applied in the same manner as the ICA system disclosed above.

Regarding the assumption that the current state is always known on board for both vehicles it is appreciated that communication between both vehicles and or communication between a given vehicle and a roadside structure can introduce delays and the construction of the state x X will be made using old information data. However the inventive ICA system incorporates this state uncertainty by assuming the current state is inside the interval set circumflex over x t X hereafter referred to as the current state uncertainty. As such the model has t x u circumflex over x t for all t R.

With the above current state uncertainty accounted for the dynamic control problem i.e. the imperfect state rather than a static control problem i.e. perfect information can be solved. In particular a separation principle exists with respect to estimation and control and thus a control problem can be independent from an estimation problem. Thus and similar to a case where perfect information is assumed a safety control is identified and based on a capture set defined over all sets of initial conditions and the capture set C is defined as a set of sets of initial conditions A X such that given any input applied to the system there exists an initial condition x A disturbance S and a time t R such that flow of the system enters the bad set B. Mathematically this is defined or given as and such that 57 which affords computation by back propagating the bad set B with input fixed under the differential inclusion generated by the set of disturbances. Stated differently a restricted capture set for a fixed input can be computed by and such that 58 and the capture set can be determined as and 59 Given the order preserving properties of the system dynamics with respect to input and disturbance further affords for the construction of a linear complexity algorithm with respect to the state of the system in order to compute each restricted capture set C. As such a control map can be a set valued map G P X U that accepts sets of arguments rather than only a given state. Furthermore the control chosen can be the least restrictive and thereby guarantee a safety specification is met. In fact a safety specification can be interpreted in terms of an escape set P X which is defined as a set of sets of initial conditions such that safety can be maintained with respect to the bad set B. Mathematically this can be given as 60 where 61 

Given that the dynamic control problem has been solved the state estimation problem can also be solved to accommodate a communication delay. In particular a remote vehicle information received by a local vehicle can be by the tuple x t F t where x Xis the remote vehicle dynamic state tis the time stamp for the universal time at which a message was sent and a set valued signal of the future dynamics F R P X which is assumed to contain remote dynamics during a transmission time. Stated differently f x u F for all time t t . In addition a current remote state uncertainty can be calculated as 62 where t is a current time for a local vehicle which is assumed to be greater than a remote time stamp t. As such the following inclusion must always hold 63 It is appreciated that this can be the main source of state uncertainty for the ICA system.

In the event that one of the vehicles is a non communicating vehicle the non communicating vehicle can be modeled with all inputs replaced with disturbances. Stated differently the non communicating vehicle is modeled as the tuple

Regarding algorithmic implementation a summary of the algorithmic tools used to compute the restricted capture is provided. In particular this is accomplished through a linear complexity algorithm in terms of state dimension 3 . The algorithms are implemented on board a vehicle computer and thus use a discrete time system model to numerically integrate the dynamics. The discrete time flow of this system is denoted as X S U S D X with a step size T 0 and the discrete time flow is generated by the forward Euler approximation of the continuous time dynamics which can be mathematically described by 1 1 1 66 With an initial condition of 0 x u x and sampled signals u n u n T and n n T .

Rather than explicitly computing the restricted capture set C we compute a slice of the restricted capture set denoted tilde over C X corresponding to the current vehicle velocity. Due to the order preserving properties of the dynamics with respect to state and input and the structure of the bad set B X the restricted capture set slice is computed through back propagation of the upper and lower bounds of the bad set i.e. L H X. Specifically the algorithm CaptureSetSlice circumflex over x u uses the sequences L m x u and H n x u which are given by 67 where d t d d and d t d d for all t . The restricted capture set slice Ccan be written as

If the state uncertainty circumflex over x is an interval set we can conclude non empty intersection of the capture set with the state uncertainty by using the equivalence . 70 

The closed loop implementation of the feedback set valued map 12 in discrete time is provided in Algorithm 3.6 from 3 where u FeedbackMap circumflex over x n 1 circumflex over x n .

The invention is not restricted to the embodiments illustrative examples and the like described above. The embodiments examples etc. are not intended as limitations on the scope of the invention. Methods processes systems and the like described herein are exemplary and not intended as limitations on the scope of the invention. Changes therein and other uses will occur to those skilled in the art. The scope of the invention is defined by the scope of the claims.

