---

title: Method and aparatus for presence based resource management
abstract: Methods and apparatus provide resource authorization based on a computer's presence information. Presence information may include information relating to a computer's operating environment. In some implementations, a presence detector on a computer determines presence information and provides the information to a resource manager. The computer may then generate a resource access request. A resource manager may then determine whether the resource request is authorized based, at least in part, on the presence information. The resource manager then responds to the resource access request, either granting or denying the request for resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09117054&OS=09117054&RS=09117054
owner: Websense, Inc.
number: 09117054
owner_city: San Diego
owner_country: US
publication_date: 20121221
---
This disclosure relates to managing computing resources based on presence information. Specifically methods and apparatus for managing access to computing resources by considering a computer s operating environment and interactions with one or more users are disclosed.

The security risk to corporate electronic assets is evolving due to several industry trends. First the use of mobile devices such as smart phones is being widely adopted across the business community. As they adopt them the users of mobile devices expect to use those devices to perform many of their day to day business processes. For example smart phones are now used to access corporate email systems and other critical business systems that contain potentially vast amounts of sensitive information. This sensitive information may include for example health information PHI personally identifiable information PII financial information and confidential intellectual property. The existence of this sensitive information on mobile devices makes the information susceptible to data losses for example in cases in which the device is lost or stolen.

While the use of mobile devices increases the risk to corporate data generally the risk may be based on how the mobile device is being used. For example mobile devices located in certain regions or countries may present an increased risk to corporate data over mobile devices used in other regions or countries. Similarly mobile devices utilizing particular network connection methods may present a higher risk for example sending data over unencrypted channels when compared to other mobile devices.

While use of mobile devices is increasing the risk to corporate information assets the evolving malicious software threat is also increasing that risk. Previous generations of malicious software might often destroy data on a computer or network after gaining control of a host computer. However more modern malicious programs may take a more insidious approach. For example instead of immediately damaging or destroying the infected hosts and their associated data modern malicious applications may instead quietly subvert the host so that it may be put to use by the attacker. One of the more damaging attack profiles occurs when a malicious application is able to gain control of a computer for the purposes of forming a botnet.

A botnet is a network of compromised computers each of which is known as a bot. These compromised computers acting on the attacker s behalf and unbeknownst to the rightful owner of the computer perform a variety of nefarious tasks including participating in denial of service attacks or the sending of spam email.

Data theft from malicious software is also becoming an increasing problem. Fifty five percent of data loss is now attributed to data stealing malware web communications. The remaining 45 of non web malware communications is caused by Trojans or email communications over non web channels.

In some cases a legitimate user may be unaware that their computer is infected with malicious software. This software may operate covertly refraining from activities that may draw attention to its presence such as excessive use of computing resources including CPU I O channel bandwidth network access and the like.

Embodiments of the disclosure may include a method of managing a computer s access to resources. The method may include receiving a request for computer resources executing instructions on computer hardware to determine presence information relating to the computer determining a resource control policy to apply to the request for computer resources based on the presence information and executing instructions on computer hardware to allow or disallow the request for resources based on the policy. In an embodiment the presence information indicates an interactivity level on the computer. In some of these embodiments an interactivity level is based on whether an input has been received from an input device directly connected to the computer within a time period. In some embodiments the interactivity level is based on whether an interactive shell is running on the computer. In an embodiment the interactivity level is based on whether a screen saver is active on the computer s console. In an embodiment the interactivity level is based on the amount of idle CPU cycles on the computer within a time period.

In some embodiments the presence information indicates whether the computer is communicating over a secure network connection. In some embodiments the presence information indicates the computer s location within a corporate network. In some embodiments the presence information indicates the physical location of the computer.

In some embodiments the resource control policy controls the use of hardware resources of the computer. In some embodiments the resource control policy controls access to network data by the computer. In some of these embodiments the access to network data is controlled based at least in part on one or more content categories of a URL identifying the network data.

In some of these embodiments a first set of URL categories are accessible to the computer when the presence information indicates a first presence state and a second set of URL categories are accessible to the computer when the presence information indicates a second presence state.

In some other embodiments the resource control policy controls whether network communication by the computer is encrypted. In some embodiments the resource control policy controls whether network data sent by the computer is compressed. In some embodiments the resource control policy controls whether network data sent by the computer is signed.

In some embodiments the resource control policy controls the rate at which data sent or received by the computer may be transferred on a network. In some embodiments the resource control policy controls content of email messages sent by the computer.

Another innovative aspect disclosed is an apparatus for managing a computer s access to resources. The apparatus includes a memory a processor configured to fetch instructions from the memory a network interface operatively coupled to the processor. The memory stores a presence management module configured to cause the processor to receive and store presence information for the computer to a storage a URL filtering interface module configured to cause the processor to receive a URL access request including a requested URL a URL categorization module configured to cause the processor to determine one or more URL categories of the requested URL a policy determination module configured to cause the processor to determine a policy to apply to the requested URL based at least in part on the presence information for the computer and a policy application module configured to cause the processor to authorize or not authorize access to the requested URL by the computer based at least in part on the determined policy and the one or more URL categories. In some embodiments of the apparatus the presence information indicates an interactivity level of the computer. In some embodiments the URL access request is based at least in part on a request for the URL by the computer.

Another innovative aspect disclosed is an apparatus including a means for determining presence information relating to a computer and a means for applying a resource control policy based on the presence information. In some embodiments the presence information indicates at least one of an interactivity level of the computer or the computer s location within a corporate network and wherein the resource control policy controls access to network data based at least in part on one or more content categories of a URL identifying the network data.

Another innovative aspect is a non transitory computer readable medium storing instructions that when executed by a processor perform a method of preventing the loss of sensitive data on a mobile device. The method includes determining presence information relating to a computer and applying a resource control policy based on the presence information.

In some embodiments the presence information indicates at least one of an interactivity level of the computer or the computer s location within a corporate network. In some embodiments the resource control policy controls access to network data based at least in part on one or more content categories of a URL identifying the network data.

As described above the risks presented by mobile devices and malicious applications are substantial. For example mobile devices may travel to destinations that present inherent risk to corporate assets. Furthermore a corporate computer infected so as to join a botnet may participate in denial of service attacks or act as an agent for the sending of spam email. These actions by a corporate owned asset could subject the legitimate owner of the computer to legal liability or at a minimum result in negative publicity. Compromised computers may also act as agents for the attacker by sending sensitive data accessible from the compromised computer to the attacker.

To mitigate the effects of these risks a computer s access to resources may be specifically tailored to minimize risk while providing the access necessary to perform important functions. Applications running on a computer have access to a variety of resources including both resources local to the computer itself such as processing power disk space and I O channel bandwidth but also resources external to the computer. These resources may include network bandwidth and access to a variety of network applications such as email internet browsing network file transfer networked file storage and many more.

Depending on the computer s operating environment or presence legitimate resource needs of a computer application may vary. Additionally some operating environments present inherently greater risk than others. Therefore some implementations may vary the accessibility of resources to applications running on the computer based on the computer s operating environment.

A computer s operating environment or presence may encompass various aspects of how the computer is being used. For example presence information may encompass interactivity aspects of the computer network connectivity aspects of the computer or location aspects of the computer. For example presence may encompass an interactivity level of the computer. Whether a user is currently logged in and working with the computer may be one dimension of an interactivity level. In some implementations for example whether a computer s console is locked may indicate whether an interactive session is currently active and whether a user is currently logged in and using the computer. Similarly activation of a screen saver may provide a similar indication. Whether input has been received from a physically attached keyboard or pointing device may also provide an level of interactivity in some implementations.

The absence or presence of an interactive shell program may also provide an indication of whether the computer is currently being used in an interactive manner. Some computer operating systems support multi user or remote login capability that provides for interactive use of the computer without use of the console. Implementations for managing resources on these computers may use the presence or activity of an interactive shell program that supports multi user or remote login capabilities to provide an indication of whether the computer is currently in an interactive mode.

The allocation or authorization of resources to the computer may be based on the interactivity level determined by presence information. When an interactive session is active on a computer an employee may be actively using an email application and computing resources may be made available to applications running on the computer to ensure the interactive session is productive.

If the employee steps away from the computer for example to attend a meeting the interactive shell they were using may become inactive. For example a screen saver may activate the terminal such as the console used by the interactive session may become locked or their interactive shell program such as the interactive shell described above may stop consuming CPU cycles. When the interactive session becomes inactive or ends the interactivity level of the computer is reduced and resources authorized for use by applications running on the computer may be different when compared to when the interactive session was active and the interactivity level was also higher. The amount of CPU I O bandwidth network data received or transferred or the set of network applications that may send or receive data with the computer for example based on the network ports used by the network applications may be different than when an interactive session is active on the computer. Some implementations for example may allow the computer to receive email when no interactive session is present but not allow the computer to send email during that time.

In some implementations the allocation or authorization of resources to the computer may be based on the ambient light or display settings of an interactive environment. For example presence information may include the level of ambient light at a user s computer or the display settings of a user s display. Display settings such as font size or the contrast level between the font and the background may be considered presence information. In some implementations the display or transfer of sensitive information on or to a user s computer may be prohibited by a policy if the font size is above a predetermined threshold. In some other implementations whether certain information may be displayed by or transferred to a computer may be based on the contrast level of a font on the computer. For example some implementations may guard against the display of presentations on a display in environments outside a corporate network.

The type of display connected to a computer may also be considered presence information. In some implementations access to network content may be based on the type of displays connected to a computer. For example if a projection device is connected to a computer some implementations may prohibit the transfer or display of certain types of content for example sensitive content on or to the computer.

Whether a privacy shield is installed on a computer display may also be considered presence information with policies that control the transfer or display of information on or to the computer based on whether the privacy shield is installed. For example some displays may include sensors or switches that are activated when a privacy shield is installed. A policy may then control access to some data based on output from the sensors or switches.

In some implementations particular display technologies may provide more privacy than others. For example the viewing angle of some LCD displays may be more restricted than the viewing angle of other display technologies. In these implementations the display technology or viewing angle may be considered presence information with policies controlling access to some data based on the display technology or viewing angle parameters present in an interactive environment.

Some implementations may also vary access to network content identified by URLs based on presence information. For example when an interactive session is active on a computer the computer may be allowed to access and download network content from a first set of URL site categories. When no interactive session is active a second set of URL categories may be accessible which is different than the first set. Alternatively implementations may vary a whitelist or blacklist of accessible URL categories or sites based on presence information.

In some implementations available resources may vary based on the interactivity of the session running a particular application. For example on a multi user or multi account computer system an application running under an account during an active interactive session may be provided with a first set of resource allocations while the same application running under an account when there is no active interactive session may be provided with a second set of resource allocations.

In addition to interactivity some aspects of presence may relate to the location of the computer. The risk to corporate data on a computing device may vary with the devices location either geographically or by its location within a corporate intranet. For example certain geographic locations may present a higher risk of theft to a corporate mobile device. Other locations may provide network communications infrastructure that is susceptible to snooping or industrial espionage. The security of corporate intranets may also vary. For example while remote offices may include connections to the corporate intranet their communications infrastructure may not receive the same level of management as the infrastructure at a corporate headquarters.

Presence may include the computer s physical location on the planet earth for example represented by latitude and longitude coordinates. Other aspects of presence relate to the computer s location within a network topology. For example is the computer located at a corporate headquarters a branch office or VPN ed into the corporate network from a coffee shop.

Therefore some implementations may determine a resource control policy based on a computer s geographic location or location within a network topology. These resource control policies may for example vary the rate at which the computer can send or receive network data based on the computer s location. Some implementations may utilize policies that vary the network path used to communicate with the computer based on the computer s location.

Because the risk to the security of corporate data may vary by location some implementations may vary the encryption requirements for data sent or received over a network based on the computer s location. Some other implementations may require that certain or all network data sent or received by a computer be electronically signed based on the computer s location. The location of the computer may also determine which network applications are accessible to applications running on the computer. For example which particular protocol ports may be available to send data on or receive data on may be determined based on the location of the computer. The location of the computer may also determine the content of email messages sent or received by the computer. For example in some implementations an email header or footer may be inserted into emails sent from a particular location. The email header or footer may provide notice to the reader that the email was transferred through a less secure location so that proper considerations may be taken when replying to the email or when opening attachments.

In some implementations a data policy may not require that data stored on a storage medium be encrypted when a computer is operating within a defined geographic region or connected to a particular set of networks. For example some implementations may determine that a computer is within a corporate campus based on its geographic location. Some implementations may determine that a computer is operating within a corporate network when it is connected directly to a corporate network or connected via a VPN to the corporate network. These implementations may determine that storage accessed by the computer can be unencrypted when operating in these environments.

These implementations may also detect when the computer transitions from the previously described secure environments such as a corporate campus to a less secure environment. For example these implementations may detect when a computer moves off the corporate campus based on its geographic location or they may detect when the computer connects directly to a non corporate network. In these implementations a policy may further require that a storage be encrypted when the computer is operating in a less secure environment. Some implementations may trigger an audit of a computer or a storage based on detecting a change in a security level of the computer s operating environment. One result of an audit could be that data accessed by or located on the computer be encrypted.

Presence information may also include one or more characteristics of the network connection used by the computer. This presence information may be used to determine parameters of the network connections or restrictions on the type of data sent or received over that network connection. For example the security level of the network connection may determine whether data sent or received by the computer should be encrypted. The security level of the network connection may also determine whether the resource control policy requires that data sent or received by the computer be electronically signed.

Presence information may also include the speed of a network connection used by the computer. A resource control policy may then be based on this presence information. For example the rate at which the computer is authorized to send or receive data over a network connection may be based on the speed of the network connection. In some implementations whether data sent or received by the computer is compressed may be based on whether the speed of the network connection used by the computer is below a threshold.

The system also includes a resource manager a presence detector a presence datastore and resources to be managed . Resources to be managed in the implementation of include a CPU and memory and a storage . However it should be noted that these are just examples and not intended to limit the number or types of resources that may be managed by the proposed resource management system. For example hardware resources of a computer may be managed as shown. In other implementations the resources may include network resources. In these implementations the resource management system may manage how a MRC interacts with a communications network and utilizes the resources of the communications network. For example the type category speed security or amount of data sent or received over a communications network may be managed.

Before accessing a resource the MRC may submit a resource request to the resource manager . The resource manager determines whether access to the resource for example any of the resources to be managed should be granted. The decision may be based at least in part on presence information. Presence information may relate to one or more aspects of the MRC . For example presence information may relate to the location interactivity or network connectivity of the MRC . Presence information is obtained in the illustrated implementation by the resource manager from the presence datastore . The presence information may be written to the presence datastore by the presence detector .

In other implementations presence information may be obtained by the resource manager directly from the presence detector . For example the resource manager may periodically poll the presence detector to retrieve presence information. Alternatively the presence detector may asynchronously transmit presence information to the resource manager. For example when presence information changes on the client computer running the presence detector the presence detector may then send an update to the resource manager .

After the resource manager has made a determination of whether the MRC may have access to a resource it sends a resource response to the MRC . The resource response may indicate whether the MRC may have access to the requested resource.

In the illustrated implementation the firewall is in communication with the resource manager . In some implementations resource manager may be a URL filter server. For example resource manager may apply an access control policy to a URL access request. The access control policy may be based at least in part on a category of content stored at a destination server identified by the URL. The resource manager in this implementation is in communication with a URL category database and a URL filtering policy database . Client computers access the Internet via firewall . Each client computer includes a presence detector . In the illustrated implementation the presence detector runs on each client computer . The presence detector detects presence information for the client computer and sends the presence information to a presence datastore. In the illustrated implementation the presence information sent by the presence detector is sent to the resource manager or resource manager and stored in a presence database . This presence information may be read by the resource manager when determining whether resource requests for URLs should be authorized.

Process then moves to block . Upon receiving the resource request the resource manager searches the URL category database for the URL to identify one or more categories assigned to the URL. Process then moves to decision block . If the URL is not found in the category database process moves to processing block where a policy for handling uncategorized URLs is determined. An appropriate reply may be sent based at least in part on the policy determined in process block . If one or more categories are found in decision block process moves to decision block . In decision block one or more categories may be compared to categories allowed by a URL filtering policy. The URL filtering policy may be stored in the URL filtering policy database illustrated in . The URL filtering policy applied to the URL may be based on presence information in the presence database . Specifically it may be based on presence information relating to the client computer one of client computers that initiated the resource request. This information may have been previously stored in the presence database for example by process illustrated in .

If the URL category is allowed by the URL filtering policy process moves to processing block where the URL filter sends a resource response to the firewall indicating access to the content identified by the URL is authorized. Upon receiving this response the firewall may allow the client computers generating the original request to access the Internet content identified by the URL. If the URL category is not allowed by the URL filtering policy process moves from decision block to decision block where the URL filter sends a resource response to the firewall indicating that access to the URL by the computer is not authorized. Upon receiving the resource response the firewall may disallow access to the URL by the client computer. Whether process executes processing block or processing block after processing of either block is complete process moves to end block and terminates.

A presence management module includes instructions that configure the processor to detect and maintain presence information for one or more client computers such as computers illustrated in . For example the presence management module may receive presence information from a presence detector such as presence detector in via the presence detector communication module . The presence information received from the presence detector may relate to the client computer upon which the presence detector is running. For example the presence information may relate to a managed resource consumer or client computer .

A URL categorization module includes instructions that configure processor to categorize a URL. For example in some implementations module may categorize a URL by searching for the URL in a URL categorization database such as database illustrated in . The URL categorization database may map the URL to one or more categories. In some other implementations the URL categorization module may configure processor to categorize a URL by performing dynamic categorization of the network content identified by the URL. For example when a request for access to content identified by a URL is received by the resource manager the resource manager may retrieve the Internet content identified by the URL. The content may then be analyzed to determine the category of the URL. For example particular keywords or images may be identified in the content in order to assign the URL to one or more categories.

A policy determination module includes instructions that configure processor to identify an applicable policy for a URL request. For example when a URL is received by the resource manager the policy that is appropriate for the URL may be determined based on one or more attributes of the URL or data associated with the URL. For example attributes that may be used to determine the appropriate policy for the URL include the time of day the user requesting access to the URL or the IP address of the client computer requesting access to the URL. In some implementations a directory server may be consulted by the policy determination module to identify one or groups defined by the directory to which the user requesting access to the URL belongs. These one or more groups may also be used to determine at least in part a policy to apply to the URL access request. Presence information associated with the computer requesting access to the URL may be used to determine the appropriate policy to apply the URL request. Whether the presence information indicates a first presence state or a second presence state may determine the policy applied to the URL request.

A policy application module includes instructions that configure processor to apply a policy to a URL access request. For example the policy application module may compare the URL category determined by the URL categorization module against one or more allowed categories determined by a policy determined by the policy determination module . If the URL category is allowed by the determined policy then access to the URL may be allowed by the resource manager . Conversely if the policy indicates access to URL s in that category are not authorized the requesting computer may be blocked from accessing content identified by the URL.

A URL filtering interface module includes instructions that configure the processor to provide URL filtering services. In some implementations the URL filtering interface module may implement a web service interface that allows interface clients such as firewall in to send resource requests to the URL filtering server . For example some implementations may utilize a REST based interface while other implementations may use a SOAP based interface. Other interface designs are also contemplated. Some implementations may expose a sockets interface with a custom API to provide a resource request interface to the resource manager .

An operating system module may include instructions that configure the processor to manage the hardware and software resources of resource manager . For example operating system module may include instructions that provide for the modules described above to communicate over network interface . Operating system module may also provide instructions that allow the modules described above to communicate with each other or to utilize storage space provided by storage or working memory .

A resource manager communication module includes instructions that communicate the client computer s presence information detected by the presence detection module to a resource manager such as the resource manager illustrated in or .

The client computer also includes an application module . The application module includes instructions that configure processor to implement one or more applications that utilize resources managed by a resource management system. For example in some implementations the application module may implement one or more applications that consume hardware resources on client computer . For example application module may consume processor time on processor memory space from working memory or storage space from storage . Access to these resources may be controlled by resource manager module discussed below.

In other implementations application module may implement one or more network applications that send or receive network data over network interface . For example the instructions in application module may implement an internet browsing program. Alternatively the instructions may implement an instant messaging client streaming client or file transfer application. Application module may also implement a custom application that sends and receives network data.

A resource manager module includes instructions that manage resources of client computer used by application module . In some implementations the resource manager module authorizes access to resources based at least in part on presence information for client computer . For example resource manager module may manage use of the GPS receiver working memory storage or network interface based on presence information such as whether an interactive session is present on client computer . Note that the resource manager module stored in memory may not be included in all implementations. For example in some other implementations the resource manager may be external to client computer . Some implementations may utilize a resource manager as a resource manager . In these implementations client computer may request authorization to use or access resources from the external resource manager. In still other implementations there may be an external resource manager and also a resource manager included in the client computer . For example an external resource manager may manage resources external to client computer such as network resources while an internal resource manager may manage resources internal to client computer .

An operating system module includes instructions that configure processor to manage the software and hardware resources of client computer . For example the resource manager communication module may invoke subroutines in the operating system module to send or receive network data over network interface . Subroutines in operating system module may also be used to store data to data storage or use working memory . Note that in some implementations a local resource manager such as resource manager may be closely integrated with or part of operating system module .

Presence data determined in block may relate to one or more characteristics of a managed resource consumer. For example the presence data may indicate the physical location of the managed resource consumer the location of the managed resource consumer within a particular network topology the security level of the network connection used by the managed resource consumer or the speed of the network connection used by the managed resource consumer. If the managed resource consumer is a client computer the presence information may relate to whether a screen saver is currently active on the client computer or whether the console of the client computer is currently locked. The presence information may also indicate whether any input has been received from a physically attached keyboard or pointing device within a time period or how much idle time there has been on the client computer within a time period. The presence information may also indicate whether any programs implementing an interactive shell are running on the client computer or if they are running how much processing time they have consumed during a time period. Alternatively how much time has elapsed since interactive shells running on the client computer have consumed CPU processing time may be included in the presence information. Processing block may be implemented by instructions included in the presence management module illustrated in .

Table 1 below illustrates presence data in some implementations. Some embodiments may implement one or more of the examples of presence data shown and not implement other examples. In addition some implementations may include additional presence data not shown in Table 1. Table 1 is provided only to show examples of presence data in some implementations and is not intended to be limiting 

Process then moves to processing block where a resource control policy is applied based on the presence information. Processing block may be implemented by instructions included in the policy application module illustrated in . Alternatively a combination of instructions in the URL categorization module policy determination module and policy application module may implement processing block . Process then moves to end block and terminates.

Tables 2 4 below illustrates example resource control policies in some implementations. The resource policies may vary based at least in part on presence information.

The type of resource requested in block may vary by implementation. For example some implementations may request access to hardware resources such as memory disk space I O channel bandwidth or processor time in processing block . Other implementations may request access to network resources. For example network resources requested in block may include network content identified by a URL an ability to send or receive network data or packets over one or more network protocols or ports or the ability to send or receive network data at a particular rate. Requests for network resources may also include an ability to send or receive network data. These are examples and are not intended to be limiting.

Once the resource access request is received in processing block process moves to decision block which determines whether the presence data determined in processing block is set to a first presence state. A first presence state may represent any presence state that can be distinguished from another presence state. For example any of the presence states described in Table 1 may be a first presence state and evaluated in decision block .

While only two values of a presence state are illustrated in a first presence state and a second presence state it should be understood that presence data may have any number of states or values. Some implementations of process therefore may distinguish between more than two values of presence data and apply more than two different resource control policies depending on the value of the presence data. Additionally some implementations of process may define ranges of presence data with the ranges determining which resource control policy is applied to the resource access request received in processing block .

If the presence data is set to the first presence state process moves to block where a resource control policy associated with the first presence state is applied to the resource access request. If it is determined in block that the presence state is not set to a first presence state then process moves to processing block where a resource control policy associated with a second presence state is applied. In either case process then moves to end block and terminates.

In processing block presence data for the client computer generating the URL access request is determined. For example in some implementations a database of presence information for each client computer on a communication network may be maintained. Processing block may search the database for presence information based on information received in the URL access request of processing block . For example in some implementations it may determine the presence information based on the source IP address or user specified in the URL access request.

In processing block the category of the URL received in the URL access request of processing block is determined. For example to determine the category of the URL some implementations may search a URL category database mapping URLs to one or more categories. Some other implementations may perform dynamic characterization of the URL. For example in block the network content identified by the URL may be retrieved. The content may be parsed and characterizations of the content performed based on attributes of the content such as links included in the content keywords detected in the content pictures or graphics included in the content etc. Based on this analysis one or more categories of the content may be determined.

In decision block process determines if the presence information determined in block is equal to a first presence state. The first presence state and second presence state referred to in block and may be at least any of the presence states described in Table 1 above. If the presence information in block does equal a first presence state process moves to block where one or more URL categories that are allowed when the presence information equals the first presence state are determined. If the presence information in block does not equal a first presence state process moves to block where one or more URL categories allowed by a policy configured for a second presence state are determined.

Process then moves to decision block where it is determined if the category of the URL determined in processing block is in one of the allowed categories. If the URL category is allowed process moves to processing block where access to content at the site identified by the URL is allowed. In processing block a reply message may be sent to the sender of the URL access request received in processing block with a status code indicating the request is allowed. Conversely if in block it is determined that the category of the URL requested is not allowed process moves to processing block where access to the content identified by the URL is denied. In some implementations processing block may send a reply to the sender of the URL access request with a status code indicating that access to the content identified b the URL is not authorized. Process then moves to end block and terminates.

In processing block the presence data determined in block is sent to a server. For example in some implementations the server may be a URL filtering server as illustrated in . However other embodiments may send the presence information to other types of servers. For example a server may include a network control server such as a firewall or other network infrastructure device. Servers may also include other applications processes or threads running on the computer performing process . For example presence information may be sent to a hardware resource manager operating on the client computer running process to control hardware resources of a client computing device.

In processing block process waits for a time period. Processing block may be performed in order to efficiently manage the client processing resources consumed by process . For example without a wait period defined by processing block process may continuously send presence data to a server unnecessarily consuming resources on the computer running process .

The length of the time period in block may vary by implementation. Some implementations may wait less than one second. Other implementations may wait for 5 10 15 or 20 seconds. Any waiting period between 1 microsecond and 30 minutes may be used by various implementations. Implementations may determine the specific time period based on implementation specific trade offs between accuracy and timeliness of presence information which benefits from a shorter time period and consumption of processing and other resources which are reduced when using longer time periods.

After the time period of processing block has elapsed process moves to decision block which determines whether process should shutdown. A shutdown may be appropriate for example if the computer running process is shutting down. If a shutdown should be performed process moves to end block and process terminates. If it is determined in block that no shutdown should be performed process then returns to processing block and process repeats.

The technology is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems processor based systems programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

As used herein instructions refer to computer implemented steps for processing information in the system. Instructions can be implemented in software firmware or hardware and include any type of programmed step undertaken by components of the system.

A processor may be any conventional general purpose single or multi chip processor such as a Pentium processor a Pentium Pro processor a 8051 processor a MIPS processor a Power PC processor or an Alpha processor. In addition the processor may be any conventional special purpose processor such as a digital signal processor or a graphics processor. The processor typically has conventional address lines conventional data lines and one or more conventional control lines.

The system is comprised of various modules as discussed in detail. As can be appreciated by one of ordinary skill in the art each of the modules comprises various subroutines procedures definitional statements and macros. Each of the modules are typically separately compiled and linked into a single executable program. Therefore the description of each of the modules is used for convenience to describe the functionality of the preferred system. Thus the processes that are undergone by each of the modules may be arbitrarily redistributed to one of the other modules combined together in a single module or made available in for example a shareable dynamic link library.

The system may be used in connection with various operating systems such as Linux UNIX or Microsoft Windows .

The system may be written in any conventional programming language such as C C BASIC Pascal or Java and ran under a conventional operating system. C C BASIC Pascal Java and FORTRAN are industry standard programming languages for which many commercial compilers can be used to create executable code. The system may also be written using interpreted languages such as Perl Python or Ruby.

Those of skill will further appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The various illustrative logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration.

In one or more example embodiments the functions and methods described may be implemented in hardware software or firmware executed on a processor or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media include both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage medium may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and Blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

The foregoing description details certain embodiments of the systems devices and methods disclosed herein. It will be appreciated however that no matter how detailed the foregoing appears in text the systems devices and methods can be practiced in many ways. As is also stated above it should be noted that the use of particular terminology when describing certain features or aspects of the invention should not be taken to imply that the terminology is being re defined herein to be restricted to including any specific characteristics of the features or aspects of the technology with which that terminology is associated.

It will be appreciated by those skilled in the art that various modifications and changes may be made without departing from the scope of the described technology. Such modifications and changes are intended to fall within the scope of the embodiments. It will also be appreciated by those of skill in the art that parts included in one embodiment are interchangeable with other embodiments one or more parts from a depicted embodiment can be included with other depicted embodiments in any combination. For example any of the various components described herein and or depicted in the Figures may be combined interchanged or excluded from other embodiments.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. .

It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should typically be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should typically be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers typically means at least two recitations or two or more recitations . Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . In those instances where a convention analogous to at least one of A B or C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B or C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting.

