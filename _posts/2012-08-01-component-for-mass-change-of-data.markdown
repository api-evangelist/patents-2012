---

title: Component for mass change of data
abstract: Tools and techniques for performing a mass change to data are described. Attribute values in a data set can be replaced or overwritten based on a user request. The user request can be based on user selections and inputs made via a user interface. The user can limit the attribute values that are replaced based on attribute, attribute value, and/or other designation. The user interface can facilitate user execution of the mass change by presenting lists of attribute values and/or attributes to the user for selection. The list of attribute values can be limited based on a user designation of data elements for mass change. A mass change component can be configured to control directly or indirectly the user interface or portions thereof. The mass change component can initiate the mass change of the data, based on the user selections and inputs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09460146&OS=09460146&RS=09460146
owner: SAP SE
number: 09460146
owner_city: Walldorf
owner_country: DE
publication_date: 20120801
---
As part of typical business practices data often must be updated or changed by a user. Frequently these changes are mass changes or changes to or across relatively large amounts of data. For example a business may decide to rename a product which requires all objects or data sets that refer to the product to be updated with the new name. As another example a data set uploaded or transferred between data management programs may incur formatting errors that need to be corrected across the entire data set or a portion thereof. In such circumstances mass changes to data must be carried out by the end user to ensure data correctness and continued business viability.

Such a task can be tedious and prone to error. Thus it is important for a user to be able to perform such mass changes in an efficient manner.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Techniques and tools are described for performing mass change to data. For example attribute values in a data set can be replaced or overwritten based on a user request. The user request can include selections and inputs received via a user interface. The user can limit the attribute values that are replaced based on attribute attribute value and or other designation.

For example a method can be provided for performing mass change. The method comprises receiving a designation of one or more of the data elements receiving an attribute selection and providing a candidate list for display. The candidate list comprises an all attribute values option and possible attribute values for the selected attribute present in the designated data elements. The method further comprises receiving a selection of a value from the candidate list receiving an input of a new attribute value and initiating a change of a portion of the designated data elements corresponding to the selected attribute and the selection from the candidate list to the new attribute value.

As another example a method can be provided for presenting a user interface for performing mass change. The method comprises presenting the data so that a user can designate a portion of the data for mass change presenting a first user interface element for selecting an attribute based on the selected attribute presenting a candidate list listing attribute values of the selected attribute present in the user designated portion of the data and presenting a second user interface element for inputting a new attribute value to replace attribute values in the user designated portion of the data corresponding to the selected attribute and a selection from the candidate list. The presenting of the candidate list can include presenting an all attributes option as part of the candidate list.

Described methods can be implemented at least in part by a software component and or system which is referred to herein as a mass change component MCC . The MCC can control either directly or indirectly a user interface for performing the mass change. The MCC can initiate the mass change to the stored data based on user selections and inputs received via the user interface. The MCC can operate independent of the data store storing the data for mass change. The MCC can also receive commands e.g. from a user interface or other component or system for performing the mass change.

The foregoing and other objects features and advantages will become more apparent from the following detailed description which proceeds with reference to the accompanying figures.

The following description is directed to techniques and solutions for performing mass change to data. An example of a mass change is a change that is made to one or more attribute values in a data set based on a user request. The change can be limited to one or more user selected attributes and or to one or more designated data elements. The change can be applied across all attribute values or only to selected attribute values sometimes referred to as candidates. The candidates are selected from a candidate list that includes attribute values present in one or more designated data elements. Typically the change involves replacing attribute values of designated data elements with a new attribute value input by the user although other types of changes are possible.

In general a user interface assists the user in performing the mass change. For example a user can designate data for mass change either using a user interface or by other known methods such as using a keyboard. User interface elements can be displayed to the user for selecting an attribute and an attribute value from a candidate list for mass change. The user interface can also enable a user to input a new attribute value. The designated data is then changed according to the user selections to the new attribute value. In some examples the user interface displays the changed data to the user.

In general a mass change component MCC executes the mass change. That is the MCC enables a user to perform the mass change to designated data. The MCC receives user input through an associated user interface and initiates a change to attribute values of the designated data based on the user input. For example the MCC can determine the attributes that are to be displayed via the user interface for selection by the user. The attributes to be displayed can be limited to the attributes present in the designated data or to another predetermined set of attributes or include all attributes associated with the data. Additionally the MCC can determine the attribute values to be displayed in a candidate list via the user interface. The candidates in the candidate list can be determined by the MCC based on the selected attribute and any user designated data. The MCC can also receive a new attribute value from the user via the user interface as well as user selections of the attribute and the attribute value from the candidate list. Based on the user selections the MCC initiates the mass change to the data.

Mass change techniques and tools described herein can provide efficient and flexible solutions for user manipulation of data such as by improving usability and user experience when performing a mass change to data.

In any of the examples herein data is any information that is associated with an attribute and an attribute value. In general an attribute is a category of properties qualities or characteristics of an object item or other entity. Each attribute is associated with one or more values e.g. a set of values referred to herein as attribute values. Attribute values describe the corresponding property quality or characteristic identified by the attribute.

For example for data describing products in a grocery store each product can be associated with several attributes such as manufacturer brand material group price UPC bar code etc. For each of these attributes there is a corresponding set of attribute values. In this example the set of attribute values that corresponds to the attribute manufacturer includes all the names of the manufacturers for the products. Each product has an attribute value of the name of the manufacture for that particular product. The attribute brand has a value for each product that corresponds to the brand name for that product and so on.

As another example for data describing books each book can be associated with several attributes such as author publisher genre format date of publication etc. In this example the set of attribute values corresponding to the attribute format includes three possible values electronic paperback or hardcover while the attribute author takes on values that correspond to the name of the book s author.

Data can be arranged as data elements or components of a database such as in a table or as fields. Tools and techniques described herein are not limited by the data format or the manner or method of data storage.

Techniques for mass change described herein can be implemented using various user interfaces and are therefore not limited to the specific user interfaces illustrated in the figures.

The element enables the user to select a candidate from a list of candidate attribute values. As will be explained in more detail below the candidate list is determined by the MCC and can depend on both the user selection via element and on any user designated data elements. The element enables the user to input a new attribute value. For example the user can input e.g. type the new attribute value into a textbox or the new value can be selected from a predetermined list of values such as a predetermined domain or group of fixed values. The candidate selection made via element and the new attribute value input via element can be communicated to the MCC. The element is optional and enables the user to make mass changes based on multiple attributes and or attribute values see e.g. .

When the user has completed selections and inputs a user interface element such as an OK button can be used to communicate with the MCC and to initiate the mass change. The mass change initiated by the MCC can be based on user selections via elements and user input via element and any user designated data.

In some embodiments mass changes described herein are limited to data elements designated by a user. Often such designations are made through a user interface although other methods of designating data elements are supported. For example a user interface can present the data to the user who selects or highlights data using conventional techniques. However in other examples a user could designate data by designating or searching according to certain criteria e.g. data modified after a particular date etc. by selecting a file by name or by typing row and or column numbers or other indicators for data in a table format. The data may or may not be presented to the user during the designation process. Once a user designation of data elements has been made either via a user interface or other means a user interface for performing mass change is provided to the user. Also the designation is communicated to the MCC.

In any of the examples herein data can be presented by a user interface to facilitate designation of the data. is an illustration of an exemplary user interface for presenting data for mass change with designated data . The user interface presents the data in a table with data elements organized in columns according to associated attributes . For example each row in the table can represent a different product and each column represents a different attribute with the data elements providing the attribute values for each of the products. In the figure the data is associated with the following attributes manufacturer material number brand internal ID and material group. The brand attribute has a corresponding attribute value of ABC for all rows e.g. for each product while the material group attribute can take on any value within the following set of attribute values meat produce fish or frozen food. Likewise the attribute manufacturer has three possible attribute values Company A MF West and MF South.

Four rows are shown as selected by the user and each element in the rows corresponds to a designated data element. A user can designate data elements using any conventional technique for selecting or highlighting one or more elements in a table. For example the user may perform the designation by left clicking with a mouse in a manner that selects an entire row by using control or shift clicking by right clicking on one or more cells or by typing in row and or column selections. Although illustrates designation of data elements by row data elements may be designated individually by column or by other grouping.

In the figure the data is presented along with optional user interface elements . The elements can be configured in various ways to assist the user in manipulating or viewing the displayed data . For example the element can be a button which when clicked or selected by the user causes a mass change user interface such as user interface in to appear on the display as a pop up window or integrated into the interface .

In addition to the data the user interface also includes an optional search portion which includes elements and . For example elements and or can enable user input such as inputting of search criteria and can be used to collect or find the data and or to select the data elements . The data can be presented as a portion of a larger user interface as shown in or as an independent interface see e.g. .

Although the presentation of data in rows and columns is a commonplace manner of displaying data and for facilitating user designation of data elements data can be presented in different formats than the table format of .

Techniques for mass change described herein can be implemented using various user interfaces and are therefore not limited to the specific user interfaces illustrated in the figures.

Referring to an exemplary user interface for mass change of data includes elements for receiving user selections and input. The element indicates an attribute selection made by the user from a list of attributes and the attribute selection made via element can be communicated to an MCC. The list of attributes can be determined by the MCC or the list can be provided to the MCC or user interface by another component e.g. a data store backend layer data access layer etc. . In this example the list is limited to a predetermined or predefined list of three attributes manufacturer brand and material group. In the illustrated example the list is limited to the attributes that a particular user is permitted to change. That is changes to attributes material number and internal ID are restricted or prohibited and therefore do not appear on the list . Alternatively the list can include all attributes for that data set or be limited to the attributes present in the designated data elements.

The element enables the user to select from a list of candidate attribute values and the element enables the user to input a new attribute value. The element is optional and enables the user to make mass changes based on multiple attributes and or attribute values see e.g. .

Techniques for mass change described herein can be implemented using various user interfaces and are therefore not limited to the specific user interfaces illustrated in the figures.

Referring to an exemplary user interface for mass change of data includes elements for receiving user selections and input. The element indicates an attribute selection made by the user which can be communicated to a MCC. As shown the user has selected the attribute material group. The element indicates a user selection from a list of candidate attribute values . The user selection via element can also be communicated to the MCC. As shown the user has selected the attribute value meat. The candidate list includes an all attribute values option which has the effect of selecting all the attribute values in the candidate list i.e. it will have the effect of selecting all of meat fish and frozen foods .

The candidate list is determined by the MCC and is limited to the attribute values for the selected attribute that are present in the designated data elements. Specifically referring to the designated elements for the selected attribute i.e. material group include the following attribute values meat fish and frozen food. Although the attribute material group can also take on a value of produce because no data elements having the attribute value produce are present in the designated elements the MCC does not include the value produce in the candidate list . In addition although the attribute value fish appears twice within the designated elements only one instance of the value is listed in the candidate list . In this manner the candidate list lists the possible values e.g. one instance of each possible value for the selected attribute that are present in the designated elements .

The element enables the user to input a new attribute value and the optional element enables the user to make mass changes based on multiple attributes and or attribute values see e.g. .

Techniques for mass change described herein can be implemented using various user interfaces and are therefore not limited to the specific user interfaces illustrated in the figures.

The user interface can include user interface elements for expanding or reducing elements for enabling user attribute attribute value selections.

In any of the examples herein data can be presented through a user interface after the mass change is performed. For example is an illustration of an exemplary user interface for presenting data after the mass change indicated by the user interface in has been performed on the designated data in . The user interface presents the data in a table with data elements organized in columns according to associated attributes . The data can be presented as a portion of a larger user interface or as an independent interface. In addition although the data is presented in rows and columns data can be presented in formats other than the table format of .

Referring to the mass change results presented via interface include several data elements which have been changed or replaced with new attribute values. These changed data elements correspond to a portion of the designated data elements . The changes were initiated by the MCC and made in accordance with the user selections and inputs made via the interface . Specifically a data element has been changed from meat to beef according to the user selections and inputs via elements . That is the changed element is associated with the selected attribute and previously had the same value as the selected attribute value . Also the element is one of the designated elements . Although another data element in the table is also associated with the attribute material group and has the value of meat the element has not been subject to the mass change because it is not part of the designated elements .

Data elements and have been changed to seafood in accordance with the user selections and inputs of elements . Data element although one of the designated data elements remains unchanged since the attribute value frozen food was not selected via the interface .

Data elements have been replaced with the attribute value Foods Inc. according to the user selections and inputs of elements . Notably the element indicates that the user has selected the attributes option. This selection has the effect of selecting all the attribute values for the selected attribute indicated by element that appear in the designated elements . That is it has the effect of selecting the following attribute values at the same time Company A MF West and MF South. Consequently all the attribute values for the designated cells corresponding to the attribute manufacturer i.e. cells have been changed to Foods Inc. 

In the figure the data is presented along with optional user interface element . The element can be configured to assist the user in manipulating or viewing the displayed data . For example the element can be a button which when clicked or selected by the user causes a mass change user interface such as the user interface in to appear on the display as a pop up window or integrated into the interface .

The MCC can be implemented as a part of the user interface layer illustrated in as MCC perhaps as a user interface component or part of another user interface component or the MCC can be implemented as a separate component in the architecture of the computing environment illustrated in as MCC . Typically the MCC receives user selections inputs and or data designations made via the user interface. The MCC determines attribute values to be presented in a candidate list of the user interface. The MCC can also determine attributes to be presented in an attribute list of the user interface. The MCC can control all or a portion of the user interface. Alternatively the MCC can provide information or instructions to the user interface layer for presenting the user interface.

The data store stores the data for mass change. The data store can include code or software for performing specific tasks or functions to manage the stored data or the data store can be part of a backend layer that manages the storage of data as well as the interface with a data access layer . For example such a backend layer can include a service provider various business objects and application programming interfaces. The backend layer can include one or more computer systems and or servers. The data store can be located within the same computing environment as the MCC or within a different computing environment. For example the data store can be a remote server that communicates with the MCC via cloud computing services.

The data access layer controls the relationship between the user interface layer the MCC and the data store . For example the data access layer can contain software and or hardware for communicating instructions information from the MCC or to the data store so that the mass change can be performed and or for communicating data from the data store to the user interface layer for display. In general the data access layer contains some framework for backend access which is based on the particular data store and the MCC is configured to communicate with the data access layer based on that framework.

The MCC initiates the mass change based on user selections inputs and or data designations received via the user interface. For example the MCC can issue a request or send commands to the data store via the data access layer indicating the data element s to be replaced and the new attribute value s for the replaced element s . For example the MCC can send the user selections inputs and or data designations to the data store via the data access layer . Consequently the data store manipulates the data to perform the mass change. For example the appropriate data elements can be overwritten with new attribute values.

In some implementations the MCC is implemented independent of the data store . That is the MCC is configured to communicate with the data access layer which is configured to communicate MCC requests to the data store . Thus the data access layer serves as an intermediary between the MCC and or the user interface layer and the data store . In this manner the data store or backend layer is independent of the MCC and need not be specially configured to communicate with the MCC. In other implementations the MCC is integrated with the data access layer and or the data store .

In some embodiments the MCC is implemented as a reuse component. That is the MCC can be configured as a module or component that can be implemented as part of an application without additional coding or programming. For example a reuse MCC may need to be configured for a particular application. However a developer s skills may not be necessary for implementation. In this manner the MCC functionality can be easily reused in different applications.

In a particular implementation the MCC is implemented as part of a WebDynpro component. Specifically the MCC is implemented as a generic user interface building block GUIBB such as a modified generic feeder class. In this manner the MCC is integrated into the user interface layer as a mass change feeder class and is implemented as a reuse component. The mass change feeder class can be configured to communicate with a backend layer using the Service Provider Infrastructure or other known data access channel. Thus any backend layer can be used with the mass change feeder class implementation with the appropriate data access channel. Floorplan Manager can be used to build an application user interface with GUIBBs including the mass change feeder class.

In the mass change feeder class implementation the MCC can be configured to allow enhancement of functionality by mechanisms such as inheritance that allow a reusing application to add application specific logic that is not part of the reuse component. In this manner the reuse component does not limit the reuse capability. For example an application could add various functionalities to the MCC such as by configuring the mass change feeder class to be capable of copying data sets or capable of permitting navigation within certain columns.

In another particular implementation the MCC is implemented as part of SAPGUI technology as a reuse component and without the use of Floorplan Manager. The MCC can then be configured to access a backend layer via an appropriate data access channel such as the appropriate Service Provider Infrastructure. In this implementation the MCC could be configured as a function module or a report that internally creates the SAPGUI screens.

Although not described in detail the MCC could be implemented as part of user interface technologies known in the art.

At a candidate list is provided for display. The candidate list can include an all attribute values option as well as attribute values for the selected attribute present in the designated data elements. At a candidate selection is received. For example the candidate list can be displayed in a dropdown format as part of the user interface and the user can select an attribute value from the dropdown.

At a new attribute value is received. For example the new attribute value can be input by the user via the user interface. At a mass change is initiated. The mass change is to a portion of the designated data that corresponds to the selected attribute and to the candidate selection. The attribute values for the portion of the designated data are changed to the new attribute value. The mass change can be initiated by sending a communication to a backend layer or a data store that identifies the data elements to be changed as well as the new attribute value to which the data elements are to be changed. For example the mass change can be initiated by sending the selected attribute and or the candidate selection to the backend layer or data store. In addition an indication or other communication identifying the designated data elements can be sent to the backend layer or to the data store. For example the data elements can be identified by row and column number or by other indicators sufficient to identify a location within a data store for each of the data elements.

At non duplicative attribute values are collected for inclusion in the candidate list. For example only one instance of each attribute value present in the designated data is provided for display in candidate list. At the candidate list is provided for display.

At a first user interface element is presented for selecting an attribute. For example the first user interface element can list a predetermined group of attributes or the listed attributes include all attributes associated with the data or with a designated portion of the data. At a candidate list is presented. The candidate list can include attribute values present in the user designated portion of the data and associated with the selected attribute and or an all attribute values option.

At a second user interface element is presented for inputting a new attribute value to replace attribute values in the user designated portion of the data. The replaced attribute values also correspond to the selected attribute and a selection from the candidate list.

With reference to the computing system includes one or more processing units and memory . In this basic configuration is included within a dashed line. The processing units execute computer executable instructions. A processing unit can be a general purpose central processing unit CPU processor in an application specific integrated circuit ASIC or any other type of processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. For example shows a central processing unit as well as a graphics processing unit or co processing unit . The tangible memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two accessible by the processing unit s . The memory stores software implementing one or more innovations described herein in the form of computer executable instructions suitable for execution by the processing unit s . For example software can include a MCC as described herein.

A computing system may have additional features. For example the computing system includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing system . Typically operating system software not shown provides an operating environment for other software executing in the computing system and coordinates activities of the components of the computing system .

The tangible storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information in a non transitory way and which can be accessed within the computing system . The storage stores instructions for the software implementing one or more innovations described herein.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing system . For video encoding the input device s may be a camera video card TV tuner card or similar device that accepts video input in analog or digital form or a CD ROM or CD RW that reads video samples into the computing system . The output device s may be a display printer speaker CD writer or another device that provides output from the computing system .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media can use an electrical optical RF or other carrier.

Referring to the user interface layer the MCC the data access layer and the data store can be implemented as part of the same computing environment or as part of two or more computing environments. For example the data store can be implemented as a remote server that is accessed via connections by an MCC implemented in software .

The innovations can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing system on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing system.

The terms system and device are used interchangeably herein. Unless the context clearly indicates otherwise neither term implies any limitation on a type of computing system or computing device. In general a computing system or computing device can be local or distributed and can include any combination of special purpose hardware and or general purpose hardware with software implementing the functionality described herein.

For the sake of presentation the detailed description uses terms like determine and use to describe computer operations in a computing system. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

The cloud computing services are utilized by various types of computing devices e.g. client computing devices such as computing devices and . For example the computing devices e.g. and can be computers e.g. desktop or laptop computers mobile devices e.g. tablet computers or smart phones or other types of computing devices. For example the computing devices e.g. and can utilize the cloud computing services to perform computing operators e.g. data processing data storage and the like .

Referring to one or more of the user interface layer the MCC the data access layer and the data store can be implemented as part of the cloud computing services. Likewise one or more of the user interface layer the MCC the data access layer and the data store can be implemented as part of one or more of the computing devices . For example the data store can be accessed via the cloud by the computing device running a MCC as described herein.

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed methods can be used in conjunction with other methods.

Any of the disclosed methods can be implemented as computer executable instructions or a computer program product stored on one or more computer readable storage media and executed on a computing device e.g. any available computing device including smart phones or other mobile devices that include computing hardware . Computer readable storage media are any available tangible media that can be accessed within a computing environment e.g. non transitory computer readable media such as one or more optical media discs such as DVD or CD volatile memory components such as DRAM or SRAM or nonvolatile memory components such as flash memory or hard drives . By way of example and with reference to computer readable storage media include memory and and storage . As should be readily understood the term computer readable storage media does not include communication connections e.g. such as modulated data signals.

Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable storage media e.g. non transitory computer readable media . The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript HTML5 ABAP Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computer to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

The disclosed methods apparatus and systems should not be construed as limiting in any way. Instead the present disclosure is directed toward all novel and non obvious features and aspects of the various disclosed embodiments alone and in various combinations and sub combinations with one another. The disclosed methods devices and systems are not limited to any specific aspect or feature or combination thereof nor do the disclosed embodiments require that any one or more specific advantages be present or problems be solved.

The technologies from any example can be combined with the technologies described in any one or more of the other examples. In view of the many possible embodiments to which the principles of the disclosed technology may be applied it should be recognized that the illustrated embodiments are examples of the disclosed technology and should not be taken as a limitation on the scope of the disclosed technology. Rather the scope of the disclosed technology includes what is covered by the following claims. I therefore claim as my invention all that comes within the scope and spirit of the claims.

