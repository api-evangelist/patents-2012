---

title: Systems and methods for providing mobile security based on dynamic attestation
abstract: Instrumented networks, machines and platforms having target subjects (devices, transactions, services, users, organizations) are disclosed. A security orchestration service generates runtime operational integrity profiles representing and identifying a level of threat or contextual trustworthiness, at near real time, of subjects (including mobile devices) and applications on the instrumented target platform. Methods and systems are disclosed for dynamic attestation of mobile device integrity based upon subject reputation scores. In an embodiment, a method scores trustworthiness of a mobile device based on reputation scores for users associated with the device and/or a device reputation score. The method generates runtime integrity alerts regarding execution anomalies for applications executing on the device, calculates risks based on a ruleset, and determines a calculus of risk for the device. The method sends endpoint events comprising data and content of the integrity warnings to a trust orchestrator, which generates an integrity profile based on the endpoint events.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08850588&OS=08850588&RS=08850588
owner: Taasera, Inc.
number: 08850588
owner_city: Erie
owner_country: US
publication_date: 20120727
---
The present application claims the benefit of U.S. Provisional Appl. No. 61 641 007 entitled System and Method for Operational Integrity Attestation filed May 1 2012 incorporated by reference herein in its entirety.

The present disclosure relates to the field of data center virtualization and more particularly to systems and methods for providing dynamic operational integrity attestation of application security and a user reputation at runtime.

One recent trend in computing is the trend towards virtualization and cloud computing in which for example enterprise software is no longer owned by the customer but instead the enterprise s Information Technology IT infrastructure can be provided by a third party and enterprise software applications are sold as service offerings.

Traditional legacy and currently available security technologies such as next generation anti virus software network firewalls and intrusion detection prevention systems operate based on signatures protocol anomalies or virtual execution in a sandbox to monitor threats and attacks. However once a target of an attack or threat i.e. a target system or target platform becomes infected or compromised many of these technologies have been proven relatively ineffective in protecting systems and preventing data breaches or service disruptions. Emerging threats and attacks can exhibit a low and slow mode of operation and can be signature less in order to evade traditional detection and defense technologies. Further these technologies are often agnostic to the runtime operational integrity of computer workloads on the target victim systems and therefore often do not offer any level of remediation to service the affected target systems. As such many traditional security technologies merely provide coarse grained access controls limited to a simple allow or deny decision logic.

Many enterprises and organizations are moving there IT infrastructures to cloud computing environments from self managed on premise data centers to service provider managed outsourced virtual data centers wherein which third parties may provide shared computing resources and applications running on those resources. They are being offered as services to a plurality of customers. The move by companies to cloud computing environments are increasing for various reasons including the need for increased computing power increased storage capacity and or increased network bandwidth among others. Enterprise applications and mission critical applications may be executed in the cloud. Without adequate device system and application security the cloud can compromise these applications potentially causing large financial losses. Data confidentiality data integrity and data availability can be maintained in the cloud computing environment even when such applications may be controlled by these third parties. The cloud may enable traditional information technology devices systems and applications to transparently execute from these service providers managed outsourced virtual data centers. As newer technologies emerge the cloud infrastructure may evolve transparent to and scalable with enterprise operations. Security in such environments may be an emerging challenge. For example virtualized cloud computing on demand and elastic models require dynamic security orchestration at both the device and network level that is lacking in traditional security approaches and technologies.

A significant metric that relates to the lack of remediation controls in current security controls is the high rate of false positives and negatives in the detection of threats. False positives are unproductive and reduce operating capacity in data centers. False negatives lead to the bypass of security controls and compromise of the target systems and services. Existing signature based approaches to security control are vulnerable to improvised attacks staged at targeted systems.

The proliferation of applications business social networking and gaming software in Enterprise and cloud computing ecosystems has significantly increased the attack surface and window of exposure. Application runtime operational integrity is a critical factor in building end to end trust from device to service. The proliferation of unmanaged devices such as mobile computing devices i.e. tablets and smart phones and Bring Your Own Device BYOD policies in Enterprise network environments has increased the risk of advanced coordinated threats.

The current predominant security paradigm is based on a hard edge and soft core architecture. Security appliances such as network firewalls and intrusion detection prevention systems deploy at the edge perimeter . Antivirus and network based integrity measurement and verification services scan and audit the soft core that comprises business critical systems services and high value data silos. Once the edge is breached defensive methods are largely ineffective in protecting vulnerable or compromised systems. In this paradigm the hard edge does not generally provide any level of assurance of the runtime operational integrity of the soft core.

The heavy reliance on extensive application whitelists blacklists based on file hash digests and or configuration Internet Protocol IP address reputation lists signatures protocol anomalies and virtual execution in a sandbox provides targeted and coordinated attacks a large staging surface to maneuver around with meticulously engineered evasion methods exploiting the gaps. Irrespective of the method of break in the post infection behaviors during the window of exposure on a victim machine or environment are difficult to conceal but may be obscured from timely detection and diagnosis by security administrators and virtual execution sandbox environments through evasion techniques. Various exemplary embodiments include an early warning system for threat identification and diagnosis with high forensic confidence and infection summaries for manual and or automated intervention.

Current identity management IdM approaches are typically aimed at domain level authentication of users for the use of a security token in a transaction or business process wherein the issuance of the token is strictly based on proof of possession of credentials and not the reputation of the user. While the industry has adopted multi factor authentication technologies for increased protection from malicious users whose intent is to steal credentials for the purpose of impersonation or delegation these security controls do not provide a means for incorporating attribution of an authenticated user s risk posture independent of provisioned entitlements i.e. user account privileges and roles . Thus existing security controls do not incorporate a complete view of a user s risk posture as a component of an access policy based on correlation of location and device agnostic global threat intelligence about the user. Accordingly what is needed are systems and methods for runtime operational integrity monitoring of applications by providing dynamic operational integrity attestation of application security and user reputation at runtime that take into account a subject s such as a device application or user risk posture. What is further needed are systems and methods for performing post infection diagnoses threat identification via signature less anomalous behavior recognition using non intrusive platform instrumentation without requiring hooks into an operating system OS Kernel by security vendors that leverages OS vendor application programming interfaces APIs .

The emerging cloud based application hosting model requires a higher level of scrutiny of device and user security posture. Threats can be posed by both external and internal users and therefore it has become harder to determine whether an authenticated user is a trustworthy operative. Application and network layer entitlements are largely static in nature. While role based access control RBAC systems are positioned to offer dynamic policies these are not based on any form of aggregation of external threat intelligence in the context of the user in the transaction.

Tokenization of identities by Security Token Services STS intended to facilitate in Identity Federation and Single Sign On SSO for web and Enterprise applications have only aggravated the threat vectors by expanding the scope of resources that an authenticated user may access implicitly without granular context. Along with the coarse access policies offered by traditional security controls such as firewalls and intrusion prevention systems this increases the attack surface for application exploits by malicious users leveraging the excessive privileges granted by default to most users and groups today in the absence of strict Separation of Duties SoD and Principle of Least Privilege PoLP enforcement.

Several studies have uncovered conclusive evidence that the largest risk associated with malicious activities resulting in theft of confidential data intellectual property or financial losses for enterprises and consumers arises from insider rather than outsider or man in the middle attacks. Threat assessment systems have been predominantly focused on the means and methods rather than the adversary or operator i.e. a user . There has been no emphasis on the reputation score of a user in the transaction or business process as a real time integrity metric for integration with access policy decision logic. Accordingly what is further needed are systems and methods that employ a user reputation score that can serve either as a punitive or corrective method of intervention for the proactive prevention of exploits and data breaches.

One goal of trusted computing is to provide a resource owner or service provider with reliable knowledge about a target system. Current attestation systems are components of computer systems that permit reliable statements of evidence about those systems to be conveyed to remote parties including other computers. Through evaluation of the identity and integrity of components of a system i.e. a target system being evaluated evidence is produced that the target system will not engage in defined classes of misbehaviors. As the users accessing a system and the requirements of applications running on a system generally cannot be known a priori attestation systems and measurement systems alike must be flexible providing for privacy completeness of measurement and trust in the basic collection and reporting mechanisms.

Existing attestation systems are often narrowly focused and generally aimed at specific use cases limited to system components such as hardware and applications and therefore typically lack flexibility to dynamically address more general attestation problems. Further existing definitions of attestation focus primarily on describing specific narrow and particular properties desirable in specific use cases. Additionally current attestation systems are created to work with one particular measurement system targeting one particular system of interest without considering the reputations of users or operators of the system of interest.

Accordingly what the present inventors have identified as desirable are technology based attestation architectures systems and methods that perform a calculus of risk to determine a level of trust of systems that are not necessarily monolithic and can be made up of diverse hardware and software platforms and can be accessed by users with varying credentials and reputations. Accordingly what the inventors have identified as being desirable are attestation architectures systems and methods that can be flexible enough to accommodate varying concepts of attestation including taking the reputation of users that access targeted systems into account. What the present inventors also see as desirable are attestation systems and architectures that can dynamically handle complex attestation scenarios and provide more complete runtime attestation than is currently achievable. What the present inventors additionally see as desirable are methods and systems for performing evidence based automated application binary analysis.

Exemplary methods and systems are disclosed for continuously monitoring one or more systems and or to correlate events and behavior of systems on an instrumented target platform at runtime using or based on a plurality of assertions or statements .

In exemplary embodiments methods apparatus systems and computer readable media perform infection diagnosis based on reconnaissance based intelligence correlation and a threat life cycle model of advanced low and slow attacks wherein malware may operate through a series of benign actions at an endpoint device.

In other exemplary embodiments methods apparatuses systems and computer readable media comprise a plurality of services that enable visibility control and or compliance in a cloud computing environment with a runtime dashboard capable of displaying operational integrity metrics of systems based on a plurality of threat vectors.

In yet other exemplary embodiments methods apparatuses systems and computer readable media establish device to network flows based on dynamic attestation of device integrity and or security controls provisioned based on integrity and context aware business logic instead of for example topology based coordinates associated with encapsulation headers in network packets.

Exemplary systems and methods for dynamic attestation of application integrity are described in U.S. Non Provisional patent application Ser. No. 13 399 065 entitled System and Method for Application Attestation filed Feb. 16 2012 and U.S. Provisional Patent Application No. 61 443 854 entitled System and Method for Application Attestation filed Feb. 17 2011 both of which are incorporated herein by reference in their entireties.

According to exemplary embodiments methods apparatuses systems and computer readable media authorize user to application transactions and or data exchange in an established connection during the authentication phase based on dynamic attestation of devices.

In accordance with further exemplary embodiments methods apparatuses systems and computer readable media determine a calculus of risk based on a plurality of sensory inputs from network and endpoint sensors to correlate network activity system configuration resource utilization and application integrity.

According to an exemplary embodiment the network and endpoint sensors may be configured to measure runtime operational integrity and or detect anomalous deviations in behavior from baseline based on rule sets to generate tiered alerts.

In accordance with exemplary embodiments methods apparatuses systems and computer readable media comprise an event and behavior correlation engine configured to receive alerts calculate risks and generate warnings.

In other exemplary embodiments methods apparatuses systems and computer readable media remediate systems that are deviated vulnerable in duress or compromised based on a calculus of risk.

In accordance with yet other exemplary embodiments methods apparatuses systems and computer readable media include 1 a correlation engine configured to receive scan reports from vulnerability configuration compliance and patch scan services 2 a risk correlation matrix configured to store elements of the scan reports that are used to analyze the elements and 3 a module configured to generate an integrity profile of systems.

The presently disclosed exemplary technical solutions also may be embodied as methods apparatuses systems and computer readable media comprising 1 event correlation logic that correlates temporal system events based on multiple predicate scores 2 logic to determine a predicate score based upon a deviation from a prescribed value constraint per attribute or metric i.e. an attribute constraint 3 logic for calculating a score that is inversely proportional to the deviation 4 logic for determining a sample rate needed to achieve a required measurement frequency 5 logic for determining a recurrence of successive deviations 6 logic for identifying a weight for the attribute constraint 7 logic for determining an integrity confidence for the system or process or application entity as a weighted average of predicate scores and 8 logic for determining identifying outliers as exceptions across multiple systems or processes .

The exemplary methods apparatuses architectures systems and computer readable media disclosed herein may also use threat identification categories including but not limited to 

 2 dynamic image binary intermediate code or script analysis with process platform and network monitors 

 3 malware analysis for evasion techniques multiple packing obfuscated application programming interfaces APIs anti debugging anti memory anti tracing virtual machine monitor manager VMM or hypervisor emulator detection 

 4 dynamic system analysis of performance metrics harvested through native machine instrumentation registry and file system monitors and

 5 temporal system analysis with consolidated integrity measurement and verification assessments and scan reports.

The presently disclosed exemplary technical solutions may be embodied as a method apparatus and or system for integrity confidence measurement including 1 a weighted average of system or platform predicate scores 2 system or platform outliers 3 weighted average of process or application package predicate scores 4 process outliers.

The presently disclosed exemplary technical solutions also may be embodied methods apparatuses architectures systems and computer readable media for generating user reputation scores for a plurality of users based on one or more of 1 threat vectors modeled by actions of the plurality of users 2 risk correlation with aggregation of intelligence related to accessed object resource attribution subject roles globally unique subject identifiers security information and event management analytics and geo location services.

Although the invention is illustrated and described herein with reference to certain exemplary embodiments the invention is not intended to be limited thereto. Rather various modifications may be made that are within the scope and range of equivalents of the claims and without departing from the invention. Various features attributes and advantages described herein may or may not be present in various embodiments of the claimed invention.

In the detailed description herein references to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to affect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

In certain exemplary embodiments behavior deviations from a baseline healthy operational state to a vulnerable or compromised state may be detected and the infection identified before there is further propagation of the threat across interconnected systems or information is exfiltrated resulting in data loss or theft.

The proliferation of unmanaged smart phones and Bring Your Own Device BYOD initiatives in the Enterprise ecosystem has increased the ability of advanced malware to evade traditional network and endpoint security controls and propagate to connected systems over standard protocols. Various exemplary embodiments include determination of the operational integrity of the device and or the user in a transaction with an on premise or off premise service based on the calculus of risk from a plurality of sensory inputs for transaction and or flow level remediation of infected devices.

Referring to the exemplary embodiment provided in the network includes an event and behavior correlation engine configured to perform risk correlation based on continuous monitoring using a plurality of sensory inputs. In the embodiment of the sensory inputs can include but are not limited to one or more of network activity system configuration resource utilization and application integrity . The network also comprises a runtime dashboard configured to receive real time status indications for visibility of operational integrity of systems and a remediation engine configured to receive real time directives for control of infected systems.

The event and behavior correlation engine is configured to receive network events and infection profiles from a network activity sensor integrity measurement and verification reports of scans performed by a system configuration sensor . According to an embodiment the scans are performed by the configuration sensor according to a schedule. In embodiments the scans can be scheduled to run daily weekly bi weekly monthly or at other time increments as needed.

As shown in the event and behavior correlation engine is also configured to receive endpoint events of computing network and storage resource consumption from a resource utilization sensor and endpoint events of image profiles and local execution context from an application integrity sensor . Details of exemplary implementations of the system configuration sensor the resource utilization sensor the application integrity sensor and the endpoint events are described below with reference to .

The remediation engine may perform actions on a virtual machine VM actions on a network flow controller or actions on a transaction based on configured trigger controls.

As will be appreciated by persons skilled in the relevant art s a VM is a software implementation of a machine such as a server personal computer mobile computing device or other computing device that supports the execution of an operating system OS and executes applications as a physical machine running that OS would. A VM is a software implementation that duplicates the functionality of a physical machine implemented in hardware and software. Software applications and the OS running on a VM are limited to the resources and abstractions provided by the VM. Virtual machines VMs can be viewable within an overall virtual infrastructure. As will be appreciated by those skilled in the relevant art a VMM or hypervisor can be used to start up monitor and manage VMs. Such hypervisors can be but are not limited to VMMs such as the VMWARE Player MICROSOFT VirtualPC SUN VirtualBox VMWARE ESX ESXi MICROSOFT Hyper V CITRIX XENServer PARALLELS and others. As it would be apparent to one of skill in the art other hypervisors and VMs virtualization solutions can be used for VM in network as well.

As shown in the exemplary system may include an endpoint event correlation module configured to receive endpoint alerts from an instrumented system with a plurality of sensors configured to detect endpoint events related to one or more of application integrity resource utilization and system configuration . The system also comprises a network activity correlation module configured to receive network alerts from a network activity sensor .

With continued reference to the network activity correlation module is further configured to produce network warnings resulting from the network activity correlation and output the network warnings to an orchestrator . The orchestrator is configured to receive network warnings from network activity correlation module and endpoint warnings from the endpoint event correlation module . According to embodiments depicted in the received network warnings and endpoint warnings can be used by orchestrator to coordinate manual or automated actions on infected systems.

With continued reference to the orchestrator can similarly receive warnings produced by one or more additional instrumented systems see e.g. VM N with respective pluralities of sensors and endpoint event correlation modules.

As shown in the instrumented systems can include multiple virtual machines VMs i.e. VM . . . VM N with respective pluralities of sensors configured to detect endpoint events related to one or more of application integrity resource utilization and system configuration .

As shown in an exemplary method comprises receiving communications from an early warning system configured to continuously monitor the runtime integrity of systems. This continuous monitoring enables near real time determinations and detections of deviated vulnerable in duress and compromised systems .

The method can operate in conjunction with legacy security technologies to fill in the security holes or gaps inherent in traditional security solutions. As illustrated in such legacy security technologies can include anti virus software network firewalls and intrusion detection prevention systems IDS IPS . Unlike the early warning system and the automated and rapid response the legacy security technologies are limited to using signatures detecting protocol anomalies or virtual execution in a sandbox to monitor threats and attacks. As shown in once a target of an attack or threat i.e. a target system or vulnerable system becomes infected or compromised these technologies can be ineffective in protecting the compromised infected systems and preventing data breaches or service disruptions.

Example limitations of legacy security technologies are shown in . For example as depicted in a traditional network firewall technology using access control lists ACLs cannot reliably block every threat. This is because firewalls are typically limited to monitoring well known default open ports used as listening ports for web protocols such as the Transmission Control Protocol Internet Protocol TCP IP email protocols such as the Simple Mail Transfer Protocol SMTP and the Post Office Protocol POP and other protocols such as the File Transfer Protocol FTP the Secret File Transfer Protocol SSH Secure FTP SFTP telnet and the Remote Desktop Protocol RDP . IDS and IDP technologies using rulesets cannot detect every zero day signature anomaly attack and have issues with regarding false negatives and leaving platforms systems vulnerable to backdoor attacks. Similarly anti virus software cannot detect zero day mutant and low and slow infections.

The method can also supplement security audit scans and manual IT process that may be in place. For example an organization may periodically run security audit scans i.e. on a weekly or bi weekly basis . Such security audit scans may be National Institute of Standards and Technology NIST Security Content Automation Protocol SCAP compliant checks for common vulnerability exposures to identify deviated and vulnerable systems . The results from these scans may be used as part of manual IT processes for ticketing i.e. creating trouble tickets for deviated vulnerable systems and security compliance review boards. However as shown in these manual processes triggered by merely periodic scans can takes days or weeks to react to threats thus leaving target systems open to a long window of exposure.

The method improves upon the legacy technologies periodic audit scans and manual IT processes and makes up for their above noted shortcomings by carrying out an automated and rapid response for orchestration and remediation of infected systems . In an embodiment automated and rapid response can be performed by monitoring and orchestration systems not shown . In the example of a protocol is used for data exchange between the early warning system and monitoring and orchestration systems.

In an embodiment the early warning system monitors instrumented systems to measure and evaluate runtime operational integrity to determine whether a system has deviated become vulnerable is in duress or has been compromised. Once this determination has been made the system is marked by the early warning system as one or more of a deviated system a vulnerable system an in duress system or a compromised infected system. The early warning system can then issue warnings regarding the system via the protocol so that an automated and rapid response can be carried out by monitoring and orchestration systems.

Referring to the exemplary method may include determining or performing a calculus of risk for the data center application and data silos that receives sensory inputs from instrumentation including integrity measurement and verification scan correlation network activity correlation and endpoint event correlation and may generate integrity metrics for security orchestration and may dispatch directives to an edge device for example network firewall for user access controls to a load balancer for session controls or to a network fabric element for example a switch or router for flow controls .

With continued reference to the security orchestration may include user access controls as a remediation or mitigation means to block the infected device or malicious user from accessing protected data center centers session controls to divert users from infected systems or infected devices from protected systems flow controls to quarantine infected systems divert traffic away from protected systems or redirect traffic from attackers to pure high interaction or low interaction honeypots.

Referring to the exemplary attestation system includes a trust orchestrator a trust broker configured to receive integrity reports published by endpoint assessment services .

With continued reference to the trust broker can be configured to receive sensory data feeds that represent the configuration state of the system based on a remotely administered scan of a device such as device described with reference to below by endpoint assessment services . These scans provide a snapshot in time of the state of the system and are agnostic to runtime aspects of the system including applications thereon.

In an embodiment the sensory data is represented in a markup language such as but not limited to Extensible Markup Language XML . An integrity report incudes this sensory data. In embodiments the integrity report is generated by third party endpoint assessment services at platform and application level granularities. According to embodiments the integrity report may be received by the trust broker either a programmatically through outbound application programming interfaces APIs provided by respective application vendors or b manually through importing the integrity report as a file provided by an administrator through a dashboard of an administrative console user interface UI in a specified file format. Examples of an administrative console UI are discussed below with reference to .

The trust broker can also be configured to parse normalize and collate received integrity reports . In accordance with embodiments the parsing normalizing and or collating can be based on one or more object identifiers. Exemplary object identifiers can include but are not limited to machine hostnames IP addresses application names and package names. This parsing normalization and collation collectively processing generates temporal events that annotate the state of the endpoints devices at scan time. Additional embodiments of the trust broker are described with reference to and below.

According to embodiments the temporal events can be expressed as assertions about operational parameters e.g. vulnerabilities compliance patch level etc. based on enterprise policies established for a baseline configuration. The trust broker serves as a moderator that aggregates endpoint operational state measurements for situation awareness and threat identification by the trust orchestrator .

With continued reference to the temporal events can be an annotation e.g. an XML representation of the configuration state of the system including device application and package and include trust and severity scores as generated by third party security vendors based on integrity measurement and verification in accordance with standards established by organizations. These organizations can include NIST the MITRE Corporation and the United States Computer Emergency Readiness Team US CERT . The temporal events can be assertions about operational parameters expressed in the Open Vulnerability and Assessment Language OVAL to convey system details representing configuration information and a system machine state including vulnerability configuration patch level etc. Alternatively the system details can be conveyed using the SCAP protocol. According to embodiments the state representation includes schema attributes to measure configuration vulnerability exposures compliance and patch level based on severity. Compliance can be expressed in terms of the Extensible Configuration Checklist Description Format XCCDF using XCCDF checklists for devices attached to a system s Peripheral Component Interconnect PCI bus and data security system integrity compliance with the Health Insurance Portability and Accountability Act HIPAA Sarbanes Oxley Act SOX and or the Gramm Leach Bliley Act GLBA .

As shown in the integrity reports can be generated by performing one or more scans including but not limited to a vulnerability scan a configuration scan a compliance scan and a patch scan of networked endpoints. In an embodiment the trust broker can be implemented as the Trust as a Service TaaS Broker from TAASERA Inc. In one exemplary embodiment the trust orchestrator can be implemented as the TaaS Orchestrator from TAASERA Inc.

With continued reference to the attestation system further comprises a normalizer and collator and a system event correlator configured to receive temporal events associated with an endpoint and use a risk correlation matrix to correlate and generate an integrity profile for an endpoint. According to embodiments the system event correlator shown in can be configured to receive temporal events generated by the trust broker that measure the integrity of the system at last scan. Additional exemplary features of the system event correlator are described below with reference to .

In the embodiments of the integrity profile represents an aggregation of system warnings threats such as malware identified based on the received temporal and endpoint events. In one embodiment the format schema of the integrity profile is a standard Extensible Markup Language XML notation.

In embodiments the risk correlation matrix depicted in and the risk correlation matrix described with reference to A C are embodied as grids that represent an exemplary dynamic model of measurement and identification based on clustering and classification of independent endpoint events alerts to generate system warnings that may be mapped to warning categories or classes. Additional details of the risk correlation matrices and are provided below with reference to B and C.

As shown in the exemplary application operational integrity system includes an endpoint trust agent on a device comprising a process monitor configured to observe local execution context of applications and services. The endpoint trust agent further comprises a socket monitor configured to observe network activities of applications and services and a system monitor configured to observe system and platform resources consumed by applications and services. In the example embodiment provided in the trust agent also comprises an application integrity module and a resource utilization module configured to assess operational integrity based on rulesets. The trust agent can also comprise native machine instrumentation for a computing device being monitored by the application operational integrity system .

In embodiments the device depicted in may be a desktop server laptop a mobile computing device such as a smart phone or tablet or other types of mobile computing platforms that comprise a an operating system OS b a user operating the device to access a service or another device over a network and c application packages applications or application components that may be downloaded and installed either with or without user intervention for later execution. Non limiting examples of the device include a personal computer server laptop or tablet device running a MICROSOFT WINDOWS operating system OS a personal computer server or laptop running an OSX OS from Apple Inc. a personal computer server or laptop running a UNIX or Linux OS a personal digital assistant PDA an iPhone an iPod touch or iPad tablet device running an iOS from Apple Inc. a device operating the Android OS from Google Inc. device running the MICROSOFT WINDOWS Mobile or Phone OS a device running a Symbian OS a device running a PALM OS a BLACKBERRY device running a Blackberry OS from Research In Motion RIM a mobile phone a portable game device a gaming console a hand held computer a netbook computer a palmtop computer an ultra mobile PC or another similar type of computing device capable of processing instructions and receiving and transmitting data to and from users and other computing devices.

In embodiments the native machine instrumentation can represent any event subscription callback notification mechanism provided by the supported operating system OS on the device e.g. MICROSOFT WINDOWS Machine Instrumentation WMI Transport Filter Drivers Application Layer Enforcement Callout Drivers Linux Unix Network Filter Drivers etc. . The native machine instrumentation can generate raw events as described below with reference to the illustrative example in that may appear insignificant as an isolated occurrence but may include notable data points as forensic evidence of behavior anomalies or malicious activity to the event and risk correlation system.

Referring to the trust broker can be configured to receive one or more state attributes pertaining to applications running on a device and components from the endpoint trust agent . The trust broker serves as an arbitrator configured to dispatch a request for image analysis to one or more third party malware analyzers . In one embodiment the dispatch mechanism uses trigger filter expressions that specify the set of criteria that warrant initiation of image analysis e.g. frequency and volume of requests for analysis associated with the image across deployed endpoint trust agents and parameters configured for each available connector to a third party malware analyzer . According to an embodiment the parameters include cost latency and platform specific analysis capabilities. Such platform specific analysis capabilities can include static and dynamic analysis of applications on mobile platforms such as but not limited to devices running an Android operating system OS from Google Inc. a PALM OS a MICROSOFT WINDOWS Mobile or Phone OS a Symbian OS a Blackberry OS from Research In Motion i.e. a BLACKBERRY device or an iOS i.e. iPhone an iPod touch or iPad devices .

The third party malware analyzers perform static and dynamic analysis of the application images based on policies specified by the trust broker. The result of the malware analysis is a set of threats identified based on the analysis. The trust broker caches the results of the analysis indexed by a unique identifier for the image. The trust broker generates and returns an image profile to the endpoint trust agent which comprises assertions of malicious capabilities of the image that must be monitored at runtime for subsequent generation of endpoint events by the endpoint trust agent .

In the embodiment shown in the endpoint events are generated by a component of the endpoint trust agent and represent alerts based on endpoint sensor resident on the device . The alerts are mapped to a cell in the risk correlation matrix grid by the system event correlator . In one embodiment the format schema of the endpoint events is a standard Extensible Markup Language XML notation. Additional features of the endpoint events are described below with reference to .

With continued reference to the application operational integrity system can include a trust orchestrator comprising a system event correlator and a trust broker . The application operational integrity system can further include a malware analyzer . In an embodiment the trust orchestrator can be implemented as the TaaS Orchestrator from TAASERA Inc.

According to the exemplary embodiment depicted in the system event correlator can be configured to receive endpoint events from the endpoint trust agent as sensory inputs to a calculus of risk. The trust broker is configured to receive an image file and image attributes and then send the received image file to the malware analyzer for diagnosis. The trust broker can also receive an asynchronous prognosis and forward an asynchronous image profile to the process monitor to include in ruleset processing for diagnosis at the application integrity module .

According to embodiments the system event correlator shown in can be configured to receive temporal events generated by the trust broker that measure the integrity of the system at last scan and endpoint events from the endpoint trust agent that measure the runtime execution state of applications. The system event correlator can be further configured to map the events to a cell in the risk correlation matrix grid and processes the triggered system warnings to evaluate threats by category or vectors . In one embodiment the categories include at least resource utilization system configuration and application integrity. Each category is assigned a metric that is an indicator of the level of runtime operational integrity that may be asserted based on the system warnings and threat classification produced by the risk correlation matrix . The system event correlator can also be configured to generate an integrity profile for the device that describes the security risks and threats posed by the measured execution state of running applications on the device .

Referring to the exemplary correlation system includes an endpoint trust agent on a device that comprises runtime monitor configured to register for and receive a plurality of raw events from native machine instrumentation on the device . The runtime monitor is further configured to raise integrity events to an integrity processor that may apply rulesets to generate integrity alerts and generate or populate an event correlation matrix that maps integrity warnings to endpoint events for dispatch to a trust orchestrator .

In the embodiments shown in FIGS. and A C the endpoint events are generated by the integrity processor which is a component of the endpoint trust agent and represent alerts based an endpoint sensor resident on the device . As described above with reference to the alerts can then be mapped to a cell in the risk correlation matrix grid by the system event correlator which can be configured to read endpoint events expressed in XML notation.

With continued reference to the exemplary embodiment provided in the trust orchestrator comprises a system event correlator configured to use a risk correlation matrix to generate an integrity profile for the monitored system i.e. the target system . In one embodiment the system event correlator can be implemented as a correlation engine. In another embodiment the trust orchestrator can be implemented as the TaaS Orchestrator from TAASERA Inc.

For the risk correlation matrix shown in each cell in the grid is a set of alerts triggered through an event correlation matrix and rulesets rule expressions by the endpoint trust agent .

In certain exemplary embodiments the application integrity module and the resource utilization module described above with reference to may be included as a subcomponent or module of the integrity processor depicted in .

In certain exemplary embodiments the process monitor system monitor and socket monitor depicted in and described above may be included as subcomponents or modules of the runtime monitor .

By continuously monitoring for the endpoint events and performing dynamic analysis of detected endpoint events assertions about the integrity of a target system can be made. For example the endpoint events can be included in the endpoint events received by the event and behavior correlation engine in the network described above with reference to .

In one embodiment one or more of the endpoint events can be included in the endpoint events used by the attestation system described above with reference to . In other embodiments the endpoint events can be included in the endpoint events used by the system event correlator of the correlation system depicted in .

Referring to the exemplary endpoint events may include per process events per processor events system events and per image binary analysis events . According to an embodiment the events can include but are not limited to all events available through native machine instrumentation and extensible on the platform with provider plug ins.

As shown in in embodiments alerts may include platform alerts per image alerts grayware alerts i.e. for a watch list and per application alerts . The alerts are configurable and extensible and not limited to the alerts illustrated in .

Referring to the method populates a risk correlation matrix based upon one or more of system warning classes system warnings and integrity warnings . As shown in an alert expression can be expressed as a function of at least an attribute an attribute value constraint a sample rate a recurrence a score and a weight. The function may be specified in any programming language or construct as compiled intermediate or interpreted code.

The risk correlation matrix can comprise a universally unique identifier UUID for the system system warnings mapped to at least one system warning class and at least a system warning class to diagnose system deviations i.e. system deviated integrity warnings system duress system vulnerable and system infections i.e. system infected integrity warnings .

In the embodiment of each alert for the risk correlation matrix is generated by a program function that evaluates expressions that are specific for each attribute of the device . Based on the occurrence of a qualifying set of alerts in each cell the corresponding system warning is triggered. In the exemplary risk correlation matrix illustrates that for each device or application uniquely identified by a machine identifier e.g. a virtual machine universally unique identifier UUID IP address or application instance identifier application UUID a different set of alerts may trigger different system warnings that map to a common system warning class. By mapping alerts to a behavior model or cluster unknown such as emerging or polymorphic threats may be classified and identified without requiring image or wire level signatures. The alerts may be grouped as illustrated in to represent a category of alerts e.g. platform application grayware that includes applications that are placed on a watch list based on reports generated by third party malware analyzers image that are weighted by threat level based on inspections performed by the endpoint trust agent or malware analyzers . In an embodiment the program function can be configured to use conditional expressions operators to generate an alert based on value constraints sample rate for the measurement recurrence of measured values an assigned score and weight for the attribute. According to embodiments the score and weight can be predefined or customizable through a graphical user interface GUI or dashboard such as the GUIs described below with reference to .

In accordance with embodiments a plurality of timers may be associated in the evaluation of system warnings and system warning classes the calculus of risk and generation of an integrity profile for the system.

According to embodiments the integrity profile comprises at least the endpoint address and one or more of system warning class forensic confidence of the declared warning and the full evidence chain.

With reference to FIGS. and A C the integrity processor is a functional component of the endpoint trust agent . The integrity processor can be configured to receive integrity events from the runtime monitor that describes process processor system and binary analysis events illustrated in . Applying qualifying rule expressions illustrated in in the rulesets integrity alerts are generated and mapped to a cell in an event correlation matrix grid analogous to the risk correlation matrix of and grid of to generate system level integrity warnings . The rows in the event correlation matrix represent an application instance on the device analogous to rows in the risk correlation matrix that represent a device by machine identifier . The integrity warnings can be formatted as endpoint events for dispatch to the system event correlator of the trust orchestrator for threat classification and identification and subsequent remediation.

In accordance with embodiments a plurality of alerts in a variety of user configurable combinations for example as editable settings in an XML or text format configuration file or through a graphical administrative dashboard or user interface constitute a system warning and a system warning maps to a system warning class.

In accordance with embodiments a plurality of system warning classes can be included in the integrity profiles of the attestation system and correlation system depicted in respectively.

As shown in the trust orchestration architecture may include an endpoint trust agent on a device a network analyzer that may include a network activity correlator an endpoint assessment service a service provider for orchestration and or policy enforcement point services and a trust orchestrator that may include a trust broker a system event correlator a trust supervisor and a remediation controller .

According to the embodiments of the trust orchestrator is an aggregation that includes functional components such as the trust broker system event correlator the trust supervisor and remediation controller . In embodiments the trust orchestrator is configured to receive sensory threat intelligence from network analyzers endpoint assessment services and endpoint trust agents on devices . Through a sequence of normalization collation and risk correlation of events directives in the form of directives are dispatched to orchestration services to initiate remediation actions to deal with identified threats on devices . The directives are specific to the orchestration service and can include the use of vendor APIs. Examples of such vendor APIs include VMWARE vCloud APIs BMC Atrium APIs for accessing a BMC Atrium configuration management database CMDB from BMC Software Inc. Hewlett Packard Software Operations Orchestration HP OO APIs and standard protocols such as Open Flow.

In certain exemplary embodiments the system event correlator receives endpoint events from the endpoint trust agent temporal events from the trust broker correlates and sends an integrity profile for a network endpoint to the trust supervisor and the network activity correlator .

In certain exemplary embodiments the trust supervisor receives an infection profile for a network endpoint from the network activity correlator an integrity profile for a network endpoint from the system event correlator analyzes and classifies threats along with a forensic confidence score sends real time actions to the remediation controller and real time status indications to a dashboard controller . The remediation controller sends directives to orchestration and or policy enforcement point services for machine flow or transaction level remediation.

In embodiments the remediation controller can be configured to receive action requests from the trust supervisor . The remediation controller can also be configured to process the received requests and perform appropriate operations on orchestration services. According to embodiments upon processing a received action request the remediation controller may perform a a flow level operation on a network element e.g. a physical or virtual switch or a firewall or wireless access point b a machine level operation on a device e.g. a web or database server c a transaction level operation to restrict access to a service or device and or d an update notification to a network trust agent see e.g. network trust agents and depicted in respectively to indicate a revised reputation score for a device .

In embodiments the infection profile comprises at least the victim endpoint address and one or more of a forensic confidence of the declared infection the attacker source the command and control source the full evidence chain and the infection time range onset duration .

According to embodiments the integrity profile comprises at least the endpoint address and one or more of system warning class forensic confidence of the declared warning and the full evidence chain.

In accordance with embodiments the risk correlation matrices and of respectively may be included in the trust supervisor to consolidate and correlate integrity profile and infection profile of .

An exemplary flow of a threat detection and mitigation sequence is described below with reference to B and . In the example scenario below the exemplary threat is a user device infected with malware. The paragraphs below detail how exemplary embodiments described herein with reference to B and can handle such real world threat vectors. The multi dimensional event and risk correlation model described in the following paragraphs illustrates an exemplary method of detecting low and slow signature less threats that are characteristic of emerging malware and advanced persistent threats.

A user s device D may become infected with a form of an Advanced persistent threat e.g. malware M while the device D is still connected to an enterprise network of an organization . The connection of the device D to the enterprise network can occur through user activity for example when the user connects a plug and play portable universal serial bus USB device with the malware Mto the device D while it is connected to the enterprise network as the result of the user opening an email attachment infected with the malware M when the user accesses a social network application from the device D or when the user unwittingly transfers a file with the malware Mto device D while accessing a file sharing service.

The device D can also become infected with malware Mwhile the device D is disconnected from the enterprise network of the organization . For example the device D can become infected as a result of user activity on a home network or external wireless or wired network not managed by an enterprise IT administrator of the organization such as a mobile network or the Internet.

Once the device D is infected an egg download i.e. download of an .egg compressed archive file that evaded traditional network edge protections e.g. legacy security technologies such as firewalls and network IPS IDS systems has occurred. At this stage of infection legacy security technologies such as traditional antivirus programs installed on the device D are unlikely to detect the targeted malware Mbecause no signature or blacklist already exists for this threat. The malware Mmay then perform discrete and apparently benign surveillance operations on the device D such as periodic process restarts executable file property modifications i.e. changes to file name and or size attributes to introduce entropy and evade detection. The malware Mmay also make registry modifications perform keyboard input device monitoring screen level monitoring memory dumps disk navigation to inspect files without excessive resource CPU utilization on the device D.

At this post infection stage the endpoint trust agent monitors the executing malware process P performs file and component e.g. dynamic link library DLL level integrity checks including checking a file hash digest digital signature and certificate chain verification by leveraging collaboration services such as the collaboration services and described below with reference to respectively to access intelligent whitelisting services. These collaboration services are accessed through the trust orchestrator . Failure of one or more of these checks immediately places process Pon a grayware alert i.e. a watch list .

Assuming no checks fail at this stage the process Pis continuously monitored by the integrity processor for explicit rule violations. In an embodiment violations of a rule in a ruleset are continuously monitored for and detected. These rules detect anomalous behaviors in benign processes. Once a rule trigger criteria is reached the endpoint trust agent initiates an image integrity check and leverages a remote malware analyzer through the trust orchestrator . The purpose of this check is to avoid complete reliance on supply chain provenance and locally available evidence. The image profile generated from malware binary analysis provides the integrity processor additional local events to monitor for process P.

At this point the malware analyzer reports capabilities detected present in reverse engineered code through static and dynamic analysis of the image. Such image analysis can look for code obfuscation techniques in the reverse engineered code such as anti debug anti trace anti memory and anti emulation use of network communication protocols like SMTP FTP or HTTP use of embedded uniform resource locators URLs or IP addresses use of encryption methods such as use of the secure sockets layer SSL protocol listening on local ports remote ports accessed file system operations registry operations operations in temporary system or non program folders memory peek or poke operations and remote thread creation.

The integrity processor then monitors process Pfor related warnings and triggers endpoint events such as alerts to the system event correlator . Multiple endpoint assessment services may be deployed in the enterprise network to perform scheduled policy based scans to detect known exposures vulnerability configuration compliance and patch level exploits . The respective integrity reports may contain indications of exposures on the device D. However these reports do not affirm positive presence of a threat or an infection on the device D and may be unaware of the existence and runtime activities of process P. The trust broker generates temporal events that inform the system event correlator of the damage potential severity on the device D should any malicious program be active on the device e.g. a personally identifiable information PII violation on a database server a buffer overflow attack on an application server a structured query language SQL injection attack on a database server a keystroke or screen element capture a microphone or camera hijack etc. based on authoritative state snapshot information and scan policies applied in the assessment of device D.

Based on risk analysis triggered by endpoint and temporal events an integrity profile is generated by the system event correlator for the device D. The network activity correlator concurrently monitors all network traffic and activities of device D and dispatches infection profiles based on forensic evidence of malicious network dialogs indicative of an infected victim device D . The evidence may be indicative of malicious activities such as peer to peer propagation command and control communications or data exfiltration to an attacker. The trust supervisor classifies the forensic evidence based on the integrity and infection profiles generated independently by the endpoint network and scan based assessment sensors to determine the threat risk level of the device D with high forensic confidence to warrant an immediate manual or automated remediation action to mitigate the detected infection.

Referring to the exemplary subject integrity profile system includes a trust orchestrator a trust broker that can be configured to query and receive an associated response from a plurality of management systems.

With continued reference to the integrity profile system can include a plurality of subsystems including an inventory management system configured to provide resource object attributes a role management system configured to provide subject or user attributes e.g. roles and entitlements an identity management system configured to provide aggregated subject attributes a log management system configured to provide information and events categorized by subject a system event correlator that receives temporal events categorized by subject and a risk correlation matrix to generate an integrity profile for a subject that comprises a unique subject identifier and a reputation score.

Within the context of the subject integrity profile system the trust broker is configured to query and receive responses from third party management systems regarding inventory role identity and logs.

The inventory management system shown in is configured to provide information pertinent to devices e.g. mobile devices mobile applications enterprise desktops servers etc. . Examples of inventory management systems include commercial products available from the IBM and Oracle Corporations used for managing an inventory of Enterprise IT managed assets.

According to embodiments the role management systems shown in can be configured to provide information pertinent to a user s organizational roles resource level privileges application level entitlements and extended group memberships i.e. project level privileges and roles . Examples of role management systems include commercial products available from Oracle Computer Associates IBM and SAP for role based access controls to database objects files servers directories folders web servers applications network domains subdomains printers and other resources. In some of these systems users are assigned one or more roles that aggregate a set of privileges and permissions. For example roles in an Oracle or IBM relational database environment represent different tiers or levels of access to database objects. For example a user account with a database administrator DBA role may have privileges and permissions needed to delete i.e. drop create and alter database objects such as tables views synonyms stored procedures triggers user accounts entire databases and other roles. In contrast user accounts with lesser roles such as a developer or user role may only be able to insert and update data in database tables and views and revise existing stored procedure and trigger code. Yet other roles may be restricted to read only access to select records from database tables and views as needed to generate reports and run queries.

In accordance with embodiments the identity management systems shown in can be configured to provide information pertinent to a user s organizational domain accounts and group level memberships e.g. MICROSOFT Active Directory Oracle Internet Identity .

In embodiments the log management systems shown in can be configured provide information pertinent to a user s activities at the endpoint device and at the network level of operations based on logs generated by endpoint and network elements and reported through standard system information and event management protocols e.g. SYSLOG and formats such as the WebTrends Enhanced Log file Format WELF or the Common Event Format CEF used for network security applications.

Referring to the exemplary calculus of risk system includes a network endpoint assessment configured to generate a network security scan report an endpoint collator to parse a plurality of received reports for categorization by address or geo location a normalizer for report consolidation an object collator for categorization by package and component an integrity processor on a device for runtime system application and user context an endpoint trust agent a global object context generator for aggregation of context an event processor for evaluation of context a rules repository of object attributes configured to include at least constraints a sample rate a recurrence a score and a weight for integrity assessments an event correlator an event correlation matrix a threat classifier a dashboard controller and a remediation controller .

According to the exemplary embodiments of and the trust supervisor can be configured to receive infection profiles from the network analyzers and integrity profiles from the system event correlator . The trust supervisor uses an event processor an event correlator a threat classifier an event correlation matrix and a rules repository to correlate events associated to a device for the classification and identification of threats based on the forensic confidence of leading indicators.

In an embodiment the network endpoint assessment comprises performing a security scan of network endpoints for vulnerability configuration compliance and patch management and use the results of these scans to generate a security assessment report . As shown in an endpoint collator is configured to receive the generated security assessment report . In embodiments depicted in at this point the endpoint collator can then sort the security assessment report by endpoint address and or geo location to produce categorized reports .

A normalizer is configured to receive the categorized reports and then normalize the elements therein to produce normalized reports .

An object collator is configured to receive the normalized reports and then sort the elements therein by object package and component to produce temporal events for the global object context generator .

In certain exemplary embodiments the global object context generator receives endpoint events that may include the local runtime object execution context from the integrity processor on a device and temporal events that may include endpoint security context from the object collator .

In exemplary embodiments the event processor receives endpoint integrity profiles from the global object context generator retrieves associated endpoint rules from the rules repository generates and sends endpoint alerts to the event correlator .

According to exemplary embodiments the event correlator receives endpoint events from the event processor maps the alerts using the event correlation matrix generates and sends endpoint warnings to the threat classifier .

In accordance with exemplary embodiments the threat classifier may categorize threats send status indications to the dashboard controller for real time visibility of endpoint integrity and send action requests to the remediation controller .

In certain exemplary embodiments the endpoint collator normalizer and object collator may be included in the trust broker as described above with reference to .

In certain exemplary embodiments the global object context generator may be included in the system event correlator described in .

In certain exemplary embodiments the event processor event correlator and threat classifier may be included in the trust supervisor as described in .

Referring to the exemplary subject reputation system includes a user authenticated on a device through an authentication process ceremony with an authentication service a service provider configured to receive a service request a managed application that may be the target service a reputation broker a trust broker a log management system a role management system and an identity management system .

Unless specifically stated differently a user is interchangeably used herein to identify a human user a software agent or a group of users and or software agents. Besides a human user who needs use devices and the attestation systems described herein a software application or agent sometimes needs to run applications access services or social networks conduct online transactions review update or analyze security data and process events alerts and warnings. Accordingly unless specifically stated the term user as used herein does not necessarily pertain to a human being.

With continued reference to the exemplary subject reputation system also includes an inventory management system a reputation processor a risk correlator a risk correlation matrix and a reputation score generator .

In an embodiment the reputation processor is a component of the system event correlator configured to receive subject events from the trust broker and includes user alerts that are analogous to integrity profiles of a user .

As shown in the risk correlator can be configured to receive subject alerts such as alerts for a user or a device and map the subject alerts to a cell in the risk correlation matrix grid analogous to the risk correlation matrix in . The subject warnings i.e. user or device warnings triggered can then be processed by the reputation score generator to determine the user s reputation score .

In embodiments the subject events shown in can be assertions about provisioned attributes endpoint and network level activities associated with a subject received as a response to a directed query from the respective management systems. The subject can be a user a device a transaction or an organization such as a company.

In certain exemplary embodiments a device sends a service request on behalf of a user to a service provider to access a managed application . The service provider sends a reputation query to the reputation broker receives a reputation token that may include at least a reputation score for the user or device and enforces a reputation based access control to permit or deny the service request to access the managed application .

Within the context of the subject reputation system the trust broker is configured to process received subject attributes e.g. entitlements memberships of users roles for users activity information to generate and dispatch subject events to the reputation processor . The subject events represent assertions about the subject that may determine a level of security risk in a transaction e.g. static and dynamic separation of duties principle of least privilege observed resource usage patterns observed activities on the internal and external networks etc. . In one embodiment the queries issued by the trust broker are preconfigured but can be customized by the administrator from a graphical user interface GUI or dashboard such as the exemplary GUI described below with reference to . In embodiments the management systems may include information systems hosted by social networking vendors such as FACEBOOK operated by Facebook Inc. Twitter operated by Twitter Inc. and LinkedIn.

According to exemplary embodiments the trust broker receives a query for a reputation score for a subject i.e. a user device transaction service or organization sends a subject activity query to log management systems sends a subject attribute query to role management systems and identity management systems sends a device attribute query to inventory management systems generates and sends subject events to the reputation processor .

In the context of the subject reputation system the inventory management system shown in can be configured to provide information pertinent to subjects that are devices including mobile devices mobile applications enterprise desktops servers etc.

With continued reference to in an embodiment associated device attributes include at least a device geo location a device provisioned state enabled disabled device functions and an owner registration i.e. a user registration or an organization registration .

In accordance with embodiments the risk correlator is configured to receive subject alerts use the risk correlation matrix to map the subject alerts to subject warnings and invoke the reputation score generator to establish a subject reputation score which can be included in the reputation token by the reputation broker .

In the exemplary embodiment of the subject alerts can be user alerts i.e. user integrity profiles device alerts or application alerts for an application executing on the device . In certain exemplary embodiments the reputation processor may be included in the system event correlator described in .

According to exemplary embodiments the risk correlator the risk correlation matrix and the reputation score generator may be included in the trust supervisor described in .

Referring to the exemplary network flow remediation system may include an endpoint trust agent on a device that may execute an application a trust orchestrator a plurality of collaboration services that may include malware analyzers network endpoint assessment services and reputation services a network service that may include a network trust agent and an Open Flow security framework an Open Flow controller and an Open Flow enabled network element for example a switch or router .

In certain exemplary embodiments the endpoint trust agent sends a dynamic context that may include the local runtime execution context of an application to the trust orchestrator that may perform a calculus of risk on a global security context that may include endpoint assessment reports received from collaboration services and sends a system warning endpoint threat intelligence as a subscription based reputation service to a network trust agent for network flow remediation.

In certain exemplary embodiments the network trust agent sends messages to the OpenFlow security framework middleware to send directives to an OpenFlow controller or send directives to an OpenFlow controller to notify by means of a protocol an OpenFlow enabled network element to apply access controls to block or divert traffic flows.

Referring to the exemplary mobile security system includes an endpoint trust agent on a mobile device that may execute a mobile application a trust orchestrator a plurality of collaboration services that may include malware analyzers network endpoint assessment services and reputation services a network service that may include a network trust agent and an network security framework a network element for example a switch or router a wireless access point a mobile policy manager and a mobile device manager .

Referring to and in an embodiment the endpoint trust agent resides on a device . The endpoint trust agent can be configured to monitor all operations performed on the device at runtime including running applications and device functions e.g. microphone camera keyboard or display functions and dispatches endpoint events and security service requests to the trust orchestrator . The runtime monitor a functional component of the endpoint trust agent includes a system monitor a socket monitor and a process monitor that receive raw events from native machine instrumentation using a notification mechanism e.g. MICROSOFT WINDOWS Management Instrumentation WMI or the Android Application Manager . In certain exemplary embodiments the endpoint trust agent may also receive and process messages from a mobile device manager or mobile policy manager to control device operations and or settings. The endpoint trust agent is risk and threat agnostic and merely generates events based on the evaluation of rulesets and assessment of runtime behavior based on the threat correlation matrix . The assessment of risk and classification and identification of threats can be delegated to the trust orchestrator .

In certain exemplary embodiments the endpoint trust agent sends a dynamic context that may include the local runtime execution context of a mobile application to the trust orchestrator that may perform a calculus of risk on a global security context that may include endpoint assessment reports received from collaboration services and sends threat intelligence as a subscription based reputation service to a network trust agent for network flow remediation.

In certain exemplary embodiments the network trust agent sends messages to the network security framework middleware to send policies to a wireless access point or send policies to a wireless access point to apply access controls to block or divert traffic flows.

In certain exemplary embodiments the trust orchestrator sends messages to the mobile policy manager to send directives to the mobile device manager to set feature controls on the mobile device or send directives to the endpoint trust agent for the integrity processor and runtime monitor of .

In certain exemplary embodiments the trust orchestrator is configured to send messages to the mobile device manager to set feature controls on the mobile device .

The terms console display display display screen and screen are used interchangeably herein to refer broadly and inclusively to any type of display device or screen coupled to or integrated with a computing device for displaying content viewable by a user of the computing device such as administrators for the systems describe herein or a user of a device . In an embodiment the device is a mobile computing device . Such a display screen can include for example and without limitation a touch screen liquid crystal display LCD . In embodiments of the invention the GUIs of a mobile device is viewed on a display. In other embodiments the GUIs shown in are viewed on a display of a server i.e. a server console a desktop computer i.e. a PC monitor or a laptop display.

In the example GUIs shown in the console interface and dashboards are rendered in a dedicated native interface. In alternative embodiments the console interface can be web based and rendered within a web browser. In other embodiments the console interface and dashboards illustrated in can be displayed on server or workstation displays having a touch sensitive i.e. touch screen display. For ease of explanation the operation of the console interface is discussed in the context of a computing device platform with an input device such as a mouse or pointing device including a touch screen but is not intended to be limited thereto. Examples of such computing device platforms include but are not limited to OSX server and workstation operating systems OSs from Apple Inc. WINDOWS server and workstation OSs from the MICROSOFT Corporation UNIX based OSs and Linux OSs such as but not limited to Linux from RedHat Inc.

In alternative embodiments the GUIs of can be rendered on a display of a mobile computing device such as but not limited to a personal digital assistant PDA an iPhone an iPod touch or iPad tablet device a device operating the Android operating system OS from Google Inc. a device running a MICROSOFT WINDOWS Mobile or Phone OS a device running a Symbian OS a device running a PALM OS a BLACKBERRY device running a Blackberry OS from Research In Motion RIM a smart phone a hand held computer a netbook computer a palmtop computer a laptop computer an ultra mobile PC or another similar type of mobile device capable of processing instructions and receiving and transmitting data to and from users and other computing devices.

It is to be understood that the console interface and dashboards illustrated in the exemplary embodiments of can be readily adapted to execute on a display of mobile device platforms and operating systems a computer terminal a display of a client device a display console of a server a display console of a monitoring device a display of a target or subject device or other display of a computing device. Thus the exemplary GUIs illustrated in can be rendered on a display of a mobile device using an attestation application within a web browser session on a display console of an attestation server or on a display of a client device running an attestation application.

Throughout displays are shown with various icons folders panes command regions interfaces windows tabs tiles data entry fields drop down menus and buttons that are used to initiate action invoke routines monitor and display data related to operational integrity of monitor resource utilization or invoke other functionality. The initiated actions include but are not limited to viewing events editing events inputting calendar preferences a backward scroll a forward scroll and other calendar view navigation inputs and gestures. For brevity only the differences occurring within the figures as compared to previous or subsequent ones of the figures are described below.

In an embodiment the display used to display the GUIs and dashboards shown in may be a computer display shown in and the console interface may be display interface . According to embodiments of the present invention a user can interact with the console interface and dashboards using input devices such as but not limited to a touch screen a pointing device a stylus a track ball a touch pad a mouse a keyboard a keypad a joy stick a voice activated control system or other input devices used to provide interaction between a user and a GUI.

Referring to the exemplary data center administration console may visually display as a single pane an operational integrity dashboard or display window to provide a global view of the data center inventory i.e. a global view dashboard . The display window can include information fields including the global view of the data center inventory in a hierarchical tree view of resources a component level view of a resource a resource name a resource platform type integrity metrics for a plurality of trust vectors that include at least the system configuration resource utilization application integrity network activity a remediation action a remediation control that may include at least a restore quarantine and divert users function an action summary a details pane a status pane and color coded runtime integrity indicators . The console can also graphically display risk indicators as integrity indicators and indications of impact analysis based on a confidence level of received integrity metrics for the trust vectors.

The information fields may be displayed and or updated in real time or near real time. The color coded runtime integrity indicators for each displayed trust vector and may be animated and include audio visual effects. For example the integrity indicators can be animated with location changes color changes size changes cross fading blinking beeping or vibration i.e. when displayed on a mobile client device . In embodiments some or all of the integrity indicators may be hyperlinked graphics with links to detailed dialog boxes expanded views or reports for a drill down or detailed view of the corresponding trust vector.

Although the integrity dashboard is shown with specific information fields and labels in a particular arrangement it is contemplated that other information fields and arrangements are possible. For example additional trust vectors or a custom filter based perspective view may be displayed or the dashboard may be embedded as a plug in control and streamlined in a third party management console.

Referring to the exemplary runtime operational integrity monitoring console may visually display a system configuration dashboard or display window in a single pane. The display window may include information fields including a severity a warning or observed activity a timestamp an evaluation status a recommended action advanced details that may include a timestamp corresponding to the displayed threat details pane source location threat identifier and victim identifier threat details pane and machine history that may pertain to infection history.

The threat details pane may include a forensic evidence chain a plurality of detected events that led to the infection diagnosis and threat identification.

Although the system configuration dashboard is shown with specific information fields and labels in a particular arrangement it is contemplated that other information fields and arrangements are possible.

Referring to the exemplary runtime operational integrity monitoring console may visually display a resource utilization dashboard or display window . The display window may include information fields including a severity a warning or observed activity a timestamp an evaluation status a recommended action advanced details that may include a timestamp corresponding to the displayed threat details pane source location threat or malware identifier and victim identifier threat details pane and machine history that may pertain to infection history.

The threat details pane may include a forensic evidence chain a plurality of detected events that led to the infection diagnosis and threat identification.

Although the resource utilization dashboard is shown with specific information fields and labels in a particular arrangement it is contemplated that other information fields and arrangements are possible.

Referring to the exemplary runtime operational integrity monitoring console may visually display an application integrity dashboard or display window . The display window may include information fields including a severity a warning or observed activity a timestamp an evaluation status a recommended action advanced details that may include a timestamp corresponding to the displayed threat details pane source location threat or malware identifier and victim identifier threat details pane and machine history that may pertain to infection history.

The threat details pane may include a forensic evidence chain a plurality of detected events that led to the infection diagnosis and threat identification.

Although the application integrity dashboard is shown with specific information fields and labels in a particular arrangement it is contemplated that other information fields and arrangements are possible.

As shown in an exemplary runtime operational integrity monitoring console may visually display a network activity dashboard or display window . The display window may include information fields including a severity a warning or observed activity a timestamp an evaluation status a recommended action advanced details that may include a timestamp corresponding to the displayed threat details pane source location threat or malware identifier and victim identifier threat details pane and machine history that may pertain to infection history.

The threat details pane may include a forensic evidence chain a plurality of detected events that led to the infection diagnosis and threat identification.

Although the network activity dashboard is shown with specific information fields and labels in a particular arrangement it is contemplated that other information fields and arrangements are possible.

The flowcharts depicted in are described with reference to the embodiments of and . However the methods shown in are not limited to those example embodiments. The steps of the methods shown in do not necessarily have to occur in the order described below. According to embodiments some of the steps of the methods are optional.

In step raw events from the native device and or platform instrumentation are received. In an embodiment the endpoint runtime monitor described with reference to above receives the raw events . After the raw events are received control is passed to step .

In step image file and attributes are sent to a trust broker. According to an embodiment this step is performed by the process monitor described with reference to above that is included in the endpoint runtime monitor described with reference to above. In this embodiment the process monitor included in the endpoint runtime monitor sends image file and attributes to the trust broker at the trust orchestrator described with reference to FIG. above so that specialized image analysis can be performed. After the image file and attributes are sent the method continues with step .

In step the trust broker validates the image file based on received image attributes before passing control to step . In accordance with an embodiment the validation in step can be performed by the trust broker described with reference to above.

In step the trust broker i.e. trust broker sends the received image file to a malware analyzer. In one embodiment the malware analyzer is malware analyzer described with reference to above and the malware analyzer is configured to perform specialized static and dynamic image introspection of the received image file.

In step a trust broker such as but not limited to the trust broker generates and sends based on a received diagnosis an image profile to an endpoint process monitor. In an embodiment this step comprises sending an image profile to the endpoint process monitor described above with reference to . After the image profile is sent control is passed to step .

In step the endpoint runtime monitor generates and sends integrity events such as but not limited to integrity events to an integrity processor such as but not limited to the integrity processor described above with reference to .

In step the endpoint integrity processor may process and map received events to alerts using rulesets . In step the endpoint integrity processor may generate and send warnings using an event correlation matrix to the trust orchestrator as endpoint events .

In step a system event correlator such as but not limited to the system event correlator receives endpoint events from the endpoint integrity processor .

In step the trust broker receives network endpoint integrity measurement and verification reports from an endpoint assessment service .

In step a system event correlator may correlate the received endpoint and temporal events and generate an integrity profile for the device before passing control to step .

In step the system event correlator sends an integrity profile of the device to the trust supervisor .

In step the network activity correlator sends infection profiles to a trust supervisor the trust supervisor .

In step the trust supervisor may process the received integrity and infection profiles for classification of warnings based on forensic confidence for threat identification on the device .

In step the trust supervisor sends to the remediation controller actions to perform on the infected device . In step the remediation controller may process the received action request on the infected device and send directives based on configured thresholds and triggers to system orchestration and policy enforcement point or network security services .

In particular illustrates the steps by which a method provides a user reputation service for a service provider. In one embodiment the service provider is the service provider described above with reference to and the method can use a trust orchestrator such as but not limited to the trust orchestrator described above with reference to .

According to embodiments steps of the method can also be performed using an endpoint trust agent a network analyzer and a network analyzer such as but not limited to the endpoint trust agent network analyzer and the endpoint assessment service described above with reference to .

In step an endpoint runtime monitor such as but not limited to the endpoint runtime monitor described above with reference to receives raw events from the native device and or platform instrumentation detect and identify the user authenticated by the authentication service at the device .

In step the endpoint runtime monitor receives user activity events from the native device and or platform instrumentation . After the user activity events have been received control is passed to step .

In step the endpoint runtime monitor may generate and send integrity events to the endpoint integrity processor .

In step the endpoint integrity processor may process and map received events to alerts using rulesets .

In step the endpoint integrity processor may generate and send warnings using an event correlation matrix to the trust orchestrator as endpoint events . After the warnings and event correlation matrix have been generated and sent the method continues with step .

In step the trust broker may query and receive user and resource attributes and from a plurality of collaboration services and generate subject events . In step the reputation processor may analyze received subject events and generate subject alerts i.e. user alerts or integrity profiles .

In step the risk correlator may correlate received subject alerts such as user alerts to generate user warnings using the risk correlation matrix and user reputation score using the reputation score generator .

In step the trust supervisor may process the received integrity and infection profiles for classification of warnings based on forensic confidence for threat identification of a user of the device . The user may be associated with the device due to currently being logged into the device running an application on the device or by virtue of having account user ID privileges to access resources such as files data applications or web pages on the device .

In step the reputation broker receives a reputation query for the user of the device from a service provider .

In step the reputation broker sends a reputation token for the user of the device . In an embodiment the reputation token sent in this step includes at least a user reputation score . After the reputation token is sent control is passed to step .

In step the service provider applies a reputation based access control in processing a service request received from the device for the user to access a managed application . After the reputation based access control has been applied control is passed to step .

In step the trust supervisor sends to the remediation controller actions to perform on the network fabric for sessions of the user of the device .

In step the remediation controller may process received action request for sessions of the user of the device and send directives based on configured thresholds and triggers to system orchestration and policy enforcement point network security services .

Referring to the method can provide network flow level remediation for an infected device at a network element using a trust orchestrator an endpoint trust agent a network trust agent and collaboration services .

In step the endpoint runtime monitor at the endpoint trust agent on the device sends a dynamic context that may include endpoint events to the trust orchestrator .

In step the trust orchestrator may analyze received endpoint events from the endpoint trust agent on the device before passing control to step .

In step the trust broker receives and analyzes network endpoint assessments or integrity measurement and verification reports from an endpoint assessment service or collaboration services and generate temporal events .

In step the system event correlator may correlate endpoint and temporal events and generate an integrity profile for the device .

In step the trust supervisor may generate and send to the remediation controller flow remediation actions to perform on the network fabric.

In step the remediation controller at the trust orchestrator sends to the network trust agent a system warning for the network device . In step the network trust agent may generate and send to the Open Flow security framework directives to formulate commands for the Open Flow controller .

In step the OpenFlow controller sends rules to the Open Flow enabled network element switch to divert or block traffic flows to from the forewarned network device .

In step the OpenFlow enabled network element switch may enforce received access restrictions controls for the forewarned network device before control is passed to step .

In step the trust supervisor may monitor and send reputation score updates for the forewarned network device to the remediation controller . In step the remediation controller at the trust orchestrator sends system security posture status updates for the forewarned network device to the network trust agent . After the reputation score updates are monitored and sent the method proceeds to step .

In step the network trust agent may generate and send to the Open Flow security framework directives to formulate commands for the Open Flow controller to restore normal flows to from the forewarned network device .

Referring to the method can provide network flow level remediation for an infected mobile device at a wireless access point using a trust orchestrator an endpoint trust agent a network trust agent and an endpoint assessment service .

In step the endpoint runtime monitor at the endpoint trust agent on the mobile device sends a dynamic context that may include endpoint events to the trust orchestrator before passing control to step .

In step the trust orchestrator may analyze received endpoint events from the endpoint trust agent on the mobile device .

In step the trust broker receives and analyzes network endpoint assessments or integrity measurement and verification reports from an endpoint assessment service or collaboration services and generate temporal events . After the network endpoint assessments are analyzed and the temporal events are generated the method proceeds to step .

In step the system event correlator may correlate endpoint and temporal events and generate an integrity profile for the mobile device .

In step the trust supervisor may generate and send to the remediation controller flow remediation actions to perform on the network fabric.

In step the remediation controller at the trust orchestrator sends to the network trust agent a system warning for the mobile device before control is passed to step .

In step the network trust agent generates and sends to the wireless access point policies to apply access controls for the mobile device at which point control is passed to step .

In step the remediation controller at the trust orchestrator sends to the mobile policy manager a system warning for the mobile device or to the mobile device manager directives to set feature controls on the mobile device .

In step the mobile policy manager generate and send to the mobile device manager directives to formulate advisories and security settings for the registered user service subscriber and the mobile device or set feature controls on the mobile device .

In step the reputation broker receives a reputation query for a mobile device from a service provider .

In step the reputation broker sends a reputation token for the device that may include at least a security posture established by the trust supervisor based on the received infection and integrity profiles for the device .

In step the service provider may apply a reputation based access control in processing a service request received from the device to access a managed application .

Referring to the exemplary reputation scoring system computes a reputation score for a user that is employed by a member of or otherwise associated with an organization . The user can be associated with the organization temporarily i.e. as a contractor . The user uses one or more endpoint devices to perform an online transaction with a service that is rendered by an application and managed by the organization to participate in an activity . In embodiments the activity is categorized as either social or professional .

According to embodiments the organization can be but is not limited to a company a government agency division a university or school a hospital a non profit firm or any other group that needs to secure systems platforms mobile computing devices or other IT assets on behalf of its employees members i.e. users of devices . The organization s IT assets can include but are not limited to servers desktop computers laptops tablet computers multi function printers scanners fax machines and network devices. The IT assets can be devices owned or leased by the organization and directly controlled by the organization .

The IT assets can include devices owned and managed by users i.e. a user owned mobile computing device in a BYOD environment or the organization i.e. a corporate IT asset owned or leased by the organization . In an embodiment the reputation scoring system can operate in a mixed environment of IT assets wherein the organization owns some devices leases some devices and users own other devices . For example the organization may own enterprise servers and network devices not shown lease laptops desktop computers personal computers PCs and other endpoint devices for users and simultaneously allow user owned mobile computing devices i.e. smart phones laptops and tablets in a BYOD environment to access the organization s domain via internal or external networks. The internal networks can be but are not limited to an intranet a LAN or a WAN. The external networks can be but are not limited to an extranet a wireless data networks such as Wi Fi and the Internet.

The servers not shown in the reputation scoring system may be part of a server farm and can be but are not limited to application servers hosting applications file servers mail servers database servers proxy servers and web servers. These servers can be enterprise servers owned by the organization or servers under a corporate lease. Alternatively the servers can also be part of a remote service provider managed outsourced virtual data center i.e. a cloud computing environment . The network devices can be networked storage devices routers switches hubs and firewalls. These network devices can be part of the organization s local area network LAN or wide area network WAN .

Referring to the exemplary hierarchical representation of a subject reputation score includes a reputation score a transaction score a user score a service score a social score a professional score a device score an organization score and an application score . In the exemplary embodiment of the organization score can be for example a company score .

A reputation score may comprise one or more component scores as an aggregation where a component score is illustrated in below an aggregate score for example a service score may be a component score of a transaction score . An aggregate reputation score may provide an enumerated list to annotate component scores included.

Referring to the exemplary representation of the architecture instrumented for trust includes a device an endpoint trust agent native machine instrumentation extended trust instrumentation a runtime monitor a system event correlator and a trust orchestrator .

The runtime monitor subscribes for and receives near real time asynchronous notifications of application events from the extended trust instrumentation . The application events may include registry file system network storage input for example keyboard output for example screen display memory for example peek or poke and process operations for example thread creation and usage of any system resource for example microphone or camera by running applications on the target instrumented device .

The extended trust instrumentation may be layered extensions to native machine instrumentation such as for example the WINDOWS Management Instrumentation WMI on MICROSOFT WINDOWS platforms.

As will be appreciated by persons skilled in the relevant art WMI is a set of extensions to the MICROSOFT WINDOWS Driver Model WDM which is a framework for device drivers that provides an operating system interface through which instrumented components i.e. components of an instrumented platform provide information and notification. WMI is a MICROSOFT implementation of the Distributed Management Task Force DMTF Web Based Enterprise Management WBEM and the DMTF Common Information Model CIM standards. WMI is preinstalled on some MICROSOFT WINDOWS Operating Systems OSs and allows scripting languages like Visual Basic Scripting Edition VBScript or Windows PowerShell to manage computing devices and platforms running a MICROSOFT WINDOWS OS. Such management can be performed locally i.e. on the server or platform being managed or remotely from a computing device external to the managed platform device.

In certain exemplary embodiments the runtime monitor may generate and send dynamic expressions or rules as application filters linked to one or more running instances of applications on the target instrumented device .

The application events and application filters may be expressed using standards based schema definitions such as for example the DMTF CIM specification. In a non limiting embodiment the CIM schema can be used to provide Trust as a Service TaaS .

In embodiments the architecture can be used with APIs to subscribe for asynchronous application events such as but not limited to registry file system network and process operations e.g. Load Library Remote Thread Attach Peek Poke Memory operations .

Embodiments of the architecture can include packaging of a TaaS endpoint comprising an endpoint trust sensor with OS updates such as but not limited to MICROSOFT WINDOWS UNIX Linux and Apple OSX updates i.e. OS and application upgrades and security patches for browsers business productivity suites device drivers and other platform components . By using the architecture an endpoint trust sensor can measure runtime operational integrity by evaluating risk based on actions and leveraging the native machine instrumentation .

In embodiments the architecture also enables a network trust sensor to perform signature less network activity correlation using a threat life cycle model for clustering and classification of malware.

According to embodiments the architecture enables trust orchestration for actionable intelligence based on real time event correlation i.e. a calculus of risk by using an API collaboration bus for integration of security intelligence.

Although exemplary embodiments have been described in terms of a computing device or instrumented platform it is contemplated that it may be implemented in software on microprocessors general purpose computers such as the computer system illustrated in . In various embodiments one or more of the functions of the various components may be implemented in software that controls a computing device such as computer system which is described below with reference to .

Aspects of the present invention shown in or any part s or function s thereof may be implemented using hardware software modules firmware non transitory computer readable media having instructions stored thereon or a combination thereof and may be implemented in one or more computer systems or other processing systems.

If programmable logic is used such logic may execute on a commercially available processing platform or a special purpose device. One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations including multi core multiprocessor systems minicomputers mainframe computers computers linked or clustered with distributed functions as well as pervasive or miniature computers that may be embedded into virtually any device.

For instance at least one processor device and a memory may be used to implement the above described embodiments. A processor device may be a single processor a plurality of processors or combinations thereof. Processor devices may have one or more processor cores. 

Various embodiments of the invention are described in terms of this example computer system . After reading this description it will become apparent to a person skilled in the relevant art how to implement the invention using other computer systems and or computer architectures. Although operations may be described as a sequential process some of the operations may in fact be performed in parallel concurrently and or in a distributed environment and with program code stored locally or remotely for access by single or multi processor machines. In addition in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.

Processor device may be a special purpose or a general purpose processor device. As will be appreciated by persons skilled in the relevant art processor device may also be a single processor in a multi core multiprocessor system such system operating alone or in a cluster of computing devices operating in a cluster or server farm. Processor device is connected to a communication infrastructure for example a bus message queue network or multi core message passing scheme.

The computer system also includes a main memory for example random access memory RAM and may also include a secondary memory . Secondary memory may include for example a hard disk drive removable storage drive . Removable storage drive may comprise a floppy disk drive a magnetic tape drive an optical disk drive a flash memory or the like.

The removable storage drive reads from and or writes to a removable storage unit in a well known manner. Removable storage unit may comprise a floppy disk magnetic tape optical disk etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art removable storage unit includes a non transitory computer usable storage medium having stored therein computer software and or data.

In alternative implementations secondary memory may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include for example a removable storage unit and an interface . Examples of such means may include a program cartridge and cartridge interface such as that found in video game devices a removable memory chip such as an EPROM or PROM and associated socket and other removable storage units and interfaces which allow software and data to be transferred from the removable storage unit to computer system .

The computer system may also include a communications interface . Communications interface allows software and data to be transferred between computer system and external devices. Communications interface may include a modem a network interface such as an Ethernet card a communications port a PCMCIA slot and card or the like. Software and data transferred via communications interface may be in the form of signals which may be electronic electromagnetic optical or other signals capable of being received by communications interface . These signals may be provided to communications interface via a communications path . Communications path carries signals and may be implemented using wire or cable fiber optics a phone line a cellular phone link an RF link or other communications channels.

The computer system may also include a computer display and a display interface . According to embodiments the display used to display the GUIs and dashboards shown in and described above may be the computer display and the console interface may be display interface .

In this document the terms computer program medium non transitory computer readable medium and computer usable medium are used to generally refer to media such as removable storage unit removable storage unit and a hard disk installed in hard disk drive . Signals carried over communications path can also embody the logic described herein. Computer program medium and computer usable medium can also refer to memories such as main memory and secondary memory which can be memory semiconductors e.g. DRAMs etc. . These computer program products are means for providing software to computer system .

Computer programs also called computer control logic are stored in main memory and or secondary memory . Computer programs may also be received via communications interface . Such computer programs when executed enable computer system to implement the present invention as discussed herein. In particular the computer programs when executed enable processor device to implement the processes of the present invention such as the stages in the methods illustrated by the flowcharts and of discussed above. Accordingly such computer programs represent controllers of the computer system . Where the invention is implemented using software the software may be stored in a computer program product and loaded into computer system using removable storage drive interface and hard disk drive or communications interface .

Embodiments of the invention also may be directed to computer program products comprising software stored on any computer useable medium. Such software when executed in one or more data processing device causes a data processing device s to operate as described herein. Embodiments of the invention employ any computer useable or readable medium. Examples of computer useable mediums include but are not limited to primary storage devices e.g. any type of random access memory secondary storage devices e.g. hard drives floppy disks CD ROMS ZIP disks tapes magnetic storage devices and optical storage devices MEMS nanotechnological storage device etc. and communication mediums e.g. wired and wireless communications networks local area networks wide area networks intranets etc. .

It is to be appreciated that the Detailed Description section and not the Summary and Abstract sections is intended to be used to interpret the claims. The Summary and Abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor s and thus are not intended to limit the present invention and the appended claims in any way.

Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.

The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can by applying knowledge within the skill of the art readily modify and or adapt for various applications such specific embodiments without undue experimentation without departing from the general concept of the present invention. Therefore such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.

Although the invention is illustrated and described herein with reference to specific embodiments the invention is not intended to be limited to the details shown. Rather various modifications may be made in the details within the scope and range equivalents of the claims and without departing from the invention.

