---

title: Peripheral apparatus, information processing apparatus, communication control method, and storage medium
abstract: A peripheral apparatus is communicably connected to a management apparatus. The management apparatus manages information of jobs in services provided from a providing apparatus via a network to execute processing of the jobs. The peripheral apparatus includes a communication unit. The communication unit transmits, in a series of processes in the services, checking information used to determine whether there is any job in the management apparatus to the management apparatus by a communication method that does not execute encryption. The communication unit transmits, in the series of processes in the services, other information different from the checking information to the management apparatus by a communication method that executes encryption.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450922&OS=09450922&RS=09450922
owner: Canon Kabushiki Kaisha
number: 09450922
owner_city: Tokyo
owner_country: JP
publication_date: 20120810
---
The present invention relates to a peripheral apparatus an information processing apparatus a communication control method and a storage medium

Recently peripheral apparatus control systems having peripheral apparatuses connected to information apparatuses have effectively been used in various places such as home and an office. These systems are using various interfaces such as a universal serial bus USB Ethernet registered trademark and a wireless local area network LAN . Examples of the peripheral apparatuses are a printer a copying machine a facsimile a scanner a digital camera and a multifunction peripheral MFP combining these apparatuses. For the printer and the multifunction peripheral among these peripheral apparatuses Google Inc. provides cloud printing services referred to as Google Cloud Print GCP registered trademark . The use of the cloud printing services allows a user to activate use a document creation application from a personal computer PC or a mobile device and print a document by the printer or the multifunction peripheral via the Internet. A printing procedure using the GCP is as follows.

 2 To print the document by the printer the user opens a print dialog to select the printer and executes printing.

 4 The GCP generates a job from a print setting value selected in the print dialog and the PDF file stores the print job in a print queue allocated to the printer in the GCP and notifies the printer of the print job.

 5 After reception of print job the printer acquires the print job and prints the print image of the PDF file according to the print setting value.

For example in the case of a printer or a multifunction peripheral that can render the PDF file the printer or the multifunction peripheral can print the print image by using the GCP according to the procedure. However in the case of an inexpensive printer or multifunction peripheral that cannot render the PDF file the inexpensive printer or multifunction peripheral cannot print the print image of the PDF file in 5 . To print the print image in such an inexpensive printer or multifunction peripheral by using the GCP there is a web application image conversion service application for converting the PDF file into an image format of for example a Joint Photographic Experts Group JPEG file to allow printing by the inexpensive printer or multifunction peripheral. Accordingly there is a peripheral apparatus control system that converts the PDF file into a JPEG file by using the image conversion service application to print the print image by the inexpensive printer or multifunction peripheral.

Japanese Patent Application Laid Open No. 2005 100340 discusses another technology relating to web print services. In the print services discussed in Japanese Patent Application Laid Open No. 2005 100340 printing is achieved at a printer installed in an arbitrary place by using the following method. This printing is realized by a method for exchanging print reservation data or printable application information between print environment sharing services arranged at respective places to provide a printing place to the user. The technology discussed in Japanese Patent Application Laid Open No. 2005 100340 enables the user to print the print image by the printer installed in the arbitrary remote place.

According to an aspect of the present invention a peripheral apparatus communicably connected to a management apparatus wherein the management apparatus manages information of jobs in services provided from a providing apparatus via a network to execute processing of the jobs the peripheral apparatus includes a communication unit configured to transmit in a series of processes in the services checking information used to determine whether there is any job in the management apparatus to the management apparatus by a communication method that does not execute encryption and transmit in the series of processes in the services other information different from the checking information to the management apparatus by a communication method that executes encryption.

Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the invention will be described in detail below with reference to the drawings. The embodiments are in no way limitative of the present invention. The components described in the embodiments are not always essential to solution of the present invention.

A POST method example of a communication method of Hypertext Transfer Protocol over Secure Socket Layer HTTPS encrypted by Secure Sockets Layer SSL communication may be used below in a web service application programming interface API . Information regarding the POST method is open to the public and thus detailed description thereof is omitted. The HTTPS is a known encrypted communication protocol and thus detailed description thereof is omitted. The SSL is a known method for encrypting data in the Internet to transmit or receive it and thus detailed description thereof is omitted. Further a GET method example of a communication method of Hypertext Transfer Protocol HTTP may be used in the web service API. Information regarding the GET method is open to the public and thus detailed description thereof is omitted. The HTTP is a known unencrypted communication protocol and thus detailed description thereof is omitted.

A GET method example of a communication method of HTTPS encrypted by SSL communication may be used in the web service API. Information regarding the GET method is open to the public and thus detailed description thereof is omitted. The HTTPS is a known encrypted communication protocol and thus detailed description thereof is omitted. Description as to the GCP is open to the public through the following site and thus detailed description thereof is omitted 

A first exemplary embodiment will be described. illustrates an example peripheral apparatus control system of a configuration of a system that includes an information processing apparatus and a peripheral apparatus. Each of a PC PC a PC and a PC is an example of an information processing apparatus computer for example a general personal computer. Each of a PC PC a PC and a PC includes hardware components illustrated in .

In the PC there is installed an operating system OS equivalent to Chrome registered trademark of Google Inc. In each of the PC and PC there is installed an OS for Server of Windows registered trademark of Microsoft Corporation. In the PC there is installed an OS equivalent to Linux registered trademark . The PC the PC the PC and the PC are respectively connected to networks and each including an interface I F such as Ethernet and also to the Internet .

Each of multifunction printers MFPs and is an example of a peripheral apparatus computer that includes a color ink jet printer a color facsimile a color scanner and an external storage for a flash memory. The MFPs and have model names of Kmmn by ABC Inc. For the peripheral apparatus an apparatus that includes a printer a copying machine a facsimile a scanner a digital camera or a multifunction peripheral of these apparatuses can be used. Each of the MFP and the MFP includes hardware components illustrated in . The MFP is connected to a network that is Ethernet and also to the Internet . The MFP is connected to a network that is Ethernet and also to the Internet .

A router is for example a broadband router Wi Fi BB router that includes a wireless LAN of Wi Fi registered trademark and is connected to the Internet . A mobile device is a portable telephone or a portable information terminal. The mobile device is connected to the router and to the Internet via the router . The PC the PC the PC the PC the mobile device the MFP and the MFP can perform bidirectional communication among themselves via the Internet communicably connected . A web browser is installed in the PC and a web browser is installed in the mobile device .

An application is a document creation application document creation APP using web services. An application is an application for providing cloud printing services cloud printing APP using web services. The cloud printing APP has for example a function similar to that of the GCP provided by Google Inc. By using the cloud printing services the document creation APP is executed by the web browser in the PC or the web browser in the mobile device to open a certain document and then the document can be printed by the MFP or the MFP .

For example when a user selects a print menu illustrated in to print the opened document the cloud printing APP displays a print dialog illustrated in . When the user selects a printer in the print dialog and presses a print button to instruct execution of printing the document creation APP generates a print image as a PDF file.

Then the cloud printing APP generates a print job based on the print image PDF file and a print setting value selected in the print dialog and stores the print job in a print queue for the printer selected in the cloud printing services. Further the cloud printing APP transmits a print job notification to the printer proxy APP in the exemplary embodiment described below .

When the printer or the MFP has a function of rendering the page description language PDL file the printer or the MFP can print the print job stored in the print queue. However many inexpensive ink jet printer or MFPs do not have functions of rendering PDF files. Thus when such a printer prints the print job stored in the print queue the print image of the PDF file is converted into an image format of a type to be rendered such as a MPEG file by the inexpensive printer example of preprocessing .

An application is an application proxy APP for providing cloud printing proxy services to associate the MFP or the MFP with the cloud printing services provided by the cloud printing APP . The proxy APP installed in the PC can manage printers or MFPs at a time to associate each printer or MFP with the cloud printing services provided by the cloud printing APP . An application is an application image conversion APP for providing image conversion services to convert the PDF file into a JPEG file.

To use the cloud printing services provided by the cloud printing APP logging in using a user account and a password is necessary. When registering the printer or the MFP usable for printing in the cloud printing services the cloud printing APP first acquires an access token for using the cloud printing services by using the user account and the password. The cloud printing APP then registers the printer or the MFP in association with the user account. During the registration of the printer or the MFP the cloud printing APP issues and allocates printer ID represented by a unique value to each printer or MFP and notifies the registration target printer of the printer ID. Detailed description of processing for registering the printer is omitted.

The HDD is an example of a storage unit. The storage unit can be a portable compact disk read only memory CD ROM or a ROM installed inside. The KBD is an example of an input unit. The CPU is an example of a control unit. The LCD is an example of a display unit. The NB is an example of a communication control unit. The proxy ALL and a program of each module software illustrated in are stored in the HDD and read to the RAM to be executed by the CPU when necessary. Various databases DBs are stored in the HDD and information of the DB is read to the RAM by the CPU when necessary.

Each of the MFP and the MFP includes hardware components illustrated in . illustrates an example of the MFP . A CPU includes a microprocessor. The CPU controls as a central processing unit of the MFP a RAM a communication unit a recording unit an operation unit a display unit a reading unit a facsimile control unit and an external storage control unit according to a program stored in a ROM .

The ROM stores a program to execute recording printing processing and processing of notifying the PC of a printing operation state performed by the MFP under control of a printer driver not illustrated . The ROM stores a program to execute facsimile transmission processing or reception processing and processing of notifying the PC of a facsimile operation transmission or reception state performed by the MFP under control of a facsimile driver not illustrated . The ROM further stores a program to execute image reading processing and processing of notifying the PC of a reading operation state performed by the MFP under control of a Windows Image Acquisition WIA driver or a Tool Without An Interesting Name TWAIN driver not illustrated .

The RAM temporarily stores print data. The print data is mainly transmitted from the PC. The recording unit executes printing based on the print data. The RAM temporarily stores image data read by the reading unit facsimile transmission data transmitted from the PC and facsimile reception data received by the facsimile control unit . The communication unit includes a connection port for a network and a connection port for an analog telephone line and controls Ethernet and facsimile analog communication. The recording unit includes a recording unit that includes an ink jet recording head each color ink a carriage and a recording paper conveyance mechanism and an electric circuit such as an application specific integrated circuit ASIC for generating a printing pulse by the recording head based on the print data.

For example by a printing operation on a printable application or a facsimile transmission operation a display content image data of a file opened by the application is temporarily stored as a spool file of an enhanced metafile EMF format in the HDD of the PC . Then the spool file is converted into print data containing a control command of the MFP or facsimile transmission data via the printer driver or the facsimile driver and transmitted to the MFP via the Internet.

The print data received by the MFP is converted into a printing pulse by the recording unit to be printed on recording paper. The facsimile transmission data received by the MFP is converted into a facsimile communication protocol by the facsimile control unit and transmitted to a facsimile device of an opposite side via the analog telephone line.

The operation unit which includes various buttons including a power button and a reset button receives an operation for the MFP . The display unit which includes a touch panel liquid crystal display can display a state of the MFP and display and input various pieces of setting information or a telephone number. The reading unit which includes a color image sensor and an electric circuit such as ASIC for image processing controls a scanner function. The facsimile control unit which includes a facsimile modem and an analog communication circuit controls facsimile transmission or reception according to the facsimile communication protocol. The external storage control unit which includes a flash memory loading slot and a storage interface circuit controls the loaded flash memory.

A sheet size selection unit selects a sheet size for printing in the MFP among choices described below according to a user s operation. illustrates a state where a Letter size is selected.

A sheet type selection unit selects a sheet type for printing in the MFP among choices described below according to a user s operation. illustrates a state where plain paper is selected.

A print quality selection unit selects print quality for printing in the MFP among choices described below according to a user s operation. illustrates a state where standard is selected.

A color density selection unit selects a color or a density for printing in the MFP among choices described below according to a user s operation. illustrates a state where auto is selected.

The print button receives a printing start instruction. When the print button is pressed by a user s operation the cloud printing APP generates a print job for the MFP associated with the printer choice . A close button receives an instruction to close the print dialog . When the close button is pressed by a user s operation the cloud printing APP closes the print dialog .

In the flowcharts a vertical row indicates an executing member of the processing. In the exemplary embodiment from the left side of each drawing there are a user web browser a document creation APP a cloud printing APP a proxy APP an image conversion APP and a MFP . Hereinafter a communication control method will be described by taking an example of a case where the user prints a document at the MFP using the PC a series of processes regarding document printing .

First a configuration where the MFP executes polling for a print job will be described by using steps S to S. In in step S printing of a document is started as seen from the MFP side for the sake of convenience. This step which has no influence on execution of processing in the MFP indicates the start of processing of the flowchart.

In step S the MFP calls a Check Print Job function of the web service API exported from the proxy APP . Information example of checking information transmitted as a query parameter of a GET request of HTTP when the MFP calls the function in step S is as follows 

Timing of calling the Check Print Job function is arbitrary and as a form of polling the MFP periodically calls the function. However this form is in no way limitative. For example the function may be called when instructed by the user. Further the checking information included in the query parameter is not limited to the printer ID or the random code.

The random code is an arbitrary 32 bit value generated by the MFP . In step S after the Check Print Job function has been called the proxy APP executes processing of the Check Print Job function and returns its response example of response information to the MFP . Then in step S the MFP which has received the response of the Check Print Job function from the proxy APP checks information there is print job or there is no print job contained in a response message within the response. When it is determined that the response of there is print job has been received YES in step S the MFP advances the processing to step S illustrated in . On the other hand when it is determined that the response of there is no print job has been received NO in step S the MFP advances the processing to step S. In step S after the passage of a certain period 1 minute in the exemplary embodiment the MFP advances the processing to step S. Thus the MFP polls the Check Print Job function exported from the proxy APP at a certain time interval periodically .

Next document printing processing will be described. Step S indicates a start of document printing as seen from the user side for convenience. This step which has no influence on a user s operation or execution of an application indicates the start of the processing of the flowchart. First the user activates the web browser and accesses the URL of the document creation APP to log in. Then in step S when the user designates a certain document and instructs its opening the web browser calls an Open Document function of the web service API exported from the document creation APP by using the document as an input parameter. In step S after the Open Document function has been called the document creation APP opens the document designated by the input parameter to transmit its information to the web browser . For example as illustrated in the document is opened on the web browser via the document creation APP .

In step S when the print menu is pressed to print the document by a user s operation the document creation APP is notified of its information via the web browser . In step S the document creation APP which has received the notification calls a Print Dialog function of the web service API exported from the cloud printing APP . In step S after the Print Dialog function has been called the cloud printing APP opens the print dialog to transmit its information to the web browser . For example as illustrated in the print dialog is displayed on the web browser .

The user operates the input unit to select a printer to be used printer choice associated with the MFP in the example illustrated in among a plurality of printer choices selects a desired setting value among print setting values and then presses the print button . In step S after the print button has been pressed the document creation APP is notified of information indicating a printing start request from the user and information regarding the print setting value via the web browser . The information regarding the print setting value is for example a URL where a print setting file extensible markup language XML file describing the print setting value selected by the user is stored.

The document creation APP which has received the notification generates a print image as a PDF file. Then in step S the document creation APP calls a Submit Print Job function of the web service API exported from the cloud printing APP by using the generated PDF file and the information regarding the print setting value as input parameters.

After the Submit Print Job function has been called the cloud printing APP generates a print job based on the PDF file and the information regarding the print setting value designated as the input parameters. Then in step S the cloud printing APP transmits a print job notification to a printer in the example which is the proxy APP because the MFP requires image format conversion associated with the selected printer choice. The print job includes at least the following information hereinafter referred to as print job information 

In step S the proxy APP which has received the print job notification calls a Fetch Print Job function of the web service API exported from the cloud printing APP . In step S after the Fetch Print Job function has been called the cloud printing APP transmits information print job information included in the print job generated in step S to the proxy APP . In step S the proxy APP which has received the print job information acquires necessary information from the print job information and stores the acquired information and information necessary for other controls in a print job management database. Then the proxy APP calls a Create Print Job Set function of the web service API exported from the image conversion APP .

Information example of preprocessing information transmitted to the image conversion APP as an input parameter of a POST request of HTTPS when the proxy APP calls the function in step S is as follows 

In this case the proxy APP sets 0 as an initial value indicating incompletion of print job preparation in the print job preparation completion Print Job Ready . The proxy APP sets an initial value 0 in the total number of pages of print image JPEG file . In step S after the Create Print Job Set function has been called the image conversion APP executes processing of the Create Print Job Set function described below referring to and returns its response to the proxy APP . This response includes session ID issued from the image conversion APP .

In step S the proxy APP which has received the response of the Create Print Job Set function from the image conversion APP calls a Confirm Progress function of the web services API exported from the image conversion APP . Information example of checking information transmitted to the image conversion APP as an input parameter of a GET request of HTTP when the proxy APP calls the function in step S is as follows 

The session ID is information included in the response of the Create Print Job Set function and the sequence is an arbitrary number generated by the proxy APP .

In step S after the Confirm Progress function has been called the image conversion APP executes processing of the Confirm Progress function described below referring to and returns its response example of response information to the proxy APP . In step S the proxy APP which has received the response of the Confirm Progress function from the image conversion APP checks a content on going processing processing completed or error included in a response message within the response. When the proxy APP determines that the response of processing completed has been received YES in step S the processing proceeds to step S illustrated in . When it is determined that the response of on going processing has been received NO in step S the processing proceeds to step S.

When an error occurs in processing of a download image conversion thread of the image conversion APP described below referring to in step S the proxy APP receives the response of error to end the printing processing as an error. However the case of error ending is outside the essence of the exemplary embodiment and thus detailed description thereof is omitted. In steps S and after processing mainly concerns a case where the proxy APP receives the response of processing completed or the response of error .

As illustrated in in step S the proxy APP calls a Create Print Job Result function of the web service API exported from the image conversion APP . Information example of location acquisition information transmitted to the image conversion APP as an input parameter of a POST request of HTTPS when the proxy APP calls the function in step S is as follows 

In step S after the Create Print Job Result function has been called the image conversion APP executes processing of the Create Print Job Result function described below referring to and returns its response to the proxy APP . In step S the proxy APP which has received the response of the Create Print Job Result function from the image conversion APP sets 1 in the Print Job Ready. Then the proxy APP sets 1 indicating print job preparation completed in the print job preparation Print Job Ready of the print job management database. Thus in step S a printing standby state is set in the MFP .

As described above in steps S to S illustrated in the MFP polls the Check Print Job function exported from the proxy APP at the certain time interval and step S is similar to step S. A case where the MFP calls the Check Print Job function exported from the proxy APP in step S after the MFP has been set in the printing standby state in step S will be described. In step S after the Check Print Job function has been called the proxy APP executes processing of the Check Print Job function described below referring to and returns its response to the MFP .

In step S the MFP which has received the response of the Check Print Jon function from the proxy APP checks a content there is job or there is no job included in a response message within the response. When the MFP determines that the response of there is job has been received YES in step S the processing proceeds to step S. On the other hand when it is determined that the response of there is no job has been received NO in step S the processing proceeds to step S. In step S the MFP calls a Get Print Job function of the web service API exported from the proxy APP . Information example of acquisition information transmitted to the proxy APP as a query parameter of a Get request of HTTPS when the MFP calls the function in step S is as follows 

In step S after the Get Print Job function has been called the proxy APP executes processing of the Get Print Job function described below referring to and returns its response to the MFP . In step S the MFP which has received the response of the Get Create Print Job function from the proxy APP transmits a print image acquisition request to the image conversion APP based on a content included in a response message within the response. Contents included in the response message within the response are a print job access URL URL of storage destination of print image JPEG file a total number of pages of a print image JPEG file and an access token to the image conversion APP .

The print image acquisition request is made to acquire a print image JPEG file of each page from the image conversion APP . In the exemplary embodiment the print job access URL is a storage destination URL of the PC including the image conversion APP . However it can be a storage destination URL of another PC. For example for the print job access URL a form of direct transmission from the PC can be employed. Further for example a form where the PC including the proxy APP acquires a print image of a designated page from the PC and transmits the acquired print image to the MFP can be employed. Furthermore for example the PC can transmit the URL of the storage destination of the acquired print image to the MFP .

In step S the image conversion APP which has received the print image acquisition request from the MFP permits access to the print image JPEG file of the designated page from the MFP and transmits the print image to the MFP . In step S the MFP which has received the print image transmitted from the image conversion APP prints the print image. Then in step S the MFP checks whether there is a next page based on the total number of pages of the print image JPEG file . When there is the next page YES in step S the MFP advances the processing to step S and transmits a print image acquisition request to acquire a print image of the next page. On the other hand when there is no next page NO in step S the MFP advances the processing to step S illustrated in . For the acquisition processing of the print image JPEG file in steps S to S a GET method of HTTPS encrypted by SSL communication is used.

As illustrated in in step S the MFP calls an End Print Job function of the web service API exported from the proxy APP . To call the End Print Job function the GET method of HTTPS encrypted by the SSL communication is used. Information example of end information transmitted to the proxy APP as a query parameter of a GET request of HTTPS when the MFP calls the function in step S is as follows 

In step S after the End Print Job function has been called the proxy APP calls a Job Completed function of the web service API exported from the image conversion APP . Information example of job processing end information transmitted to the image conversion APP as an input parameter of a POST request of HTTPS when the proxy APP calls the function in step S is as follows 

In step S after the Job Completed function has been called the image conversion APP executes processing of the Job Completed function described below referring to and returns its response to the proxy APP . In step S the proxy APP which has received the response of the Job Completed function from the image conversion APP deletes information regarding the print job from the print job management database to update the print job management database. In step S the proxy APP ends the document printing processing.

Next referring to processing of the web service API exported from the proxy APP will be described. is an exemplary flowchart illustrating processing of the Check Print Job function. is an exemplary flowchart illustrating processing of the Get Print Job function. As the Check Print Job function the GET method of HTTP is used. As the Get Print Job function the GET method of HTTPS encrypted by the SSL communication is used. Programs relating to these flowcharts are installed in the PC stored in the HDD and read to the RAM to be executed by the CPU .

In step S illustrated in and step S illustrated in when the MFP calls the Check Print Job function the proxy APP executes processing of the Check Print Job function illustrated in . As illustrated in in step S the processing of the Check Print Job function is started. In step S the proxy APP checks the print job preparation completion Print Job Ready of the print job management database. In step S as query parameters of the GET request of HTTP printer ID issued from the cloud printing APP and a random code are transmitted from the MFP .

When the proxy APP determines that 1 indicating completion of print job preparation has been set in the print job preparation completion Print Job Ready in other words there is a print job for the MFP YES in step S the processing proceeds to step S. On the other hand when the proxy APP determines that 0 indicating incompletion of print job preparation has been set in other words there is no print job for the MFP NO in step S the processing proceeds to step S.

In step S the proxy APP sets a response of there is print job in a response message included in a BODY of a response to the GET request of HTTP and the processing proceeds to step S. In step S the proxy APP sets a response of there is no print job in the response message included in the BODY of the response to the GET request of HTTP and the processing proceeds to step S. In step S the proxy APP transmits the response message to the issuance source MFP in the example of the GET request. In step S the processing of the Check Print Job function is ended.

The response of there is print job and the response of there is no print job will be described in detail. Information indicating a state that there is a print job and information indicating a state that there is no print job are respectively 10101010 and 01010101 . The response of there is print job and the response of there is no print job are results of calculation carried out using a random code and information indicating these states and include for example character string information acquired by converting the following information into character strings 

Thus by using for the response to the GET request of HTTP character string information meaningless to the many rather than visible information defined by using the XML an erroneous operation caused by illegal access to the web service API and illegal control can be prevented. The configuration for preventing such illegal access is not limited to this. More complex calculation such as hashing can be combined.

In step S illustrated in after the MFP has called the Get Print Job Function the proxy APP executes processing of the Get Print Job Function illustrated in . As illustrated in in step S the proxy APP starts the processing of the Get Print Job Function. In step S the proxy APP sets a URL of a storage destination of a print image JPEG file in a response message included in a BODY of a response to the GET request of HTTPS. Then the processing proceeds to step S.

In step S the proxy APP sets the total number of pages of the print image JPEG file in the response message included in the BODY of the response to the GET request of HTTPS and the processing proceeds to step S. In step S the proxy APP sets an access token to the image conversion APP in the response message included in the BODY of the response to the GET request of HTTPS and the processing proceeds to step S. In step S the proxy APP transmits the response message to the issuance source MFP in the example of the GET request to end the processing of the Get Print Job function.

Next referring to processing of the web service API exported from the proxy APP and a thread function will be described. is an exemplary flowchart illustrating processing of the Create Print Job Set function. is an exemplary flowchart illustrating processing of a download mage conversion thread function. As the Create Print Job Set function the POST method of HTTP encrypted by the SSL communication is used. Programs relating to these flowcharts are installed in the PC stored in the HDD and read to the RAM to be executed by the CPU .

In step S illustrated in when the proxy APP calls the Create Print Job Set function the image conversion APP executes processing of the Create Print Job Set function illustrated in . As illustrated in in step S the image conversion APP starts the processing of the Create Print Job Set function. In step S the image conversion APP generates session ID to store it in a session management database and the processing proceeds to step S. The following information is stored in the session management database.

In this case the image conversion APP acquires the printer ID and the print job ID issued from the cloud printing APP among the input parameters of the Create Print Job Set function. The image conversion APP stores the printer ID and the print job ID issued from the cloud printing APP in the session management database. The image conversion APP acquires the access token for using cloud printing services among the input parameters of the Create Print Job Set function. The image conversion APP stores the access token for using cloud printing services in the session management database. The image conversion APP acquires the URL of storage destination of print image PDF file from among the input parameters of the Create Print Job Set function and stores the URL of storage destination of print image PDF file in the session management database.

Then in step S the image conversion APP sets 1 indicating ongoing processing in the progress situation Progress indicating the progress of processing in the session management database and the processing proceeds to step S. In step S the image conversion APP generates a download image conversion thread and the processing proceeds to step S. Processing of the download image conversion thread will be described below referring to . In step S the image conversion APP sets SUCCESS indicating a normal successful end of the function and the session ID generated in step S in a response message included in a BODY of a response to the POST request of HTTPS. The image conversion APP then transmits the response message to an issuance source proxy APP in the example of the POST request. In step S the image conversion APP ends the processing of the Create Print Job Set function.

After the image conversion APP has generated the download image conversion thread in step S threads different from the Create Print Job Set are activated. Then from among these threads processing of the download image conversion thread illustrated in is executed. As illustrated in in step S the image conversion APP starts the processing of the download image conversion thread. In step S the image conversion APP uses the access token for using cloud print services to access the URL of the storage destination of the print image PDF file by the GET method of HTTPS encrypted by the SSL communication. In other words the image conversion APP downloads the print image PDF file from the cloud print services to temporarily store it in the RAM .

After the downloading has been completed the image conversion APP converts the print image PDF file into a JPEG file printable by the MFP . In the HDD of the PC there is stored beforehand setting information indicating a printable form for each printer or MFP. In step S the image conversion APP stores the JPEG file in a folder including the printer ID and the print job ID issued from the cloud printing APP . In step S the image conversion APP sets an access token to the image conversion APP in the access token to the image conversion APP in the session management database. The access token to the image conversion APP allows a printer or a MFP MFP in the example to access the print image JPEG file . The printer ID issued from the cloud printing APP is associated with the printer or MFP. Further in step S the image conversion APP sets a URL 1st page of a storage destination of the print image JPEG file in the print job access URL in the session management database.

The URL indicates the JPEG file p1.jpg of the 1st page. Accordingly to acquire a print image of each page the MFP sets a page number to be acquired to a query parameter p indicating a page number. In step S the image conversion APP converts the print image PDF file and deletes the print image PDF file downloaded in step S from the RAM after the print images JPEG files of all the pages have been converted. In step S the image conversion APP determines whether an error has been detected in any one of steps S to S. In this case when the image conversion APP determines that an error has been detected YES in step S the processing proceeds to step S. When no error has been detected NO in step S the processing proceeds to step S determining that the processing has normally ended.

In step S the image conversion APP sets 0 indicating a normal end to the progress situation Progress within the session management database. In step S the image conversion APP ends the processing of the download image conversion thread. In step S the image conversion APP sets 2 indicating an error end to the progress situation Progress within the session management database. In step S the image conversion APP ends the processing of the download image conversion thread. In step S the image conversion APP deletes information regarding the print job from the session management data base to update the session management database.

Next referring to processing of the web service API exported from the image conversion APP will be described. is an exemplary flowchart illustrating processing of a Confirm Progress function. is an exemplary flowchart illustrating processing of a Job Complete function. For the Confirm Progress function the GET method of HTTP is used. For the Job Complete function the POST method of HTTPS encrypted by the SSL communication is used. Programs relating to these flowcharts are installed in the PC stored in the HDD and read to the RAM to be executed by the CPU .

After the proxy APP has called the Confirm Progress function in step S illustrated in the image conversion APP executes processing of a Confirm Progress function illustrated in . As illustrated in in step S the image conversion APP starts the processing of the Confirm Progress function. In this case a GET request of HTTP for the Confirm. Progress function includes session ID and a sequence as query parameters. The sequence is an arbitrary number generated by an issuance source proxy APP in the example .

Then in step S the image conversion APP checks a progress situation in the session management database by using the session ID included in the query parameters as a search keyword. In step S the image conversion APP determines whether 0 indicating a normal end has been set in the progress situation. When 0 has been set YES in step S the processing proceeds to step S. On the other hand when the image conversion APP determines that a numeral other than 0 1 or 2 has been set NO in step S the processing proceeds to step S.

In step S the image conversion APP sets processing completion response in a response message included in a BODY of a response to the GET request of HTTP and the processing proceeds to step S. In step S the image conversion APP checks a progress situation Progress . In this case when the image conversion APP determines that 1 indicating ongoing processing has been set in the progress situation Progress YES in step S the processing proceeds to step S. On the other hand when the image conversion APP determines that a numeral other than 1 2 has been set the processing proceeds to step S.

In step S the image conversion APP sets ongoing processing response in the response message included in the BODY of the response to the GET request of HTTP and the processing proceeds to step S. In step S the image conversion APP sets error response in the response message included in the BODY of the response to the GET request of HTTP and the processing proceeds to step S. In step S the image conversion APP transmits the response message to an issuance source proxy APP of the GET request. In step S the image conversion APP ends the processing of the Confirm Progress function.

 Processing completion response ongoing processing response and error response will be described in detail. These responses are results of calculation carried out by using sequences included in the query parameters of the GET request in step S and include for example character string information acquired by converting the following information into character strings 

Thus by using for the response to the GET request of HTTP character string information meaningless to the many rather than visible information defined by using the XML an erroneous operation caused by illegal access to the web service API and illegal control can be prevented. The configuration for preventing such illegal access is not limited to this. More complex calculation such as hashing can also be combined.

After the proxy APP has called the Job Completed function in step S illustrated in the image conversion APP executes processing of a Job Completed function in . As illustrated in in step S the image conversion APP starts the processing of the Job Completed function. In step S the image conversion APP deletes the print image JPEG file and the processing proceeds to step S. In step S the image conversion APP sets SUCCESS indicating a normal end in a response message included in a BODY of a response to the POST request of HTTPS. The image conversion APP then transmits the response message to an issuance source proxy APP in the example of the POST request. In step S the image conversion APP ends the processing of the Job Completed function.

Next referring to processing of the web service API exported from the image conversion APP will be described. is an exemplary flowchart illustrating processing of a Create Print Job Result function. For the Create Print Job Result function the POST method of HTTPS encrypted by the SSL communication is used. A program relating to the flowchart is installed in the PC stored in the HDD and read to the RAM to be executed by the CPU .

After the proxy APP has called the Create Print Job Result function in step S illustrated in the image conversion APP executes processing of a Create Print Job Result function illustrated in . As illustrated in FIG. in step S the image conversion APP starts the processing of the Create Print Job Result function. Then in step S the image conversion APP sets an access token to the image conversion APP in a response message included in a BODY of a response to the POST request of HTTPs and the processing proceeds to step S.

In step S the image conversion APP sets a print job access URL URL of storage destination of JPEG file in the response message included in the BODY of the response to the POST request and the processing proceeds to step S. In step S the image conversion APP sets a total number of pages of the print image JPEG file in the response message included in the BODY of the response to the POST request and the processing proceeds to step S. In step S the image conversion APP transmits the response message to an issuance source proxy APP in the example of the POST request. In step S the image conversion APP ends the processing of the Create Prig Job function.

For the Check Print Job function only for polling processing the unencrypted GET method of HTTP is used. For all the other functions the GET method of HTTPS encrypted by the SSL communication is used. Thus by using the unencrypted HTTP method of polling only for checking presence of a print job in a peripheral apparatus control system time for polling is reduced and high user operability can be achieved. Since loads of the polling can be reduced thereby eliminating for example the necessity of a configuration to deal with the loads system construction and firmware mounting of the printer or the MFP are facilitated and development costs can be reduced.

As illustrated in between the proxy APP and the image conversion APP the proxy APP calls the web service API exported from the image conversion APP . Specifically the proxy APP calls the web service API exported from the image conversion APP in an order of the Create Print Job Set function the Confirm Progress function the Create Print Job Result function and the Job Completed function.

For the Confirm Progress function only for polling processing the unencrypted GET method of HTTP is used. For all the other functions the POST method of HTTPS encrypted by the SSL communication is used. Thus by using the unencrypted HTTP method of polling only for checking the progress situation of processing in a peripheral apparatus control system time for polling is reduced and high user operability can be achieved. Since loads of the polling can be reduced thereby eliminating for example the necessity of a configuration to deal with the loads system construction and mounting of applications are facilitated and development and running costs can be reduced.

The first exemplary embodiment has been directed to the personal computer as the information processing apparatus. However the present invention is not limited to the personal computer. The present invention can also be effectively applied to an arbitrary information processing apparatus terminal that can use a similar method such as a digital versatile disc DVD player a game player a set top box or Internet home electrical appliance. The first exemplary embodiment has been described taking the MFP as an example of the peripheral apparatus. However as the peripheral apparatus any other apparatuses such as a copying machine a facsimile a scanner a digital camera or an apparatus including a multifunction peripheral combining these apparatuses can be used.

In the first exemplary embodiment the OS equivalent to that of the Windows is used as an example of the OS. Not limited to the Windows however any arbitrary OS can be used. In the first exemplary embodiment the Ethernet is used as a configuration example of the network . Not limited to this example however any other arbitrary network configuration can be used.

In the first exemplary embodiment the Ethernet is employed as interfaces between the PC the PC the PC and the PC and the MFP and the MFP . Not limited to this interface however an arbitrary interface such as a wireless LAN Institute of Electrical and Electronics Engineers IEEE 1394 Bluetooth registered trademark or a universal serial bus USB can be used. Functions of various applications firmware and some or all of the processes of the flowcharts can be configured by using dedicated hardware.

According to the exemplary embodiment time necessary for checking the progress situation of the image conversion processing or presence of a print job by way of polling is reduced and thus operability can be improved for the user. Further even when the cloud system is used for the peripheral apparatus control system system construction and application mounting are facilitated and development and running costs can be reduced. Further since no problem occurs in mounting a low performance inexpensive printer or MFP or the firmware of the multifunction peripheral and time for processing is reduced operability can be improved for the user.

The present invention can also be realized by executing the following processing. Specifically software program for realizing the functions of the exemplary embodiment is supplied to a system or an apparatus via a network or various storage media and a computer or CPU or microprocessor unit MPU of the system or the apparatus reads the program to execute it.

According to the configuration of the exemplary embodiment communication can be more appropriately carried out between apparatuses. The exemplary embodiments have been described by taking the example of the peripheral apparatus control system that registers one user account in association with the MFP by using the access token acquired by the cloud printing APP through authentication based on one user account and a password for the user account with respect to a certain MFP e.g. MFP . The present exemplary embodiment is directed to an example of a peripheral apparatus control system that allows a plurality of users to share a certain MFP by registering a plurality of user accounts in association with the MFP .

The registration button is operated to register the MFP in cloud printing services provided by the cloud printing APP for the user User A of the user name input unit . The registration button is operated to register the MFP in the cloud printing services provided by the cloud printing APP for the user User B of the user name input unit . The registration button is operated for registering the MFP in the cloud printing services provided by the cloud printing APP for the user User C of the user name input unit .

The registration button is operated for registering the MFP in the cloud printing services provided by the cloud printing APP for the user of the user name input unit . The registration button is operated for registering the MFP in the cloud printing services provided by the cloud printing APP for the user of the user name input unit . Currently there are no names set in the printer name input units and . Thus the registration buttons and do not function.

The user inputs a temporary authentication code token for printer registration which has been issued from the cloud printing APP to an authentication code token input unit . When the user presses a registration button the printer is temporarily registered in the cloud printing services. When the user presses a cancel button the processing for registering the printer in the cloud printing services is canceled.

In the flowchart a vertical row represents a processing execution side. In the present exemplary embodiment there are illustrated from the left side a user web browser a document creation APP a cloud printing APP a proxy APP an image conversion APP and a MFP . Hereinafter a communication control method will be described by way of example where the user registers the MFP in the cloud printing services provided by the cloud printing APP by using the MFP and the PC .

When the user operates the display unit of the MFP to open the cloud printing set up screen illustrated in and presses the registration button for the user User A in the user name input unit in in step S printer registration processing is started. In step S the MFP requests the cloud printing APP to temporarily register the printer. Then in step S the cloud printing APP issues a temporary authentication code token for printer registration a URL of a printer registration page and a polling URL. In step S the MFP displays the temporary authentication code token and the URL of the printer registration page issued from the cloud printing APP on the display unit and the processing proceeds to step S.

Then in step S the user starts user authentication processing for registering the MFP in the cloud printing services provided by the cloud printing APP . In step S the user activates the web browser in the PC and inputs the URL of the printer registration page to the URL input unit to open a printer registration page designated by the cloud printing APP .

Then the user respectively inputs a user account and a password created beforehand for using the cloud printing services to the user account input unit and the password input unit and inputs the temporary authentication code token to the authentication code token input unit . When the user presses the registration button in step S the web browser transmits the user account the password and the temporary authentication code token input on the printer registration page to the cloud printing APP .

In step S the cloud printing APP which has received the user account the password and the temporary authentication code token from the web browser executes user authentication and issues when the authentication is successful an access token necessary for using the cloud printing services to temporarily register the MFP in the cloud printing services. In step S thus the user authentication processing is ended temporarily registering the MFP in the cloud printing services.

In step S the MFP accesses the polling URL to make an inquiry to check the registered status of the printer MFP to the cloud printing APP . The cloud printing APP which has received the inquiry checks the registered status of the printer MFP . In step S when the temporary registration of the printer MFP has been completed the cloud printing APP issues printer ID for the printer MFP to really register the printer transmits the printer ID and the access token to the MFP and returns the completion result of the real registration of the printer MFP to the MFP . The printer ID is represented by a unique value allocated to the MFP by the cloud printing APP to be exclusively used for the user User A designated by the user name input unit .

When the temporary registration of the printer MFP has not been completed in step S the cloud printing APP returns the incompletion result of the real registration of the printer to the MFP . When the MFP has received the completion result of the real registration of the printer MFP YES in step S the processing proceeds to step S. When the MFP has received the incompletion result of the real registration of the printer MFP NO in step S the processing returns to step S. In step S the MFP displays a message indicating the completion of the real registration of the printer in the cloud printing services on the display unit . Then in step S the printer registration processing is ended.

When the user operates the display unit of the MFP to open the cloud printing set up screen illustrated in and presses the registration button for the user User B in the user name input unit the printer registration processing and the user authentication processing are carried out according to the flowchart of . In this case in step S the cloud printing APP issues printer ID for the MFP . The printer ID is represented by a unique value allocated to the MFP by the cloud printing APP to be exclusively used for the user User B designated by the user name input unit .

When the user operates the display unit of the MFP to open the cloud printing set up screen illustrated in and presses the registration button for the user User C in the user name input unit the printer registration processing and the user authentication processing are carried out according to the flowchart of . In this case in step S the cloud printing APP issues printer ID for the MFP . The printer ID is represented by a unique value allocated to the MFP by the cloud printing APP to be exclusively used for the user User C designated by the user name input unit .

Thus the cloud printing APP issues printer IDs represented by different unique values among a plurality of users user accounts to one MFP MFP . This allows the plurality of users to share one MFP. As a result use purposes and a use range of the MFP can be widened and high operability can be achieved.

The exemplary embodiment has directed to the example where the proxy APP receives the print job notification in the cloud printing services provided by the cloud printing APP . In this example in steps S to S illustrated in the MFP checks presence of a print job for the proxy APP by executing polling at the fixed intervals in the example 1 minute . Thus the MFP cannot always start printing immediately after reception of the print job notification by the proxy APP and a delay of an interval amount 1 minute at the longest may occur. An example of a peripheral apparatus control system than can shorten the time from the reception of the print job notification to the start of printing to achieve shorter total printing time will be described.

In the flowchart a vertical row represents a processing execution side. In the present exemplary embodiment there are illustrated from the left side a user web browser a document creation APP a cloud printing APP a proxy APP an image conversion APP and a MFP . Hereinafter a communication control method will be described by way of example where the user prints a document series of processes for document printing at the MFP by using the PC .

In the flowchart steps denoted by same reference numerals as are the processing similar to those illustrated in and thus description thereof will be omitted. In addition portions not described are similar in contents to those illustrated in .

In in step S document printing seen from the user side is started. Then steps S to S are sequentially carried out. In step S the cloud printing APP transmits a print job notification to the printer MFP associated with a selected printer choice. As the print job notification for example a protocol referred to as extensible messaging and presence protocol XMPP can be employed which is used in an instant messenger. The print job notification that the cloud printing APP sends to the printer MFP in step S uses an unencrypted XMPP. In step S the MFP receives the print job notification and the processing proceeds to step S. In step S the MFP requests the proxy APP to acquire a print job and starts processing for checking presence of a print job of step S. In step S the proxy APP which has received the print job acquisition request from the MFP calls a Fetch Print Job function of the web service API exported from the cloud printing APP . Then the processing proceeds to step S and the processing of step S and after illustrated in is executed.

When the processing for checking presence of a print job is started in step S in step the MFP calls a Check Print Job function of the web service API exported from the proxy APP . Information example of checking information transmitted as a query parameter of a GET request of a HTTP to the proxy APP when the MFP calls the function in step is similar to that in step S illustrated in . In step S after the Check Print Job function has been called the proxy APP executes processing of the Check Print Job function illustrated in and returns its response example of response information to the MFP .

Then in step S the MFP which has received the response of the Check Print Job function from the proxy APP checks information response of there is job or response of there is no job contained in a response message included in the response. When the MFP determines reception of the response of there is job YES in step S the processing proceeds to step S. On the other hand when the MFP determines reception of the response of there is no job NO in step S the processing proceeds to step S.

In step S the MFP checks elapsed time from the start of the processing for checking the presence of a print job in step S and the processing proceeds to step S. When longest waiting time 5 minutes in the present exemplary embodiment has elapsed YES in step S the processing proceeds to step S. When not NO in step S the processing proceeds to step S.

In step S after the MFP has waited for fixed time 1 second in the present exemplary embodiment the processing proceeds to step S. Thus the MFP polls the Check Print Job function exported from the proxy APP at the fixed time interval periodically . However while the polling interval in steps S to S is 1 minute in the first exemplary embodiment polling can be executed at the time interval of 1 second in the second exemplary embodiment. This can greatly shorten the printing start time and achieve shorter total printing time.

In the first exemplary embodiment the polling is executed irrespective of presence of a print job. Thus when polling is frequently carried out to the proxy APP from a great many number of printers greater loads are imposed on the proxy APP necessitating a larger system. This increases running costs of the cloud system. In some cases the cloud system may be overloaded and cannot properly function making the entire system unstable. However in the second embodiment the polling is carried out only when there is a print job and a very small number of printers among whole printers are targeted. Thus loads on the system are limited even when the polling interval is shortened. As a result there is no need to use a large system and running costs of the cloud system can be reduced. Further The entire system can be maintained in a stable state.

When the elapsed time from the start of the processing for checking the presence of a print job namely the elapsed time from the reception of the print job notification has passed the longest waiting time YES in step S presuming that abnormality has occurred in the cloud printing services intervals of polling thereafter are set sufficiently long. Thus continued polling at short intervals for a long time can be prevented and the system can be maintained in a stable state.

Since the MFP can check after the reception of the print job notification from the cloud printing APP the presence of a print job at the very short interval from that time printing start time can be shortened and total printing time can be shorter.

There may be a case where after the user has started printing when power for the MFP is turned off a print job notification cannot be received. To deal with such a case when the power is turned on for the MFP step S is executed at least once or for a fixed period. Accordingly the print job started by the user can surely be printed when the power of the MFP is turned on.

The exemplary embodiment can be further improved. When the print job notification is transmitted to the MFP from the cloud printing APP processing can be executed on the premise that there is a print job. In step S the MFP starts activates processing for checking presence of a print job step S . The processing directly proceeds to step S without executing step S. Determination of step S is unconditionally set to be YES and the processing proceeds to step S. Accordingly the cloud printing APP transmits an unencrypted print job notification to the MFP . The MFP which has received the unencrypted print job notification calls the Get Print Job function exported from the proxy APP by a GET method of HTTP encrypted through Secure Sockets Layer SSL communication.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device e.g. computer readable medium . In an example a computer readable storage medium may store a program that causes a peripheral apparatus to perform a method described herein. In another example a central processing unit CPU may be configured to control at least one unit utilized in a method or apparatus described herein.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications equivalent structures and functions.

This application claims priority from Japanese Patent Application No. 2011 179798 filed Aug. 19 2011 which is hereby incorporated by reference herein in its entirety.

