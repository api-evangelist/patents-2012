---

title: Device, system, and method for processor-based data protection
abstract: A device, system, and method for providing processor-based data protection on a mobile computing device includes accessing data stored in memory with a central processing unit of the mobile computing device and determining that the accessed data is encrypted data based on a data included in one or more control registers of the central processing unit. If the data is determined to be encrypted data, the central processing unit is to decrypt the encrypted data using a cryptographic key stored in the central processing unit. The encrypted data may also be stored on a drive of the mobile computing device. The encryption state of the data stored on the drive is maintained in a drive encryption table, which is used to update a memory page tables and the one or more control registers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09569633&OS=09569633&RS=09569633
owner: Intel Corporation
number: 09569633
owner_city: Santa Clara
owner_country: US
publication_date: 20120629
---
Data security remains a concern across all computer platforms. However data security is a significant concern on mobile hand held computing devices such as smart phones and tablet computers. The mobility and relatively small form factor of such devices while generally desirable tends to allow for easier misplacement loss and theft of mobile computing devices. When a mobile computing device is lost or stolen the data stored on the device is in jeopardy. Depending on the previous uses of the mobile computing device the lost stolen device may include sensitive data such as personal identification data financial data medical data and or the like.

Typical desktop computers and other immobile and or non hand held computing devices may implement a form of data protection using a type of software based data encryption decryption. For example some data protection solutions for desktop computers employ a whole disk encryption decryption scheme. However such software based data protection solutions typically rely on the computational power of the central processing unit of the desktop computer which may be significantly more powerful than those processors included on mobile hand held computing devices. Additionally some desktop and similar computers may include self encrypting hard disk drives. However such hard disk drives typically include a form factor that restricts their use in the mobile hand held computing devices such as a smart phone or tablet computer.

While the concepts of the present disclosure are susceptible to various modifications and alternative forms specific exemplary embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood however that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives consistent with the present disclosure and the appended claims.

In the following description numerous specific details such as logic implementations opcodes means to specify operands resource partitioning sharing duplication implementations types and interrelationships of system components and logic partitioning integration choices are set forth in order to provide a more thorough understanding of the present disclosure. It will be appreciated however by one skilled in the art that embodiments of the disclosure may be practiced without such specific details. In other instances control structures gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

Embodiments of the invention may be implemented in hardware firmware software or any combination thereof. Embodiments of the invention implemented in a computer system may include one or more bus based interconnects between components and or one or more point to point interconnects between components. Embodiments of the invention may also be implemented as instructions carried by or stored on a transitory or non transitory machine readable e.g. computer readable medium which may be read and executed by one or more processors. A machine readable medium may be embodied as any device mechanism or physical structure for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable medium may be embodied as read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices mini or micro SD cards memory sticks electrical signals and others.

In the drawings specific arrangements or orderings of schematic elements such as those representing devices modules instruction blocks and data elements may be shown for ease of description. However it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing or separation of processes is required. Further the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.

In general schematic elements used to represent instruction blocks may be implemented using any suitable form of machine readable instruction such as software or firmware applications programs functions modules routines processes procedures plug ins applets widgets code fragments and or others and that each such instruction may be implemented using any suitable programming language library application programming interface API and or other software development tools. For example some embodiments may be implemented using Java C and or other programming languages. Similarly schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure such as a register data store table record array index hash map tree list graph file of any file type folder directory database and or others.

Further in the drawings where connecting elements such as solid or dashed lines or arrows are used to illustrate a connection relationship or association between or among two or more other schematic elements the absence of any such connecting elements is not meant to imply that no connection relationship or association can exist. In other words some connections relationships or associations between elements may not be shown in the drawings so as not to obscure the disclosure. In addition for ease of illustration a single connecting element may be used to represent multiple connections relationships or associations between elements. For example where a connecting element represents a communication of signals data or instructions it should be understood by those skilled in the art that such element may represent one or multiple signal paths e.g. a bus as may be needed to effect the communication.

Referring now to in one embodiment a system for providing process based data protection includes a mobile computing device and a security provisioning server which communicate with each other of a network . The mobile computing device may be embodied as any type of mobile computing device capable of performing the functions described herein including but not limited to a mobile phone a smart phone a tablet computing device a personal digital assistant a messaging device a consumer electronic device a handset a laptop computer and or any other mobile computing device configured to store data locally. In one particular embodiment the mobile computing device has a form factor sized to be held in a hand of the user such as a smart phone or tablet computer.

As discussed in more detail below the mobile computing device is configured to provide processor based data protection for data stored on the device utilizing a central processing unit that includes a cryptographic engine . The cryptographic engine of the central processing unit facilitates encryption decryption of locally stored data using a cryptographic key securely stored in the central processing unit . The central processing unit is capable of determining the encrypted decrypted state of the locally stored data based on data included in one or more control registers of the central processing unit . It should be appreciated that because the cryptographic key remains securely within the central processing unit i.e. the cryptographic keys of the central processing unit are not exposed to any application executing on or other device of the mobile computing device the data protection provided by the central processing unit is improved relative to typical software based encryption techniques. Additionally because the cryptographic engine is incorporated within the central processing unit the encryption decryption of data may be quicker than some software based encryption techniques.

As shown in the illustrative mobile computing device includes the central processing unit an I O subsystem a memory a data storage device a communication circuitry and one or more peripheral devices . In some embodiments several of the foregoing components may be incorporated on a motherboard or main board of the mobile computing device while other components may be communicatively coupled to the motherboard via for example a peripheral port. Furthermore it should be appreciated that the mobile computing device may include other components sub components and devices commonly found in a mobile computing device which are not illustrated in for clarity of the description.

The central processing unit may be embodied as any type of processor microprocessor microcontroller digital signal processor or other processing circuitry including the features and capabilities described herein. The central processing unit is illustratively embodied as a single core processor having a processor core . However in other embodiments the central processing unit may be embodied as a multi core processor having multiple processor cores . Additionally in some embodiments the mobile computing device may include additional processors or other processors having one or more processor cores.

As discussed above the central processing unit includes a cryptographic engine which is illustratively embodied in the microcode of the central processing unit . The cryptographic engine is capable of encrypting and decrypting data stored on the mobile computing device as discussed in more detail below. Illustratively the cryptographic engine is configured to encrypt decrypt data using an Advanced Encryption Standard AES symmetric key algorithm in Cipher Block Chaining CBC mode. Of course in other embodiments the cryptographic engine may utilize other types of encryption algorithms and or other encryption modes.

The cryptographic engine may maintain and or generate various cryptographic keys used during the cryptographic functions of the engine . For example in the illustrative embodiment the cryptographic engine includes a cryptographic processor key which is provisioned in the central processing unit during the manufacturing of the central processing unit . In one particular embodiment the cryptographic processor key is embodied as a one time programmable OTP fuse that is programmed by a manufacturer of the central processing unit . The processor key is maintained within the central processing unit in a secure manner such that the processor key is not exposed or attainable by software or other devices of the mobile computing device . As discussed in more detail below the cryptographic processor key is used by central processing unit to generate a cryptographic symmetric key see that is subsequently used to encrypt and decrypt data stored on the mobile computing device . Of course it should be appreciated that although only a single cryptographic processor key is shown in the central processing unit may include additional processor keys in other embodiments.

The I O subsystem of the mobile computing device may be embodied as circuitry and or components to facilitate input output operations with the central processing unit and or other components of the mobile computing device . In some embodiments the I O subsystem may be embodied as a memory controller hub MCH or northbridge an input output controller hub ICH or southbridge and a firmware device. In such embodiments the I O subsystem may include a memory management unit configured to manage the memory and interaction therewith including for example establishing and maintaining virtual memory pages. In other embodiments however I O subsystems having other configurations may be used. For example in some embodiments the I O subsystem may be embodied as a platform controller hub PCH . In such embodiments the memory management unit may be incorporated in or otherwise associated with the central processing unit and the central processing unit may communicate directly with the memory as shown by the hashed line in . Additionally in other embodiments the I O subsystem may form a portion of a system on a chip SoC and be incorporated along with the central processing unit and other components of the mobile computing device on a single integrated circuit chip.

In some embodiments the I O subsystem may also include a security engine . The security engine may be embodied as a security co processor or circuitry configured to perform certain security functions on the mobile computing device . For example as discussed in more detail below the illustrative security engine is configured to establish a secured communication link with the security provisioning server over the network and provide a secure environment for receiving and responding to communications received from the server .

The central processing unit is communicatively coupled to the I O subsystem via a number of signal paths. These signal paths and other signal paths illustrated in may be embodied as any type of signal paths capable of facilitating communication between the components of the mobile computing device . For example the signal paths may be embodied as any number of point to point links wires cables light guides printed circuit board traces vias bus intervening devices and or the like.

The memory of the mobile computing device may be embodied as or otherwise include one or more memory devices or data storage locations including for example dynamic random access memory devices DRAM synchronous dynamic random access memory devices SDRAM double data rate synchronous dynamic random access memory device DDR SDRAM mask read only memory ROM devices erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM devices flash memory devices and or other volatile and or non volatile memory devices. The memory is communicatively coupled to the I O subsystem via a number of signal paths or to the central processing unit . Although only a single memory device is illustrated in the mobile computing device may include additional memory devices in other embodiments. Various data and software may be stored in the memory . For example one or more operating systems applications programs libraries and drivers that make up the software stack executed by the central processing unit may reside in memory during execution. Additionally as discussed in more detail below with regard to data used by one or more applications executed on the mobile computing device may be stored in an encrypted or unencrypted state in the memory .

The data storage may be embodied as any type of device or devices configured for the short term or long term storage of data. In the illustrative embodiment the data storage is embodied as or otherwise includes a data drive for long term storage of data which may be embodied as a hard disk drive a solid state drive or other drive device. As shown in the I O subsystem may include a drive controller which may be embodied as hardware software or a combination thereof to control the drive . Additionally as discussed in more detail below with regard to the mobile computing device includes a drive manager module to manage the data stored on the drive . In use the drive manager module monitors the encryption state of data stored on the drive using a drive encryption table which may also be stored on the drive or within the memory .

The communication circuitry of the mobile computing device may include any number of devices and circuitry for enabling communications between the mobile computing device and the security provisioning server over the network . The communication circuitry may be configured to use any one or more or combination thereof communication protocols to communicate with the security provisioning server such as for example a wired network communication protocol e.g. TCP IP a wireless network communication protocol e.g. Wi Fi WiMAX a cellular communication protocol e.g. Wideband Code Division Multiple Access W CDMA and or other communication protocols.

In some embodiments the mobile computing device may also include one or more peripheral devices . Such peripheral devices may include any number of additional input output devices interface devices and or other peripheral devices. For example in some embodiments the peripheral devices may include a display keyboard a speaker system and or other input output devices interface devices and or peripheral devices.

The security provisioning server may be embodied as any type of data web server or similar computing device capable of performing the functions described herein. As such the security provisioning server may include devices and structures commonly found in such data servers such as processors memory devices and data storages which are not shown in for clarity of the description. The security provisioning server maintains one or more cryptographic keys which may be stored in a database of the server . As discussed in more detail below the security provisioning server is configured to communicate with the mobile computing device over the network to turn on off the processor based data protection of the mobile computing device and provision the mobile computing device with a shared secret key see . As discussed above the shared secret key may be used by the cryptographic engine of the central processing unit to generate the cryptographic symmetric key used to encrypt and decrypt data stored locally on the mobile computing device .

The network may be embodied as any number of various wired and or wireless networks. For example the network may be embodied as or otherwise include a wired or wireless local area network LAN a wired or wireless wide area network WAN and or a publicly accessible global network such as the Internet. As such the network may include any number of additional devices such as additional computers routers and switches to facilitate communications between the mobile computing device and the security provisioning server .

Referring now to in one embodiment the mobile computing device may establish an environment during operation. The illustrative environment includes one or more applications the cryptographic engine the memory management unit and the drive manager module .

The application s may be embodied as any type of software or firmware application that may periodically request access to data stored on the drive . As discussed above the data stored on the drive may be stored in an encrypted or decrypted state. When the application requests access to data stored on the drive the drive manager module retrieves the requested data from the drive and stores the requested data in the memory . As discussed above the drive manager module maintains a drive encryption table that identifies the state of encryption of data stored on the drive. As such the drive manager module accesses the drive encryption table to determine the state of encryption of the retrieved data.

The drive encryption table may be embodied as any type of database or data file for storing the encryption information. In the illustrative embodiment of the drive encryption table includes an encryption property flag and an encryption state flag for each data block or in some embodiments each data file of the drive . The encryption property flag indicates whether data encryption has been enabled for the particular data block of the drive the particular data file or the retrieved data depending on the particular embodiment . If data has been enabled for the retrieved data the drive manager module also checks the encryption state flag which indicates whether the retrieved data is stored in an encrypted state or a decrypted state. The drive manager module provides the encryption information i.e. the encryption property data and the encryption state data to the memory management unit .

The memory management unit maintains a memory page properties table for organizing and managing the memory e.g. for establishing virtual memory on the mobile computing device . Similar to the drive encryption table the memory page properties table may be embodied as any type of data file or the like for maintaining memory related information. The memory page properties table includes header or metadata including encryption information that identifies the state of encryption of data stored in the memory i.e. the state of encryption of each memory page of the memory . In the illustrative embodiment the page properties table includes an encryption property flag and an encryption state flag for each memory page of the memory . Similar to the encryption property flag the encryption property flag indicates whether data encryption has been enabled for the particular memory page and similar to the encryption state flag the encryption state flag indicates whether the data stored on the associated memory page is stored in an encrypted state or a decrypted state. After receiving the encryption information from the drive manager module the memory management unit updates the page properties table for the memory page s of the memory wherein the retrieved data is stored with the encryption information. For example if the retrieved data is encrypted the memory management unit may set the encryption property flag and the encryption state flag .

After the page properties table has been updated the memory management unit notifies the cryptographic engine of the retrieved data stored in the memory e.g. provides location data of the retrieved data and the cryptographic engine may access the retrieved data. In response to the cryptographic engine accessing the retrieved data the memory management unit updates the control registers of the central processing unit to reflect the encryption property of the accessed data. Similar to the drive encryption table and the page properties table the control registers includes encryption information that identifies the state of encryption of the retrieved data. In the illustrative embodiment the control registers include an encryption property flag that indicates whether data encryption has been enabled for the retrieved data and an encryption state flag that indicates whether the retrieved data is stored in an encrypted or decrypted state in the memory . As shown in the encryption property flag is included in the control register 4 CR4 and the encryption state flag is included in the control register 3 CR3 . Specifically the encryption property flag is embodied as bit or of CR4 and the encryption state flag is embodied as bit of CR3 . Of course other bits of the same or other control registers may be used in other embodiments for the flags .

If the cryptographic engine determines that the retrieved data is encrypted the cryptographic engine decrypts the retrieved data using the cryptographic symmetric key and stores the decrypted data in the memory . The cryptographic engine may subsequently remove or delete the encrypted data from the memory . After the data has been decrypted by the cryptographic engine the central processing unit notifies the application of the location of the decrypted data in the memory .

As discussed above the cryptographic engine maintains various cryptographic keys including the cryptographic processor key and the cryptographic symmetric key which is used to encrypt and decrypt the data stored in the memory . The cryptographic symmetric key is generated by the cryptographic engine using the cryptographic processor key and the shared secret key established with the security provisioning server . To establish the shared secret key the security engine establishes a secured communication link with the security providing server using a communication module of the mobile computing device . The security engine receives secured communications from the security provisioning server which are passed to the central processing unit and the cryptographic engine . The cryptographic engine establishes the shared secret key with the security provisioning server using the cryptographic processor key provisioned in the central processing unit at the time of manufacturing. The cryptographic engine and the security provisioning server may use any suitable algorithm for generating the shared secret key such as for example a Diffie Hellman key exchange.

Referring now to in use the mobile computing device may execute a method for provisioning the shared secret key . The method begins with block in which the mobile computing device determines whether to connect to the security provisioning server . The mobile computing device may be configured to automatically connect to the security provisioning server e.g. periodically or to connect to the server in response to a user s command. If the mobile computing device is to connect to the server the method advances to block in which the mobile computing device establishes a secured communication link with the security server . In some embodiments as discussed above the security engine establishes the secured communication link. In block the shared secret key is established between the mobile computing device and the server . To do so the mobile computing device may use the cryptographic processor key in a key exchange e.g. a Diffie Hellman key exchange with the security provisioning server to establish the shared secret key . The shared secret key is stored in the cryptographic engine of the central processing unit .

After the shared secret key has been established the method advances to block in which the mobile computing device monitors for further secured communications from the security provisioning server . As discussed below such further secured communications may include commands to enable disable the processor based data protection on the mobile computing device . If a secured communication is received from the security provisioning server the secured communication is decrypted in block . The secured communication may be decrypted by the security engine or the cryptographic engine using for example the shared secret key . Alternatively a separate key pair may be used for the secured communications.

In block the cryptographic engine determines whether the received secured communication enables the processor based data protection. If so the method advances to block in which the cryptographic engine generates the cryptographic symmetric key which is subsequently used for encryption decryption of data as discussed above. In one embodiment the cryptographic symmetric key is embodied as a session key generated as a function of the shared secret key . However in other embodiments the cryptographic symmetric key may be embodied as a cryptographic key provisioned in the central processing unit at the time of manufacturing similar to the cryptographic processor key .

In block the processor based data protection is enabled on the mobile computing device . In some embodiments the data size and disk blocks used in the drive encryption table is determined which are also used to partition the stored data on the drive . Additionally in some embodiments any data currently stored on the drive is encrypted in block using the cryptographic symmetric key generated in block .

Referring back to block if the decrypted secured communication from the security provisioning server is determined to disable the processor based data protection in block the method advances to block . In block the processor based data protection is disabled on the mobile computing device . In some embodiments any currently encrypted data stored on the drive is decrypted in block using the cryptographic symmetric key stored in the central processing unit .

Referring now to when enabled by the security provisioning server the mobile computing device may execute a method for processor based data protection. The method begins with block in which the central processing unit determines whether an application executing on the mobile computing device is requesting access to a file or data stored on the drive . If so the method advances to block in which the central processing unit requests the file or data from the drive manager module . In response the drive manager module locates the requested data on the drive and moves the data to the memory in block . To do so a drive storage driver may be used to interact with the drive to retrieve the requested data therefrom. Additionally in block the drive manager module updates the memory management unit with the encryption information related to the requested data. To do so in block the drive manager module accesses the drive encryption table to determine the encryption status of the data. As discussed above the drive encryption table illustratively includes an encryption property flag that indicates whether data encryption has been enabled for the requested data e.g. for the disk block of the drive on which the data is stored and an encryption state flag that indicates whether the requested data is encrypted or decrypted.

In response to the encryption information received from the drive manager module the memory management unit updates in block the page table properties for the memory page for the location of the requested data in the memory . For example in the illustrative embodiment the memory management unit may set the encryption property flag and the encryption state flag of the page table properties in blocks to indicate that data protection for the requested data is enabled and that the requested data is in an encrypted state.

In block see the central processing unit access the requested data stored in the memory . In response the memory management unit updates the control registers of the central processing unit with the encryption information for the memory page of the location of the stored requested data in the memory . To do so in the illustrative embodiment the memory management unit sets the encryption property flag of the control registers in block to indicate that processor based data protection is enabled for the requested data or for the associated memory page and sets the encryption state flag of the control registers in block to indicate the requested data is in an encrypted state. In this way the central processing unit is capable of discovering the encryption state of data stored in the memory via use of the control registers .

In block the central processing unit determines whether the encryption property flag of the control registers has been set to indicate that processor based data encryption has been enabled for the requested data. If not the method advances to block in which the central processing unit notifies the application of the location of the requested data which is stored in a decrypted or unencrypted state. However if processor based data protection has been enabled the method advances to block in which the central processing unit determines whether the encryption state flag of the control registers has been set to indicate that requested data is encrypted. If not the method advances to block as discussed above. However if the central processing unit determines that the requested data stored in the memory is encrypted based on the control registers the method advances to block in which the central processing unit decrypts the requested encrypted data. To do so the cryptographic engine of the central processing unit decrypts the requested encrypted data using the cryptographic symmetric key which was used to previously encrypt the data. In block the central processing unit stores the decrypted data in the memory in a new location and subsequently removes or deletes the encrypted version of the requested data from the memory in block . In block the central processing unit notifies the application of the location of the decrypted data in the memory . The application may subsequently access process and or manipulate the decrypted data as usual.

Referring now to the mobile computing device may also execute a method for securely storing data using processor based data protection. The method begins with block wherein the application may manipulate or generate data to be stored on the mobile computing device . In block the central processing unit determines whether the application has requested to store data on the drive . If so the method advances to block in which the central processing unit encrypts the data to be stored. To do so the cryptographic engine of the central processing unit encrypts the data using the cryptographic symmetric key . The encrypted data may be temporarily stored in the memory and in block the central processing unit may remove the unencrypted data from the memory .

In block the encrypted data is provided to the drive manager module for storing on the drive . The drive manager module subsequently stores the encrypted data on the drive in block . Additionally in block the drive manager module updates the drive encryption table with the encryption information associated with the encrypted data stored on the drive . Such encryption information may be provided to the drive manager module by the memory management unit . As discussed above the drive manager module sets the encryption property flag of the drive encryption table to indicate that processor based data protection is enabled for the stored data and sets the encryption state flag of the drive encryption table to indicate the stored data is in an encrypted state. In this way the encryption information of the stored data may be tracked and subsequently used when the stored data is later accessed as discussed above with regard to method .

Illustrative examples of the devices systems and methods disclosed herein are provided below. An embodiment of the devices systems and methods may include any one or more and any combination of the examples described below.

In one example a mobile computing device for processor based data protection may include a memory including data stored therein in an encrypted state and a central processing unit including a cryptographic symmetric key stored therein and at least one control register. The central processing unit may i access the data stored in the memory ii determine that the accessed data is encrypted based on a state of a flag of the at least one control register of the central processing unit and iii decrypt the accessed data using the cryptographic symmetric key in response to determining that the access data is encrypted.

In an example the at least one control register may include an encryption property flag that that indicates whether data encryption has been enabled for the accessed data and the central processor is to determine that the accessed data is encrypted by determining the state of the encryption property flag. In an example the central processing unit may include a control register 4 having the encryption property flag. In an example the at least one control register may include an encryption state flag that that indicates whether the access data is stored in an encrypted state or a decrypted state and the central processor is to determine that the accessed data is encrypted by determining the state of the encryption state flag. In an example the central processing unit may include a control register 3 having the encryption state flag.

In an example the central processing unit may include i a first control register having an encryption property flag that that indicates whether data encryption has been enabled for the accessed data and ii a second control register having an encryption state flag that that indicates whether the access data is stored in an encrypted state or a decrypted state and the central processing unit is to determine that the access data is encrypted by determining the state of the encryption property flag and the encryption state flag. In an example the mobile computing device may further include a drive having data stored thereon and a drive manager module to maintain a drive encryption table that identifies the state of encryption of data stored on the drive. In an example the mobile computing device may further include a memory management unit to manage the memory. In an example the drive manager module may receive a request from the central processing unit for access to the data stored on the drive retrieve the requested data from the drive and store the retrieved requested data in the memory access the drive encryption table to determine whether the requested data is encrypted and update the memory management unit with the state of encryption of the requested data as a function of the drive encryption table. In an example the drive manager module is to access the drive encryption table may determine the state of an encryption property flag stored in the drive encryption table that indicates whether data encryption has been enabled for the requested data and determine the state of an encryption state flag stored in the drive encryption able that indicates whether the requested data is stored in an encrypted state or a decrypted state. In an example the memory management unit may update a memory page properties table associated with a section of the memory in which the requested data is stored with the state of encryption of the requested data stored in memory. In an example the memory management unit may update the memory page properties table by setting an encryption state flag of the memory page properties table to indicate that the requested data stored in memory is encrypted. In an example the memory management unit may set an encryption property flag of a first control register of the central processing unit that indicates data encryption has been enabled for the requested data stored in the memory and set an encryption property flag of a second control register of the central processing unit that indicates the requested data is stored in the memory of the mobile computing device in an encrypted state.

In an example the central processing unit may store the decrypted data in the memory and remove the encrypted data from the memory. In an example the central processing unit may notify an application executed on the mobile computing device that requested the data of the location of the decrypted data in memory. In an example the mobile computing device may further include a drive having data stored thereon and the central processing unit may receive a request from an application executed on the mobile computing device to store unencrypted data to the drive and encrypt in response to the request from the application the unencrypted data using the cryptographic symmetric key stored in the central processing unit. In an example the central processing unit may further remove the unencrypted data from the memory of the mobile computing device after the unencrypted data has been encrypted by the central processing unit. In an example the mobile computing device may further include a drive manager module to maintain a drive encryption table that identifies the state of encryption of data stored on the drive. The drive manager module may update the drive encryption table to indicate that the encrypted data is stored on the drive in an encrypted state.

In an example the central processing unit further include a cryptographic processor key that was provisioned in the central processing unit during manufacturing of the central processing unit. In such example the mobile computing device may further include a security engine to establish a secure communication link with a security server and establish a shared secret with the security server using the cryptographic processor key. In an example the cryptographic processor key is a one time programmable fuse located within the central processing unit. In an example the security engine may receive a command from the security server over the secure communication link to perform data encryption on the mobile computing device and the central processing unit may generate in response to the command received from the security server the cryptographic symmetric key as a function of the shared secret. In an example the mobile computing device may further include a drive having data stored thereon and the central processing unit may encrypt in response to the command received from the security server data stored on the drive using the cryptographic symmetric key.

In an example a method for processor based data protection on a mobile computing device may include accessing with a central processing unit of the mobile computing device data stored in a memory of the mobile computing device determining with the central processing unit that the accessed data is encrypted based on a state of a flag of at least one control register of the central processing unit and decrypting in response to determining that the accessed data is encrypted the accessed data using a cryptographic symmetric key stored in the central processing unit. In an example determining that the accessed data is encrypted may include determining the state of an encryption property flag of a control register of the central processing unit that indicates whether data encryption has been enabled for the accessed data. In an example determining the state of the encryption property flag may include determining the state of an encryption property flag of control register 4 of the central processing unit. In an example determining that the accessed data is encrypted may include determining the state of an encryption state flag of a control register of the central processing unit that indicates whether the access data is stored in an encrypted state or a decrypted state. In an example determining the state of the encryption state flag may include determining the state of an encryption state flag of control register 3 of the central processing unit.

In an example determining that the accessed data is encrypted may include determining the state of an encryption property flag of a first control register of the central processing unit wherein the encryption property flag indicates whether data encryption has been enabled for the accessed data and determining the state of an encryption state flag of second control register of the central processing unit different from the first control register wherein the encryption state flag indicates whether the access data is stored in an encrypted state or a decrypted state. In an example the method may further include receiving a request for access to data stored on a drive of the mobile computing device moving the requested data from the drive to the memory of the mobile computing device accessing a drive encryption table that identifies the state of encryption of data stored on the drive to determine whether the requested data is encrypted and updating a memory management unit of the mobile computing device with the state of encryption of the requested data as a function of the drive encryption table. In an example accessing the drive encryption table may include determining the state of an encryption property flag stored in the drive encryption table that indicates whether data encryption has been enabled for the requested data and determining the state of an encryption state flag stored in the drive encryption able that indicates whether the requested data is stored in an encrypted state or a decrypted state.

In an example the method may further include updating a memory page properties table associated with a section of the memory of the mobile computing device in which the requested data is stored with the state of encryption of the requested data stored in memory. In an example updating the memory page table may include setting an encryption state flag of the memory page properties table to indicate that the requested data stored in memory is encrypted. In an example the method may further include setting an encryption property flag of a control register of the central processing unit that indicates data encryption has been enabled for the requested data stored in the memory and setting an encryption property flag of a control register of the central processing unit that indicates the requested data is stored in the memory of the mobile computing device in an encrypted state.

In an example the method may further include storing the decrypted data in the memory of the mobile computing device and removing the encrypted data from the memory. In an example the method may further include notifying an application executed on the mobile computing device that requested the data of the location of the decrypted data in memory. In an example the method may further include receiving a request from an application executed on the mobile computing device to store unencrypted data to a drive of the mobile computing device encrypting in response to the request from the application the unencrypted data using the cryptographic symmetric key stored in the central processing unit and storing the encrypted data to a drive of the mobile computing device. In an example the method may further include removing the unencrypted data from the memory of the mobile computing device after the unencrypted data has been encrypted by the central processing unit. In an example the method may further include updating a drive encryption table that identifies the state of encryption of data stored on the drive with information to indicate that the encrypted data is stored on the drive in an encrypted state.

In an example the method may further include establishing a secure communication link between the mobile computing device and a security server and establishing a shared secret with the security server using a cryptographic processor key that was provisioned in the central processing unit during manufacturing of the central processing unit. In an example the method may further include receiving a command from the security server over the secure communication link to perform data encryption on the mobile computing device and generating in response to the command received from the security server the cryptographic symmetric key as a function of the shared secret. In an example the method may further include encrypting in response to the command received from the security server data stored on a drive of the mobile computing device using the cryptographic symmetric key.

In another example a mobile computing device may include a central processing unit and a memory having stored therein a plurality of instructions that when executed by the processor cause the mobile computing device to perform any of the methods described above. In yet another example one or more machine readable media comprising a plurality of instructions stored thereon that in response to being executed result in a mobile computing device performing the any of the methods described above.

In another example at least one computer readable storage medium may include a plurality of instructions that in response to being executed result in a mobile computing device accessing with a central processing unit of the mobile computing device data stored in a memory of the mobile computing device determining the state of an encryption property flag of a first control register of the central processing unit wherein the encryption property flag indicates whether data encryption has been enabled for the accessed data determining the state of an encryption state flag of a second control register of the central processing unit wherein the encryption state flag indicates whether the access data is stored in an encrypted state or a decrypted state determining that the accessed data is encrypted based on the state of the encryption property flags of the control registers of the central processing unit and decrypting in response to determining that the accessed data is encrypted the accessed data using a cryptographic symmetric key stored in the central processing unit. In an example the plurality of instructions may further result in the mobile computing device receiving a request for access to data stored on a drive of the mobile computing device moving the requested data from the drive to the memory of the mobile computing device accessing a drive encryption table stored on the mobile computing device that identifies the state of encryption of data stored on the drive to determine whether the requested data is encrypted and updating a memory management unit of the mobile computing device with the state of encryption of the requested data as a function of the drive encryption table.

In an example accessing the drive encryption table may include determining the state of an encryption property flag stored in the drive encryption table that indicates whether data encryption has been enabled for the requested data and determining the state of an encryption state flag stored in the drive encryption able that indicates whether the requested data is stored in an encrypted state or a decrypted state. In an example the plurality of instructions may further result in the mobile computing device updating a memory page properties table associated with a section of the memory of the mobile computing device in which the requested data is stored with the state of encryption of the requested data stored in memory. In an example updating the memory page table may include setting an encryption state flag of the memory page properties table to indicate that the requested data stored in memory is encrypted. In an example the plurality of instructions further result in the mobile computing device setting an encryption property flag of a control register of the central processing unit that indicates data encryption has been enabled for the requested data stored in the memory and setting an encryption property flag of a control register of the central processing unit that indicates the requested data is stored in the memory of the mobile computing device in an encrypted state.

While the disclosure has been illustrated and described in detail in the drawings and foregoing description such an illustration and description is to be considered as exemplary and not restrictive in character it being understood that only illustrative embodiments have been shown and described and that all changes and modifications consistent with the disclosure and recited claims are desired to be protected.

