---

title: Controlling application programs based on memory usage of a process and right of application programs to use display unit
abstract: An apparatus includes a monitoring unit configured to monitor memory usage of a process in which multiple application programs are running, and a control unit configured to terminate one or more of the application programs when the memory usage of the process exceeds a first threshold.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09400693&OS=09400693&RS=09400693
owner: Ricoh Company, Ltd.
number: 09400693
owner_city: Tokyo
owner_country: JP
publication_date: 20120221
---
The present application is based upon and claims the benefit of priority of Japanese Patent Application No. 2011 048814 filed on Mar. 7 2011 the entire contents of which are incorporated herein by reference.

In a device such as a multifunction peripheral multiple application programs hereafter simply referred to as applications are executed using limited memory resources. In such a device generally one application is executed as one process so that this mechanism is referred to as one application per process herein. However there is also a device where multiple applications are executed as one process or on one process and this mechanism is referred to as multiple applications per process herein see for example Japanese Laid Open Patent Publication No. 2005 269439 .

When the multiple applications per process mechanism is employed a memory space is shared by multiple applications running in a process. In this case if the memory usage of an application increases more than expected and the process runs out of memory it affects not only that application but also the other applications. As a result for example the other applications may malfunction or may become inoperative.

In an aspect of this disclosure there is provided an apparatus that includes a monitoring unit configured to monitor memory usage of a process in which multiple application programs are running and a control unit configured to terminate one or more of the application programs when the memory usage of the process exceeds a first threshold.

Preferred embodiments of the present invention are described below with reference to the accompanying drawings. In the descriptions below an image forming apparatus is used as an example of an apparatus or an information processing apparatus according to an aspect of this disclosure. is a block diagram illustrating an exemplary hardware configuration of the image forming apparatus . As illustrated in the image forming apparatus may include as hardware components a controller a scanner a printer a modem an operations panel a network interface and a secure digital SD card slot .

The controller may include a central processing unit CPU a random access memory RAM a read only memory ROM a hard disk drive HDD and a non volatile RAM NVRAM . The ROM stores for example programs and data used by the programs. The RAM is used for example as a storage area into which programs are loaded and as a work area for the loaded programs. The CPU executes the programs loaded into the RAM to implement various functions. The HDD stores for example programs and data used by the programs. The NVRAM stores for example various settings.

The scanner is a hardware component image scanning unit for scanning a document to obtain image data. The printer is a hardware component printing unit for printing print data on a recording medium such as paper. The modem is a hardware component for connecting the image forming apparatus to a telephone line and is used to send and receive image data for facsimile communications. The operations panel is a hardware component including an input unit such as buttons for receiving user inputs and a display unit such as a liquid crystal display panel. The network interface is a hardware component for connecting the image forming apparatus to a wired or wireless network such as a local area network LAN . The SD card slot reads for example programs stored in a secure digital SD card . With the image forming apparatus configured as described above in addition to the programs stored in the ROM and the HDD programs stored in the SD card can be loaded into the RAM and executed. Instead of the SD card any other storage medium e.g. a CD ROM or a universal serial bus USB memory may also be used for this purpose. That is a storage medium that can be mounted on the image forming apparatus is not limited to the SD card . When a storage medium other than the SD card is used the SD card slot may be replaced with a hardware component corresponding to the storage medium used.

The standard applications are default applications installed in the image forming apparatus before the factory shipment. In the example of the standard applications include a scan application a print application a copy application and a fax application . The scan application performs a scan job. The print application performs a print job. The copy application performs a copy job. The fax application performs a facsimile transmission job and a facsimile reception job. Each of the standard applications is executed as one process.

The control service is implemented by software modules that for example provide upper layer applications with functions for controlling various hardware resources and perform fundamental functions of the image forming apparatus .

The SDK applications may be referred to in their singular form for descriptive purposes are plug in applications that are additionally installed to add functions to the image forming apparatus after its factory shipment. Applications implementing any appropriate functions may be provided as the SDK applications . The SDK applications may be installed for example via the SD card or a network into the image forming apparatus .

The SDK platform provides an execution environment and common functions for the SDK applications . The SDK applications are developed using application programming interfaces API provided by the SDK platform those APIs are hereafter referred to as SDKAPIs . For example the SDK platform provides the SDK applications with an SDKAPI for a scan function an SDKAPI for a print function and an SDKAPI for a copy function. When an SDKAPI is called the SDK platform inputs a request corresponding to the called SDKAPI to the control service and thereby causes the image forming apparatus to perform a process corresponding to the called SDKAPI.

SDKAPIs may be made public to allow a third party to develop the SDK applications . Since the SDKAPIs are machine independent it is generally not necessary to modify the SDK applications for different types or models of image forming apparatuses. Here the SDK platform itself is also a type of an application program installed in the image forming apparatus . The SDK platform may be installed for example via the SD card or a network into the image forming apparatus .

Programs that can be installed into the image forming apparatus are not limited to the SDK applications and the SDK platform that are provided as examples in the present embodiment. Any appropriate programs may be additionally installed into the image forming apparatus .

The SDK platform includes an application management unit and an application information storing unit . The application management unit installs and uninstalls the SDK applications and also controls start and termination of the SDK applications . The application information storing unit stores a file hereafter referred to as an application information file for each SDK application which includes attribute information of the SDK application . Here an installation package e.g. an archive file of each SDK application may include an executable file and application information file of the SDK application . When installing an SDK application the application management unit stores the application information file included in the installation package of the SDK application in the application information storing unit . The application information storing unit may be implemented for example by a storage area of the HDD or the NVRAM .

The VM is for example a Java registered trademark virtual machine. In the SDK applications the SDK platform the monitoring unit and the control target selection unit are programs that run on the VM . Therefore when the VM is a Java virtual machine the SDK applications the SDK platform the monitoring unit and the control target selection unit are implemented as Java registered trademark programs.

The programs surrounded by a dotted line P on the VM run in one process or on one process . This process is hereafter referred to as a process P . For example the SDK applications are executed as threads in the process P. Accordingly the SDK applications share memory resources assigned to the process P by the OS . Thus the process P is an example of the multiple applications per process .

The monitoring unit continuously monitors memory usage or memory consumption of the process P. The monitoring unit compares the monitored memory usage of the process P with a predetermined condition or conditions and if the condition or one of the conditions is satisfied reports to the control target selection unit that the condition is satisfied.

When receiving the report from the monitoring unit the control target selection unit selects based on contents control information in a control information file stored in the control information storing unit one or more of the SDK applications as targets control targets whose start or termination is to be controlled. The control target selection unit requests the application management unit to start or terminate the selected SDK application s . The control target selection unit or a combination of the control target selection unit and the application management unit may be called a control unit.

The control information storing unit stores a control information file that includes conditions to be compared with memory usage of the process P by the monitoring unit and information indicating a criterion used by the control target selection unit to select one or more SDK applications as control targets. The control information storing unit may be implemented for example by a storage area of the HDD or the NVRAM .

In step S the application management unit reads the application information files of the SDK applications installed in the image forming apparatus from the application information storing unit and loads information in the read application information files to for example the RAM .

In lines through represent information for identifying an SDK application for which the application information file is provided hereafter the identified SDK application is referred to as a subject application . For example line indicates an identifier product ID of the subject application.

Lines through indicate a file implementing the subject application. In this example the subject application the SDK application is implemented by a file with a file name demo.jar .

Lines through include information related to operational conditions of the subject application. For example line indicates a class name DemoApplication of the main class of the subject application. The main class here indicates a class to be operated by the application management unit . The main class of each SDK application includes an interface e.g. a method with the application management unit . The application management unit controls the SDK application via the interface or the method .

Line indicates a priority level of the subject application. In the present embodiment the priority level is indicated by one of high middle and low . The priority level is used when selecting an SDK application s to be controlled. Line indicates whether the subject application is a candidate for a control target to be controlled according to the memory usage of the process P or whether the subject application is a monitoring target to be monitored . When auto appli manage true the subject application is a candidate for a control target. Meanwhile when auto appli manage false the subject application is not a candidate for a control target. Being a candidate for a control target indicates that the subject application may be forcibly or automatically terminated or started according to the memory usage of the process P.

Line indicates the minimum amount of memory required by the subject application minimum memory usage . Line indicates the maximum amount of memory required by the subject application maximum memory usage . In the example of the amount of memory required by the subject application is greater than or equal to 0.3 MB and less than or equal to 1.5 MB.

Next the application management unit sends the information hereafter called application information in the read application information files to the control target selection unit S . Instead of sending the application information itself the application management unit may be configured to send an address or pointer indicating the location of a storage area into which the application information is loaded. Then the control target selection unit reads the control information file from the control information storing unit S .

In line represents a selection criterion for selecting a control target. In this example memory priority in line indicates that a control target s i.e. an SDK application s to be controlled is selected based on the priority level. In other words memory priority indicates that SDK applications with higher priority levels are preferentially kept running or active . Lines and represent control conditions or timing for starting or terminating the selected control target. More specifically line indicates that an SDK application selected according to the selection criterion of line is forcibly terminated when the memory usage of the process P exceeds an upper threshold of 28 MB. Meanwhile line indicates that an inactive SDK application is started to run in the process P when the memory usage of the process P falls below a lower threshold of 20 MB.

Accordingly with the control information file of events where the memory usage of the process P exceeds 28 MB and falls below 20 MB are defined as control conditions. The upper and lower thresholds are preferably determined such that a safety margin is provided on each end of the allowable range of the memory usage of the process P. For example the upper threshold may be determined by subtracting a predetermined value from the upper limit of the allowable range of the memory usage of the process P and the lower threshold may be determined by adding a predetermined value to the lower limit of the allowable range of the memory usage of the process P.

The information at line is used by the control target selection unit and the information at lines and is used by the monitoring unit .

Referring back to the control target selection unit sends to the monitoring unit identifiers of SDK applications monitoring targets to be monitored and the control conditions obtained from the control information in the read control information file S . SDK applications corresponding to the application information files where auto appli manage is true line in are selected as monitoring targets. The identifiers of the SDK applications are obtained from line of the respective application information files.

Next the control target selection unit requests the monitoring unit to start monitoring the memory usage of the process P S . In response to the request the monitoring unit starts monitoring the process P. When the monitoring unit runs as a part of the process P as in the present embodiment the monitoring unit can easily identify the process P to be monitored. Even when the monitoring unit is not a part of the process P the monitoring unit can identify the process P based on identification information of the process P. Instead of monitoring the memory usage of the process P the memory usage of the respective SDK applications selected as monitoring targets may be monitored and the total memory usage of the monitoring targets may be compared with the control conditions. When the SDK applications are Java registered trademark programs the memory usage of the SDK applications may be monitored using known technologies such as Java Management Extensions JMX and Java Virtual Machine Tool Interface JVMTI .

When monitored memory usage satisfies one of the control conditions the monitoring unit reports the satisfied control condition to the control target selection unit S . Assuming that the control information file of is used information indicating that the memory usage of the process P has exceeded the upper threshold or fallen below the lower threshold is reported to the control target selection unit .

Next the control target selection unit selects or determines a control mode start or termination and an SDK application to be controlled based on the application information of the respective SDK applications the control information and the reported or satisfied control condition S .

For example when it is reported that the memory usage of the process P has exceeded the upper threshold the control target selection unit determines to terminate one or more of the active i.e. running SDK applications . More specifically according to the selection criterion in the control information the control target selection unit selects from the active SDK applications identified as monitoring targets an SDK application s with a lower or lowest priority level as a control target to be terminated. The priority levels of the SDK applications may be determined based on their application information. The control target selection unit can determine whether the SDK applications are active running or inactive terminated by querying the application management unit . The application management unit maintains information indicating whether the SDK applications are active or inactive to control start and termination of the SDK applications . When multiple SDK applications are selected based on the priority levels an SDK application s whose maximum memory usage or minimum memory usage is the highest among the selected SDK applications may be selected as the control target to be terminated. This makes it possible to effectively reduce the memory usage of the process P while reducing the number of SDK applications to be terminated. Still however all the SDK applications selected based on the priority levels may be terminated.

Meanwhile when it is reported that the memory usage of the process P has fallen below the lower threshold the control target selection unit determines to start one or more of the inactive SDK applications . More specifically the control target selection unit selects an SDK application s with a higher or highest priority level as a control target to be started from the inactive SDK applications identified as monitoring targets and having minimum memory usage that is less than or equal to the difference between the upper threshold and the current memory usage of the process P so that the memory usage of the process P does not exceed the upper threshold even when the minimum memory usage of the control target is added . When multiple SDK applications are selected based on the priority levels an SDK application whose maximum memory usage or minimum memory usage is the lowest among the selected SDK applications may be selected as the control target to be started. This makes it possible to reduce the risk of causing the memory usage of the process P to exceed the upper threshold.

Then the control target selection unit sends the selected control mode start or termination and the identifier s of the selected SDK application s to request the application management unit to start or terminate the selected SDK application s S . Based on the control mode and the identifier the application management unit starts or terminates the selected SDK application S . When the selected SDK application is terminated the memory area being occupied by the selected SDK application is released. As a result the memory usage of the process P is reduced. Meanwhile when the selected SDK application is started the number of active SDK applications increases.

According to the above embodiment when the memory usage of the process P exceeds the upper threshold one or more of the SDK applications running in the process P are terminated. This method or configuration makes it possible to properly control the memory usage of the process P i.e. the memory usage of the SDK applications running in the process P .

Also according to the above embodiment when the memory usage of the process P falls below the lower threshold one or more inactive SDK applications are started. This method or configuration makes it possible to increase the number of active SDK applications thereby making it possible to increase the number of services available for the user.

In the above embodiment a control target is selected based on the priority level. However any other criterion may be used to select a control target.

When the control information file of is used the control target selection unit in step S of preferentially selects an SDK application without the owner right of the operations panel as a control target to be terminated or selects an SDK application with the owner right of the operations panel as a control target to be started.

This method of preferentially keeping SDK applications with the owner right of the operations panel running makes it possible to improve the availability of the SDK applications to be operated via the operations panel . In other words this method makes it possible to reduce the need for the user to manually start the SDK applications with the owner right via a control screen displayed on the operations panel by the application management unit .

Information indicating whether the SDK application has the owner right of the operations panel may be included for example in the application information file.

When the control information file of is used the control target selection unit in step of preferentially selects a less or least frequently used SDK application as a control target to be terminated or selects a more or most frequently used SDK application as a control target to be started.

This method of preferentially keeping frequently used SDK applications running makes it possible to reduce the need for the user to manually start the SDK applications via a control screen displayed on the operations panel by the application management unit .

The usage frequency of the SDK application or the number of times the SDK application is used or selected may be recorded for example in the HDD or the NVRAM by the application management unit .

A control target may also be selected based on a combination of two or more of the priority level the owner right of the operations panel and the usage frequency.

In the above embodiments the SDK applications are controlled started or terminated based on the memory usage. Alternatively the SDK applications may be controlled based on the usage of other hardware resources such as a CPU.

An aspect of this disclosure provides an apparatus a control method and a non transitory computer readable storage medium storing program code that make it possible to properly control the memory usage of application programs running in the same process.

The present invention is not limited to the specifically disclosed embodiments and variations and modifications may be made without departing from the scope of the present invention.

