---

title: Identifier compression for file synchronization via soap over HTTP
abstract: As changes are made to a document, each change may be assigned an extended identifier comprising a globally unique identifier (GUID) component and an integer component. Upon determining that the same GUID component is used in identifiers for multiple changes, the GUID component may be mapped to a range of indices. Each index of the range of indices may then be used to represent the same GUID component in each extended identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08744999&OS=08744999&RS=08744999
owner: Microsoft Corporation
number: 08744999
owner_city: Redmond
owner_country: US
publication_date: 20120724
---
Under provisions of 35 U.S.C. 119 e the Applicants claim the benefit of U.S. provisional application no. 61 592 533 filed Jan. 30 2012 which is incorporated herein by reference.

File transfer protocols such as the File Synchronization via SOAP over HTTP MS FSSHTTP stateless protocol use identifiers to track and reference objects within files. In most situations these files contain large numbers of data elements each of which may have multiple identifiers of their own and references to other objects via those objects identifiers. These identifiers themselves may often be large on the order of 20 bytes in the MS FSSHTTP protocol so storing and manipulating these identifiers can result in a great deal of overhead.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter. Nor is this Summary intended to be used to limit the claimed subject matter s scope.

As changes are made to a document each change may be assigned an extended identifier comprising a globally unique identifier GUID component and an integer component. Upon determining that the same GUID component is used in identifiers for multiple changes the GUID component may be mapped to a range of indices. Each index of the range of indices may then be used to represent the same GUID component in each extended identifier.

Both the foregoing general description and the following detailed description provide examples and are explanatory only. Accordingly the foregoing general description and the following detailed description should not be considered to be restrictive. Further features or variations may be provided in addition to those set forth herein. For example embodiments may be directed to various feature combinations and sub combinations described in the detailed description.

The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described modifications adaptations and other implementations are possible. For example substitutions additions or modifications may be made to the elements illustrated in the drawings and the methods described herein may be modified by substituting reordering or adding stages to the disclosed methods. Accordingly the following detailed description does not limit the invention.

In modern work environments large documents often comprise multiple complex elements. For example a year end presentation document may have slides of spreadsheets pages of text embedded videos links to other documents pictures graphs and other objects. Oftentimes multiple people will work on these documents at the same time. This work results in modifications to the document that must be kept in sync so that each person s version of the document is up to date with changes made by the others.

File transfer and synchronization protocols such as the File Synchronization via SOAP over HTTP protocol MS FSSHTTP may be used to synchronize each person s changes to the other people working on the same document. Documents may be divided into cells that encompass multiple objects. For example a cell may comprise a single slide of a multi slide presentation file that in turn comprises several application data objects such as bullet points of text graphs images etc. Each object may in turn reference other objects in addition to containing application data. For example a graph may reference underlying data in a spreadsheet object that may be part of another cell of the document.

Each object may be identified using a unique identifier. This allows each change to the object to be tracked separately and synchronized to other copies of the overall document. For example a data point in a spreadsheet data object may be associated with an extended identifier comprising a globally unique identifier GUID and an integer component associated with the change. The GUID may be represented by a 16 byte string of data such as 5C877884 CB53 433D A937 6FEF81258B06. In some embodiments consistent with this disclosure the GUID may comprise essentially random data. The integer component may for example be a change counter represented by a 32 bit integer that may start from zero and increment each time an object is changed. The resulting extended identifier for the changed object may then be represented as 5C877884 CB53 433D A937 6FEF81258B06 635.

Such long 16 byte identifiers consume much more memory than a 32 bit integer especially as objects reference multiple other objects so applications may be configured to use indices for the GUID portion instead. For example multiple objects may use the same GUID as long as the second integer component is different for each object. In such cases a table may be created mapping a 16 or 32 bit integer index to the GUID. Each object in use by a given application may then use a shorter unique index that maps back to the GUID while changes are being made. The index can then be re mapped back to the longer GUID when the changes are saved and or submitted for synchronization with other copies of the document. Once the changes are submitted at least some of the range of indices may be released and those indices may be unreserved for re use and or future re allocation.

GUID management database may store tables that map integer indices to GUIDs. The indices may be tracked as unassigned or as assigned to particular clients such as first client application and or second client application . For example first client application may be assigned an index range of 1 20000 for a given GUID while second application client may be assigned an index range of 20001 40000 for the same GUID.

Each object within a cell may be assigned an extended identifier comprising a GUID component and an integer component. For example object B in cell A may comprise an extended identifier . Extended identifier may comprise a GUID component and an integer component. For example extended identifier is represented as 5C877884 CB53 433D A937 6FEF81258B06 635 wherein 5C877884 CB53 433D A937 6FEF81258B06 represents the GUID component and 635 represents the integer component.

Objects may also use these identifiers as references to other objects such as a reference identifier in cell A . Each object must have a unique extended identifier whether by its GUID component or its integer component. That is objects can share the same GUID component as long as each of those objects integer components are different. When the GUID component is the same methods for providing identifier compression as described below may be used to shorten the extended identifiers. For example by mapping the GUID of 5C877884 CB53 433D A937 6FEF81258B06 to a range of indices a compressed object identifier and a compressed object reference may be used in object B in cell C .

Method may then advance to stage where computing device may request a range of indices from the document synchronization application. For example client application may request a globally unique identifier GUID for changes to be made to the collaborative document from document synchronization application . Document synchronization application may allocate a range of indices associated with a GUID comprising for example a consecutive range of 100 000 32 bit integers. The association between the range of indices and the GUID may be maintained in GUID management database along with allocation information such as the time the range was allocated and an identifier for the requesting client.

Method may then advance to stage where computing device may receive a plurality of changes to the document. For example a user may edit various objects within the document. Each changed object may be identified with an extended identifier comprising a GUID component and an integer component. The GUID component may initially comprise a full length GUID which may be 16 bytes of data.

Method may then advance to stage where computing device may replace the GUID component in each extended identifier. For example multiple objects may share the same GUID component so long as the integer component associated with each of those multiple objects is unique. The client application may replace the GUID component in the extended index for each changed object and or in the extended index for any references within those objects with an index from the range of indices. Each index for a given GUID is used only once. By allocating a large range of indices such as 100 000 all of the objects in use by a given application will be able to use the same GUID without having to store the long form in each object. Furthermore to ensure that each index is used only once a timestamp may be stored alongside the allocation state i.e. the next integer of the range of indices . Periodically a check of the current time versus the timestamp may be made to ensure that the current time is always greater within a range of tolerance than the timestamp. In the case that the timestamp is greater than the current time a discrepancy is detected and the range of indices is discarded to prevent reuse of integers. In this case a second range of indices may be requested from the document synchronization application as described with respect to stage .

Method may then advance to stage where computing device may determine whether each integer of the range of indices has been used. For example first client application may determine whether enough changes have been made to the document to have used all of the indices e.g. by using a counter . In some embodiments consistent with this disclosure indices may be re used within the client application s once the changes are propagated. When the client is offline from the network however such changes may not be able to be sent to other client applications.

In response to determining that the range of indices have all been used method may advance to stage where computing device may request a second range of indices from the document synchronization application. This may occur as described above with respect to stage .

Method may then advance to stage where computing device may determine whether a second range of indices has been received. For example second client application may attempt to request a new range of indices from document synchronization application . If client device is disconnected from network however the request may not be able to be sent nor a reply received.

In response to determining that the second range of indices has not been received from the document synchronization application method may advance to stage where computing device may identify subsequent changes to the document with a newly generated GUID component. For example second client application may generate at least one new 16 byte GUID and use that as the GUID component in subsequent extended identifiers. If the new range of indices is received at stage or once a new GUID is generated at stage method may return to stage to continue receiving changes and identifying them with the new index range.

After determining that indices remain available at stage method may advance to stage where computing device may submit the plurality of changes to the document synchronization application. For example second client application may submit a list of changes to various objects within the document to document synchronization application where each object is identified by the extended identifier comprising the GUID index instead of the longer GUID component. Document synchronization application may be operative to translate the GUID index back into the GUID component before propagating the changes to other copies of the document such as may be open on first client application . Method may then end at stage .

An embodiment consistent with the invention may comprise a system for providing identifier compression. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to create a new document in an application receive a plurality of changes to the document assign an extended identifier to each of the plurality of changes wherein the extended identifier comprises a globally unique identifier GUID component and an integer component and determine whether at least one first extended identifier and at least one second identifier each comprise a same GUID component. In response to determining that the at least one first extended identifier and the at least one second identifier each comprise the same GUID component the processing unit may be further operative to map the same GUID component to a range of indices assign at least one first index of the range of indices to represent the same GUID component in the first extended identifier and assign at least one second index of the range of indices to represent the same GUID component in the second extended identifier.

Another embodiment consistent with the invention may comprise a system for providing identifier compression. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to receive a request from an application for at least one globally unique identifier GUID associated with change tracking in a document allocate a range of indices associated with the at least one GUID provide the range of indices associated with the at least one GUID to the application receive at least one change to an object associated with the document from the application wherein the at least one change is associated with an extended identifier comprising at least one index of the range of indices translate the at least one index of the range of indices into the at least one GUID in the extended identifier and propagate the at least one change to the at least one object associated with the document to at least one other copy of the document.

Yet another embodiment consistent with the invention may comprise a system for providing identifier compression. The system may comprise a memory storage and a processing unit coupled to the memory storage. The processing unit may be operative to open a document in an application wherein the document comprises a collaboration document synchronized by a document synchronization application request a range of indices from the document synchronization application wherein the range of indices comprises a consecutive range of 100 000 32 bit integers and wherein each index of the range of indices is associated with a globally unique identifier GUID comprising a 16 byte string of data receive a plurality of changes to the document wherein each of the plurality of changes is associated with an object in the document identified by an extended identifier comprising a GUID component and an integer component replace the GUID component in each extended identifier associated with each of the plurality of changes with an index of the range of indices and determine whether the range of indices have all been used. The processing unit may be further operative to in response to determining that the range of indices have all been used request a second range of indices from the document synchronization application determine whether a second range of indices has been received from the document synchronization application and if not identify subsequent changes to the document with a newly generated GUID component. The processing unit may also be operative to submit the plurality of changes to the documents synchronization application.

With reference to a system consistent with an embodiment of the disclosure may include a computing device such as computing device . In a basic configuration computing device may include at least one processing unit and a system memory . Depending on the configuration and type of computing device system memory may comprise but is not limited to volatile e.g. random access memory RAM non volatile e.g. read only memory ROM flash memory or any combination. System memory may include operating system one or more programming modules and may comprise document synchronization application . Operating system for example may be suitable for controlling computing device s operation. Furthermore embodiments of the invention may be practiced in conjunction with a graphics library other operating systems or any other application program and is not limited to any particular application or system. This basic configuration is illustrated in by those components within a dashed line .

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by a removable storage and a non removable storage . Computing device may also contain a communication connection that may allow device to communicate with other computing devices such as over a network in a distributed computing environment for example an intranet or the Internet. Communication connection is one example of communication media.

The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all computer storage media examples i.e. memory storage. Computer storage media may include but is not limited to RAM ROM electrically erasable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as a keyboard a mouse a pen a sound input device a touch input device etc. Output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used.

The term computer readable media as used herein may also include communication media. Communication media may be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may describe a signal that has one or more characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

As stated above a number of program modules and data files may be stored in system memory including operating system . While executing on processing unit programming modules may perform processes and or methods as described above. The aforementioned process is an example and processing unit may perform other processes. Other programming modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications word processing applications spreadsheet applications database applications slide presentation applications drawing or computer aided application programs etc.

One or more application programs may be loaded into the memory and run on or in association with the operating system . Examples of the application programs include phone dialer programs e mail programs personal information management PIM programs word processing programs spreadsheet programs Internet browser programs messaging programs and so forth. The system also includes a non volatile storage area within the memory . The non volatile storage area may be used to store persistent information that should not be lost if the system is powered down. The application programs may use and store information in the non volatile storage area such as e mail or other messages used by an e mail application and the like. A synchronization application not shown also resides on the system and is programmed to interact with a corresponding synchronization application resident on a host computer to keep the information stored in the non volatile storage area synchronized with corresponding information stored at the host computer. As should be appreciated other applications may be loaded into the memory and run on the mobile computing device .

The system has a power supply which may be implemented as one or more batteries. The power supply might further include an external power source such as an AC adapter or a powered docking cradle that supplements or recharges the batteries. The system may also include a radio that performs the function of transmitting and receiving radio frequency communications. The radio facilitates wireless connectivity between the system and the outside world via a communications carrier or service provider. Transmissions to and from the radio are conducted under control of the operating system . In other words communications received by the radio may be disseminated to the application programs via the operating system and vice versa.

The radio allows the system to communicate with other computing devices such as over a network. The radio is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

This embodiment of the system provides notifications using the visual indicator that can be used to provide visual notifications and or an audio interface producing audible notifications via the audio transducer . In the illustrated embodiment the visual indicator is a light emitting diode LED and the audio transducer is a speaker. These devices may be directly coupled to the power supply so that when activated they remain on for a duration dictated by the notification mechanism even though the processor and other components might shut down for conserving battery power. The LED may be programmed to remain on indefinitely until the user takes action to indicate the powered on status of the device. The audio interface is used to provide audible signals to and receive audible signals from the user. For example in addition to being coupled to the audio transducer the audio interface may also be coupled to a microphone to receive audible input such as to facilitate a telephone conversation. In accordance with embodiments of the present invention the microphone may also serve as an audio sensor to facilitate control of notifications as will be described below. The system may further include a video interface that enables an operation of an on board camera to record still images video stream and the like.

A mobile computing device implementing the system may have additional features or functionality. For example the mobile computing device may also include additional data storage devices removable and or non removable such as magnetic disks optical disks or tape. Such additional storage is illustrated in by the non volatile storage area . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

Data information generated or captured by the mobile computing device and stored via the system may be stored locally on the mobile computing device as described above or the data may be stored on any number of storage media that may be accessed by the device via the radio or via a wired connection between the mobile computing device and a separate computing device associated with the mobile computing device for example a server computer in a distributed computing network such as the Internet. As should be appreciated such data information may be accessed via the mobile computing device via the radio or via a distributed computing network. Similarly such data information may be readily transferred between computing devices for storage and use according to well known data information transfer and storage means including electronic mail and collaborative data information sharing systems.

Generally consistent with embodiments of the invention program modules may include routines programs components data structures and other types of structures that may perform particular tasks or that may implement particular abstract data types. Moreover embodiments of the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments of the invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Furthermore embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.

Embodiments of the invention for example may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process. Accordingly the present invention may be embodied in hardware and or in software including firmware resident software micro code etc. . In other words embodiments of the present invention may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. A computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific computer readable medium examples a non exhaustive list the computer readable medium may include the following an electrical connection having one or more wires a portable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber and a portable compact disc read only memory CD ROM . Note that the computer usable or computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Embodiments of the invention may be practiced via a system on a chip SOC where each or many of the components illustrated in may be integrated onto a single integrated circuit. Such an SOC device may include one or more processing units graphics units communications units system virtualization units and various application functionalities all of which may be integrated or burned onto the chip substrate as a single integrated circuit. When operating via an SOC the functionality described herein may operate via application specific logic integrated with other components of the computing device system X on the single integrated circuit chip .

Embodiments of the present invention for example are described above with reference to block diagrams and or operational illustrations of methods systems and computer program products according to embodiments of the invention. The functions acts noted in the blocks may occur out of the order as shown in any flowchart. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality acts involved.

While certain embodiments of the invention have been described other embodiments may exist. Furthermore although embodiments of the present invention have been described as being associated with data stored in memory and other storage mediums data can also be stored on or read from other types of computer readable media such as secondary storage devices like hard disks floppy disks or a CD ROM a carrier wave from the Internet or other forms of RAM or ROM. Further the disclosed methods stages may be modified in any manner including by reordering stages and or inserting or deleting stages without departing from the invention.

All rights including copyrights in the code included herein are vested in and the property of the Applicants. The Applicants retain and reserve all rights in the code included herein and grant permission to reproduce the material only in connection with reproduction of the granted patent and for no other purpose.

While certain embodiments of the invention have been described other embodiments may exist. While the specification includes examples the invention s scope is indicated by the following claims. Furthermore while the specification has been described in language specific to structural features and or methodological acts the claims are not limited to the features or acts described above. Rather the specific features and acts described above are disclosed as example for embodiments of the invention.

