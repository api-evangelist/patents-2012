---

title: Obtaining information from data items
abstract: Methods and apparatus are disclosed for obtaining and processing information from a predetermined portion of a header of a data item such as an IP packet transmitted via a communication network such as a packet network, the portion carrying a codepoint selected from a first set of codepoints each of which has a pre-defined meaning according to a first pre-defined communication protocol. The method comprises: receiving the data item; inspecting the header whereby to determine the codepoint carried by the predetermined portion thereof; identifying whether the codepoint is a member of a second set of codepoints, the second set comprising fewer possible codepoints than the first set; and in the event that the codepoint is identified as being a member of the second set, and in dependence on such an identification being made, interpreting that codepoint according to a different pre-defined communication protocol as having a different pre-defined meaning and routing the data item via the communication network via the second pre-defined communication protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09515960&OS=09515960&RS=09515960
owner: BRITISH TELECOMMUNICATIONS public limited company
number: 09515960
owner_city: London
owner_country: GB
publication_date: 20120223
---
This application is the U.S. national phase of International Application No. PCT GB2012 000188 filed 23 Feb. 2012 which designated the U.S. and claims priority to EP 11250228.1 filed 28 Feb. 2011 the entire contents of each of which are hereby incorporated by reference.

The present invention relates to obtaining information from data items transmitted via a communication network. More specifically aspects of the present invention relate to methods and apparatus for obtaining information from a predetermined portion such as a field in the header of a data item such as an Internet Protocol packet transmitted via a communication network such as a packet network.

We start by presenting some basic concepts to facilitate the understanding of the mechanisms that are presented further on.

A data sender usually splits data to be sent into small units known as packets. Each packet consists of a header and a payload carrying the data to be delivered. The header contains fields defined by the relevant communication protocol. The great majority of packets carried by commercial networks nowadays are so called IP packets where IP is the Internet Protocol. This ensures that a network of routers can forward any packet from the source to its destination. IP is a connectionless protocol that means that the header information in each data packet is sufficiently self contained for routers to deliver it independently of other packets each packet could even take a different route to reach the destination.

The Internet Protocol has evolved through a number of versions although only two are currently used IPv4 and IPv6 the latter currently still having relatively low uptake. The layout and names of the fields of the IPv4 header are shown in which has been based principally on Internet Engineering Task Force IETF Request for Comments RFC document IETF RFC 791 but also reflects more recent updates IETF RFCs 2474 3260 and 3168 . IETF RFC 791 entitled Internet Protocol was published in September 1981 and is available on the internet at the http world wide website ietf.org rfc rfc791.txt. The other IETF RFC documents are also available on the internet via the http world wide website ietf.org rfc.html or elsewhere.

Referring to the numbers along the top above the six rows of field names index each bit of the header in rows of 32 bits numbered 00 to 31 . Three fields which will later be referred to in particular in relation to preferred embodiments of this invention are all on the second row and relate to packet fragmentation which will be discussed below. These fields are the Identification Flags and Fragment Offset fields.

From time to time a new requirement has to be met and can be achieved by updating part of a communications protocol rather than completely replacing it. Most protocols are defined so that some values of various fields are not used but are reserved for future use. The idea is that new features can be added by bringing values into use from these reserved ranges.

When reserved values are brought into use for a new variant of a protocol there are often problems. Existing equipment built before the protocol was updated is usually meant to take some default action if it encounters a packet carrying one of these reserved values. However when a reserved value is first used it is generally discovered that some legacy equipment does not take the specified default action possibly for one of two reasons 

Many manufacturers cut corners and do not test whether their equipment acts correctly when it encounters packets carrying values not in common usage at the time of implementation 

Many manufacturers deliberately do not set their equipment to implement the standard default action when it encounters a packet carrying a reserved value. Instead on the basis that the appearance of a previously unused value might be a symptom of some unknown security attack they set their equipment to discard the packet as a precaution.

Therefore the first adopters of a new protocol typically discover that arbitrary equipment seems to crash inexplicably or packets carrying new values never reach their destination because some item of equipment wrongly discards such packets termed being black holed . Such equipment will be referred to as a non compliant middlebox .

The outcome is often that new features often fail to be deployed or their introduction is delayed because no company wants to bear the cost of all the support calls that will result when their possibly perfectly implemented update is taken to be the cause of numerous problems that it triggers problems that are actually due to other incorrectly implemented equipment that has already been deployed.

The three fields referred to earlier as being of particular relevance to packet fragmentation are the Identification Flags and Fragment Offset fields. The IPv4 Flags field consists of three bits shown in only the second and third of which are currently used the first being reserved RES for future use. The other two are termed Don t Fragment DF and More Fragments MF . Further information about this is available in IETF RFC 791 referred to earlier.

The sender of every IPv4 packet must label each packet using the 16 bit Identification field. A source should cycle through the whole of the possible number space that could be written in the Identification field before repeating a previously used identifier. There is no requirement to cycle through the numbers in any particular order as long as all of the 2available numbers are used before any are repeated.

Each link in a network is characterised by a maximum size of packet it can transmit referred to as the link s maximum transmission unit MTU . If an IPv4 router needs to forward an arriving packet down a link that has an MTU smaller than the packet the router may break the packet down into fragments. Equivalently a source may break a packet down into fragments before sending it.

The process of fragmentation involves breaking the original payload down into sufficiently small fragments that they will each fit into the link and placing a copy of the original header on each fragment. Each header is then modified so that once a set of fragments arrives at its destination they contain sufficient information to allow reassembly of the original packet 

Thus each fragment contains sufficient information for the ultimate destination to reassemble them into the original packet.

Note that the sender of an un fragmented IPv4 packet should initially set the More Fragments flag to zero and the Fragment Offset to zero.

If the sender or a router sets the Don t Fragment DF flag then the packet should not be fragmented when it arrives at a subsequent router even if it is too large to fit within the MTU of a link. Instead the router should discard the packet and optionally return a control packet to the source containing an appropriate error message.

When IPv6 was defined it was decided that routers would no longer do fragmentation. This allowed routers to be simplified. Instead it was decided that the sender would become responsible for making sure its packets were small enough to fit through the link with the smallest MTU on the path the path MTU or PMTU . The sender can do fragmentation in IPv6 but that is not relevant to this discussion.

The IETF is in the process of recommending that IPv4 sources adopt a similar approach to IPv6 in this regard. To achieve this it is being recommended that all IPv4 sources set the Don t Fragment DF flag and clear the More Fragments MF flag and the Fragment Offset field see Updated Specification of the IPv4 ID Field Joe Touch 22 Oct. 2010 IETF Internet Draft available on the internet at ha website tools.ietf.org html draft ietf intarea ipv4 id update 01 . Most IPv4 sources already disable fragmentation in this way so the IETF exercise largely documents what is essentially current best practice.

Many security protocols for instance digital signatures require a hash of a combination of numbers from a large number space to be placed in a field that only fits a much smaller number space. If the receiver of the protocol knows the same combination of numbers it can check whether the hash it calculates matches the hash in the protocol field. Similarly hash tables are used to reduce the look up time when looking up a number from a large number space without having to search the whole space. Further information on hash tables is available from standard sources on the internet and elsewhere.

The IPv4 Identification field of non fragmented packets has been proposed to be re used in various ways in the past such as the following 

It appears possible that the authors believed that un fragmented packets on today s Internet all use some default value in the IPv4 Identification field such as zero whereas in general they in fact do not as discussed earlier .

There are various cases where values not used in one protocol are commandeered for use in another protocol. For instance 

An IETF Internet Draft entitled Ethernet Preamble Variation Use Ethernet Preamble to Perform Frame s Classification and a Switching Optimization draft giordano ethpre class opt 00 by Daniele Giordano is similar to the proposal in the Weiss patent application referred to above. It proposes a variation of the Ethernet frame structure to perform a frame s classification and a switching optimisation. Using a priority field PRI the switch is able to change its switching modality in dependence on the priority value between a store forward mode and a cut through mode. Insofar as these different modes can be regarded as different protocols it will be noted that the proposed codepoints used in the second mode protocol are different from those used in the first. As a result the frames of the second protocol can be deterministically distinguished from those of the first. In particular the Start Frame Delimiter SFD is different.

In cases such as these it will be understood that the values used in the second or later protocol are different from those used in the first or earlier protocol. Frames sent according to the second protocol can therefore be deterministically distinguished from those sent according to the first.

Similarly there may be examples of cases where a protocol field was defined but the usage was never taken up or fell into disuse so it was then re defined for a different purpose. Also there may be cases where a subset of the values of a protocol field were defined but never used or fell into disuse so new meanings were proposed for these values either by de jure standardisation or by de facto usage.

It will be understood that none of the prior art techniques discussed above suggest the deployment of a protocol where the semantics of a protocol field are deliberately ambiguous but probabilistically meaningful.

According to a first aspect of the present invention there is provided a method of obtaining information from a predetermined portion of a header of a data item transmitted via a communication network said portion carrying a codepoint selected from a first set of codepoints each of which has a first pre defined meaning according to a first pre defined communication protocol the method comprising 

By virtue of preferred embodiments of the above method certain codepoints having a particular meaning according to an existing or old communication protocol which may still be in use such that those codepoints might have been assigned to data items in accordance with that existing old communication protocol and are capable of being interpreted according to that existing old communication protocol as having their existing or old meanings by apparatus receiving data items carrying such codepoints may instead be interpreted if received by suitably enabled receiving apparatus according to a different new protocol under which those codepoints have a different new meaning. Data items carrying such codepoints that have been set by apparatus complying with the new protocol may be indistinguishable from data items carrying such codepoints that have been set by apparatus complying with the existing old protocol and may therefore be treated in the same way as data items sent by apparatus complying with the existing old protocol if received by non enabled apparatus complying with the existing old protocol but if such data items are instead received by enabled apparatus complying with the new protocol i.e. performing a method according to a preferred embodiment such apparatus may treat them on the basis that they have been received from apparatus complying with the new protocol interpret the codepoints accordingly and obtain information from them that non enabled apparatus may be unable to obtain. Due to the indistinguishable nature of the data items in question this advantage may be obtained without the risk that their presence arouses suspicion and leads to them being dropped or causing problems if received by non enabled apparatus.

According to preferred embodiments the communication network is a digital network such as a packet network.

It will be understood however that embodiments of the invention may be applicable in relation to other types of network carrying data items other than packets provided that such data items have or are associated with headers or information carrying portions equivalent to the headers of Internet Protocol packets.

According to preferred embodiments the data items are Internet Protocol packets such as IPv4 packets but they may be packets sent according to other IP versions or may be data items in accordance with other protocols as well.

The predetermined portion of the header or the equivalent information carrying portion thereof from which information may be obtained may comprise one or more fields or parts of fields in or associated with the data item.

According to preferred embodiments in particular embodiments such as those where the data items are Internet Protocol packets each having an Identification field in their header the predetermined portion may comprise part or all of the Identification field in the header of the data items.

Preferred embodiments are particularly applicable in relation to scenarios where the first protocol uses the available number space uniformly or at least fairly uniformly.

According to preferred embodiments the ratio between the number of members in the first set of codepoints and the number of members in the second set of codepoints is large which at least in cases where the first protocol uses the available number space uniformly or fairly uniformly ensures that the probability of a codepoint randomly selected from the first set by chance also being in the second set will be small. Preferably the ratio is at least 2 1 where n is a number such as 4 8 12 13 or 14.

According to preferred embodiments the first pre defined communication protocol may relate to the fragmentation of data items. According to such embodiments the first pre defined meaning of a particular codepoint may relate to the identification of fragments of a data item carrying that codepoint.

According to preferred embodiments the second pre defined communication protocol may relate to a path or a network characteristic such as network congestion or congestion on a path in a network. According to such embodiments the second pre defined meaning of a particular codepoint may relate to congestion experienced or expected to be experienced by a data item carrying that codepoint.

It will be understood however that the information obtainable from the data items when interpreted according to the first and or second protocol need not relate to a characteristic. It may instead or additionally relate to an instruction conveyed by the data item.

The method may comprise a further step performed in relation to one or more data items in dependence on information obtained from the data item in question or from a plurality of such data items. The further step may involve forwarding or possibly not forwarding e.g. dropping the data item or data items in a manner or on a path which may depend on the information obtained therefrom for example. Alternatively or additionally it may involve recording storing or reporting information based on that obtained in order to police a flow of which the data item or items forms a part or to allow it to be policed for example. Alternatively or additionally it may involve performing an action in response to an instruction conveyed by the information obtained from one or more data items for example. Other such actions may also be performed of course.

The method may further comprise interpreting the codepoint according to the first pre defined communication protocol as having the first pre defined meaning if the codepoint is not identified as being a member of the second set of codepoints.

According to a second aspect of the present invention there is provided apparatus for obtaining information from a predetermined portion of a header of a data item transmitted via a communication network said portion carrying a codepoint selected from a first set of codepoints each of which has a first pre defined meaning according to a first pre defined communication protocol the apparatus comprising 

The apparatus may comprise or be a part of a router or another such network element for receiving and or forwarding data items such as packets.

According to preferred embodiments the interpretation means may further be operable in the event that the codepoint is not identified as being a member of the second set of codepoints to interpret the codepoint according to the first pre defined communication protocol as having the first pre defined meaning.

The various options and preferred embodiments referred to above in relation to the first aspect are also applicable in relation to the second aspect.

It will be understood that preferred embodiments of the invention allow values in a protocol header field to be assigned a new protocol meaning even though the same values already have or had a meaning under an existing or old protocol.

Packets complying with such a new protocol may therefore be indistinguishable from packets already present on the network that were sent under the old existing protocol. Therefore during initial deployment packets complying with the new protocol will not encounter the bugs and security precautions that they would have been susceptible to if the new protocol had required packets complying therewith to carry different values to those in existing packets or to be deterministically distinguishable therefrom in any way.

The above idea is particularly applicable where the initial protocol definition includes a relatively large field which the source may set to any of its possible values all of which are meaningless and or ignored but not changed by existing network equipment. Then as new protocol fields are required sub ranges of the possible number space covered by this large field can be given new protocol semantics. Sending equipment that has been updated to use the new protocol will confine the codepoints it uses to the defined sub range and receiving equipment will recognise packets carrying codepoints in this sub range as very probably set by another piece of equipment that speaks i.e. is sending packets carrying data complying with the new protocol.

Occasionally this assumption may be incorrect when new equipment encounters a packet from old equipment that happens by chance to have used one of the numbers codepoints in the defined sub range as it cycles through the larger number space. However it will often be possible to ensure that the new equipment does no harm or minimal harm to packets sent by old equipment that it mistakenly interprets as complying with the new protocol.

A second stage of protocol evolution can be defined to remove the ambiguity of the interim stage just described. A reserved value in a second field can be set to flag that the first field should be unambiguously interpreted with its new protocol semantics.

This two stage process of protocol evolution may be used to remove the current chicken and egg problem where 

If data item receiving and data item forwarding equipment such as routers are configured to obtain information from data items in accordance with preferred embodiments of the invention it becomes possible to arrange for the following when deploying a new protocol 

The above should not be confused with what occurs when hashing techniques are used. As explained earlier these may involve a large number space held outside the protocol and the whole of a protocol field being used for the subset of the number space used by the hash. In contrast according to embodiments of the present invention while a previous protocol may have used a number space that fits within the protocol field in question a new protocol may then re use a subset of the larger number space within a smaller portion of the protocol field.

Similarly referring again to techniques such as those proposed in the Savage et al paper discussed earlier there is no suggestion of a new protocol using only a smaller subset of the number space that could possibly fit within a protocol field used by an old or existing protocol whereby to allow a receiving entity to identify packets which are highly likely to have been sent using the new protocol while potentially being indistinguishable from packets which have been sent using the old or existing protocol and interpret them accordingly in dependence on such an identification being made.

With reference to the accompanying figures a method according to a preferred embodiment will be described that may be used to facilitate incremental deployment of a new protocol without causing or increasing the likelihood of the types of problems such as those described above that often occur when a new protocol is deployed.

The way IPv4 was defined and the way it currently happens to be used meet all the criteria of the old protocol referred to above. An example first embodiment of the invention follows based on IPv4 as the initial old protocol and a modification to IPv4 as the new protocol although it will be recognised that alternative embodiments of the invention apply in respect of other old and potential new protocols.

According to measurements in 1999 only 0.22 of packets were fragments. A large majority of IPv4 sources set the Flags and Offset fields as they are shown in which shows the values of the fields of relevance to Fragmentation that would indicate a so called atomic packet NB X means either 1 or 0 . This indicates that the packet should not be fragmented DF 1 and has not already been fragmented MF 0 Offset 0 . Such a packet is sometimes termed atomic because it cannot be broken into fragments.

The Identification field of an atomic packet will never be needed to reassemble the packet. Therefore the Identification field is of little or no importance and is generally ignored and not changed by existing network equipment. In the value X shown in each bit position of the Identification field indicates that the value of these bits is irrelevant to the old IPv4 protocol. X essentially means don t care or doesn t matter or either 1 or 0 .

Of the large majority of IPv4 sources that disable fragmentation a large majority still set the 16 bit Identification field of each packet to any one of its 2possible values as if fragmentation might occur. Only a minority of those IPv4 sources that disable fragmentation set the Identification field to a default value of zero.

An example of an implementation that uses all 2values is the mainline Linux implementation of IP which is in widespread use in both servers and handheld devices. In common with most implementations of network protocols its primary application programming interface API is an abstraction termed a socket . An application programmer may craft individual packets using what is called a raw socket . However invariably programmers use the connect system call to connect to the socket in order to facilitate ongoing communication with a remote destination whether sending a stream of bytes broken up into segments e.g. TCP or a set of discrete datagrams e.g. UDP . Whenever a programmer has used the connect system call the Linux implementation of IP will generate packets with values in their ID fields that cycle through the whole number space. Only in the rare cases when the connect system call has not been used does Linux default to an ID field of zero.

Given that the large majority of IPv4 sources disable fragmentation an interim stage of protocol evolution can be defined where values in sub ranges of the Identification field can be given new specific semantics. However because the large majority of these sources still select packet ID values from the whole number space existing devices will already be sending numerous packets that use all the values in any sub range of the number space.

For the purposes of this example embodiment we will assume that a new protocol termed Protocol ExA needs a field in the IP header with up to eight new codepoints including a default value meaning that the old protocol is in use . Therefore it will need three extra bits in the IPv4 header because 8 2 .

The traditional way to distinguish a new version of IP from the old IPv4 would be to make the new protocol packets distinguishable from those sent under the old protocol perhaps by setting the Reserved flag bit in or bit in which has previously always been cleared to zero in all packets sent using the Internet. However some existing Internet equipment discards packets with the Reserved flag set merely because such packets are unexpected. Such behaviour i.e. discarding packets because a Reserved flag has been set is contrary to the Internet protocol standard but it happens for reasons such as those set out earlier under the heading Protocol Evolution .

Therefore when implementing a method according to our example embodiment our new version of IPv4 will allow the Reserved flag still to be cleared to 0. The new version of IPv4 also allows the Reserved flag to be set to 1 however which makes the new meaning of the packet header unambiguous. However the new protocol defines the Reserved flag as either 1 or 0 which is termed don t care and indicated as X in bit of .

As an example we will assume that the required eight codepoints are defined as all the eight possible combinations of the three least significant bits of the Identification field as shown in . Up to eight of the codepoints formed from the possible combinations of bits in this three bit sub field could each be assigned a new meaning under the new protocol.

If the Reserved flag is cleared to zero the rest of the bits in the ID field not within the newly defined sub field the most significant 13 bits have to be set to a default value e.g. zero . Then old IPv4 equipment cycling through all the values of the ID number space would happen to use one of the eight newly defined values with a probability of 1 in 2 2 .

Equipment designed to comply with the new protocol would assume that packets with 13 zeros in the 13 most significant bits had been sent by other equipment complying with the new protocol and it would act on them according to the meanings assigned to the values in the 3 assigned bits. This assumption would only be wrong with a probability of 1 in 2 or about 0.01 .

Sending or forwarding equipment wishing to make the new meaning unambiguous could set the Reserved flag to 1 as well as using any of the eight values in the newly defined sub field of the Identification field. This allows a trade off between 

Initially only the old IPv4 protocol is defined as shown in the first row of and also shown in with don t care values for the first 17 bits of the Fragmentation header fields. The remaining bits are arranged to indicate that the packet is atomic i.e. the packet must not be fragmented DF 1 and has not been fragmented MF 0 Offset 0 .

In a second stage i.e. the second row of the three least significant bits of the old Identification field have been registered as a new protocol called ExA on condition that the packet is atomic and the Reserved flag can be either 0 or 1. For instance a protocol standards body such as the Internet Assigned Numbers Authority IANA might hold a registry entry defining the meaning of these new bits as shown in . The third row of gives the name ExA of the new protocol for the sub field. The first two rows of specify which contiguous bits are allocated to the new protocol. The fourth row of indicates that the new protocol ExA is fully specified in request for comments RFC number 6789 for example . The final fifth row of indicates that the new bits should be considered to have the meanings defined by the new ExA protocol irrespective of whether the Reserved Flag is set to 0 or 1.

In a third stage the third row of sending forwarding equipment that implements the new protocol chooses to clear the Reserved flag to zero in order to avoid problems with non compliant middleboxes. It therefore also clears the remainder of the bits in the Identification field that are not used by the new protocol ExA i.e. the most significant 13 bits. It is then free to use the 3 bits assigned to the new protocol ExA in any combination that is valid within the new protocol specification.

In a fourth stage the fourth row of sending forwarding equipment complying with the new protocol chooses to use the codepoint 101 for example which will have a specific meaning defined in the relevant specification of protocol ExA.

In a fifth stage forwarding or receiving equipment that has implemented the new protocol ExA will read the packet header and obtain information from it which may be in accordance with the new protocol. This may be done using the following sub steps illustrated in which may be performed from a Start point step s to a Continue point step s in respect of each packet by packet receiving or packet receiving forwarding equipment such as a router an example of which is shown symbolically in 

The step of continuing step s may involve forwarding or possibly not forwarding e.g. dropping the packet in a manner which may depend on the information obtained from the packet. Alternatively or additionally it may involve recording storing or reporting information based on that obtained in order to police the flow of which the packet forms a part or to allow it to be policed for example.

The process shown in is broken down into the above steps for illustration purposes only. In practice it may well be simpler or otherwise more appropriate to optimise the above tests into fewer process steps. Similarly with reference to it will be understood that components of apparatus such as the header inspection module the probabilistic codepoint identification module the protocol handlers and the processor etc. need not be separate physical components of the apparatus or may be grouped in different functional modules within apparatus . The functions attributed to some or all of these may in fact be performed by a single processor for example with the results of processing to achieve the functionality attributed to one functional element being used where applicable in a subsequent routine whereby to achieve the functionality attributed to another.

Returning to the description of the technique in general it will be understood that it is possible for multiple sub fields of the field or fields in question such as the Identification field in the above example to be assigned for use by multiple new protocols. In order to minimise the probability of wrongly judging that a packet is using a new protocol only one new protocol should generally be used at a time if the Reserved flag is cleared to zero. However once at least one new protocol has received widespread acceptance everyone will have an incentive to remove or repair non compliant middleboxes until few remain. Then the Reserved flag can be set to 1 and multiple new protocols will all be able to use sub fields of the Identification field all at once.

