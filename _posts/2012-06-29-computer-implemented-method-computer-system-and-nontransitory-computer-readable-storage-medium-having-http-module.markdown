---

title: Computer implemented method, computer system and nontransitory computer readable storage medium having HTTP module
abstract: A computer implemented method, a computer system or a nontransitory computer readable storage medium having an HTTP module is provided. The method, system or medium may be configured for use with a device having one or more processors and a memory storing one or more programs for execution by the one or more processors, the one or more programs may include instructions for processing information from multiple web sites served up from a web application, binding multiple secure socket layer (SSL) certificates to a single site supported by the web application, hosting the SSL certificates using an SSL accelerator, and intercepting incoming requests relayed from the SSL accelerator to the web application with the HTTP module. The method, system or medium may be configured for use with an identity management system that uses human knowledge and experience and computer software programs and databases to anticipate forms of identity-related fraud.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793804&OS=08793804&RS=08793804
owner: EZShield, Inc.
number: 08793804
owner_city: Baltimore
owner_country: US
publication_date: 20120629
---
This application claims the benefit of and priority to U.S. Provisional Patent Application Ser. No. 61 584 745 filed on Jan. 9 2012 entitled IDENTITY MANAGEMENT SYSTEM AND METHOD the entire disclosure of which is hereby incorporated herein by reference.

A computer implemented method computer system and nontransitory computer readable storage medium having an HTTP module is provided. The method system and storage medium may be configured for an identity management system. The identity management system may be configured for identity theft protection.

In one embodiment a computer implemented method a computer system or a nontransitory computer readable storage medium having an HTTP module is provided. The method system or medium may be configured for use with a device having one or more processors and a memory storing one or more programs for execution by the one or more processors the one or more programs may include instructions for processing information from multiple web sites served up from a web application binding multiple secure socket layer SSL certificates to a single site supported by the web application hosting the SSL certificates using an SSL accelerator and intercepting incoming requests relayed from the SSL accelerator to the web application with the HTTP module.

In another embodiment an identity management system and method is provided that uses human knowledge and experience and computer software programs and databases to anticipate forms of identity related fraud. The identity management system facilitates the provision of affordable and effective products and services that help protect a customer s identity on multiple fronts on an ongoing basis. The term customer may include a person a group of people a family an organization a corporation or any potential person or entity requiring identity management services. The identity management system provides protection services that extend well beyond credit monitoring to address the entire spectrum of identity fraud sources including online hacking mail fraud credit cards checks public records memberships and several others. The identity management system monitors activity associated with a customer s identity and makes available to the customer a set of reports and alerts about activity that may indicate identity theft or misrepresentation. In performing and displaying an identity theft protection service the identity management system securely reviews and stores at least one or more of the following Protected Identity Elements individual name s street address es e mail address es telephone number s Social Security Number s and bank account or credit card number s .

The identity management system employs Internet Monitoring which searches certain data and records available on the Internet to identify any known risks involving the customer s Protected Identity Elements. The identity management system may include Credit Monitoring which provides credit report monitoring using one or more bureaus and monitors pay day loans. The identity management system may include Public Records Monitoring which monitors U.S. Postal Service USPS Changes of Address Court Records and Sex Offender Registries. The identity management system may include Name and Address Monitoring which monitors a Customized Name an Alias List and Customized Known Address List.

The service sends immediate email notifications when a change is reported on any of the monitors to which the customer subscribes. In addition if the customer has no changes during the month the identity management system may be adapted to send a courtesy email reminding the customer that the service is still active on behalf of the customer and pointing the customer to educational information about Identity Theft prevention and trends.

The identity management system performs its functions without a need for access to a customer s credit information. The customer is sent updates when there are changes in credit information but the identity management system will not be notified of the nature of such changes.

The identity management system permits customers to report any activity that is of concern through an Internet based reporting system or by calling a Resolution Specialist via telephone.

To facilitate understanding of the identity theft protection system in its full context the present specification includes the following 

In some embodiments an identity management system is provided comprising a core gateway system wherein the core gateway is configured to provide support for special offer codes and source codes that enable special pricing or promotional discounts offer promotional trial periods on certain products or identify a marketing channel used to attract the customer.

In some embodiments an identity management system is provided comprising a core gateway including a self service system a core function system a content and skinning a product and catalog system a partner integration system a central manager and an affiliate management system wherein the core gateway is configured to provide support for special offer codes and source codes that enable special pricing or promotional discounts offer promotional trial periods on certain products or identify a marketing channel used to attract the customer.

In some embodiments an identity management system is provided comprising An identity management system comprising a core gateway a data processing engine and a subscriber database.

In some embodiments an identity management system is provided comprising a secure profile system. In some embodiments an identity management system is provided comprising a system for binding multiple SSL certificates to a single Microsoft IIS site.

In some embodiments an identity management system is provided comprising a URL matcher to support vanity URLs on the core gateway.

In some embodiments an identity management system is provided comprising an identity alert management system for interaction between a customer and a resolution specialist.

In another aspect a core gateway system is provided comprising a customer tools system a self service system a core function system a content and skinning system a product and catalog system a partner integration system a central manager and an affiliate management system.

In a further aspect a data processing engine is provided comprising a file retrieval system a file parsing and staging system a business rule processing system and a record extract transform and load system linked to the subscriber database.

In some embodiments a data processing engine is provided comprising a first server a file retrieval system connected to the first server a second server connected to the file retrieval system a file extract transform and load system connected to the second server a staging data system connected to the file extract transform and load system a business rule processing system connected to the staging data system and a system for importing records that pass through the business rule processing system into the subscriber database.

In another aspect a breach solutions system is provided comprising the breach prevention system comprising an assist module and a prepare module. In some embodiments the assist module comprises a self assessment system and a score system. The self assessment system may comprise a series of questions pertaining to policies and procedures based on customer s industry and the personally identifiable information collected by the customer. In some embodiments the score system comprises a system for assigning weights for each of the questions a system for calculating a risk score based on the weights for each of the questions and the answers provided by the customer and a system for assigning the calculated risk score to a tiered scoring system. The prepare module may comprise a customer assist system a system for identifying a data breach victim s contact information and data transfer protocol a system for notifying breach victims or others of the subject data breach by a communication means that conforms with laws applicable to the customer s jurisdiction a system for providing recommendations of notification based on current state and federal incident response regulations a system for providing assistance with notification messaging and customer call center scripting a system for managing the breach response a system for providing breach victims customer sponsored access to a heightened level of service and a defined system for notification of costs.

In a further aspect a method of identity alert management for interaction between a customer and a resolution specialist is provided comprising the steps of identifying personally identifiable information against elements of a customer s identity automatically sending a communication to the customer within a specified time period authenticating the customer through a secure identity management dashboard permitting the customer to review a source of the alert and details associated with the alert prompting the customer to mark the alert as a threat or not a threat sending a record of the threat to an approved records system if the customer marks the alert as not a threat creating a case if the customer marks the alert as a threat permitting the user to execute a power of attorney prior to during or after the threat has been detected ascertaining whether the customer has executed the power of attorney providing a first response system for customers that have executed the power of attorney providing a second response system for customers that have not executed the power of attorney and permitting the customer or the resolution specialist to reopen a previously approved record.

As seen best in two major systems i.e. a Core Gateway CGW see Section III below and a Data Processing Engine DPE see Section IV below may be configured to operate with one or more components of the data tier integration application services tier and the public web tier . For example in one embodiment CGW may be configured to operate with SecurePort SSL URL Matcher Dynamic Branded Sites Public API Web Services and Public XFER and DPE may be configured to operate with Public XFER Partner Integration Services Business Intelligence Partner Integration Services OLTP and OLAP .

As seen best in the identity management system may comprise one or more product modules including check fraud protection CFP identity restoration IDR Public Records Credit Data Internet Monitoring and SYCURITY Score .

It is noted that the like numbers in represent logical or functional areas and within those areas there may be a number of components. In the case of numbers that are shared by both DPE and CGW there are components from both systems that fall under those areas. In most cases the integration between CGW and DPE may be made via data in the OLTP database. As such the links between various systems are functional and may be direct or indirect.

There may be real time integrations between CGW and DPE for example a DPE process may need to call upon a service exposed by CGW. In this example the component being called upon would be the one identified in the boxes which is CGW.

As seen best in the service providers may be compliant in one example with the Statement on Auditing Standards SAS 70 Type II standard and the Payment Card Industry PCI standard. SAS 70 II is an auditing standard that describes the internal controls an organization such as a hosted data center application service provider or credit processing company must employ to protect sensitive data. PCI Compliance refers to a set of standards that mandate the secure storage processing and transmission of customer credit card data. Service providers may include one or more of campaign management payment processing credit bureau data feed independent security scanning and testing and web trends and analytics .

In the present application each client may include a client application. The client can be any number of devices e.g. computer internet kiosk personal digital assistant cell phone gaming device desktop computer laptop computer tablet computer a television with one or more processors embedded therein or attached thereto or a set top box which may be used to connect to a communication network. The communication network may be a wireless optical wired or other type of network that facilitates the passage of information. It may include the Internet one or more local area networks LANs one or more wide area networks WANs other types of networks or a combination of such networks. The client application is an application that is executed by the client e.g. browser e mail client word processor and that displays or presents information to a user of the client the client application may also perform other tasks not relevant to the present discussion . Client may also include a location determiner for reporting a geolocation of the client.

A customer client system may include one or more processing units CPU s one or more network or other communications interfaces memory and one or more communication buses for interconnecting these components. The customer client system may include a user interface for instance a display and a keyboard. The memory may include high speed random access memory and may also include non volatile memory such as one or more magnetic or optical storage disks. The memory may include mass storage that is remotely located from CPU s. The memory may store the following elements or a subset or superset of such elements an operating system that includes procedures for handling various basic system services and for performing hardware dependent tasks a network communication module or instructions that is used for connecting the customer client system to other computers via the one or more communications interfaces wired or wireless such as the Internet other wide area networks local area networks metropolitan area networks and so on a client application as described above a client assistant as described above optionally a cache of downloaded and a cache downloaded as well as other information for viewing using the client application and information retrieved by user selection of one or more items.

The identity management system may include a Core Gateway which is an end user portal for consumers to browse the various products in the identity management system suite gather product information and complete the purchase and enrollment of various products. The site also provides various self service functions such as requesting additional information on any identity management system product and reporting fraud related activity. Finally for certain products such as Identity Protection and a secure web based storage inventory of subscriber documents such as for example EZSHIELD VAULT the Core Gateway serves as a central launching pad for additional product specific services.

In this way the CGW is a Consumer Hub for items related to the identity management system. From a technical and architectural view point CGW is also a content delivery and commerce platform. As banks and other financial institutions also known as Partners adopt the identity management system product suite the Core Gateway can be used by these Partners to deliver a custom branded uniform experience consistent with the Partner s own brand identity and online presence.

The Core Gateway facilitates rapid development and a stable and scalable platform. The Core Gateway comprises four core functions as follows language s and runtime environment for example in one embodiment .NET Framework and ASP.NET application framework and services content management for example in one embodiment DotNetNuke object relational persistence layer for example in one embodiment NHibernate and configuration and dependency injection additional app framework and services for example in one embodiment Spring.NET .

The CGW implements a platform that can deliver a Partner branded experience. In one embodiment a basic site structure is defined that encompasses all of the site s features delivery of information product specific services and launch pads enrollment and self service features. This generic structure can be easily applied to any Partner by default. To achieve a branded look several mechanisms may be utilized to tailor the content that is rendered and delivered to the end user 

This approach enables achievement of several goals. Firstly because the default structure and styles are fairly generic using the identity management system one can get a minimal Partner branded site up and running very rapidly just by uploading a few Partner logo images and specifying a handful of Partner specific style settings. Indeed a tool called the Partner JumpStart Toolkit does just that by providing a quick form fill approach to defining a new Partner. See below for a more detailed discussion of the Partner JumpStart Toolkit. 

Secondly it allows the freedom to completely replace a subset of pages when a Partner requests a particular look for a set of pages if that look does not easily fit into the default structure and style.

Lastly it facilitates a rapid response to specialized needs for Partners who may choose to include content that compliments but does not directly relate to the identity management system s site or products. In these cases using the identity management system one can add Partner specific products to that Partner s catalog and define product detailed pages which can be navigated to via the product links or from a set of custom pages.

The CGW implements a specialize product and catalog model dubbed the mini catalog which is specially tailored to the service oriented product selections of the identity management system suite. The catalog is also has special support for Partner specific requirements. A Partner s catalog may define a subset of the identity management system s products the partner wishes to offer as well as the subset of the variations of those products. Variations allow defining pricing price classes product specific content and even tax related information on a per Partner product combination.

The normal page flow for user enrollment has the user come to the CGW site either the identity management system default site or the Partner branded site browse around the site to learn about the identity management system products then begin the Enrollment process. The user selects one or more products to subscribe to provides their contact and billing information and any product specific options. The enrollment is submitted at which point a user account is created billing information is process and any recurring billing is validated and scheduled.

For some Partners this normal process can be altered. For starters instead of having users fill out their contact and personal information a Partner may choose to integrate their user data into the identity management system.

The Partner can define data elements known as a PartnerUserKeys which can be used to uniquely verify a user s identity. Some examples would be a customer account number the last four digits of their checking account number a special offer code that may have been sent to the customer by the Partner or the customer s account name. Any one of these or any combination up to 3 of these data elements can be used.

Bulk data load For this approach the Partner sends and initial load of customer data and then agrees to send updates on a regular periodic basis. The data load defines the customer information that the identity management system would typically capture through the normal enrollment process along with the identifying information corresponding to the PartnerUserKey elements. The data may also identify the products that the user is eligible for and may also identify if a user s information has been updated or if their eligibility has expired for example if a customer closes a checking account and is no longer eligible for Check Fraud Protection.

On demand Data Push For this approach a Partner s customer typically would navigate directly from their own account on the Partner s own site e.g. the user is logged into a Bank s account and billing services and would follow a link to the Partner s branded CGW site. The Partner would need to track whether the customer is already enrolled in the identity management system s service and if not would need to send the necessary information to the CGW using the Integration API a collection of securely accessible Web Services. A one time session token is generated from the API call and is used to identify the customer as she is forwarded from the Partner site to the CGW.

On demand Data Pull For this approach the Partner has to expose a mechanism for the CGW to query back to the Partner the necessary information. The CGW supports most standard Simple Object Access Protocol SOAP Web Service calls as well as some forms of REST based service requests. For this integration approach some additional configuration and integration work on the CGW may be required for each Partner. With this approach the customer may either be forwarded from the Partner s site or may land on the CGW directly e.g. following a Web link from an e mail announcement entering a URL from a mail campaign performing an Internet search or simply by word of mouth . Again the customer would need to enter some qualifying information to identify themselves. The CGW would use this information to make a request back to the Partner to confirm their eligibility as well as retrieve necessary enrollment data.

Most commerce sites have support for special offer codes and source codes that enable special pricing or promotional discounts offer promotional trial periods on certain products or simply help identify marketing channel used to attract the customer. In one embodiment CGW offers a mechanism known as Alter Codes which offers these features and more. When a user first lands at the CGW a session is constructed for that user and that session includes various state information including the originating site which Partner they are affiliated with and what Catalog of products are available to the user. As the user navigates through the site their session is updated to reflect any changes in that state. For example logging into the site updates the session with an authenticated user account that includes their enrollment history and account details.

An Alter Code is a generated code or word generated by an Alter Code Generator that finds its way to the user and then allows the user to enter that code during the enrollment process. If the Alter Code is of a valid form and not expired understood for the given Partner and applicable for the user s current session state then the Alter Code s associated Processor has the ability to make some alteration in the user s session. This can include altering the effective product catalog which could adjust product pricing give away items for promotional periods or enable products which would normal be hidden.

It can also be used to track the source location that a customer was referred from or import customer data from some external data source. In this way the Alter Code is complimentary with the Partner Integration mechanisms already mentioned.

Alter Codes can be durable meaning they are persistent in CGW s data store which is typical for a shared offer code that is blasted to many users for example during a marketing campaign that offers a 30 trial period on a subscription service. They can also be sparse meaning that they are not initially stored in the data store. Sparse codes are ones where many thousands of codes can be generated and a unique code is sent to individual users who may or may not act on them. When a user redeems an Alter Code that is sparsely stored then that Alter Code is then captured and stored and becomes effectively used up such that it cannot be used again. A sparse code is good for targeting specific individuals. A good example would be the Partner Integration example above where an Alter Code is generated for each Partner customer and redeeming that Alter Code pre populates the users contact information for enrollment.

The Core Gateway supports the concept of an Affiliate a special Partner entity that itself has customers who are Partners essentially a Partner of Partners. An Affiliate s customers are themselves banks credit unions or other financial institutions and CGW has special support for this arrangement where an Affiliate has a large number of FI customers that the Affiliate wishes to target the identity management system s products for resale under the FI customer s identity.

In addition to specialized reporting and analysis tools via EZTrac the CGW offers the Partner JumpStart Toolkit as briefly mentioned before. JumpStart is a very basic form fill based tool that allows designated agents of an Affiliate such as sales staff to create and define a new Partner branded site under the CGW. The JumpStart tool allows a handful of elements to be provided such as uploaded logos Partner identifying textual information primary theme and color selections and default product catalog.

Within minutes of defining this information the Affiliate agent can preview a working site. Once satisfied with the initial result the affiliate can request that the Partner be published. After completing a QA process by authorized identity management system agents the site can be released to the public. Additional customizations and configurations such as Partner Integration parameters custom catalogs and specialized page flows can be performed by identity management system agents and can be added at a later time or can be added before the new Partner site goes live.

The identity management system processes pieces of information referred to as feeds inbound and outbound with each feed potentially being in a different format. Some examples of these feeds include billing alert payment event email and synchronization data but the most common type is sales. A standard way to process these feeds is by means of a custom piece of code or package to process each feed. With this prior art method dozens if not hundreds of packages are managed to verify that each works properly and interdependencies are maintained.

As an alternative solution the identity management system includes a Data Processing Engine DPE . The DPE is a central platform to implement manage and monitor the inbound and outbound feeds. Feeds are controlled and processed through pieces of meta data that define the feed settings. The advantages to this approach include code reusability lower feed implementation times central logging shared business rules and consistent processing.

The DPE has been designed to support flexible transmission settings that are defined in the meta data associated with a feed. An FTP Server Remote or internal Server may be functionally connected to a File Retrieval system . The File Retrieval system may comprise a Data Feed TransmissionDetail and Data FeedJob. The Data Feed may define a feed including Partner name number of files and schedule information. The TransmissionDetail may define FTP location encryption information and directory location. The DataFeedJob may log each execution of the datafeed for reporting and operations management. The meta data defines the following information about the feed transmission.

A Local File Server may be provided between the File Retrieval system and a File Parsing File ETL system . The File Parsing File ETL system may comprise FeedDetail FieldMapping and FeedDetailLog. FeedDetail may define data relevant to the specific file which may include filename delimiter file type and the like. FieldMapping may define the fields contained in the file which may include Field Name Position Data Transformation Rules and Target filed in the SDB. FieldDetailLog may log each file processed as part of the datafeed for reporting and operations management.

During the parsing step of the DPE workflow the system decrypts opens and processes records in the file to the staging tables. A StagingData system may be provided between the File Parsing File ETL system and a Business Rule Processing system . The StagingData system may comprise a database and may be adapted to store data that contains parsed but unprocessed data. Those steps are configured with the following settings.

A Business Rule Processing system may be provided between the StagingData system and an ETL into SDB system . The Business Rule Processing system may validate records in the StagingData system by Partner specific business rules. Each record may be coded for processing and reporting.

Once the records have been processed to the staging tables the DPE goes through each record again and checks it against a list of business rules. Business rules can be defined as needed and run against one or more feeds. The rules check for feed specific verifications like duplicate sales records or malformed data elements. The status of the staging data record is updated after it has been processed to define its final disposition.

An ETL into Destination system may be provided between the Business Rule Processing system and a Destination system such as SDB. The ETL into Destination system may send records that pass all business rules into the Destination system . After business rule processing has completed the final step in the DPE workflow is the insert the staging records into the destination tables. As most feeds processed through DPE are sales related the most frequent destination is the Subscriber Database SDB . In this step the system looks for staging data records that have a positive disposition and have not been yet transferred to the destination. If both of those conditions are met the system inserts the data into the destination system and the staging data row s status is updated to reflect the end result of the processing.

A Data Model may be provided for the Data Processing Engine DPE . illustrates an exemplary table in a database which is used in some embodiments to store information about meta data associated with a DPE feed. The following entities are used to define the meta data associated with a DPE feed.

TransmissionDetail Server and transmission settings which may include one or more of TransmissionID ServerName Username Password Port DirectoryLocation TransferProtocol CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. TransmissionDetail may be functionally connected to DataFeed . For example TransmissionDetail may have a one to many relationship with DataFeed .

DataFeed Top level feed describing purpose and component files which may include one or more of FeedID Name Description PartnerID NoOfFiles IfInbound TransmissionID NotificationID ScheduleID Status CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. DataFeed may be functionally connected to one or more of TransmissionDetail FeedDetail Notification and Schedule . For example TransmissionDetail Notification and Schedule each may have a one to many relationship with DataFeed and DataFeed may have a one to many relationship with FeedDetail .

FeedDetail Specific file s associated with DataFeed Multiple files can be associated with one DataFeed. FeedDetail may include one or more of FeedDetailID FeedID Prefix Suffix Extension CharacterSet FieldDelimiter LineDelimiter File Type HeaderLinePresent IgnoreFirstNRecs IgnoreLastNRecs Encrypted ScheduleID CreatedOn CreatedBy UpdatedOn UpdatedBy and TextQualifier fields. FeedDetail may be functionally connected to one or more of DataFeed and FieldMapping . For example DataFeed may have a one to many relationship with FeedDetail and FeedDetail may have a one to many relationship with FieldMapping .

FieldMapping Mapping data for source file to staging data target which may include one or more of FieldMappingID FeedDetailID FieldName TargetTableName UniqueKeyColumn DataType DataLength FieldPosition NullAllowed TransformationRule FieldValidationID CreatedOn CreatedBy UpdatedOn UpdatedBy and IsPII fields. FieldMapping may be functionally connected to FeedDetail . For example FeedDetail may have a one to many relationship with FieldMapping .

Notification Notification information to use pre post feed processing which may include one or more of NotificationID EventID NotificationEmail NotificationEmailTo NotificationEmailCC Subject Body CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. Notification may be functionally connected to DataFeed . For example Notification may have a one to many relationship with DataFeed .

Schedule Scheduling information associated with a specific DataFeed which may include one or more of ScheduleID ScheduleDetails CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. Schedule may be functionally connected to DataFeed . For example Schedule may have a one to many relationship with DataFeed .

DataFeedJob Log information about a specific processing instance of a DataFeed group of files which may include one or more of JobID RunDate Status StatusReason FeedID CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. DataFeedJob may be functionally connected to FeedDetailLog . For example DataFeedJob may have a one to many relationship with FeedDetailLog .

FeedDetailLog Log information about a specific processing instance of a FeedDetail individual file which may include one or more of FeedDetailLogID JobID FeedDetailID Status StatusReason Filename FileSize FileReceivedDate RecordCount CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. FeedDetailLog may be functionally connected to one or more of DataFeedJob and StagingData . For example DataFeedJob may have a one to many relationship with FeedDetailLog and FeedDetailLog may have a one to many relationship with StagingData .

StagingData Destination for data from files which may include one or more of ID FeedDetailLogID Status Destination PrimaryKey Destination TableName RoutingNumber AccountNumber PartnerCode PartnerOrderID ShipDate UnitsShipped StartNumber UnitQuantity Parts PersonalLine ProtectType ReprintFlag PartnerName ImportDate IsDuplicate SubscriberID EventDate Message FirstName MiddleName LastName AddressLine1 AddressLine2 City State Country PostalCode TelephoneNumber EmailAddress MemberID such as EZShieldMemberID StatusCode EffectiveDate Secret SecretType BC Retailer Personalize Transit VendorCode OrderID OrderShipDate NumUnits StartNum UnitQuantity Persltext FPSCode RemakeReason CustomerID CompanyName Address1 Address2 Zip Plus4 County CountryCode PhoneNum PhoneExt Email NoEmail NoRent Gender PaymentMethod OrderChannel Pers2text Pers3text Pers4text Persltext Pers6text ContactName CCName CCAddr CCCity CCState CCZip CCPhone CCPhone CCNum CCExpDate and ProductCode fields. StagingData may be functionally connected to FeedDetailLog . For example FeedDetailLog may have a one to many relationship with StagingData .

ErrorLog Error logging which may include one or more of LogID ErrorID ErrorMessage CreatedDate and TranID

Embodiments of the identity management system may be adapted to maintain customized sales data tables for each partner. While this solution provides a vast amount of flexibility to store different customer attributes it did not allow for a consolidated view of the customer. Relatively simple tasks like reporting customer lookup and fulfillment were very cumbersome to support. When the business asked a simple question such as How many active customers are there right now the technology team was not able to answer with ease. To exacerbate the problems a common set of customer attributes and common taxonomy were not present.

In order to address these concerns the identity management system may be adapted to include a consolidated data store to hold this information. The key success requirements for the project included 

To solve the defined problems and meet the projects requirements the team decided to leverage its existing expertise in a relational database management system for example in one embodiment Microsoft SQL Server to develop a customized schema tailored to an identity management system s business needs. The development was broken into several design development and release iterations as laid out below. Design development followed the Data Services Design Best Practices.

Using the Glossary of Terms above to establish terminology embodiments of the system and method create a schema to represent the identity management system s business. A need arose to develop a way to represent the attributes for a combination of a generic identity management system service a package and a partner. Attributes that are unique to this combination are service term pricing billing frequency volume discounts step pricing and package requirements. To represent this the concept of the Partner Service was developed. The Partner Service maintains referential integrity to the generic services offered but allows for partner and package specific customizations of attributes associated with that service.

The next challenge identified relates to the management of anonymous subscribers. Some identity management system partner data feeds contain detailed demographic information i.e. name address phone and the like while others contain only sales data i.e. service X date sold and the like . In order to maintain referential integrity within the data model and fit both business cases a null profile record 1 is implemented that is referenced for anonymous subscribers. If the identity management system collects additional demographic information about a specific anonymous customer during the course of normal business the associated records can be re associated with a newly created profile record representing that additional data.

The identity management system s most common sales process involves a partner selling services to their customer. The partner then sends sales files to the identity management system which is processed into SDB. The identity management system then sends an email to the customer directing them to activate their services via the CGW portal. During the activation process CGW needs to validate the customer against the SDB record. This validation process is referred to as the provisional enrollment process.

To support the provisional lookup process PSS SDB needed to extend a validation mechanism to the CGW web site for real time customer verification. This was accomplished by creating a series of stored procedures which offer flexible validation options. Validation can be executed based on different combinations of customer information 

Once a customer is validated by CGW using these procedures the customer can continue through the enrollment process.

After creating customer records in SDB and CGW a mechanism is identified to keep these systems in sync. When accounts are created in CGW the system generates a unique identity management system ID for that customer. That ID becomes the primary key across CGW and SDB for the purposes of system synchronization. This occurs both during the provisional enrollment process and when a walk up customer is enrolled a walk up customer goes directly to the CGW portal and purchases services .

Please refer to CGW documentation for information on how CGW flags records for synchronization. Flagged records are processed via DPE for synchronization with SDB on a daily basis.

Since SDB s original development the system has been extended to store data about outbound email triggers and the deliverability sent bounce open click and the like information about that message.

In the abbreviations Primary Key PK Foreign Key FK Instance I and Update U are used and may be numbered for example FK FK I I and the like.

SDBNotificationEvents may comprise one or more of EventID which may function as PK and FK NotificationEventID which may function as PK NotificationCampaignID which may function as FK EventDate Type Reason Code OfferName OfferURL CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. SDBNotificationEvents may be functionally connected to one or more of SDBEvents and SDBNotificationCampaigns .

SDBEvents may comprise one or more of EventID which may function as PK EventName PartnerEventID CreatedOn CreatedBy UpdatedOn and UpdatedBy fields. SDBNotificationEvents may be functionally connected to SDBEvents .

SDBNotificationCampaigns may comprise one or more of NotificationCampaignID which may function as PK LaunchID SubscriberProfileID which may function as FK SourceCampaignID SourceContactID ContactAddress ContactFormat SourceSystem CreatedOn CreatedBy UpdatedOn UpdatedBy and SDBCampaignID which may function as FK fields. SDBNotificationCampaigns may be functionally connected to one or more of SDBNotificationEvents SDB Campaigns and SubscriberProfile .

SDB Campaigns may comprise one or more of SDBCampaignID which may function as PK CampaignName SourceSystem SourceCampaignID CreatedOn CreatedBy UpdatedOn UpdatedBy fields. SDB Campaigns may be functionally connected to SDBNotificationCampaigns .

SubscriberProfile may comprise one or more of SubscriberProfileID which may function as PK SubscriberId ContractDetailId which may function as I FirstName which may function as I MiddleName LastName which may function as I Email which may function as I UniqueCustomerID which may function as I company name ID such as EZShieldID which may function as I Last4SSN PartnerCode Suffix Address which may function as I Address2 City State Zip Telephone Extension County Country Gender Secret which may function as I SecretQuestion ActivationStatus ProvisionalID which may function as I SubscriberStatus SubscriberStatusDate ActivationDate EmailOptOutDate RentOptOutDate PreferredMethodofContact CompanyContactName whichmay be I IsProvisional Partner ID which may function as I Status which may function as I CreatedOn CreatedBy UpdatedOn which may function as I UpdatedBy CheckSumID cgw FirstName which may function as I cgw MiddleName cgw LastName which may function as I cgw Email which may function as I cgw Suffix cgw Address cgw Address2 cgw City cgw State cgw Zip cgw Telephone cgw Extension cgw County cgw Country cgw Gender cgw Secret cgw SecretQuestion cgw EmailOptOutDate cgw RentOptOutDate cgw PreferredMethodofContact cgw CompanyContactName is TestUser ParentSubscriberProfileID StagingDataID which may function as I TimeReserved Prefix and cgw RoutingNumber fields. SubscriberProfile may be functionally connected to one or more of SDBNotificationCampaigns and Contract .

SDBPricing may comprise one or more of PartnerServiceID which may function as PK and or FK ContractStatus which may function as PK ContractTerm RetailPrice WholesalePrice BillingFrequency and ContractId which may function as FK fields. SDBPricing may be functionally connected to one or more of Contract and SDBPartnerService .

SDB Service may comprise one or more of PartnerServiceID which may function as PK and or FK ServiceID which may function as PK ServiceName ServiceDescription ServiceDisplayName WebServiceID Description ShortName ServiceCode Status and FutureStatus fields. SDB Service may be functionally connected to SDBPartnerService .

SDBPartnerService may comprise one or more of PartnerServiceID which may function as PK PackageID which may function as FK and or I StartDate EndDate CreatedOn CreatedBy UpdateOn UpdatedBy and ContractTerm fields. SDBPartnerService may be functionally connected to one or more of Contract SDBPartner SDB Service and SDB Package .

SDB Package may comprise one or more of PackageID which may function as PK PackageCode Name Description CreatedOn CreatedBy UpdateOn and UpdatedBy fields. SDB Package may be functionally connected to SDBPartnerService .

Contract may comprise one or more of ContractId which may function as PK ContractDetaillID which may function as I SubcriberProfileId which may function as FK and or I PartnerServiceID which may function as FK and or I PartnerId which may function as I ServiceId which may function as I ParentContractID SubscriberID BC which may function as I company name ProductCode such as EZShieldProductCode which may function as I DateOfPurchase which may function as IS PartnerOrderID which may function as I ImportDate which may function as I PaymentMethod OrderChannel NumUnits StartNum UnitQuantity AccountNumber which may function as I Reissue RoutingNumber which may function as I Personal1 which may function as I Personal2 which may function as I Personal3 which may function as I Personal4 Personal5 EffectiveStartDate EffectiveEndDate CancellationDate which may function as I CreatedOn CreatedBy UpdatedOn which may function as I UpdatedBy is TestData Status which may function as I Source Parts EnrollmentRefId which may function as I SoftExpirationDate which may function as I HardExpirationDate StagingDataID which may function as I ContractActivationDate Personal6 PSID2 and PSIDOLD which may function as . Contract may be functionally connected to one or more of SubscriberProfile SDBPricing and SDBPartnerService .

SDBPartner may comprise one or more of PartnerID which may function as PK PartnerName PartnerType LegacyPartnerCode which may function as I and or U ParentPartnerId ChannelPartnerId which may function as I and or U DisplayName CGW PartnerID CGW PartnerName CGW DisplayName Address BusinessContactEmail TechnicalContactEmail Status RangeValid CreatedOn CreatedBy UpdatedOn UpdatedBy BankCode ReportingDisplayName PrimaryContact Address2 City State Zip Telephone EmailOptOut and PartnerServiceID which may function as FK fields. SDBPartner may be functionally connected to SDBPartnerService .

As a core function of the identity management system line of business a need was identified to securely capture and store sensitive user information ranging from SSNs to elements of Credit Card and financial accounts to Passport details. This need presents an enormous risk to customers as well as in the event of a breach both external and internal. While the identity management system ensures the safety and security of systems the potential and threat for a compromise may still exist. To that end a system was developed with the aim of reducing the risk of exposure of sensitive data both through technology and process. This document describes the SecureProfile system which is designed to address the need described thus far.

SecureProfile SP is a system that is designed as a repository of data with features and characteristics whose primary purpose is to ensure security and safety of the data which is stores. It offers the following features 

SecureProfile may be implemented as a standalone system with well defined and constrained access mechanisms. As a stand alone system it allows reuse of functionality across multiple other systems Web sites integrations tools etc. without hard coding it or tying it any one system. It also facilitates a generic design to service multiple client systems and purposes.

Many systems provide support for multiple methods of access and interaction such as via a Web based or Client based UI an API interface and even direct access to the underlying data store DB . This often makes it necessary to facilitate flexibility and convenience for working with a system. However SP is designed to only support a single well defined access mechanism which helps limit the attack surface for compromising the system and it also helps to ensure a focus on securing that mechanism. The access mechanism is an API interface that allows external client systems to interact with SP.

However the necessary flexibility and convenience to integrate with SP can still be achieved by building other specialized access points and integrations atop the API interface. This layering approach ensures that a single choke point applies security protocols defined within SP.

The API layer is the exposed shell that provides access into SP and it in turn interfaces into a Secure Context an environment session attributed to a single known entity known as a Subject. A Subject also known as a Principal is an entity that represents a known individual user or system within SP that can access the SP system and can interact with other elements exposed by SP such as Profiles and Records.

As a first step to interacting with SP a client first establishes a Secure Context by identifying itself and authorizing itself by presenting an authentication credential. This credential is used to directly unlock the Subject s identity and associate it with the Security Context. Further interaction with SP is implemented through the Security Context which allows to always attribute any action creating reading writing and the like against any entity Subjects Profiles Records and the like to a known Subject. Security protocols and processes are also implemented within the Secure Context again to create a single known choke point against access to the SP system and the data it contains.

The Secure Context persists its durable entities to a back end data storage which can be implemented as a relational database i.e. SQL Server in the current implementation or some other facility such as a collection of files or an alternative database technology for example BDB BigTable Hadoop or any other suitable database technology . The common factor being that data written to and read from the persistent storage is controlled by a Secure Context and the persistent representation always guarantees encryption of the sensitive data i.e. any user supplied data potentially excluding meta data added by SP .

In this way the persistent storage is itself a black box of information which if isolated and stolen would expose very little sensitive information without brute force processing and attacking of the content.

SecureProfile makes use of various cryptographic techniques including symmetric encryption secret key asymmetric encryption public private key secure hashing and shared secret to implement its supported features. As a general rule SecureProfile does not employ any newly invented or crafted algorithms or protocols to support these techniques. Instead it supports the application of any implementation that fits into a general framework for these techniques.

Any data that is secured and persisted under the transformation of these techniques is tagged with metadata that will identify the correct reverse transformation to recover the original insecure form of the data. The metadata is used to resolve a concrete implementation and any instance specific parameters necessary to perform both the encoding and if applicable the decoding of such data. SecureProfile maintains a dynamic configuration driven library of implementations that are known as transformers. These transformers generalize the majority of the various cryptographic techniques identified above and allow SP to decouple it security mechanisms from specific algorithms and protocols.

As an example the following lists some specific transformer implementations that are supported by this framework 

The Secure Profile system may comprise a database system a data access system a controller system a context system and a service system which may in one example include the Simple Object Access Protocol SOAP protocol and the Windows Communication Foundation WCF framework . SOAP is an XML based communication standard for structured remote procedure calls. WCF is a Microsoft .NET technology for building service oriented applications. 

The database system may be adapted to be isolated from other systems with more restricted access and Profile data may be layer encrypted. 

The data access system may be adapted to have atomic primitives providing fundamental data operations for system entities.

The controller system may be adapted to assemble and orchestrate data access primitives into higher level system functions.

The context system may be adapted to provide a stateful secruity context with a known acting Principal for requested operations.

The service system may be adapted to expose client accessible functionality over a supported remote access technology.

A Security Subject represents a known Principal within the Secure Profile system. A Subject can be a person or another external system such as CGW or DPE. External interaction with the Secure Profile system i.e. the Client is performed as an authenticated Subject. Every Subject has a unique Subject specific encryption key which is itself stored in an encrypted state and must be decrypted by the Client providing the correct decryption data. Security Subject may comprise one or more of a Globally Unique Identifier GUID Label and Encoded Subject Key.

A Grant is an award to a Subject for access to a Profile. A Grant stores the Profile specific encryption key which is itself encrypted using the Subject s own encryption key. Every Subject can have at most one Grant to any Profile but can be awarded multiple Grants to multiple Profiles. Likewise a single Profile may be accessible by multiple Subjects via multiple Grants. Grant may comprise an Encoded Profile Key.

A Profile is an arbitrary collection of encrypted key value pairs known as Properties. Regarding the term encrypted please note that the values are encrypted however in one embodiment the keys and auxillary information about each key value entry are not. Every Profile has a unique Profile specific encryption key. In one embodiment the unique Profile specific encryption key is itself never stored directly see Grant . Profile may comprise one or more of a GUID Label and Key Value Properties.

A Structure defines an ordered arrangement of named elements. A Record is an entry whose encrypted content is a structured collection of elements. A Record has an associated Structure which acts as a template allowing access to the individual elements encoded within. Please note that a Structure s definition is represented in a well defined XML format a Record s content is represented in a well defined XML format that correlates with the Structure s XML format. Record may comprise one or more of a GUID Label and Content. Structure may comprise one or more of Name and Definition.

A Client authenticates itself to the Secure Profile System as a target Subject by presenting a Subject Globally Unique Identifier GUID and the Authentication encryption key AUTH . When successfully authenticated the Client unlocks the Subject specific encryption key. GUID is a 128 bit number used in computer software to assign unique identifiers across multiple systems. 

A Subject stores its Subject specific encryption key SUBJ encrypted with the Authentication encryption key. Additionally the hashed signature of the SUBJ key is stored to support validation of the AUTH key.

A Grant is an intersection of a Subject and a Profile . It stores the Profile specific encryption key encrypted with the Subject specific key.

The hash signature of the Profile specific encryption key PROF is stored with the Profile for verification. The PROF is used to encrypt the Profile Properties as well as child Records of the Profile .

The main public facing Web site for the identity management system hosts multiple Partner branded sites served up from a single application identity management system CGW . Due to a limitation of an internet information service in this case Microsoft s IIS 6 and the need to require multiple SSL certificates bound to a single IIS Site a solution is implemented that integrates an SSL accelerator for hosting the SSL certs and a custom ASP.NET HTTP Module that intercepts incoming requests relayed from the SSL accelerator to CGW. This solution is not limited to ASP.NET and may be adapted for use with any language or runtime environment.

Because one of the primary features of the identity management system CGW application is to support custom Partner branding it is necessary for each Partner site to appear as a stand alone independent site complete with a custom domain name and associated SSL certificate EV . Microsoft s IIS 6 the Web server that CGW currently is deployed upon has a limitation where it can only support a single SSL certificate bound across HTTPS endpoints associated with a single IIS site.

To overcome this limitation the tier above the Web tier is utilized at the load balancer LB appliance. The load balancer supporting the production environment also features SSL accelerator functionality which includes the ability to host multiple SSL certificates and direct traffic associated with each SSL cert to a target Web server or servers . In the present case SSL certificates associated with the CGW Partner sites are installed into the load balancer and traffic associated with each of these certs is directed to the same CGW Web server end point.

Because an HTTPS request is completely encapsulated in an SSL connection the typical HTTP protocol negotiation and exchange does not take place until after the SSL connection is fully established. This means that the normal HTTP protocol exchange of target hostname information which is normally used to support virtual hosting or the ability to serve up multiple distinct domain named sites from a singly HTTP endpoint is not possible when served over SSL. So a unique combination of IP address listening port number is required to distinguish each target Partner site. To that end a dedicated VIP unique IP address listening endpoint is provided on the load balancer for each Partner site. The dedicated SSL certificate is associated with that VIP on the load balancer and then these VIPs are directed from the LB to the CGW application on the IIS servers.

Because the load balancer hosts the SSL certificates that also means that the LB terminates the secure SSL connections for each incoming client request. Relayed connections are therefore transmitted in the clear to the target IIS Web servers. This presents a problem to the CGW application because it detects whether incoming requests are secure or not and if not forces a redirect to the corresponding secure connection. Because the client is directly interacting with the LB and even when the client s connection is secured over SSL the connection that CGW sees coming from the LB will be insecure and thus CGW will always see an insecure connection and continuously redirect causing an infinite redirection loop.

To address this problem a custom ASP.NET HTTP Module is developed known as the SecurePort Module. This module is installed early on in the CGW request processing pipeline and it is configured to detect certain characteristics of an incoming request connection for example a special port or local interface IP address. When the incoming request connection matches on these parameters it alters the current state of the request context to indicate that the connection is secure.

In the production environment the CGW application listens on ports and on the local interface which services the public facing Partner sites only reachable by the LB due to networking topology . The SecurePort Module is configured to flag incoming requests on port as secure.

The Core Gateway may be used as the primary website for the identity management system and may have a URL with a format of identity management system trademark or name . top level domain TLD for example EZShield.org but one of its major features is partner specific skinning and branding. The identity management system dynamically brands and styles the site and its identity for many different partners including for example banks and institutions.

A part of that custom branding is the URL that takes a consumer to a particular partner branded version of the site. The URL has to be unique to distinguish the target partner site. This both for technical reasons the incoming URL requested directly determines what skin the CGW renders to the consumer as well as to complete the custom branded experience for the user.

For example the default site may be EZShield.org that is a brand specific to the identity management system which may include a self standing distribution channel for the identity management system suite of products. The identity management system may also have branded versions of the site that are skinned to match the look of several other properties or partners. The partner branded version of CGW for such sites may have a URL in the format of partner . identity management system trademark or name . TLD for example partner .ershield.org or identity management system trademark or name . partner . TLD for example ershield. partner .org. In this case the partner sites are just sub domains of the default site.

Some larger partners such as for example banks often desire an even more specialized URL to create an even more completely branded impression of the site. One example might have a URL in the format of partner s security site . TLD . As can be readily appreciated this at the other end of the spectrum from sub domains and such URLs may have different TLDs. The CGW site has to support any variation of DNS names distinguished from the primary website for example EZShield.org .

Now CGW in and of itself has no problems supporting multiple distinct DNS aliases but the problem comes in with SSL. Since CGW is a commerce site sensitive user purchasing information is captured and in a secure manner i.e. using an HTTPS session over SSL.

The first problem is that CGW is an ASP.NET application and is hosted on Microsoft s IIS Web server and IIS has a strict limitation that each unique incoming end point that is a combination of IP Address and Port Number where the IIS server is listening for incoming requests can only support at most one SSL certificate.

The second problem is that a channel partner may move over most or all of the Web properties that require secure connections to use Extended Validation EV SSL Certificates. These provide an extra level of assurance to consumers and are so indicated by special decorations in today s most popular Web browsers e.g. special coloring in the address bar . This very common practice today especially for any site that is affiliated with the financial or security industries. They also cost quite a bit more because of the extra level of validation that the Certificate Authorities CA have to process and the extra level of assurance that they claim the guarantee.

So the first problem can actually be partially solved by something called a wild card SSL certificate. This a cert that identifies a unique primary domain name such as ershield.org but also applies to any and all sub domains .ershield.org. This was the original and first solution. The problem is that it does not help with the banks that want a completely distinguished domain name.

Instead still another type of SSL certificate called a Unified Communications Certificate UCC is utilized. This certificate makes use of an SSL extension known as the Subject Alternative Name SAN which can list one or more completely unique domain names in addition to the primary name identified by the certificate. So this certificate specifically addresses the issue.

However today neither wild card certificates nor UCC certificates are supported by any issuing Certificate Authority with Extended Validation. So to use either one the EV moniker would otherwise need to be abandoned for the CGW sites.

So the next thing to consider is how can the CGW support multiple certificates not just multiple names Since IIS does not support more than a single cert one alternative is to push the certificates one level up onto something that sits in front of IIS. A dedicated appliance known as an SSL Accelerator does just that.

An SSL Accelerator is typically an appliance with specialized hardware for doing the SSL stuff very fast channel negotiation encryption decryption key exchange and the like so it s primarily used by sites with very heavy SSL traffic. But it can also solve the problem because most perhaps all accelerators can support the installation of multiple SSL certificates.

It is found that it is quite possible existing load balancer s at the Savvis hosting provider may already in fact support the SSL Accelerator functionality. While not strictly concerned with the SSL acceleration features a concern as traffic grows it is determined that there is a need to know the following 

An example of Basic Web Interaction is shown in please note is a symbol key or legend for . In one example of a Web site two hosts representing the client and server communicate directly. On the Client Host some process such as a Web Browser initiates connections to the Server Host . On the Server Host a process such as a Web Application Server will receive these connections and establish a two way dialog with the client.

The client and server processes bind to network End Points on their respective hosts which are defined by an address and a port. The address uniquely identifies the host and the port is tied to a specific process on that host.

The client and server processes communicate using the HTTP protocol which is normally an unsecure protocol i.e. content and data are transmitted in the clear over the network . However a secure variation that is used over an encrypted connection is implemented with the SSL TLS protocols to encapsulate and secure HTTP communication known as HTTP Secure or HTTPS . Ports and represent the standard listening End Points and on a Server Host that accept HTTP communications and HTTPS communications respectively.

The SSL TLS protocols represent a mechanism to secure any communication over an insecure channel such as the public Internet. They are implemented using public key encryption which includes a digital certificate a document that represents the trusted identity of the party that possesses the certificate. This certificate is signed by a trusted third party and includes the symbolic name of the party being identified.

In a standard HTTP over SSL TLS the Web Server will possess an SSL Certificate that will identify the server host using its symbolic DNS name. A Web client will typically initiate contact using the symbolic DNS name a user friendly alpha numeric name such as www.ershield.com. When the client interacts with the Web server over the clear HTTP protocol the DNS name is simply a convenient naming convention but when it interacts with the server over the secure HTTPS protocol then the DNS name is integrally tied to the overall identity verification process associated with SSL TLS communication.

The Web Application Server process is typically a container that hosts different Web Applications. This container manages various infrastructure services such as network connectivity request decoding and negotiation resource utilization and delegation of specific Web requests to individual Web Applications. The Web Application Server exposes an environment and execution context to its hosted applications that reflects the attributes of the request such as the target URL the request origin referral information and various runtime characteristics.

The Web Application Server s responsibilities also typically include the low level implementation of the HTTP protocol as well as the secure HTTPS variation. This implies the Web Application Server software in turn translates low level protocol operations and data exchanges into higher level constructs and concepts upon which Web Applications are built.

Virtual Hosting and HTTPS Complications are demonstrated in . While a DNS name can be used as a friendly alias for a Web Host address a DNS name does not have to represent a unique Web server host and indeed typically several related or distinct DNS names will map to a single server host.

The HTTP protocol includes a provision for the target DNS name to be specified by the client when initiating a connection for an HTTP request. This name can then be used by the Web Application Server to dynamically resolve how to handle the request and to which Web Application the request should be delegated. This technique is known as Virtual Hosting and it allows a single physical Server Host and more specifically a single Web Application Server process on that host to service multiple requests that span different logical hosts. This technique is often used to adjust the branding or styles that are delivered as part of an HTTP response or to execute an entirely different set of application logic i.e. different hostnames resolve to different applications .

However there is a limitation to this technique in that it can only be used effectively with the unsecured variation of HTTP. This is due to the fact that with the secure form of HTTP the SSL TLS protocols are used to secure the HTTP communication by first establishing an SSL session and then encapsulating the HTTP protocol communication within that session. Because the Virtual Hosting mechanism is an HTTP specific feature it is not applicable or accessible by the SSL TLS protocols when the SSL session is established. NOTE Server Name Indication SNI is an extension to the SSL TLS protocols that allows a client to indicate the target hostname being contacted at the start of the SSL TLS session negotiation. Unfortunately it is not widely adopted or supported by client or server implementations of HTTP over SSL TLS and as such its usefulness on the public Internet is very limited. 

When an HTTP SSL session is first established the server is required to send the SSL digital certificate to the client. Because it has no indication via which DNS name it was contacted as with the Virtual Hosting technique it must send the same single SSL certificate to the client for every request. This is why a single SSL certificate is effectively tied exclusively to a single End Point on a server host.

A variation of Virtual Hosting that also works well with SSL TLS involves assigning multiple addresses to a single Server Host and having the Web Application Server process bind to all of them. The Web Application Server process then manages all incoming requests across all the different End Points across all the different addresses and uses the End Point as a request attribute to distinguish the Virtual Host being targeted akin to the DNS name in the Virtual Hosting technique above. However some Web Application Servers e.g. IIS up to version 6.0 suffer from a limitation that allows only a single SSL certificate to be associated with any one Web Application. So regardless of via which End Point a request comes in only a single SSL identity can be presented to the client.

In such situations the typical approach is to inject an intermediate network node between an HTTP client host and an HTTP server host which is shown for example in such as another Host or a network relay device that can support SSL termination on behalf of the real Server Host e.g. a network load balancer or SSL accelerator . In this scenario the intermediate node hosts one or more SSL Certificates and is assigned one or more End Point addresses . The SSL Certificates are assigned to the different End Points . As unsecure HTTP communication and secure HTTPS communication are received by the intermediate node secure HTTPS communication is decrypted and then both the decrypted HTTPS traffic and any clear HTTP traffic is relayed to the real Server Host via its own End Point using the clear HTTP protocol . The HTTP client host may comprise a web browser and the HTTP server host may comprise a web application server .

Request Filtering and the SecurePort Module are shown for example in . The final technique described in is adequate in many situations however there are still scenarios that will ultimately fail with this configuration. Specifically a Web Application that hosts and collects sensitive data will often require a user to connect to it via a secure connection. A Web Application will detect the method used for incoming connections by inspecting various attributes of the context and environment that the Web Application Server process exposes to it.

For most Web Application Server platforms e.g. Java Web Servlets .NET Framework ASP.NET the CGI interface a simple Boolean attribute is made available to indicate if the connection is secure and an encrypted communication channel is established with the client. If the channel is not secure any interaction that exchanges sensitive data will usually force the Web Application to first send a redirect directive back to the client specifying that the same request should be repeated over a secure channel.

For example let s assume a client requests a simple URL that wants to display a user s bank account summary which would include sensitive information such as account numbers and current balances. They may initiate such a request with this sample URL http www.samplebank.com BankAccounts AccountsSummary

As you can see this URL indicates a clear HTTP request as indicated by its leading scheme value of http . When the target Web Application that this URL request is relayed to receives this request it will detect from the hosting container that the request is insecure and send a directive back to the client to retrieve the same request over a secure channel. The Web Application will send back this URL 

This is the same URL except that the leading scheme value of https now indicates a secure channel. However in the configuration outlined in when the client repeats the request using this new URL it will go through the same chain of events from client to intermediate network node to the server and ultimately resolve to the same insecure request at the server end as before. Once again the Web Application will detect the insecure request and send the client a redirect to the secure variation. At this point we have configured an endless loop which will prevent the server from ever completing the request.

In this case the solution is to alter the context information that is exposed to the Web Application by the Web Application Server process. As an example one specific technique involves injecting a filter component into the request processing pipeline of the Web Application Server a mechanism supported by many platforms e.g. Java Web Servlets .NET Framework ASP.NET . This filter can be configured such that it can detect some characteristic of the incoming connection being relayed by the intermediate node as an indicator of a connection that originated as secure.

For example as is typical of such devices the intermediate node can be configured to relay connections that were originally secure on an alternate port to the server for example port . Another approach simply involves tagging the HTTP request itself with additional information to indicate the security aspect of the connection. For example the leading portion of an HTTP request allows for the inclusion of various name value pairs known as headers. In most cases the client and server restrict themselves to the set of standard well known headers specified in the HTTP protocol specifications but a properly configured relay device could add a custom header for example with the name X IsSecure that supports a simple set of values true and false. The relay device would inject this header and an appropriate value into the relayed communication stream back to the server. The relay device would also need to filter out any such headers that may be transmitted from the client that may be an attempt to spoof the server into misinterpreting connections that were originally insecure. 

To go along with this configuration on the relay device a filter let s call it the SecurePort Module would need to be installed and configured on the server host . It would need to be configured in a complementary fashion to the relay device to pick up on the characteristics that indicate an original secure connection and upon detection of such characteristics alter the context that is exposed to the Web Application. The HTTP client host may communicate with the HTTP intermediate node via HTTP clear and or HTTPS SSL TLS communications protocols. The HTTP intermediate node may communicate with the HTTP server host via HTTP clear and or alt HTTP clear communications protocols which are connected to the HTTP server host via end points . The end points may be located on ports and ports and may bound to the SecurePort Module and the SecurePort Module may be functionally connected with or integrated into the Web Application Server of the HTTP server host .

UrlMatcher is a component that can be added to an ASP.NET site to allow an operator of the identity management system to more easily define and manage URL matching and manipulation rules.

The initial justification for developing this component came out of a need to better support vanity URLs on the CGW platform. Because CGW is built atop DotNetNuke and because DotNetNuke has some limitations with the way URLs can be defined and the way it manages them an independent approach is developed to support vanity URLs.

Initially vanity URLs were supported through IIS s own Virtual Directory feature where one would define a VDir and map it to a URL redirect instead of a file path to the target page within the CGW site. While this approach mostly works the proliferation of VDirs in the IIS manager is cumbersome and hard to maintain and it pollutes the administration window when managing the IIS site.

Also it means that each vanity URL defined is global across all Partner sites and you cannot remap a particular vanity URL to mean different things for different Partners. For example a common vanity URL defined starthere may be provided that maps to the PSS landing page of the identity management system. It currently always maps to the original PSS landing page but it might be useful for newer partners to always default to the alternate PSS landing page which does user lookup by Personally Identifiable Information PII instead of Activation Code . With VDir this is not an option.

The need to support vanity URLs more easily was compounded with release 2.2.0 when the alternate PSS activation was first introduced. With this new enrollment method it is important to be able to quickly support Retailer specific vanity URLs and there can be quite a number of Retailers per Partner site.

A second use for the UrlMatcher is supporting redirects for alternative domains host aliases for the identity management system s Partner sites. For example it may be the case that the Partners have a primary host alias which is used to determine the skinning and branding that the CGW platform delivers where the URL is in the format of partner . identity management system trademark or name . TLD . Examples are 

But in addition to these primary host aliases alternate host aliases may be defined that redirect back to the primary. For example www may be added in the format of www. partner . identity management system trademark or name . TLD for example www. partner .ershield.com. Other possibilities include a simplified URL in the format of identity management system trademark or name . TLD such as for example ershield.com or alternate TLDs such as for example ershield.org or www.ershield.org.

Using the identity management system these maps are managed and redirected through a combination of DNS entries which cannot be avoided and unique IIS sites are set up on each PROD server for each primary host alias which can and should be avoided . The use of IIS features is cumbersome and a pain to manage. Additionally there are some patterns of aliases that exist for every Partner site and often are the only alternate aliases and it would be advantageous to avoid the need to define them for each one but simply support a single pattern definition to cover them all.

In order to solve the problems noted above UrlMatcher was developed which the identity management system to support vanity URLs more easily and readily and with better specificity and flexibility.

The UrlMatcher is implemented as an ASP.NET HttpModule HttpHandler and it is initially targeted for the CGW app site but can be reused as needed elsewhere. The component adds support for inspecting incoming requests matching different elements of the request usually the URL but also cookies params client IP and the like against pre defined patterns static values or regex patterns and then taking some action such as executing a URL rewrite a client redirect or transfer to another page within the current site. The patterns or rules may be defined in a file on disk but may also be moved to the database so they are centrally managed and can benefit from an appropriate admin tool.

A further problem with this approach was encountered. The whole point of vanity URLs is to define a short user friendly symbolic name that can be appended to one of the domains owned by the operator of the identity management system for example www.ershield.com starthere or deluxe.ershield.com partner that will take the user to some predefined location or landing page that is normally more cryptic to address directly or that may change over time. One of the problems with using the UrlMatcher is getting IIS to send these URLs to the UrlMatcher in the first place. UrlMatcher is an ASP.NET component and in order for IIS to send an incoming request to the ASP.NET subsystem one has to define a rule in IIS6 which tells it which ISAPI Plugin more accurately which ISAPI Extension should handle the request.

IIS6 supports only two different kinds of such rules file extension matching rules or send everything rules. II7 changes this model completely it has a much tighter and more native integration with ASP.NET to begin with and these rules are actually defined in the ASP.NET configuration for a given site. So ASP.NET integration under IIS6 is normally implemented with the file extension matching rule and when ASP.NET is installed it adds many of these rules .aspx ashx .asmx .svc and the like to IIS6 for a given site. The problem here is that the vanity URLs do not work with these rules because there is no file extension. The other rule type send everything can be used instead it means that IIS6 will send every request it gets for the target site to ASP.NET then the UrlMatcher will get a chance to inspect every request. However this has a negative impact on performance since it means that requests for assets such as images Flash files videos static on disk files and the like will also have to go through ASP.NET instead of being served directly by IIS.

So the only other option that IIS6 provides is ISAPI Filters. Filters are another IIS native component written in C or C they also inspect every incoming request but are much more lightweight i.e. do not invoke the whole ASP.NET processing pipeline . A Filter can be written to match some pattern such as 1 segment paths with no extension like the vanity URL format described above and given that pattern do something that will make IIS pass that request to ASP.NET and thus the UrlMatcher system.

Ionic s Isapi Rewrite Filter IIRF is an ISAPI filter. The primary purpose of IIRF is to do request URL matching and then redirect or rewrite the request. So with IIRF vanity requests are matched and rewritten with some extension. Then that extension can be mapped and handled by ASP.NET and UrlMatcher can process them.

The code and redistributable binaries for UrlMatcher may be provided in a common repository as a part of a core library.

The UrlMatcher module is preferably integrated into CGW as part of the library dependencies and configuration for the site.

IIRF needs to be installed and configured with IIS. According to the identity management system a site specific configuration file for CGW may be defined and included in the CGW codebase. It references an external config file that is found in the target deployment environment e.g. DEV QA STAGE PROD and the like that defines the environment specific configuration.

UrlMatcher is implemented as a collection of components that include an ASP.NET HTTP Module and HTTP Handler. The Module is a required element that must be included and configured in any site that will use UrlMatcher. The Handler is an optional component that allows usage of UrlMatcher in an alternate mode of operation which can improve its performance and reduce its intrusion into an ASP.NET application under certain circumstances.

UrlMatcher may be made available as a set of redistributable binaries and or source code as part of a core library which may be provided in a common repository. UrlMatcher has some dependencies on other core libraries and components for basic services like logging and templating support. A redistribution folder for UrlMatcher may be adapted to contain the necessary components including its own dependencies.

Note in this example UrlMatcher has already been integrated into the identity management system CGW application.

After obtaining the necessary components described above the components may be added to a site s bin folder. The web.config file needs to be configured for example as follows 

Add customer handlers for the UrlMatcher configuration sections. Add the necessary lines to the element for example as follows 

UrlMatcher supports two different mechanisms of servicing incoming requests. The first uses the ASP.NET request events and intercepting them from the HTTP module configured above . The second approach is an alternative that uses HTTP Handlers. The differences between these two approaches are detailed further below. If one is using the second approach then one will need to add the following line to the section for example as follows 

Finally add a new section in the web.config file that specifically configures UrlMatcher operation. Provided below is a sample entry. More details follow concerning the various options 

UrlMatcher is a matching engine and goes through each rule defined for each eligible request eligible requests are defined outside of UrlMatcher see discussion above .

Basically every entry in this file is a rule to test against. If the rule test evaluation is true then the associated action is applied and it can be any number of things like a redirect or rewrite or an instruction to continue evaluating the next rule or to evaluate a sub group of child rules.

After the rule file is updated if the CGW site is already running one needs to add an instruction to the UrlMatcher to reload the rule file. The rule file will always be reloaded from disk when the site is first started up or restarted but if the site is already up and it is not desirable to restart it one or more special URLs can be used to access administrative functions of the UrlMatcher for example as follows 

The can be any host that resolves to that target CGW IIS instance so for example www.qa.dev.ershield.local is a URL that resolves to the QA server instance the function of UrlMatcher is not affected by the choice of hostname being used as long as it resolves to the desired site.

The last URL is used to reload the matching rules if they are changed on disk and the first URL can be used to verify that it is loaded. The second URL is helpful when authoring rules.

In one embodiment the URL Matcher defines a rule based mechanism to evaluate actions based on incoming Web requests and Web application context attributes.

URL Matcher Request Processing is shown for example in . The URL Matcher may be implemented in any Web application platform that supports an extension mechanism to intercept or delegate Web requests. The key component of the URL Matcher is the request processor which is the integration point of the URL Matcher to its hosting Runtime such as a Java Servlet container or the .NET Framework s ASP.NET Runtime .

The URL Matcher will accept each Web request that the hosting Runtime will resolve as destined for the Matcher component. For each request the Matcher will resolve a Match Context MCTX which captures all the attributes and elements of the request and application that can be accessed by the URL Matcher.

The Matcher will iterate through its set of preconfigured Rules testing the request against each rule in turn. Every Rule is defined by two features 

The URL Matcher is configured with a collection of one or more Rule Sets which is an ordered sequence of Rules. An initial Top level Rule Set represents the starting collection of Rules that all evaluations will begin with. Every Rule in a Set may optionally define its own nested Rule Set known as a Child Rule Set. Depending on the kind of Action configured on a Rule a successful test may invoke further evaluation of Child Rules.

When a Rule Match Test evaluates successfully i.e. a Match is found the Matcher will evaluate the Rule s Match Action. Depending on the action kind the Action may allow for altering one or more attributes of the Match Context. The Match Context represents state of the request being processed and so any alterations to the Match Context by any one Rule will persist for subsequent Rule evaluations. In this way Rules may build upon Rules to produce a cumulative effect of a final transformed Match Context.

A Match Action may also support the notion of Child Rules see Step which allow grouping of Rules for further conditional evaluation. In this way Rules and Rule Sets can define a complex hierarchy of Rules.

Lastly a Match Action s specific operation will be invoked see Step . It may take an attribute of the Match Context as an argument such as a path segment or request scheme. Additionally it may take a static or computed value as an additional argument to resolve the final operation. Finally if the Match Action kind supports the notion of Continuation see Step then after the Action is invoked the Matcher will advance to the next Rule see Step following the successfully matched Rule and continue to process the request as before. If the matched Rule is the final Rule in a Child Rule Set then a Continuation will advance the Matcher to the parent Rule Set at the next Rule that follows the parent Rule that defined the current Child Rule Set.

However if the matched Rule specifies an Action that does not support Continuation see or the Matcher has reached the end of Rule Set then the Matcher s processing of the current request is complete and it will return control to the hosting Runtime from which it was invoked see Step .

The URL Matcher Request Processing may comprise a series of steps as follows Begin Request Processing Capture Request and Application Context Resolve the Match Context MCTX Resolve Set of all Top Level Rules Evaluate MCTX against a First Rule Evaluate current Rule s Test against MCTX If the Rule Does Not Match then Advance to the next Rule and evaluate MCTX against the next Rule If the Rule Does Match then evaluate whether Action supports Context Updates If Action supports Context Updates then Update MCTX against Action Attribute and Value and go to Step If Action does not support Context Updates then evaluate whether Action supports Child Rules If Action supports Child Rules then Advance to first Rule in Child Set Rule evaluate MCTX against the next Rule and go to Step If Action does not support Child Rules then Invoke Action If Action supports Continuation then Advance to next Rule in current Set or next Rule in parent Set evaluate MCTX against the next Rule and go to Step and If Action does not support Continuation then End Request Processing return control to hosting Runtime .

Sample Implementation in ASP.NET and Modes of Operation is shown for example in . While the concept and design of the URL Matcher is truly platform agnostic we present a sample implementation targeting the ASP.NET Runtime of the .NET Framework.

The .NET Framework is itself hosted in a containing Web Server such as IIS. IIS receives an incoming request from a Web client such as a Web browser and appropriately handed off to the ASP.NET Runtime when the request is detected as targeting an ASP.NET resource.

Within the ASP.NET Runtime the URL Matcher would be registered as an HTTP Module or an HTTP Handler . In the former case every request will be passed to the URL Matcher to be inspected. In the latter case only certain requests that match some pre configured set of file extensions will be passed to the URL Matcher. These are two modes of operation for URL Matcher on the ASP.NET Runtime 

The following table lists a set of attributes of a Match Context that are accessible when evaluating a Match Test and or evaluating a Match Action.

Two example kinds of Match Tests are a Value Comparison and a Regular Expression Regex Evaluation. For each of these Match kinds the following table lists the test specific options that may be specified to control how the Match Test is evaluated.

In some embodiments the identity management system and method further comprises breach solutions methods as described in detail below 

Small businesses suffer proportionately more than their larger counterparts due to their inexperience in preparing for and responding to these threats. For example nearly three quarters of U.S. small businesses experienced a breach attack in 2010 source Symantec 2010 SMB Information Protection Survey Global June 2010 . Small businesses tend to be under resourced and overwhelmed by countless regulations. Most solution providers are focused on consultative enterprise breach solutions that are much too expensive for smaller businesses to consider. This leaves a large underserved market increasingly vulnerable and progressively more targeted by security threats.

The identity management system is adapted to include a suite of tailored customizable security and breach solutions designed to meet a small business s evolving security requirements both before and after a breach incident. One example of such suite is EZSHIELD s SYCURITYMAX Solution which may include one or more elements of SYCURITY Assist and or SYCURITY Prepare. The identity management system s breach preparation service offers assistance in creating catered breach response plans that addresses both regulation compliance and security best practices relative to an individual business s profile enabling a business to act quickly and completely when confronted with a breach threat. With Safe Harbor PCI Red Flag and HIPAA compliance in mind the identity management system offering produces value and keeps ahead of the most critical regulatory requirements across individual small business industries.

The Assist Module may be provided as part of a customer s annual subscription. The customer s registered representative may access a secure web based Assist Portal Portal 24 7 to self assess Customer s potential risk of exposure create a security and privacy protection plan and access employee training materials.

This assessment will serve as a best practice evaluation in the area of Personally Identifiable Information PII . The assessment will walk Customer through a series of questions pertaining to the policies and procedures it has in place based on Customer s industry and the PII it collects. The results of the assessment will provide Customer with a guideline to determine areas of improvement in its PII protection practices. This assessment will touch on Red Flag Health Insurance Portability and Accountability Act HIPAA Payment Card Industry Security Standards PCI and EU US Safe Harbor compliance allowing data transfer between the United States and the European Union needs in addition to general best practices in information security.

Customer will receive access to a portfolio of various policy procedure and process templates. These templates help the Customer ensure that appropriate levels of security are in place. Together these various documents then serve as the Customer s working security and privacy plan.

The Security and Privacy Training portion of the Assist Module allows the Customer to educate its employees on the importance of protecting their customers and their fellow employees personal information. Small Business Employee Privacy Training may be provided to the Customer for example in the form of a PowerPoint presentation focused on Privacy and Security imperatives that employees need to know and do. Also included are a post training quiz employee sign off form and quarterly newsletters to keep Customer s employees security and privacy knowledge up to date.

Prepare services help Customer to prepare for how it may handle a breach incident should one occur. There are three sub areas to this service that can be leveraged to help guide the business through identifying a process flow it can execute in the event of a breach incident. The following materials may be made available 

In order to meet tight timelines for notification of victims once a PII Breach is recognized certain materials and processes need to be pre positioned for action including 

Customer is given access to a victim list template form allowing Customer to assess pre breach incident how it will execute delivery of this information for a faster turnaround time should an incident occur mitigating potential legislative risks.

The Customer is provided with an incident response sheet to use as a guide in outlining the various information points that will be required to determine an effective and compliant notification plan should a breach occur.

Customer may purchase consulting services to identify issues or concerns with Customer s proposed data breach response policies and procedures and or training services to implement Customer s data breach response policies and procedures .

Upon Customer s report of a Breach Incident and completion of a Breach Incident Response Report Customer may be provided with a Breach Assessment Report which will provide a recommendation as to the course s of action Customer should take based on the facts provided and available at the time of the Breach Incident Response Report is submitted. The recommendation may include a notification requirement of Customer s breach victims.

Customer may have locked in preferred pricing for restoration monitoring and other identity theft protection services for its breach victims. Preferably these costs shall not be increased even if the cost of such services should increase over time.

Should Customer decide to order notification services and notification plan implementation the company implementing the identity management system and Customer may negotiate and enter into a services agreement identifying how the company will notify Customer s data breach victims and others of a data breach declared by Customer and how Customer will be charged for such services Service Agreement .

Except as otherwise stated in the Service Agreement preferably Customer is billed for each breach response provided by the identity management system on a per victim basis for both victim contact and the Consumer Services package given .

The identity management system will implement Prepare per applicable breach notification laws Laws and maintain prepared Breach Response materials so that they are compatible with current Laws. The Prepare system is adapted to incorporate future changes in applicable Laws.

As directed and purchased by Customer the Prepare system is adapted to notify breach victims of the breach by at least one or more of the following methods per applicable laws 

Electronic Mail Service The Prepare system can e mail affected persons with Customer s written notification.

Paper Mail Service The Prepare system can provide black and white mailers posted using standard rates for notification letters including printing addressing assembly postage and mailing .

Phone Service The Prepare system can notify affected persons provide information and offer a live call center representative. Automated telephone services are available but such communication does not constitute effective data breach notification in all states. A toll free number for breach victims will be provided to serve as a primary contact. Customer service representatives work with victims to guide them through the enrollment process and help with any questions.

Breach Website and Call Center A web page and a toll free phone number are preferably provided in order to provide instructions for online enrollment in victims identity theft protection program if applicable.

Location Services The Prepare system may be adapted to help find the most current addresses of Customer s breach victims as directed by Customer for an additional charge.

The Assist and Prepare Modules may be provided in a combined package including one or more of the features described in detail in Examples 1 and 2 above.

The Score Assist solution is anchored by the first step in the process which is the self assessment questionnaire.

The assessment is divided into 18 subject matter areas. The subscriber is presented each of the these subject areas in sequence in the form of a question such as Does this subject area apply to your business operation 

Within the My Business tab a navigation bar may be provided on the left side of the screen which may include branding for the Security Assist Assessment tool for example DELUXE PROVENT Identity Theft Protection and 4Biz. The navigation bar may include a statement concerning the start date for the customer s service for example Protected since December 2011. The navigation bar may have a REPORT A BREACH button a MY RESTORATION box with an option for expansion of the field and an option to access a help screen designated with a question mark logo a MY BUSINESS WALLET box with an option for expansion of the field and an option to access a help screen designated with a question mark logo. The navigation bar may include Sycurity Assist navigation bar including Step 1 Self Assessment Step 2 Privacy Security Planning and Step 3 Employee Security Training 

The top of the My Business tab may contain a second horizontal navigation bar including My Dashboard My Business Wallet Sycurity Assist Sycurity Prepare and Report A Breach tabs of which in the present example Sycurity Assist is selected. The Sycurity Assist sub screen may include a banner Sycurity Assist and Protect Your Business Identity in this example an identification noting the user s progress through the system Step 1 Self Assessment Plan in this example a prompt to the next step Step 2 in this example and an introductory message with a button prompting the user to Get Started With My Self Assessment Plan. The bottom of the Sycurity Assist sub screen may include further navigation links and branding associated with the company and or third party evaluations of the present website corporate service mark corporate logo TRUSTe logo and the Better Business Bureau BBB logo in this example .

The application saves the state of the question subject matter area when the subscriber proceeds to the next question subject matter area.

The subscriber may stop progress through the assessment and return again to the point last saved in the process.

The subscriber will proceed through the subject matter areas identifying those that apply and confirming or denying the detail questions as in process I or II above.

Upon completion of the assessment the application calculates an assessment score and presents this to the subscriber. See technical description 

Upon completion of the assessment the application generates a customized security action plan for the subscriber.

The action plan is customized based on the responses provided by the subscriber during the self assessment. For each of the subject matter area detail questions that are identified as unresolved by the subscriber a corresponding recommended action is included in the action plan. See technical description .

Scoring is based on tiers. Each tier represents a percentage of total possible weight. Tiers are currently evenly designated in 20 ranges e.g. 0 20 20 40 40 60 60 80 and 80 100 . The term weight is used because certain assessment areas are deemed to have more or less impact than other areas. A higher weight indicates more impact and a lower weight indicates less impact. Using a tiered score based on a percentage allows for the number of questions and their weights to vary as necessary.

Each possible answer to a question in the assessment is given a weight. The sum of all weights is the total possible weight. The sum of weights for each answer given in the affirmative is divided by the total possible weight. The resulting percentage then is evaluated to determine into which tier the assessment results belong.

The diagram below shows how a score is calculated. This assessment has two questions. Question 1 has 4 sub questions. Question 2 has 6 sub questions. The weights for each question are shown in parenthesis. An x indicates the user responded affirmatively for that question. The Score system uses weights for sub questions when the parent question is answered affirmatively. The weight of the parent should equal the sum of the weights of its children. The Score system uses the weight for the parent question when it is answered negatively. This latter indicates a section does not apply therefore it should not impact the score.

An action plan is based on any assessment parent questions responded to affirmatively and that its sub questions responded to in the negative. For each question a corresponding action text is prescribed. The action plan is built dynamically based on the current collection of user responses.

Each question has action text associated. For any question which the user responded to negatively for any sub question the action text of the question appears as a section header. This usually more generalized in nature. The action text related to the particular sub question which was responded to negatively is then added for more specific directions.

Using the previous diagram as a basis for an action plan the Assist system displays a document containing the following 

If the user has not completed this profiling segment they are directed to a list of profiling questions via the Custom Action Plan Management utility.

When user enters the assessment the application determines which sections of self assessment are relevant based on the profile data provided and tailors the presentation accordingly.

Identification of discrete values and related business logic are determined. Implementation of UI storage mechanism and rules engine are dependent upon this information.

The business has the ability to manage organize what can has been completed and what still needs to be completed from the action list.

When the user completes the assessment and receives the customized action plan for every task listed the identity management system provides a recommended vendor to contact for assistance in completing the action. This recommendation would be determined by the business location s as determined by the My Account page profiling and a cross referenced table of vendors

Alternate additional vendors may be available for display or search. If multiple vendors exist for a given area an order of precedence may be established based on factors such as rank physical distance company size revenue or employees or other factors.

On the portal the subscriber is taken through an exercise where they can edit an educational security video for employees. The video is constructed of various segments which can be slightly altered Images and selected copy content that appear thought out Examples Video title Title date Contact information who to go to internally with any questions Select images i.e. Employee desk .

Live action segments text to voice for the configurable meta information dynamic diagramming or animation may be utilized.

Streaming or downloading may be utilized while considering factors such as storage space requirements authoring and delivery technology and other details.

Business can expire delete the link page or delete turn off an employee s access by editing the employee list.

Existing platform security may be configured to allow automatic creation of limited accounts. The quiz engine can either be integrated or custom built. Additional logic may be introduced as needed.

As part of breach preparation the platform generates example breach scenarios that could affect the small business leveraging a combination of the information from the business my account profile page and answers to a couple of questions 

The business uses the output of the generator to pose a sample scenario to the breach incident response team who then gets together to determine how they should respond to the breach. The simulator gives a high level description of a breach incident 

Once the team has communed and decided what they would do in the scenario they are quizzed by the platform on a series of multiple choice questions 

The business breach incident response team submits the quiz answers and receives a score. The business is shown a list of the incorrectly answered questions along with the correct answer highlighted. For every incorrect answer there is a brief description of the reasoning behind the correct answer i.e. MA state law requires that notifications go out within 48 hours after the incident was discovered.

As part of breach response the platform generates a high level roadmap of what is required in the handling of a particular breach incident.

The subscriber begins with a list of multiple choice and free form questions providing information about the incident 

A checklist accompanies the recommendation to assist the business in ensuring it does not miss anything. The checklist should date and time stamp the items as they are checked off.

An automated estimate of what it will cost to produce manage and send the notifications based off the generated suggestion should be shown to the business. If they want to proceed with the identity management system performing this service there should be a submit button and TandC checkbox that the business can click. Upon submitting this an automated alert should hit the identity management system internal breach service team with the details of the incident and the business contact information to contact the small business and begin working the incident

A copy of the breach incident details from the questionnaire recommendation and time stamped checklist may be stored in the business s identity management system account for the business to access at any time in the future as needed.

When personal information is discovered and linked to a customer s identity the Identity Alert Management system allows the end user to control and flag that information as approved records or threats . If the data is approved it is marked as a verified record if it s not approved and causes concern to the customer a case is created until that data is clarified or resolved to the end consumer s satisfaction. Once a case is resolved it s added with full comments and documentation to the updated Secure Profile.

In short the Identity Alert Management system solves the issue that everyone has an identity profile but not everyone s profile is accurate and verified by the end consumer. This helps to assure that PII that is found and monitored is as accurate as possible and confirmed by the end customer.

All of the competition in the identity theft space scans for new information and presents it to the user. The Identity Alert Management system allows the end user to interact with the discovered personal information and allows them to approve the records or flag the record as wrong. If a record is flagged as wrong or is not understood by the user then a case is immediately created and followed up on through a Restoration Process.

As illustrated for example in the user interface utilizes a color code where yellow represents a medium level or potential threat condition e.g. Potential Threat New Identity Related Information found must be reviewed where red represents a high level or reported threat condition e.g. Case Created Reported Threat and where green represents a low level or reviewed and approved threat condition e.g. Reviewed and Approved Record by Account Owner. Although yellow red and green are used in this example any suitable color or visual queue may be used.

In the step associated with the text PII is found against elements of your identity and Steps A B and C see also .B and .C respectively are yellow conditions. Step D see also is a green condition. Step E see also is a red condition.

In Step F see also the step associated with the text Case Managed by EZS with signed Power Attorney and the step associated with the text Case is rejected or incomplete case is reactivated are red conditions. Step G see also and the step associated with the text Case Resolved by Specialist pending approval and final sign off from Customer are yellow conditions. The step associated with the text Case is approved by Customer the records are moved into Approved Records is a green condition.

In Step F see also the step associated with the text Case Managed by EZS without signed Power Attorney the step associated with the text Case is rejected or incomplete case is reactivated and Step K are red conditions. Step H see also and the step associated with the text Case is resolved by Customer pending approval and final sign off from Resolution Specialist are yellow conditions. Step see also is a green condition.

If they click Report as an Identity Threat they are triggered with a popup that makes them aware a case will be immediately created and a Resolution Specialist will be contacting them right away. As above in this example buttons and links are used to perform the desired functions.

With a signed Power of Attorney the Resolution Specialist can perform the majority of the Restoration tasks on your behalf.

Without a signed Power of Attorney form the Specialist can do less on your behalf but can follow and assist anywhere you need help in the restoration process.

Once a case is completed from the Specialist s point of view it s up to the customer to give the final say. If they are not comfortable with the outcome the case can be reactivated and if they are happy with the resolution the case can be closed.

All records here have gone through the above approval process each record stored in active services have been reviewed and confirmed as valid Identity elements by the consumer.

An identity management system may comprise a core gateway a data processing engine and a subscriber database. The system may further comprise a secure profile system. The system may further comprise a system for binding multiple SSL certificates to a single Microsoft IIS site. The system may further comprise a URL matcher to support vanity URLs which may be provided on the core gateway. The system may further comprise a breach prevention system. The system may further comprise an identity alert management system for interaction between a customer and a resolution specialist. The core gateway may comprise a customer tools system a self service system a core function system a content and skinning system a product and catalog system a partner integration system a central manager and an affiliate management system. The data processing engine may comprise file retrieval system file parsing and staging system business rule processing system and a record extract transform and load system linked to the subscriber database. The data processing engine may comprise a first server a file retrieval system connected to the first server a second server connected to the file retrieval system a file extract transform and load system connected to the second server a staging data system connected to the file extract transform and load system a business rule processing system connected to the staging data system and a system for importing records that pass through the business rule processing system into the subscriber database. The subscriber database may comprise centralized data storage for identity management system customer data a synchronization system linked to the core gateway an integration system linked to the core gateway configured to allow customers to validate partner paid services during activation a support and reporting system an identity management system schema an anonymous subscriber system a provisional enrollment system a system for synchronization between the subscriber database and the core gateway and a schema extension system. The secure profile system may comprise a system for defining structures multiple containers of data that are associated with profiles a system for securely granting access to the profiles and subjects an audit log configured to provide an account of all accesses to data housed within the profiles security related algorithms and protocols a system for exchanging data between subjects a support system for shared secret access to data and a support system for secured externalized content. The secure profile system may comprise a database system a data access system configured to access the database system a controller system configured to access the data access system a context system configured to access the controller system and a service system configured to access the context system. The system for binding multiple SSL certificates to a single Microsoft IIS site any web server environment that only supports a single certificate per application may comprise an SSL termination device for hosting multiple SSL certificates integrated with an extension to a web application platform wherein the extension intercepts all incoming requests relayed from the SSL termination device to the Microsoft IIS site any web server environment that only supports a single certificate per application wherein the multiple SSL certificates associated with the various identities of the application are installed in an SSL termination device and wherein traffic associated with each of the multiple SSL certificates is directed to the same Microsoft IIS site any web server environment that only supports a single certificate per application . The URL matcher to support vanity URLs on the core gateway may comprise an ASP.NET HttpModule HttpHandler a system for inspecting incoming requests a system for matching different elements of the request or an associated session against pre defined patterns and a system for executing a URL rewrite a client redirect or transfer to another page within the current site. The business security management system may comprise an assist module and a prepare module. The assist module may comprise a self assessment system and a score system. The self assessment system may comprise a series of questions pertaining to policies and procedures based on customer s industry and the personally identifiable information collected by the customer. The questions may be yes no questions. The score system may comprise a system for assigning weights for each of the questions a system for calculating a risk score based on the weights for each of the questions and the answers provided by the customer and a system for assigning the calculated risk score to a tiered scoring system. The tiered scoring system may have five tiers. Each tier may be a 20 range. The prepare module may comprise a customer assist system a system for identifying a data breach victim s contact information and data transfer protocol a system for notifying breach victims or others of the subject data breach by a communication means that conforms with laws applicable to the customer s jurisdiction a system for providing recommendations of notification based on current state and federal incident response regulations a system for providing assistance with notification messaging and customer call center scripting a system for managing the breach response a system for providing breach victims customer sponsored access to a heightened level of service and a defined system for notification of costs. The customer assist system may comprise a system for allowing a dedicated breach specialist to communicate with a customer in a response process. The system for managing the breach response may utilize a web site or a toll free call in number. The identity alert management system for interaction between a customer and a resolution specialist may comprise a method the method may comprise the steps of identifying personally identifiable information against elements of a customer s identity automatically sending a communication to the customer within a specified time period authenticating the customer through a secure identity management dashboard permitting the customer to review a source of the alert and details associated with the alert prompting the customer to mark the alert as a threat or not a threat sending a record of the threat to an approved records system if the customer marks the alert as not a threat creating a case if the customer marks the alert as a threat permitting the user to execute a power of attorney prior to during or after the threat has been detected ascertaining whether the customer has executed the power of attorney providing a first response system for customers that have executed the power of attorney providing a second response system for customers that have not executed the power of attorney and permitting the customer or the resolution specialist to reopen a previously approved record. The specified time period may be less than 24 hours. The step of providing a first response system for customers that have executed the power of attorney may comprise the steps of performing a customized restoration plan on behalf of the customer who takes on a support role by a resolution specialist who takes on the role of a case owner resolution of the threat by the resolution specialist after resolution of the threat by the resolution specialist permitting the customer to approve the response to the threat and perform a final sign off if the customer approves of the response moving the record to the approved records system and if the customer does not approve of the response repeating the step of ascertaining whether the customer has executed the power of attorney. The step of providing a second response system for customers that have not executed the power of attorney may comprise the steps of providing preplanned restoration plans to the customer with support from a resolution specialist resolution of the threat by the customer after resolution of the threat by the customer permitting the resolution specialist to approve the response to the threat and perform a final sign off if the resolution specialist approves of the response moving the record to the approved records system and if the resolution specialist does not approve of the response repeating the step of ascertaining whether the customer has executed the power of attorney. The customer tools system may comprise a means for allowing a customer to browse products and services from a suite of identity management products and services a means for allowing a customer to gather information about the identity management products and services and a means for allowing a customer to complete purchase and enrollment of one or more identity management products and services. The self service system may comprise a means for requesting additional information regarding one or more identity management products and services and a means for reporting fraud related activity. The core function system may comprise a language and runtime environment an application framework and service including a content management system an object relational persistence layer and a configuration and dependency injection system. The content and skinning system may comprise a cascading stylesheet a dynamic content system and a custom page override system. The partner integration system may comprise a bulk data load system an on demand data push system and an on demand data pull system. The partner integration system may be configured to deliver a custom branded uniform experience consistent with a partner s brand identity and online presence. The core gateway may be configured to provide support for special offer codes and source codes that enable special pricing or promotional discounts offer promotional trial periods on certain products or identify a marketing channel used to attract the customer. The central manager may comprise identity protection services and secure web based storage inventory of subscriber documents. The affiliate management system may comprise the partner integration system and a form fill based tool that allows designated agents of an affiliate to create and define a new partner branded site under the core gateway. The form fill based tool that allows designated agents of an affiliate to create and define a new partner branded site under the core gateway may comprise logo management partner identifying textual information primary theme and color selections and default product catalog. The centralized data storage for identity management system customer data may comprise transactional data from partner sales files subscription data from partner sales files and subscription data from customers who access the core gateway. The support and reporting system may comprise a system for tracking customer obligations for fulfillment a partner billing system a customer billing system an email communications system and a performance analysis system configured to analyze the performance of services and partners. The identity management system schema may comprise service term pricing billing frequency volume discounts step pricing and package requirements. The anonymous subscriber system may comprise a means for re associating an anonymous record with a newly created profile record. The provisional enrollment system may comprise a partner sales file receiving and processing system a customer communication system configured to direct the customer to activate services via the core gateway a provisional lookup process and a real time customer verification system. The customer communication system may be configured to direct the customer to activate services via the core gateway may comprise a validating system configured to allow the core gateway to validate the customer against a record in the subscriber database. The system for synchronization between the subscriber database and the core gateway may comprise a unique identity management system identification for each customer. The unique identity management system identification may be a primary key across the core gateway and subscriber database. The profile may contain records which have an associated structure. The database system may be configured to be isolated from all other systems with more restricted access and all profile data may be layer encrypted. The data access system configured to access the database system may comprise atomic primitives providing fundamental data operations for all system entities. The controller system configured to access the data access system may be configured to assemble and orchestrate data access primitives into higher level system functions. The context system configured to access the controller system may be configured to provide a stateful security context with a known acting principal for all requested operations. The service system configured to access the context system may be configured to expose all client accessible functionality over a supported remote access technology. The ASP.NET HTTP module may be configured to detect certain characteristics of an incoming request connection. The certain characteristics may include a special port or local interface IP address. When the incoming request connection matches the certain characteristics the ASP.NET HTTP module may alter the current state of the request context to indicate that the connection is secure. The load balancer for each partner site may be configured with a dedicated unique IP address listening endpoint. The dedicated SSL certificate may be associated with the unique IP address listening endpoint on the load balancer. The unique IP address listening endpoint may be directed from the load balancer to the core gateway. The elements of the request may include one or more of the URL cookies params and client IP. The pre defined patterns may be static values or regex patterns.

A computer implemented method a computer system or a nontransitory computer readable storage medium for managing communications for a web site. The method or system may comprise on a device having one or more processors and a memory storing one or more programs for execution by the one or more processors the one or more programs including instructions for processing information from multiple web sites served up from a web application binding multiple secure socket layer SSL certificates to a single site supported by the web application hosting the SSL certificates using an SSL accelerator and intercepting incoming requests relayed from the SSL accelerator to the web application with an HTTP module. Also a nontransitory computer readable storage medium storing one or more programs configured to be executed by one or more processing units at a computer may comprise the instructions. The one or more programs may further include instructions for hosting client information using an HTTP client host relaying connections using an HTTP intermediate hosting server information using an HTTP server host communicating between the HTTP client host and the HTTP intermediate via an unsecure protocol and via a secure protocol and communicating between the HTTP intermediate and the HTTP server host via an unsecure protocol and via an alternate unsecure protocol. The HTTP client host may comprise a web browser. The HTTP intermediate may comprise an HTTP relay process and an SSL certificate bound to a port adapted for communication via the secure protocol. The HTTP server host may comprise the HTTP module. The HTTP server host may comprise a web application server. The web application server may comprise the web application. The HTTP module may be adapted to communicate with the unsecure protocol through a first port and the HTTP module may be adapted to communicate with the secure protocol through a second port. Information from the HTTP intermediate may be transmitted to the web application server via the HTTP module. Information from the web application server may be transmitted to the HTTP intermediate via the HTTP module. The HTTP module may be configured to function as a filter. The HTTP module may be configured to function as a filter and detects a characteristic of an incoming connection being relayed by the HTTP intermediate as an indicator of a connection that originated as secure. The web application may be an internet information service. The internet information service may be Microsoft s Internet Information Service .

A computer implemented method or a computer system for matching a URL with one of a plurality of web sites is provided. The computer implemented method may comprise on a device having one or more processors and a memory storing one or more programs for execution by the one or more processors. The one or more programs may include instructions for capturing an HTTP request and a Web application context resolving a match context for the HTTP request and the Web application context resolving a set of top level rules for evaluating the HTTP request and the Web application context evaluating the match context against a first rule among the top level rules and invoking an action for modifying one or more of the HTTP request the Web application context and the match context. A nontransitory computer readable storage medium storing one or more programs configured to be executed by one or more processing units at a computer may be provided and may comprise the instructions. The one or more programs may further include instructions for evaluating the first rule against the match context and advancing to a next rule if the first rule does not match determining whether an action supports context updates and updating the match context against an action attribute and value if the action supports context updates and determining whether the action supports child rules and advancing to a first rule in the child rule set if the action supports child rules. The one or more programs further include instructions for determining whether the action supports continuation advancing to a next rule in a current set of rules or a next rule in a parent set of rules if the action supports continuation and ending HTTP request processing and returning control to a hosting runtime when the action does not support continuation. The computer implemented method may support vanity URLs. A core gateway of an identity management system may comprise the one or more programs. The one or more programs may further include instructions for iterating through a set of preconfigured rules and testing the HTTP request against each rule in turn wherein each rule is defined by a match test and a match action. The match test may be a description of an attribute of the match context that should be tested against. The match action may be an operation to be invoked upon a successful match test. The match test may be defined by one of an evaluation kind that determines how the test should be evaluated an attribute of the match context to test against and an argument value to resolve the test against. The evaluation kind may be an equality test wherein the attribute is a URL path and wherein the argument value is a comparison value.

Although some of various drawings illustrate a number of logical stages in a particular order stages which are not order dependent can be reordered and other stages can be combined or broken out. Alternative orderings and groupings whether described above or not can be appropriate or obvious to those of ordinary skill in the art of computer science. Moreover it should be recognized that the stages could be implemented in hardware firmware software or any combination thereof.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to be limiting to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the aspects and its practical applications to thereby enable others skilled in the art to best utilize the aspects and various embodiments with various modifications as are suited to the particular use contemplated.

