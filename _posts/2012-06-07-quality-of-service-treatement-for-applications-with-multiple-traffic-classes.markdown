---

title: Quality of service treatement for applications with multiple traffic classes
abstract: A system may receive a connection request, from a user device, that includes information identifying a particular application; identify that the particular application is associated with a group of classes of traffic; establish a group of bearer channels that are associated with the group of classes of traffic, the group of bearer channels being associated with a group of different levels of quality of service (“QoS”); process, via a first bearer channel and according to a first level of QoS, first traffic associated with the user device and the particular application; and process, via a second bearer channel of the group of bearer channels, according to a second level of QoS, second traffic associated with the user device and the particular application, the second bearer channel being different from the first bearer channel, and the second level of QoS being different from the first level of QoS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09007899&OS=09007899&RS=09007899
owner: Verizon Patent and Licensing Inc.
number: 09007899
owner_city: Basking Ridge
owner_country: US
publication_date: 20120607
---
User devices such as cellular telephones may connect to networks such as cellular networks the Internet etc. in order to run network based applications. For example a cellular telephone may execute an online gaming application by communicating via one or more networks with an online gaming server. Network devices associated with the networks and or the user device may provide a particular quality of service QoS to the gaming application in order to provide a satisfactory user experience.

The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

A system and or method described herein may enable a networking system and or a user device to provide multiple quality of service QoS levels to a particular application such as a network based application being executed by the user device. In some implementations the particular application may be associated with multiple classes of traffic which may be associated with different QoS levels.

As shown in for example user device may initiate an online game application that communicates via network with application server e.g. an online gaming server . That is traffic to and or from the user device may include data related to the game application. The data related to the game application may include control commands e.g. input by a user of the user device position of a virtual object in the game application etc. and or other data e.g. settings menu information etc. . In some implementations and as described in further detail below a system may provide a particular class of QoS treatment for a certain type of data associated with the game application such as control commands and a different class of QoS for other types of data associated with the game application.

For example in some implementations the system may allow control commands to be transmitted and or received by user device with a particular latency e.g. a relatively low latency. Further the system may provide a different class of QoS treatment for other data associated with the game application such as settings menu information etc. That is the system may allow the other data to be transmitted and or received by the user device with a different latency e.g. a higher latency than is provided for control commands. These different QoS treatments may be provided by user device itself e.g. when transmitting traffic and or when processing incoming traffic by network components e.g. when receiving traffic from user devices providing traffic to user devices etc. of network and or by application server .

In order to provide this functionality an application programming interface API may be provided in some implementations. Developers of applications may use the API to indicate traffic that may include control traffic and or other traffic. Network components such as a Public Data Network Gateway PGW and or a Policy Charging and Rules Function PCRF may include functionality that provides QoS treatment to control traffic and or other traffic as requested by applications that are designed according to the API.

Thus different levels of QoS may be provided to traffic of a single application e.g. different levels of QoS may be provided to a particular port of a particular Internet Protocol IP address associated with a user device. By providing low latency QoS to control traffic the system may provide an improved user experience due to more responsive feedback based on users inputs. By providing different e.g. higher latency QoS to other traffic the system may conserve network resources that would be consumed by providing low latency QoS to the other traffic even though providing low latency QoS to the other traffic may not significantly impact users experience.

Also in some implementations a component in system e.g. one or more of user device RAN GW PS OTT application server and or one or more network components of network may perform one or more functions described as being performed by another component or group of components in system . For instance a single device or collection of devices may in some implementations perform the functionality of two or more of GW PS OTT and or application server . Additionally or alternatively in some implementations RAN and or network may include one or more of GW PS and or OTT . For instance in some implementations GW and PS may be network components of network . In some implementations network may correspond to a service provider network e.g. a network owned and or operated by a single service provider or a group of service providers .

User device may include one or more devices capable of sending receiving data and or voice to from RAN . User device may include for example a radiotelephone a gaming console a personal communications system PCS terminal e.g. a terminal that may combine a cellular radiotelephone with data processing and data communications capabilities a personal digital assistant PDA e.g. a device that may include a radiotelephone a pager Internet intranet access etc. a laptop computer a tablet computer or the like.

Application server may include one or more devices that may communicate via network and or RAN with user device . Application server may execute one or more applications e.g. one or more gaming applications chat applications etc. and may communicate with user device regarding the one or more applications. For example user device may execute a gaming application and may communicate with application server regarding the gaming application e.g. application server may process information regarding the gaming application and may send and or receive information regarding the gaming application to and or from user device .

RAN may include one or more devices for transmitting data and or voice to user device and network . As illustrated in RAN may include a group of base stations through M where M is an integer that is greater than or equal to 1 referred to collectively as base stations and in some instances individually as base station and a group of radio network controllers RNCs through N where N is an integer that is greater than or equal to 1 referred to collectively as RNCs and in some instances individually as RNC .

Base stations may include one or more network devices that receive voice and or data from RNCs and transmit the voice and or data to from user devices via an air interface e.g. via one or more wireless transceivers associated with base stations . Base stations may also include one or more network devices that receive voice and or data from user devices over an air interface and transmit that voice and or data to RNCs or other user devices .

RNCs may include one or more devices that control and manage base stations . Radio network controllers may also include devices that perform data processing to manage utilization of radio network services. RNCs may transmit receive voice and data to from base stations other radio network controllers and or network .

RNC may act as a controlling radio network controller CRNC a drift radio network controller DRNC and or a serving radio network controller SRNC . A CRNC may be responsible for controlling the resources of a base station . A SRNC may serve a particular user device and may manage connections towards that user device . A DRNC may fulfill a similar role to the SRNC e.g. may route traffic between a SRNC and user device .

RAN may correspond to one or more technologies. For example RAN may correspond to a long term evolution LTE technology. In such an example base stations may take the form of evolved node Bs eNBs and RNCs may take the form of mobile management entities MMEs . Four base stations and two RNCs are shown in for simplicity. In practice RAN may include additional or fewer base stations and or RNCs . Also in some instances a component in RAN e.g. one or more of base stations and RNCs may perform one or more functions described as being performed by another component or group of components in RAN .

GW may provide services relating to providing connectivity between user devices and network . For example GW may provide policy enforcement and or may be capable of creating bearer channels via which data may be transmitted from user devices and network and or vice versa. As will be described further below GW may establish multiple bearer channels associated with different QoS levels and associated with a particular application between user device and network . In some implementations GW may take the form of a public data network gateway PGW or one or more similar devices.

PS may include one or more devices that provide services relating to policy information storage. For example PS may store information identifying applications for which traffic may be associated with multiple QoS levels information identifying subscribers e.g. user devices associated with multiple QoS levels etc. PS may provide some or all of the stored policy information to GW which may use this policy information when performing policy enforcement techniques e.g. verifying whether a particular user device is subscribed to a service in which multiple levels of QoS may be provided for a particular application . In some implementations PS may take the form of a policy charging and rules function PCRF server or one or more similar devices.

OTT may include one or more devices that process requests for establishing multiple bearers for multiple QoS levels associated with applications. For example as described below OTT may receive a request from user device an application server e.g. application server and or any other device e.g. a device that is not a network device of network . That is in some implementations OTT may serve as an interface between network components of network and other devices that are not network components of network . The request may include a request for multiple bearers associated with different QoS levels to be created. OTT may forward the request to one or more other devices of network such as PS and or GW . As mentioned above GW may establish multiple bearers between user device and network based on this request.

Network may include one or more devices that transfer receive voice and or data to a circuit switched and or packet switched network. In one embodiment network may include for example a Mobile Switching Center MSC a Gateway MSC GMSC a Media Gateway MGW a Serving General Packet Radio Service GPRS Support Node SGSN a Gateway GPRS Support Node GGSN and or other devices. As mentioned above in some implementations network may include one or more of GW PS and or OTT . Network may be a private network and or a public network such as the Internet.

Bus may include one or more communication paths that permit communication among the components of device . Processor may include a processor microprocessor or processing logic that may interpret and execute instructions. Memory may include any type of dynamic storage device that may store information and instructions for execution by processor and or any type of non volatile storage device that may store information for use by processor .

Input component may include a mechanism that permits an operator to input information to device such as a microphone a keyboard a keypad a button a switch etc. Output component may include a mechanism that outputs information to the operator such as a display a speaker one or more light emitting diodes LEDs etc.

Communication interface may include any transceiver like mechanism that enables device to communicate with other devices and or systems. For example communication interface may include a wireless radio transceiver which is able to send and or receive voice and or data to and or from one or more devices e.g. a cellular tower associated with a cellular network. Additionally or alternatively communication interface may include an Ethernet interface an optical interface a coaxial interface or the like. Communication interface may additionally or alternatively include a wireless communication device such as an infrared IR receiver a Bluetooth radio or the like. The wireless communication device may be coupled to an external device such as a headset a remote control a wireless keyboard etc.

As will be described in detail below device may perform certain operations relating to modifying radio activity of a user device e.g. user device . Device may perform these operations in response to processor executing software instructions stored in a computer readable medium such as memory . A computer readable medium may be defined as a non transitory memory device. A memory device may include space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into memory from another computer readable medium or from another device. The software instructions stored in memory may cause processor to perform processes described herein. Alternatively hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

User device may output at information to application server indicating that user device has invoked the application. In some implementations this information may include information regarding user device such as an identifier of user device e.g. an IP address an international mobile equipment identity IMEI an international mobile equipment identify IMSI a subscriber identify module SIM number and or any other identifier . The information may include connection information such as one or more port numbers associated with user device and the application and or one or more protocols associated with user device and the application. The information outputted at may in some implementations indicate an identity of the invoked application e.g. a name of the application an identifier associated with the application etc. .

In some implementations the information outputted at may include a request for multiple QoS levels associated with the invoked application. That is in these implementations this information may include a specific request for multiple QoS levels. In other implementations the information outputted at may not include a request for multiple QoS levels associated with the invoked application. That is in these other implementations the information may not include a specific request for multiple QoS levels. In some of these other implementations the information may include one or more other indications e.g. an identification of the application an indication that the application is associated with the above mentioned API etc. from which it may be inferred that the information outputted at may be associated with multiple QoS levels.

As shown in user device may output the information indicating that user device has invoked the application associated with multiple QoS levels to application server . Application server may include a server device that provides services related to the application. For example assume that the application is a gaming application. In this example application server may include a gaming server that provides gaming services such as game control game status information game communication services game authentication services and or other gaming services. In some implementations application server may include one or more server devices that are not within a service provider network e.g. may interact with one or more components of system through one or more networks .

Application server may identify based on the information received from user device that user device has invoked the application associated with multiple QoS levels. For example assume that the received information includes information identifying the application. Application server may compare the identity of this application to a list of applications associated with multiple QoS levels and determine that the identity of the application matches a particular application in the list.

Application server may in some implementations determine a quantity of QoS levels associated with the application. For example in some implementations application server may receive and or store information identifying quantities of QoS levels associated with various applications e.g. one application may be associated with two QoS levels another application may be associated with three QoS levels etc. . In some implementations applications associated with the API may be associated with one particular quantity of QoS levels e.g. applications associated with the API may be associated with two QoS levels applications associated with the API may be associated with three QoS levels etc. .

In some implementations application server may identify properties of QoS levels based on the application and or the identity of user device . For example one application may be associated with one set of QoS levels while another application may be associated with another set of QoS levels. For instance a first application may be associated with a low latency low bandwidth QoS level and a high latency high bandwidth QoS level while a second application may be associated with a lower latency lower bandwidth QoS level e.g. lower latency and lower bandwidth than the low latency low bandwidth QoS level associated with the first application and a high latency high bandwidth QoS level e.g. the same QoS level as the high latency high bandwidth QoS level associated with the first application or a different QoS level . While in some implementations application server may identify properties of QoS levels in some implementations application server may forgo identifying properties of QoS levels associated with the invoked application.

Based on identifying that the application is associated with multiple QoS levels application server may generate a request for multiple bearers associated with the multiple QoS levels. Application server may output at the request for multiple bearers to OTT . This request may include information identifying user device e.g. IP address IMEI number and or any other information included in the information outputted at and or information regarding the identified QoS levels e.g. an identification of the quantity of QoS levels and or properties associated with the QoS levels .

As mentioned above OTT may be or include a network component of a service provider network e.g. network and may serve as an interface between components of network and other devices such as application server . As shown in OTT may receive the request for multiple bearers associated with the multiple QoS levels outputted by application server at .

In some implementations as mentioned above this request may include information identifying user device and or one or more QoS levels associated with the invoked application. In some implementations as also mentioned above this request may not include information identifying one or more QoS levels associated with the invoked application. OTT may generate a request based on the received request for the multiple bearers associated with the multiple QoS levels. The request generated by OTT may be in a format associated with one or more network components of network such as PS . The request generated by OTT may include some or all of the information included in the request outputted by application server at e.g. information identifying user device information regarding the QoS levels etc . As shown in OTT may output the request to for example PS at .

PS may receive the request from OTT and may determine whether the request is authorized. For example PS may identify whether user device and or the application are authorized for multiple QoS levels. For instance PS may receive and or store information identifying user devices and or users that have subscribed to a service whereby multiple QoS levels may be provided. Additionally or alternatively PS may receive and or store information identifying applications that are authorized for multiple QoS levels.

Additionally or alternatively PS may receive and or store information identifying which QoS levels are authorized for which user devices and or applications. For example assuming that the request received from OTT specifies one or more QoS levels PS may identify whether the specified QoS levels are authorized for user device and or the invoked application. As another example assume that the request received from OTT does not specify one or more QoS levels. PS may identify QoS levels that are associated with user device and or the invoked application e.g. based on stored and or received information that correlates particular QoS levels with user device and or the invoked application .

Assuming that PS determines that the application and user device are authorized for multiple QoS levels PS may generate a request based on identifying that the application and user device are authorized for multiple QoS levels. This request generated by PS may in some implementations include information identifying user device and or the particular QoS levels associated with user device and the invoked application. As shown in PS may forward at the request to GW .

Based on receiving the request GW may establish multiple bearers associated with the multiple QoS levels between user device and application server . For example GW may establish multiple bearers and each associated with a particular QoS level through which user device and application server may communicate. As shown in GW may output at information regarding bearers and to user device . Additionally or alternatively GW may output information regarding bearers and to any other device e.g. any other device that handles traffic between user device and application server .

Bearers and may be associated with a single port of user device and or of application server . For example in some implementations a single port of user device may be associated with bearers and . In some implementations a single port of application server may be associated with bearers and .

As mentioned above bearers and which are associated with different QoS levels may be associated with different classes of traffic associated with the invoked application. For example one QoS level may be associated with low latency traffic e.g. control input commands real time application feedback etc. while another QoS level may be associated with other traffic e.g. non real time information high bandwidth traffic content upload download etc. .

User device GW application server and or any other intervening device may provide the specified QoS levels. For example user device may prioritize upload and or download queue processing based on the QoS levels. For example assume that user device is associated with an upload queue which indicates an order in which data will be uploaded from user device . Assume that a first unit of data associated with a first QoS level is received by the upload queue. Further assume that a second unit of data associated with a second QoS level is received by the upload queue after the first unit of data is received by the upload queue. User device may identify that the second unit of data is associated with a higher QoS level e.g. a lower latency QoS level than the first unit of data. Based on this identification user device may reorder the upload queue that is user device may upload the second unit of data before uploading the first unit of data even though the second unit of data was received after the first unit of data.

As mentioned above GW may also provide the specified QoS levels. For example when establishing the bearers GW may specify routing based on the specified QoS levels. For instance assume that a first routing scheme is associated with a lower latency than a second routing scheme. GW may assign the first routing scheme to one bearer associated with one QoS level while assigning the second routing scheme to another bearer associated with another QoS level . Additionally or alternatively GW and or application server may prioritize upload and or download queues using similar techniques as described above with respect to user device . Additionally or alternatively GW user device and or application server may employ any other techniques in order to provide the multiple QoS levels.

While shows communications that may occur between certain devices it should be understood that the communications shown in may be direct e.g. no intervening devices and or indirect communications e.g. one or more intervening devices . In scenarios where communications are indirect intervening devices have not been illustrated for the sake of clarity. Additionally in the above discussion generating a message based on a received message e.g. OTT generating the request based on the request outputted by application server at may include generating a new message and or formatting the received message. Continuing with this example OTT may in some implementations format the request received from application server e.g. modify the request add information to the request remove information from the request etc. in accordance with a format associated with PS .

Further while the above discussion of discussed example functionality of various components according to some implementations similar functionality may be implemented by one or more other devices. For example in some implementations some or all of the example functionality of OTT and application server described above may be performed by a single device.

Process may include receiving a connection request associated with an application block . For example GW may receive a connection request from for example PS . The connection request may be associated with a particular user device such as user device . As discussed above with respect to the connection request may be received by GW after PS authorizes the connection request e.g. identifies that user device and or the application are authorized for multiple QoS levels .

Process may also include identifying multiple QoS levels associated with the request block . For example the request received at block may include information identifying multiple QoS levels associated with the application and or user device . Additionally or alternatively GW may identify one or more QoS levels based on an identity of user device and or an identity of the application.

Process may further include establishing multiple bearers associated with the identified QoS levels block . For example as discussed above with respect to GW may establish multiple bearers between user device and an application server associated with the application e.g. application server . Each of these multiple bearers may be associated with a different QoS level as identified at block . As mentioned above when establishing the bearers GW may for example assign routing associated with the bearers based on the identified QoS levels.

Process may additionally include processing traffic associated with the established bearers according to the QoS levels block . For example as discussed above with respect to GW may process traffic between user device and application server according to the identified QoS levels. For instance as discussed above GW may route different classes of traffic associated with the application and user device based on the different QoS levels. Additionally or alternatively and as also discussed above GW may prioritize input and or output queues based on the different QoS levels.

In some implementations GW may generate and or assign a group identifier e.g. an IP address or any other identifier associated with group and may provide the group identifier to each of user devices in group . For example as shown in GW may store a data structure such as example data structure which relates group identifiers to associated user devices. As shown user devices with the user device identifiers UD IDs 1.1.1.1 1.1.1.2 and 1.1.1.3 may be associated with the group identifier 123.1.2.3. A UD ID for a particular user device may be based on for example an IP address associated with the particular user device a Media Access Control MAC address associated with the particular user device and or any other identifier associated with the particular user device .

As also shown other user devices such as user devices with UD IDs of 1.1.1.4 and 1.1.1.5 may be associated with another group identifier 123.1.2.4. As further shown user devices with UD IDs of 1.1.1.1 and 1.1.1.6 may be associated with another group identifier 123.1.2.5. Thus in some implementations one or more user devices may be associated with multiple groups . Such a situation may arise when for instance a particular user device invokes multiple applications that utilize group session communication e.g. multiple peer to peer applications .

When outputting data intended for one or more other user devices in the group a particular user device e.g. user device in group may output the data specifying the group identifier as a destination address for the data. GW may identify that this identifier is associated with group and may provide this data to the other user devices in group e.g. user devices and .

In some implementations GW may receive acknowledgment messages from one or more of the other user devices in group e.g. from user device and or . Upon receiving acknowledgment messages from the other devices in group GW may generate an acknowledgement message associated with the group identifier and may provide the acknowledgment message to user device . On the other hand if GW does not receive acknowledgment messages from one or more of the other devices in the group e.g. if at least a particular duration of time has expired without receiving an acknowledgment message from one or more of the other devices in the group then GW may generate a message associated with the group IP address indicating that the data from the particular user device has not been received. Based on receiving this message user device may re send the data specifying the group identifier as a destination of the data.

Assigning the group identifier may conserve bandwidth and or other resources. For example when transmitting data intended for other user devices in a group a particular user device may transmit the data to GW using the group IP address. GW may provide some or all of this data to the other user devices in the group. As is apparent from this example the particular user device may forgo transmitting the same data multiple times e.g. transmit one copy of the data for each user device in the group thus conserving upload bandwidth and reducing upload latency.

Assigning the group identifier may conserve bandwidth and or other resources when user devices to join and or leave a group. For example assume that user device joins a group in which user devices and are already present e.g. are communicating with each other . Further assume that GW has assigned a group identifier for this group e.g. for a group that includes user devices and . When user device joins the group instead of providing an identifier associated with user device e.g. an IP address of user device to user devices and and or vice versa GW may simply provide the group identifier to user device . In some implementations GW may forgo informing user devices and that user device has joined the group. Further assume that user device leaves the group. GW may store information identifying that user device is no longer associated with the group identifier and may in some implementations forgo informing user devices and that user device has left the group.

Thus a system according to one or more implementations may conserve network resources that would be consumed to provide identifiers of user devices to other user devices in a particular group. Further such a system may provide enhanced security as identifiers e.g. IP addresses of user devices may not be provided to other user devices. By forgoing providing such user device identifiers to other user devices a system may facilitate the prevention of attacks that use device identifiers.

Process may include receiving information regarding a group block . For example GW may receive information from user device indicating that a particular application has been invoked at user device . The particular application may be associated with group peer to peer communication e.g. may be a gaming application a chat application and or any other type of application. The group may be associated with for instance a gaming session a chat session etc. GW may receive the information when for example the group is established e.g. when the application is invoked at user device .

Process may also include generating or identifying a group identifier associated with the group block . For example GW may generate a group identifier associated with the group and or may select from a pool of group identifiers. That is in some implementations GW may store information regarding a set of group identifiers and may dynamically assign these group identifiers to various groups. A particular group identifier when assigned to a particular group may be unavailable for use for other group and may be released when a session associated with the particular group ends e.g. may be available for assigning to another group . Continuing with the above example assume that GW identifies that a group identifier associated with the group for which information was received at block is 123.1.2.3.

Process may additionally include receiving identifiers of user devices associated with the group block . For example GW may receive UD IDs associated with user devices in the group. In some implementations GW may receive the UD IDs when GW receives requests to join the group from user devices .

Process may further include providing the group identifier to user device s associated with the group block . For example as described above GW may provide the group identifier generated or identified at block to user devices e.g. when each of user devices joins the group .

Process may also include receiving data from a particular user device associated with the group that is addressed to the group identifier block . For example as described above assume that GW receives data that is addressed to the group identifier from user device .

Process may additionally include providing the data to other user devices associated with the group block . Continuing with the above example GW may provide the data or at least a portion of the data received at block to the other user devices in the group such as user devices and . For example GW may generate copies of the data or at least a portion of the data received at block and send these copies to the other user devices in the group.

Process may further include identifying acknowledgment information associated with the data provided to the other user devices block . Continuing with the above example GW may identify whether user devices and provided an acknowledgment to the data provided at block . Assume for example that GW receives an acknowledgment from user device within a particular amount of time and does not receive an acknowledgment from user device within the particular amount of time. In this scenario the acknowledgment information for user device may indicate that an acknowledgment was received while the acknowledgment information for user device may indicate that an acknowledgment was not received within the particular amount of time e.g. an acknowledgment window timed out .

Process may also include generating group acknowledgment information based on the group identifier and based on the identified acknowledgment information block . Continuing with the above example in some implementations the group acknowledgment information may include an indication that an acknowledgment was not received from the group e.g. since an acknowledgment was not received from one user device of the group the group acknowledgment information may indicate a group no acknowledgment received indication . In some implementations the group acknowledgment information may indicate that an acknowledgment was received from user device and that an acknowledgment was not received from user device .

Process may additionally include providing the group acknowledgment information to the particular user device block . For example GW may provide the group acknowledgment information generated at block to user device . User device may in some implementations re transmit the data using the group identifier as a destination address. In some implementations where the acknowledgment information specifies from which user devices an acknowledgment was received user device may re transmit the data using user device identifiers associated with these user devices as a destination address.

A system described herein may provide multiple QoS levels to a particular application such as a network based application being executed by the user device. In some implementations a system may be configured to facilitate communications between various user devices in a group by utilizing a group identifier in lieu of individual device identifiers associated with user devices in the group.

The foregoing description of implementations provides illustration and description but is not intended to be exhaustive or to limit the possible implementations to the precise form disclosed. Modifications and variations are possible in light of the above disclosure or may be acquired from practice of the implementations. For example while series of blocks have been described with regard to the order of the blocks may be modified in other implementations. Further non dependent blocks may be performed in parallel. It will be apparent that embodiments as described above may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures.

The actual software code or specialized control hardware used to implement an embodiment is not limiting of the embodiment. Thus the operation and behavior of the embodiment has been described without reference to the specific software code it being understood that software and control hardware may be designed based on the description herein.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the disclosure of the possible implementations. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim the disclosure of the possible implementations includes each dependent claim in combination with every other claim in the claim set.

No element act or instruction used in the present application should be construed as critical or essential unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

