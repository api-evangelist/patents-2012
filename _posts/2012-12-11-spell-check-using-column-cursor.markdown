---

title: Spell check using column cursor
abstract: An input query can be spell checked by first parsing the input query into one or more tokens. The one or more tokens are then compared against spell storage tables to derive alternative tokens. A spell cursor is launched, with the spell cursor calculating scores for permutations of the tokens and alternative tokens, and the scores representing a likelihood that a user intended to use the permutation as the input query. A memory table may then be formed including the permutations and scores. The memory table can then be passed to a column cursor, the column cursor designed to form an output table of results based on queries to a database using the permutations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09081821&OS=09081821&RS=09081821
owner: eBay Inc.
number: 09081821
owner_city: San Jose
owner_country: US
publication_date: 20121211
---
This application claims priority to U.S. Provisional Application No. 61 675 793 filed on Jul. 25 2012 and entitled SYSTEMS AND METHODS TO BUILD AND UTILIZE A SEARCH INFRASTRUCTURE which is hereby incorporated by reference in its entirety as if set forth herein.

The present application relates generally to the technical field of search query processing and in various embodiments to spell checking the search queries.

When trying to find an item on an e commerce site users often type a query into the site s search engine which attempts to match that query against inventory either active or inactive on the site. Active inventory is currently available whereas inactive inventory is not available as it has expired or has already been sold. Although matches for the query are often found and shown to the user there are also many situations where the site is unable to match the query to items. This can commonly be caused by spelling errors either through typographical errors lack of knowledge of proper spelling of terms and or lack of knowledge about proper formatting for particular terms such as model names or numbers of items. As a result a user in such a situation sees zero inventory from the e commerce site despite the fact that items similar or otherwise relevant to those desired by the user might be available.

The description that follows includes illustrative systems methods techniques instruction sequences and computing machine program products that embody illustrative embodiments. In the following description for purposes of explanation numerous specific details are set forth in order to provide an understanding of various embodiments of the inventive subject matter. It will be evident however to those skilled in the art that embodiments of the inventive subject matter may be practiced without these specific details. In general well known instruction instances protocols structures and techniques have not been shown in detail.

Inventory on an e commerce site such as an auction site is often stored as a series of documents with each document pertaining to an item for sale. In an example embodiment the documents may be stored in a directed acyclic word graph DAWG as defined later in this document. Search queries entered on the e commerce site by users are searched against the DAWG to attempt to find matching documents. In an example embodiment this search is performed using a cursor. The mechanism of the cursor and the DAWG will be described in more detail below. The cursor mechanism comprises two parts a row cursor and a column cursor. A row cursor takes the search query and attempts to locate one or more document identifiers corresponding to documents matching the query. The output of the row cursor is therefore a set of document identifiers which are then passed to the column cursor. The column cursor then searches on these document identifiers to determine portions of the documents that match the search queries and returns search results. If a spelling or other error however results in no document identifiers being returned by the row cursor then the column cursor is unable to return search results.

As such in accordance with an example embodiment when a row cursor is unable to return document identifiers or in lieu of the row cursor being run a specialized memory table is created at runtime identifying token combinations of possible candidate search queries as well as a score for each combination. This memory table may then be used by the column cursor to identify search results to return.

An Application Programming Interface API server and a web server are coupled to and provide programmatic and web interfaces respectively to one or more application servers . The application servers host one or more marketplace applications and payment applications . The application servers are in turn shown to be coupled to one or more databases servers that facilitate access to one or more databases .

The marketplace applications may provide a number of marketplace functions and services to users who access the networked system . The payment applications may likewise provide a number of payment services and functions to users. The payment applications may allow users to accumulate value e.g. in a commercial currency such as the U.S. dollar or a proprietary currency such as points in accounts and then later to redeem the accumulated value for products e.g. goods or services that are made available the marketplace applications . While the marketplace and payment applications and are shown in to both form part of the networked system it will be appreciated that in alternative embodiments the payment applications may form part of a payment service that is separate and distinct from the networked system .

Further while the system shown in employs a client server architecture the embodiments are of course not limited to such an architecture and could equally well find application in a distributed or peer to peer architecture system for example. The various marketplace and payment applications and could also be implemented as standalone software programs which do not necessarily have networking capabilities.

The web client accesses the various marketplace and payment applications and via the web interface supported by the web server . Similarly the programmatic client accesses the various services and functions provided by the marketplace and payment applications and via the programmatic interface provided by the API server . The programmatic client may for example be a seller application e.g. the TurboLister application developed by eBay Inc. of San Jose Calif. to enable sellers to author and manage listings on the networked system in an off line manner and to perform batch mode communications between the programmatic client and the networked system .

The networked system may provide a number of publishing listing and price setting mechanisms whereby a seller may list or publish information concerning goods or services for sale a buyer can express interest in or indicate a desire to purchase such goods or services and a price can be set for a transaction pertaining to the goods or services. To this end the marketplace applications and are shown to include at least one publication application and one or more auction applications which support auction format listing and price setting mechanisms e.g. English Dutch Vickrey Chinese Double Reverse auctions etc. . The various auction applications may also provide a number of features in support of such auction format listings such as a reserve price feature whereby a seller may specify a reserve price in connection with a listing and a proxy bidding feature whereby a bidder may invoke automated proxy bidding.

A number of fixed price applications support fixed price listing formats e.g. the traditional classified advertisement type listing or a catalogue listing and buyout type listings. Specifically buyout type listings e.g. including the Buy It Now BIN technology developed by eBay Inc. of San Jose Calif. may be offered in conjunction with auction format listings and allow a buyer to purchase goods or services which are also being offered for sale via an auction for a fixed price that is typically higher than the starting price of the auction.

Store applications allow a seller to group listings within a virtual store which may be branded and otherwise personalized by and for the seller. Such a virtual store may also offer promotions incentives and features that are specific and personalized to a relevant seller.

Reputation applications allow users who transact utilizing the networked system to establish build and maintain reputations which may be made available and published to potential trading partners. Consider that where for example the networked system supports person to person trading users may otherwise have no history or other reference information whereby the trustworthiness and credibility of potential trading partners may be assessed. The reputation applications allow a user for example through feedback provided by other transaction partners to establish a reputation within the networked system over time. Other potential trading partners may then reference such a reputation for the purposes of assessing credibility and trustworthiness.

Personalization applications allow users of the networked system to personalize various aspects of their interactions with the networked system . For example a user may utilizing an appropriate personalization application create a personalized reference page at which information regarding transactions to which the user is or has been a party may be viewed. Further a personalization application may enable a user to personalize listings and other aspects of their interactions with the networked system and other parties.

The networked system may support a number of marketplaces that are customized for example for specific geographic regions. A version of the networked system may be customized for the United Kingdom whereas another version of the networked system may be customized for the United States. Each of these versions may operate as an independent marketplace or may be customized or internationalized presentations of a common underlying marketplace. The networked system may accordingly include a number of internationalization applications that customize information and or the presentation of information by the networked system according to predetermined criteria e.g. geographic demographic or marketplace criteria . For example the internationalization applications may be used to support the customization of information for a number of regional websites that are operated by the networked system and that are accessible via respective web servers .

Navigation of the networked system may be facilitated by one or more navigation applications . For example a search application as an example of a navigation application may enable key word searches of listings published via the networked system . A browse application may allow users to browse various category catalogue or inventory data structures according to which listings may be classified within the networked system . Various other navigation applications may be provided to supplement the search and browsing applications.

In order to make listings available via the networked system as visually informing and attractive as possible the applications and may include one or more imaging applications which users may utilize to upload images for inclusion within listings. An imaging application also operates to incorporate images within viewed listings. The imaging applications may also support one or more promotional features such as image galleries that are presented to potential buyers. For example sellers may pay an additional fee to have an image included within a gallery of images for promoted items.

Listing creation applications allow sellers to conveniently author listings pertaining to goods or services that they wish to transact via the networked system and listing management applications allow sellers to manage such listings. Specifically where a particular seller has authored and or published a large number of listings the management of such listings may present a challenge. The listing management applications provide a number of features e.g. auto relisting inventory level monitors etc. to assist the seller in managing such listings. One or more post listing management applications also assist sellers with a number of activities that typically occur post listing. For example upon completion of an auction facilitated by one or more auction applications a seller may wish to leave feedback regarding a particular buyer. To this end a post listing management application may provide an interface to one or more reputation applications so as to allow the seller conveniently to provide feedback regarding multiple buyers to the reputation applications .

Dispute resolution applications provide mechanisms whereby disputes arising between transacting parties may be resolved. For example the dispute resolution applications may provide guided procedures whereby the parties are guided through a number of steps in an attempt to settle a dispute. In the event that the dispute cannot be settled via the guided procedures the dispute may be escalated to a third party mediator or arbitrator.

A number of fraud prevention applications implement fraud detection and prevention mechanisms to reduce the occurrence of fraud within the networked system .

Messaging applications are responsible for the generation and messages advising users regarding the status of listings at the networked system e.g. providing outbid notices to bidders during an auction process or to provide promotional and merchandising information to users . Respective messaging applications may utilize any one of a number of message delivery networks and platforms to deliver messages to users. For example messaging applications may deliver electronic mail e mail instant message IM Short Message Service SMS text facsimile or voice e.g. Voice over IP vow messages via the wired e.g. the Internet Plain Old Telephone Service POTS or wireless e.g. mobile WiFi WiMAX networks.

Merchandising applications support various merchandising functions that are made available to sellers to enable sellers to increase sales via the networked system . The merchandising applications also operate the various merchandising features that may be invoked by sellers and may monitor and track the success of merchandising strategies employed by sellers.

The networked system itself or one or more parties that transact via the networked system may operate loyalty programs that are supported by one or more loyalty promotions applications . For example a buyer may earn loyally or promotion points for each transaction established and or concluded with a particular seller and be offered a reward for which accumulated loyalty points can be redeemed.

As stated earlier in an example embodiment the documents on the e commerce site may be stored as a DAWG. A DAWG is a data structure that represents a set of strings and allows for a query operation that tests whether a given string belongs to the set in time proportional to its length. The entry point into the graph represents a starting letter in the search and one can travel from a node to two other nodes depending on whether the letter matches the one being searched for. is a diagram illustrating a search architecture in accordance with an example embodiment. In the architecture a user operates a client computer to enter a query that is received by one or more query node servers that in turn may apply the query to the index information stored in database s to identify and return search results that reference an appropriate document. The index information may include an inverted index and document information . An inverted index e.g. inverted index as is well known in the art is an index data structure storing a mapping from content e.g. content contained by the document such as words or numbers to its locations in a database file or in a document or a set of documents. The document information may store the documents e.g. document data column group data and or information contained by the documents.

Merely for example a document X may include the words apple orange and banana a document Y may include the words apple and orange and a document Z may include the word apple. An inverted index for the words in documents X Y and Z may be generated as follows 

The above inverted index may be utilized to identify the word apple as being positioned in the first word of documents X Y and Z the word orange as being positioned in the second word of the documents X and Y and the word banana as being positioned as the third word of the document X. Accordingly the above inverted index may be utilized to map a keyword apple contained in a query that is received from a client computer to the documents X Y and Z that are further referenced in search results that are returned to the client computer. It is appreciated by one skilled in the art that the inverted index corresponds to the underlying database that it describes. Accordingly any update to the underlying database is reflected in a corresponding update to the inverted index . Updates to the database may include the addition and deletion of documents in the document information as well as the update of any of the contents contained by the documents in the document information . In the present embodiment the index information may be updated in real time to respond to a query in real time with accurate search results that include the most recent document information .

Also depicted are spell storage tables . As will be described later these spell storage tables can be used to aid in processing of a spell cursor.

The spell memory table as described later may include various different alternative searches comprising various combinations of tokens and alternative tokens . This spell memory table can then be used by the column cursor to provide an output table including documents corresponding to some suggested alternative searches. Notably the column cursor utilizing the spell memory table may be the same column cursor used earlier or in other searches to directly retrieve matching documents. As such the spell check architecture essentially piggy backs on to the existing column cursor architecture.

In an example embodiment as described earlier a virtual memory table may be built on top of DAWG storage to provide for spell check services. Multiple probes are inserted into DAWG storage by iterating through different pieces of the graph to create a run time table that can be queried against in a relational environment. The result of each probe is represented as a separate row in the virtual table. This is another technique for transposing a directed graph into a table that can then be queried by a query engine designed to only operate on tables.

At a high level a spell check result is encapsulated into a single query. This query or expression is evaluated against a spell storage creating a spell cursor. The spell cursor looks up potential candidates in the DAWG storage and generates a memory table including suggested search queries and their scores. The spell storage may be based on the DAWG storage and index tokens based on its 3 grams 2 grams and 1 grams which are forms of n grams and their frequencies. An n gram is a contiguous sequence of n tokens from a given text or speech. One can think of each token as a word although there are tokens that are more than one word and tokens that are portions of words. In that manner a 3 gram would be a combination of three words such as if the user searched tablet computer 16 GB although in some instances the term tablet computer may be considered a single token and the search would be considered a 2 gram .

The run time memory table is then used as input to a column cursor to locate individual search results.

In this manner the same cursor infrastructure used to perform searches can be used to perform spell checks. This may be known as a unified storage system. This helps to reduce maintenance costs and make searching and spell checking more efficient.

In an example embodiment two general models are utilized for the spell cursor an error model and a language model. The goal of the combination of these two models is to determine for an input token toki in the context of tok0 . . . toki 1 and toki 1 . . . tokn which are the best candidates for spelling correction of toki. Given toki without knowledge of the context there are a set of tokens that can be retrieved from the DAWG storage for example toki toki toki that have some measure of similarity to toki. The error model gives the possibility that given toki the user actually meant one of these alternative tokens. This can be measured by determining how much the characters from toki need to be changed in order to arrive at each of the alternative tokens for example toki . There are different models which can be used to measure this. For example in a keyboard model the system may find the characters that are different between toki and toki and then determine how far apart they are on a keyboard. The theory is that if the user committed a typographical error then the distance should not be great. For example if the only character that is different is i toki that is different than a u in toki then the distance between these two characters on most keyboards is only 1 key. On the other hand if the i toki is d toki then the distance between the keys is much greater on most keyboards. Thus in this model the edit distance of toki will be considered to be less than the edit distance of toki in comparison to toki despite the fact that d is closer in the alphabet to i than u is.

In another example a phonetic model can be used. This measures how closely the tokens sound alike regardless of spelling. In such a model for example high may be considered to have less of an edit distance from hi than the edit distance between hu and hi despite the fact that hu has only one character difference and only one key difference in the keyboard model.

There may be other models taken into account as well. For example there may be a model that determines how easily typed the terms are given a general keyboard layout that may differ from mere key difference. Additionally the various models can be combined as well in some embodiments and these combinations may also include various weightings The end result of the error model however is a score reflecting the likelihood for each toki and each toki alternative that toki is a mistaken form of the toki alternative.

The second general model used by the spell cursor is the language model. The language model examines the token in the context of the other tokens of the search query and tells probabilities based on what past searches have done. In this model a sample pool of past behavior is maintained. An algorithm is then performed examining n gram tokens to determine the probabilities that a token was meant to be another token based on the n gram surrounding tokens. In an example embodiment a 3 gram algorithm is used wherein not just the examined token but also the tokens before and after the examined tokens are used to find potential alternative tokens. With 3 gram the probability model for the token would be toki w1 P toki w2 P toki toki 1 w3 P toki toki 2toki 1 where P toki toki 1 means the probability of token toki when toki 1 presents and w1 w2 and w3 are weights assigner heuristically.

The spell cursor may then combine these two general models. In an example embodiment this is performed by multiplying the score from the error model for the score from the language model for each token combination alternative.

The spell cursor is unique in that it creates a memory table without returning the identifiers of the documents in the storage. This memory table is created on the fly and can be examined by the column cursor specific for the spell check.

It should be noted that it may not be necessary to run the spell check at all in certain circumstances. A white list and or black list of tokens may be created and maintained. If a token in question is on one of these lists there may be no need for a spell check to be performed. For example if the token is on a white list then someone has designated the token as accurate even if it returns no results. For example the term Zune may be placed on a white list and considered accurate even if there are no Zune s currently in the inventory of the e commerce site. Likewise the black list may contain tokens that someone has designated as blocked such as curse words.

At the user device issues a search query. At the query parser parses the query into tokens. At the tokens are then passed to a white list black list checker . At the white list black list checker checks the tokens against a white list and or black list stored in data storage . At the result of this white list black list check is returned. If this check determines that the tokens are not on a white list and or black list then at the tokens may be passed to a document searcher . The document searcher can then compare the tokens against spell storage tables at resulting in alternative tokens being identified at . The tokens and alternative tokens can be passed to a newly spawned spell cursor at .

At scores for the various permutations of the tokens and alternative tokens can be calculated. This may be based on information stored in the DAWG storage. At a memory table may be stored using the permutations and the scores.

At the memory table may be passed to a column cursor which can form an output table at again using information stored in the DAWG storage. The results from this represent results of suggested queries and can be passed back to the user device at .

If a misspelling is not suspected the process may end. If one is suspected then at the tokens are compared against spell storage tables to obtain alternate tokens. At a spell cursor is launched to calculate scores for permutations of tokens and alternative tokens. The term tokens and alternative tokens is intended to be broadly construed to cover all tokens including tokens part of the original query and alternative tokens derived later. It is also intended to cover instances where one or more permutations includes only alternative tokens and no tokens that exactly match tokens in the original query.

At permutations of tokens and alternative tokens are stored with scores in a memory table. At the memory table is sent to a column cursor where it is used to derive results from the DAWG storage.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied on a machine readable medium or in a transmission signal or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In various embodiments a hardware module may be implemented mechanically or electronically. For example a hardware module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where the hardware modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or more processors or processor implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the network of and via one or more appropriate interfaces e.g. APIs .

Example embodiments may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Example embodiments may be implemented using a computer program product e.g. a computer program tangibly embodied in an information carrier e.g. in a machine readable medium for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers.

A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

In example embodiments operations may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method operations can also be performed by and apparatus of example embodiments may be implemented as special purpose logic circuitry e.g. a FPGA or an ASIC .

A computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. In embodiments deploying a programmable computing system it will be appreciated that both hardware and software architectures merit consideration. Specifically it will be appreciated that the choice of whether to implement certain functionality in permanently configured hardware e.g. an ASIC in temporarily configured hardware e.g. a combination of software and a programmable processor or a combination of permanently and temporarily configured hardware may be a design choice. Below are set out hardware e.g. machine and software architectures that may be deployed in various example embodiments.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit CPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a user interface UI navigation or cursor control device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of data structures and instructions e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media. The instructions may also reside completely or at least partially within the static memory .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium may include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more instructions or data structures. The term machine readable medium shall also be taken to include any tangible medium that is capable of storing encoding or carrying instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present embodiments or that is capable of storing encoding or carrying data structures utilized by or associated with such instructions. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media. Specific examples of machine readable media include non volatile memory including by way of example semiconductor memory devices e.g. Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and compact disc read only memory CD ROM and digital versatile disc or digital video disc read only memory DVD ROM disks.

The instructions may further be transmitted or received over a communications network using a transmission medium. The instructions may be transmitted using the network interface device and any one of a number of well known transfer protocols e.g. HTTP . Examples of communication networks include a LAN a WAN the Internet mobile telephone networks POTS networks and wireless data networks e.g. WiFi and WiMax networks . The term transmission medium shalt be taken to include any intangible medium capable of storing encoding or carrying instructions for execution by the machine and includes digital or analog communications signals or other intangible media to facilitate communication of such software.

Although an embodiment has been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the present disclosure. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. The accompanying drawings that form a part hereof show by way of illustration and not of limitation specific embodiments in which the subject matter may be practiced. The embodiments illustrated are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. This Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

Such embodiments of the inventive subject matter may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus although specific embodiments have been illustrated and described herein it should be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the above description.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

