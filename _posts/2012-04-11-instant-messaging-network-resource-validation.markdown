---

title: Instant messaging network resource validation
abstract: A character string can be received. A determination can be made of whether the received character string includes or is a request for a network resource. When it is determined that the received character string comprises a request for a network resource, an identical network resource address can be determined from a browser history of a web browser. The identical network resource address can be communicated to an instant messaging client application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08935343&OS=08935343&RS=08935343
owner: International Business Machines Corporation
number: 08935343
owner_city: Armonk
owner_country: US
publication_date: 20120411
---
This application claims priority to the European Patent Application Serial No. 11166194.8 entitled REALTIME TRACKING OF SOFTWARE COMPONENTS filed May 16 2011.

The present invention relates to the technical field of instant messaging and more specifically to the validation of character strings entered by a user of an instant messaging application.

Instant messaging is a type of communication between computer users which allows a user on one computer to engage in a conversation with one or more other users on other computers in real time via a computer network such as the Internet. Communication is controlled by instant messaging server software to which participating computer users connect. The server maintains address details of participating computers and connects a first user with one or more further users when a conversation is initiated by entry of recipient identification details such as a name.

Each participating computer comprises instant messaging client software for providing a user interface window including a text entry pane into which the user types the text for sharing with the other participating users in the conversation. The user interface window also includes a chat session pane in which is displayed the text entered by all users participating in the chat session. Instant messaging is generally a more informal and spontaneous exchange medium than other means such as electronic mail and inaccuracies of spelling and punctuation are generally accepted. However there are some character strings which must be typed with total accuracy. For example a user may enter a Uniform Resource Identifier URI which can be described as a string of characters used to identify an address or resource on a network such as the Internet. More particularly a user may enter a Uniform Resource Locator URL which is type of URI used to denote an address of for example an Internet web page.

Embodiments of the disclosure are for a method device apparatus computer program product and computer system for validating a character string received by an instant messaging client application. In the disclosure a character string can be received. A determination can be made of whether the received character string includes or is a request for a network resource. When it is determined that the received character string comprises a request for a network resource an identical network resource address can be determined from a browser history of a web browser. The identical network resource address can be communicated to an instant messaging client application.

In the disclosure the term network resource address will be used to apply to a Uniform Resource Identifier URI a Uniform Resource Locator URL or to any other reference to a unique resource. Any mistake in the typing of the network resource address or in the copying from another location however slight will render the identified resource inaccessible. For example an incorrectly typed or copied URL will not allow the desired web page to be obtained. It would be desirable to provide means to ensure that a character string representing for example a network resource address may be typed correctly within the text entry pane of an instant messaging client application window.

Known prior art references fail to address e.g. see information disclosure statement the problem of how to ensure the correct entry of text such as a network resource address into the text entry pane of an instant messaging application. The disclosure includes various aspects that overcome shortcomings of known prior art.

One aspect of the disclosure is for a method for validating a character string received by an instant messaging client application. Embodiments of the disclosure communicate the network resource addresses to an instant messaging client application. An advantage provided by this communication is that it provides a method for validating an entered address against addresses in a web browser history.

In one embodiment the identical network resource address can be received and displayed in a window of the instant messaging client application for selection by a user. Thus the embodiment provides that the address may be entered as it has appeared in a web browser.

In one embodiment the determined address for a network resource can be compared with a list of previously visited web page addresses stored in the web browser history. Thus the embodiment provides that the addresses of previously visited web pages may be presumed to be valid addresses.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Referring to the figures is an overview of a typical system incorporating an embodiment of the present invention. In the system a network for example a communications network such as the Internet provides the communication medium for an instant messaging application. An example of an instant messaging application is IBM Lotus Sametime . A plurality of client computing units each comprise instant messaging IM application client software . Client computing units may comprise desktop personal computers laptop computers handheld computers or any data processing devices capable of running instant messaging client software. The instant messaging application client software is in communication via network with an instant messaging application server . An instant messaging chat session is initiated by a participating user of one of the client computing units for example by entering data identifying the address of the client computing unit of at least one other user for example . The entered data is used by instant messaging application server to connect the users in a shared chat session which appears within the chat session pane of the instant messaging client software window on the client computing units of each participating user.

In accordance with an embodiment of the invention is a block diagram detailing components of an instant messaging system operating within system as illustrated in . The instant messaging client software comprises an instant messaging client window comprising a text entry pane within which the user enters instant messaging text for communication to other participating users in the chat session and a chat session pane within which communicated text appears once transmitted to a recipient. Instant messaging client software also comprises a character recognition module . The character recognition module is software code which comprises a lexical analysis function which analyses text as it is entered to identify particular character strings. These character strings are defined by rules embodied in the lexical analysis function and which for example alone or when contained within longer character strings denote references to network resource addresses. For example such character strings may take the form of an http reference an https reference a www reference a w3 reference or any other character string which indicates that the entered character string is a network resource address reference. In one embodiment the character recognition module comprises a configurable function wherein a user or administrator may define additional character strings which indicate a network resource address.

On identification by character recognition module of such a character string which indicates a network resource address it is saved by character recognition module . This saved character string will hereafter be termed a string element . The string element is passed to probe software component . In one embodiment probe software component is separated from instant messaging client software and resides on the instant messaging server of the system in within which is operating instant messaging system . However a person skilled in the art will realize that probe software component may form part of instant messaging client software or may reside elsewhere on a client computing unit on another server or other location within system . Probe software component is operable to send messages to web browser software . Examples of web browser software are Mozilla Firefox Microsoft Internet Explorer and Google Chrome .

In one embodiment web browser software resides on the same client computing unit as instant messaging client software . Web browser software maintains a record of the network resource addresses and identifying descriptions of all resources visited on the Internet or other network such as a corporate Intranet for example the URLs and identifying descriptions of web pages. These are stored in a file or data structure referred to as the browser history . Web browser software has a set of public application programming interfaces APIs which allow the web browser software to be addressed by other software. Amongst these APIs is the browser history API. On receipt of the saved element passed to it by character recognition module probe software component makes a call to the browser history API of web browser software which retrieves from browser history and returns a list of all the network resource addresses in browser history to probe software component .

Probe software component contains lexical analysis logic which compares character strings or string elements received from the character recognition module of instant messaging client software with the list of network resource addresses received from browser history of web browser software . A list of matched network resource addresses optionally together with any descriptions in the form of metadata associated with entries in browser history is saved by probe software component . This saved list is then passed by probe software component to a receiving component of instant messaging client software . Receiving component passes the saved list to instant messaging client window for presentation to the user. This presentation may be in any convenient way for example by a drop down list below the cursor position in the text entry pane . The user may then select from the list a desired network resource address which is then entered into the text entry pane .

In an alternative embodiment probe software component may retrieve entries from browser history by calling browser history APIs of web browser software on a client computing unit different from that containing the instant messaging client software . In a further alternative embodiment a plurality of calls may be made to browser history APIs of a plurality of web browsers on the same or different client computing units for example all those having instant messaging software participating in the chat session.

With reference to the system illustrated in is a screenshot showing an embodiment of the present invention as it is presented to the user on a graphical user interface. Instant messaging client software has instant messaging client window comprising a text entry pane within which a user types input text and chat session pane within which text entered by all users participating in the chat session is displayed. Send button is selected to send text entered in the text entry pane to all users participating in the chat session and is displayed in chat session pane . As shown in the user has entered input text http w3 which has been determined by lexical analysis function of character recognition module as representing a network resource address. Network resource addresses containing this character string are presented to the user as a drop down list . If the user sees the address required in the list it may be selected using a mouse to click send button or by using corresponding keyboard functions to produce the same selecting effect. On selection action the selected address is caused to be entered in full into text entry pane and transferred to other users when the user selects the send function as above when it appears in the chat session pane .

In saving step each so identified entered string representing a network resource address or partial network resource address is saved as a string element. In comparing step the saved string element is passed to probe software component . Probe software component has received a list of network resource addresses for example URLs from visited web sites from browser history after calling browser history API of web browser software . Using its lexical analysis function probe software component compares the string element with the list and identifies network resource addresses in the list which contain the string element.

In displaying step a list of all complete character strings of network resource addresses for example URLs which contain the string element so identified by probe software component is passed to receiving component of instant messaging client software . It is then passed by receiving component to instant messaging client window and displayed optionally with any descriptive information in a convenient manner. This may be for example as a drop down list below text entry pane of instant messaging client software window . In selecting step the user selects any entry from drop down list representing for example a desired URL which on selection action by the user is displayed within text entry pane of instant messaging client window .

In recalculating step the user instead of selecting immediately from presented network resource addresses for example as drop down list enters an additional character. This restarts the process at step with the new string one character longer and a new element saved at step . A new comparing step will produce a new list of network resource addresses containing the saved string element probably of shorter length because of the increased character string length of the string element. It may be that a user enters a string which produces a saved string element which produces no identical character strings at comparing step in which case a null list will be passed by probe software component to instant messaging client software and nothing will be presented to the user in instant messaging client software window . When the user selects a network resource address from for example drop down list and it is entered into text entry pane the chat session continues step .

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

While the invention has been described with reference to one or more specific embodiments the description is intended to be illustrative of the invention as a whole and is not to be construed as limiting the invention to the embodiments shown. It is appreciated that various modifications may occur to those skilled in the art that while not specifically shown herein are nevertheless within the true spirit and scope of the invention.

