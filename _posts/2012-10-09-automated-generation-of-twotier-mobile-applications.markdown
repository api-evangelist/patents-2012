---

title: Automated generation of two-tier mobile applications
abstract: The disclosure generally describes computer-implemented methods, software, and systems for creating and using two-tier mobile applications. A computer-implemented method includes identifying at least a portion of a database to be associated with a mobile application, retrieving a set of metadata associated with the at least a portion of the identified database, automatically generating a set of mobile application source code for directly accessing the at least a portion of the database based on the set of retrieved metadata, and compiling the set of mobile application source code into a distributable mobile application, the distributable mobile application configured to directly access the identified database associated with the mobile application. In some instances, the identifying, retrieving, generating, and compiling operations are performed at design time, while at runtime, the mobile application is executable by a mobile device and, during runtime execution, can request database-related information directly from the identified database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09043750&OS=09043750&RS=09043750
owner: SAP SE
number: 09043750
owner_city: Walldorf
owner_country: DE
publication_date: 20121009
---
The present disclosure relates to computer implemented methods software and systems for creating and using two tier mobile applications.

Current mobile applications are generally built on a three tier architecture consisting of a database server a data tier an application server a logic tier and a client or front end system a presentation tier . The various tiers are generally developed and maintained as independent modules often on separate platforms. The client provides the user interface of the application which is used to translate tasks and results to information the user can understand as well as to allow users to submit instructions to the logic and data tiers. The logic tier coordinates the application processes commands and makes logical decisions and evaluations and performs calculations as well as moving data between the presentation tier and the data tier. The data tier stores and retrieves data and other information from a database or other file system. The information is passed to the logic tier for processing and then back to the user for consumption.

Database management systems DBMS are software packages with computer programs that control the creation maintenance and use of a database. They allow organizations to conveniently develop databases for various applications. A database is an integrated collection of data records files and other objects. A DBMS allows different user application programs to concurrently access the same database. A DBMS provides facilities for controlling data access enforcing data integrity managing concurrency control and recovering the database after failures and restoring it from backup files as well as maintaining database security.

An in memory database is a DBMS that primarily relies on main memory for computer data storage. It is contrasted with DBMSs which employ a disk storage mechanism. Main memory databases are faster than disk optimized databases since the internal optimization algorithms are simpler and execute fewer CPU instructions. Accessing data in memory reduces the I O reading activity when querying the data which provides faster and more predictable performance than disk.

The disclosure generally describes computer implemented methods software and systems for creating and using two tier mobile applications. A computer implemented method includes identifying at least a portion of a database to be associated with a mobile application retrieving at least a set of metadata associated with the at least a portion of the identified database automatically generating a set of mobile application source code for directly accessing the at least a portion of the database based on the set of retrieved metadata and compiling the set of mobile application source code into a distributable mobile application the distributable mobile application configured to directly access the identified database associated with the mobile application. In some instances the identifying retrieving generating and compiling operations are performed at design time while at runtime the mobile application is executable by a mobile device and during runtime execution can request database related information directly from the identified database.

While generally described as computer implemented software embodied on tangible media that processes and transforms the respective data some or all of the aspects may be computer implemented methods or further included in respective systems or other devices for performing this described functionality. The details of these and other aspects and embodiments of the present disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

This disclosure generally describes computer implemented methods software and systems for creating and using two tier mobile applications. Currently the enterprise IT industry is moving to build native mobile applications and frontends for different mobile application platforms e.g. iOS Android and Windows Phone among others for server applications. In the past three tier architecture based applications consisting of a database server an application server and a client or other frontend would be used. The advent of in memory database systems such as SAP s HANA together with easy to consume database interfaces i.e. HTTP RESTful allows the possibility to build mobile applications directly on top of the server side database management system DBMS . In other words the mobile applications can directly communicate with the DBMS for access to stored data. While in memory databases may be used other suitable non in memory databases and DBMSs may be used to achieve similar benefits. This process provides a significantly lower total cost of ownership TCO and complexity removing the need for application server caches particularly when used with fast in memory databases. However a significant development effort e.g. boilerplate code is needed to build even simple mobile applications and this effort has to be done per mobile platform each different from the others. To leverage rapid application development and prototyping this disclosure describes a mobile application generator to minimize the effort to build simple mobile CRUD create read update delete applications directly on the database.

During development time of the mobile application the mobile application generator can be used to define and create the two tier applications. The generator application can retrieve at least a portion of database table definitions associated with the underlying database via a RESTful application programming interface API Java database connectivity JDBC or other suitable interface call that provides metadata about the database s data model. The developer can select one or more tables and or database objects to use in the application and the mobile application generator can generate native source code for a specified client platform e.g. iOS or Android . The native source code may follow an MVC Model View Controller or MVVM Model View View Model pattern as appropriate. Some source code may be generated for the model and controller in a programming language such as Java C or Objective C as well as a view definition such as an XML document for Android and Windows Phone .

Additionally some coding may be generated by the mobile application generator for managing the connectivity to the database system needed during runtime. The generated coding can be similar to database objects represented in the real world that is the supported actions of the user can comprise creation reading updating and deletion of one of these real world objects. The similarity of these actions is one of the reasons why the automated mobile application generator is possible. In instances where associations exist between multiple database objects e.g. a sales order having different line items including those stored in a separate table the application coding for these can also be generated automatically in some cases if needed.

The generated native mobile application can then be used at runtime similar to any other mobile application and can provide direct database access with general CRUD actions. In further development cycles the developer can then adapt or revise the generated coding in case more sophisticated features are needed or desired.

The application generator server is a server or plurality of servers capable of performing functions associated with creation and modification of mobile applications particularly those generated automatically using a mobile application generator . The application generator server may be part of an end to end enterprise resource planning system and or a software development environment. In some implementations the application generator server system may store execute or be associated with a plurality of applications in addition to the mobile application generator . As illustrated in fact the application generator server includes a database management system DBMS that may be used to manage one or more database tables and database schema for use with generated mobile applications. In other implementations the relevant databases including the DBMS and any other suitable information may be located external to the application generator server in a dedicated database system. In some implementations the application generator server may comprise or be associated with at least one Web server where the mobile application generator represents one or more Web based applications accessed and executed by the client device via the network or directly at the application generator server to perform the programmed tasks or operations of the mobile application generator .

At a high level the application generator server comprises an electronic computing device operable to receive transmit process store or manage data and information associated with the environment . Specifically the application generator server illustrated in is responsible for receiving application requests for example mobile application generation requests from one or more client applications or mobile applications associated with the client device and or the mobile device respectively of the environment and further responding to the received requests by processing said requests in the associated mobile application generator and or DBMS and sending the appropriate responses to the requested applications. In addition to those requests requests associated with both the mobile application generator and or the DBMS may also be sent from internal users external or third party customers other automated applications as well as any other appropriate entities individuals systems or computers.

As used in the present disclosure the term computer is intended to encompass any suitable processing device. For example although illustrates a single application generator server environment can be implemented using two or more servers as well as computers other than servers including a server pool. Indeed the application generator server may be any computer or processing device such as for example a blade server general purpose personal computer PC Mac workstation UNIX based workstation or any other suitable device. In other words the present disclosure contemplates computers other than general purpose computers as well as computers without conventional operating systems. Further illustrated application generator server may be adapted to execute any operating system including Linux UNIX Windows Mac OS Java Android iOS or any other suitable operating system. According to one implementation application generator server may also include or be communicably coupled with an e mail server a Web server a caching server a streaming data server and or other suitable server. Similar flexibility and variation may be associated with the other components illustrated in including client device and mobile device each of which may be comprised of different components component types and operating systems in different implementations.

The application generator server also includes an interface a processor and a memory . The interface is used by the application generator server for communicating with other systems in a distributed environment including within the environment connected to the network for example the client device and or the mobile device as well as other systems communicably coupled to the network not illustrated . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

Generally the application generator server and other components within environment may be communicably coupled with a network that facilitates wireless or wireline communications between the components of the environment as well as with any other local or remote computer such as additional clients servers or other devices communicably coupled to network including those not illustrated in . In the illustrated environment the network is depicted as a single network but may be comprised of more than one network without departing from the scope of this disclosure so long as at least a portion of the network may facilitate communications between senders and recipients. In some instances one or more of the components associated with the system may be included within the network as one or more cloud based services or operations.

The network may be all or a portion of an enterprise or secured network while in another instance at least a portion of the network may represent a connection to the Internet. In some instances a portion of the network may include a portion of a cellular or mobile data network or other network capable of relaying short message service SMS or multimedia messaging service MMS messages as well as other suitable mobile data messaging. In some instances a portion of the network may be a virtual private network VPN . Further all or a portion of the network can comprise either a wireline or wireless link. Example wireless links may include 802.11a b g n 802.20 WiMax 3G 4G i.e. LTE and or any other appropriate wireless link. In other words the network encompasses any internal or external network networks sub network or combination thereof operable to facilitate communications between various computing components inside and outside the illustrated environment . The network may communicate for example Internet Protocol IP packets Frame Relay frames Asynchronous Transfer Mode ATM cells voice video data and other suitable information between network addresses. The network may also include one or more local area networks LANs radio access networks RANs metropolitan area networks MANs wide area networks WANs all or a portion of the Internet and or any other communication system or systems at one or more locations.

As illustrated in the application generator server includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the environment . Each processor may be a central processing unit CPU a blade an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the application generator server . Specifically the processor executes the functionality required to receive and respond to requests from the client device and the mobile device as well as to perform the operations associated with the mobile application generator and the application generator server as a whole and those components related modules and functionality.

Regardless of the particular implementation software may include computer readable instructions firmware wired and or programmed hardware or any combination thereof on a tangible medium transitory or non transitory as appropriate operable when executed to perform at least the processes and operations described herein. Indeed each software component may be fully or partially written or described in any appropriate computer language including C C Java Visual Basic assembler Perl any suitable version of 4GL as well as others. While portions of the software illustrated in are shown as individual modules that implement the various features and functionality through various objects methods or other processes the software may instead include a number of sub modules third party services components libraries and such as appropriate. Conversely the features and functionality of various components can be combined into single components as appropriate.

The application generator server is illustrated as including several applications modules and other software to be executed by the processor including the mobile application generator the DBMS and the compiler . As described earlier the mobile application generator can be any application program or other software for managing and performing operations associated with generating mobile applications that can directly access the DBMS and its associated database tables and database schema as opposed to accessing an application layer when requesting data from the backend. In some instances the mobile application generator may work in conjunction with one or more of the other modules illustrated in such as the DBMS and the compiler .

The DBMS controls the creation maintenance and access to at least one database. While illustrated within the application generator server the DBMS and the respective database components e.g. database tables database schema may be stored and located in a specific database system. The DBMS and its databases are shown within the application generator server in for convenience of illustration and are not meant to be limiting. In general the DBMS can operate with the mobile application generator during application development to allow users to identify one or more database tables or views to be used in the mobile application being developed. The mobile application generator can request and or retrieve a listing of the database schemas for the various database tables and views that exist at the time of development and can allow particular views and tables to be selected as relevant to the application. When the application is generated the selected tables and views can be incorporated into the application s coding. After a particular mobile application is created compiled and is used at a mobile device requests for information from the database tables associated with the corresponding executing mobile application are sent to the DBMS . The DBMS can then access and return the information to the mobile application and in some instances allow the mobile application and associated user to also create update and delete portions of the database tables .

The compiler is a computer program or module that transfers a set of mobile application source code defined for a new mobile application and created by the mobile application generator into an executable program. The mobile application source code generated by the mobile application generator may be generated in any suitable formats including a set of Java C and or Objective C code as well as a set of view definitions e.g. in XML . The set of Java C Objective C code may be code defined for a model and controller of the mobile application as well as the view definition allowing a model view controller and or a model view view model pattern to be followed. In some instances the mobile application source code can be compiled into multiple types of mobile applications. A set of mobile OS specific rules may be used to define how the generated source code is compiled. For example if a mobile application is meant to be created for iOS an iOS specific set of rules will be used by the compiler to generate the compiled mobile applications . Rule sets for other mobile OS may also be available including Android Windows Mobile Blackberry OS and others. The compiled mobile applications can be disseminated or made available to one or more mobile devices using any suitable delivery mechanism including app stores email push delivery or others as appropriate.

Memory may be a single or multiple memories. The memory may include any type of memory or database module and may take the form of volatile and or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component. The memory may store various objects or data including caches classes frameworks applications backup data business objects jobs web pages web page templates database tables repositories storing business and or dynamic information product information customer information sales person information and any other appropriate information including any parameters variables algorithms instructions rules constraints or references thereto associated with the purposes of the application generator server . Additionally the memory may include any other appropriate data such as VPN applications firmware logs and policies firewall policies a security or access log print or other reporting files as well as others. As illustrated in memory includes the database information database tables and database schema the mobile application source code the compiled mobile applications and the mobile OS specific rule sets used for compiling mobile application source code each described above.

The illustrated environment of also includes the client device or multiple client devices . The client device may be any computing device operable to connect to or communicate with at least the application generator server via the network using a wireline or wireless connection. In general the client device comprises an electronic computer device operable to receive transmit process and store any appropriate data associated with the environment of . In more specificity the client device may be associated with a user or developer working with the mobile application generator to define and generate one or more mobile applications.

The illustrated client device includes a client application . The client application is any type of application that allows the client device to perform a transaction or interaction with the application generator server . In some implementations the client application can be and or include a Web browser. In some implementations the client application can be used to present information from the mobile application generator such as one or more data sets or schemas from the database tables and or database schema as well as to define the design of a particular mobile application. The client application can also be used to modify previously generated mobile applications to add additional or alternative functionality than that created in the automatic generation process performed by the mobile application generator . In some instances the client application can be used to test newly created or defined mobile applications. The client device may be associated with a development and or test environment for the generation and testing of mobile applications.

The illustrated client device further includes an interface a processor and a memory . The interface is used by the client device for communicating with other systems in a distributed environment including within the environment connected to the network for example the application generator server as well as other systems communicably coupled to the network not illustrated . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the illustrated environment .

As illustrated in the client device includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the environment . Each processor may be a central processing unit CPU an application specific integrated circuit ASIC a field programmable gate array FPGA or another suitable component. Generally the processor executes instructions and manipulates data to perform the operations of the client device . For example the processor executes the functionality of the client application required to send requests to the application generator server and to receive and process responses from the same. The graphical user interface GUI of the client device can interface with at least a portion of the environment for any suitable purpose including generating a visual representation of a Web browser presenting a set of database table metadata and or data or performing other suitable actions. In some instances the GUI may be used to view and navigate various applications and Web pages located both internally and externally to the illustrated system including the mobile application generator at the application generator server .

The GUI may provide a graphical user interface to the mobile application generator operable to for example allow the user of the client application to interface with at least a portion of the mobile application generator and its associated operations and functionality as well as other applications. Generally the GUI provides the particular user with an efficient and user friendly presentation of business data provided by or communicated within the system. The GUI may comprise a plurality of customizable frames or views having interactive fields pull down lists and buttons operated by the user. For example the GUI may provide interactive elements that allow a user to interact with a particular application generator server as well as other components within and or external to environment . The different portions of the application generator server s functionality may be presented and accessible to the user through the GUI . In general the GUI is often configurable supports a combination of tables and graphs bar line pie status dials etc. and is able to build real time portals where tabs are delineated by key characteristics e.g. site or micro site . Therefore the GUI contemplates any suitable graphical user interface such as a combination of a generic web browser intelligent engine and command line interface CLI that processes information in the platform and efficiently presents the results to the user visually. In some instances the client application may be associated with or a remotely executing portion of the mobile application generator .

The illustrated client device also includes a memory or multiple memories . The memory may be similar to or different from memory of the application generator server and may include any memory or database module and may take the form of volatile or non volatile memory including without limitation magnetic media optical media random access memory RAM read only memory ROM removable media or any other suitable local or remote memory component.

There may be any number of client devices associated with or external to the environment . For example while the illustrated environment includes one client device alternative implementations of the environment may include multiple client devices communicably coupled to the application generator server and or the network or any other number suitable to the purposes of the environment . Additionally there may also be one or more additional client devices external to the illustrated portion of environment that are capable of interacting with the environment via the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the client device is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

The illustrated client device is intended to encompass any computing device such as a desktop computer laptop notebook computer wireless data port smart phone personal data assistant PDA tablet computing device one or more processors within these devices or any other suitable processing device or computer. For example the client device may comprise a computer that includes an input device such as a keypad touch screen or other device that can accept user information and an output device that conveys information associated with the operation of the application generator server or the client device itself including digital data visual information or the GUI as shown with respect to the client device .

While is described as containing or being associated with a plurality of elements not all elements illustrated within environment of may be utilized in each alternative implementation of the present disclosure. For example one or more of the elements described herein may be located external to environment while in other instances certain elements may be included within or as a portion of one or more of the other described elements as well as other elements not described in the illustrated implementation. Further certain elements illustrated in may be combined with other components as well as used for alternative or additional purposes in addition to those purposes described herein.

Initially a mobile application generator is provided. As described the mobile application generator can be used by a developer to retrieve at least a portion of a database table or database schema using the retrieved information to assist in creating a new mobile application. The mobile application generator can access a database management system DBMS through an appropriate channel such as the illustrated RESTful API or JDBC channel. The DBMS can access its associated databases database schemas and database table definitions to provide metadata about the data model and sample data from the corresponding databases to the mobile application generator . The developer can identify one or more portions of the corresponding databases and or tables within the databases to be included with and or integrated into the mobile application being generated.

After selection of the relevant database schemas and portions the mobile application generator can generate native source code for a particular client platform e.g. iOS or Android . In some instances a generic set of source code may be generated at this time with platform specific compiling performed later. As illustrated the mobile application generator can generate a set of application source code and a set of application view definitions . The application source code can define how the mobile application executes while the set of application view definitions can define how the information associated with the mobile application is presented. The application source code may be generated in a programming language such as Java C Objective C or another suitable mobile platform compatible programming language while the view definitions can be generated as an XML document for example. While not explicitly shown additional code for accessing the DBMS at runtime is generated and particular for interacting with the backend database its schema and the underlying data at runtime. The generated database access coding may be used to provide functionality and actions for the user to create read update and delete information and data from the database. In some instances the database access coding may act upon database objects representing real world based objects such as sales orders and invoices. Where associations between database objects exist such as a sales order object associated with a plurality of line item objects the application coding generated by the mobile application generator can be generated as appropriate based on the understood relationships defined by the database s schema and defined metadata.

Once the source code view definitions and additional coding is created a compiler may be used to generate executable mobile applications . In some instances the compiler may be used to compile different platform specific executable mobile applications based on user input or preference. In response to selection of a particular platform the compiler can access mobile platform specific rules to determine how the generated code should be compiled. The compiler can then compile and create the corresponding mobile applications . Alternatively two or more compilers may be used for different platforms. For example a first compiler may exist for iOS mobile applications while a second compiler may exist for Android mobile application.

As illustrated the mobile application can execute in any suitable environment and mobile platform. Based on the integrated database functionality when it requires access to a database the mobile application can submit a call to a pre defined RESTful API or via JDBC or any other suitable connection associated with the corresponding database management system DBMS . The DBMS can interpret the request and interact with its database tables as requested returning any response information or confirmation to the mobile application . As such the mobile application can interact directly with the DBMS and its associated databases based on the connections and integrated functionality generated during the runtime mobile application generation process.

At the mobile application generator can be initiated. In some instances the mobile application generator can be initiated and used from a client device such as a terminal laptop desktop or other suitable computer. In other instances the mobile application generator may be initiated and executed on a mobile device such as a tablet or smartphone. In some instances the mobile application generator may be a standalone program while in others the mobile application generator may be a server based application accessed remotely by a corresponding client or mobile device or locally by a user at the server.

At at least one database table available for use in a newly generated mobile application is identified. As previously described the mobile application generator can be associated with a database management system DBMS through which the mobile application generator can identify available database schema and tables for integration in the new mobile application. At a set of metadata defining at least a portion of the identified database table is retrieved. In doing so the mobile application generator can prepare source code for accessing i.e. using CRUD actions the corresponding database tables and their entries. At at least one database object can be associated with the to be generated mobile application to enable interactions with the underlying database.

At source code of the to be generated mobile application can be generated where the source code when compiled and executed will allow direct access to the database object for two tier interactions and accessibility. This can include specific calls to the DBMS and the particular database tables associated with the at least one database object. The source code can also provide for other mobile application functionality including basic actions and methods. Additionally view information for the mobile application is generated at . This can include an XML file for how database related information may be presented as well as a description of the mobile application s presentation. In some cases developers of the mobile application generator can update and or modify the automatically generated source code and or view information before compilation to create mobile applications with additional functionality and or design features. By allowing this modification the mobile application generator can generate simple and efficient applications with the required direct database functionality while allowing developers to define additional and advanced functionality through normal programming and design. Non technical users can create functionality applications to perform their required tasks while technical users can add detailed and advanced functionality to further enhance the application.

At a mobile application platform for which the mobile application will be compiled is identified. In some instances the particular mobile application platform may be identified earlier than illustrated herein including prior to s identifying the particular database tables for integration with the mobile application. Earlier selection of the mobile application platform may allow for specialization of coding for the selected platform where available. As illustrated the mobile application platform is selected after the source code and view information are generated but before the mobile application is compiled. When the mobile application platform is identified a corresponding platform based compiling rule set may be identified which can then be used to compile the mobile application accordingly at . Once the mobile application is compiled the compiled mobile application can be distributed or made available as appropriate e.g. to a centralized app store and executed by compatible mobile devices. In some instances the mobile application platform may be initially selected by a user such that the mobile application generator only produces the source code and view information for the desired platform.

Upon selection of the database tables and the mobile application generator can create the source code for executing the mobile application not shown as well as a design document providing information on how the application will be presented. That design is defined within the XML file . The XML file is easily editable to provide changes to the presentation e.g. changing field names etc. . The screenshot illustrates the executing mobile application providing information on sales orders and line items included in the database tables and . Data in the respective fields can be created read updated and deleted as appropriate. Here an overview screen provides information on individual sales orders included in the Sales Order table and allows a separate tab for the Line Item tables linked by a foreign key from within the Sales Order table .

The preceding figures and accompanying description illustrate example processes and computer implementable techniques. But environment or its software or other components contemplates using implementing or executing any suitable technique for performing these and other tasks. It will be understood that these processes are for illustration purposes only and that the described or similar techniques may be performed at any appropriate time including concurrently individually or in combination. In addition many of the steps in these processes may take place simultaneously concurrently and or in different orders than as shown. Moreover environment may use processes with additional steps fewer steps and or different steps so long as the methods remain appropriate.

In other words although this disclosure has been described in terms of certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure.

