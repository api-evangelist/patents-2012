---

title: Parallel image convolution processing with SVD kernel data
abstract: A method of image processing includes receiving camera data representative of an object, implementing, with a processor, a convolution operation on the camera data to generate filtered data representative of the object, the convolution operation being configured with singular value decomposition (SVD) kernel data, and storing the filtered data in a memory. Implementing the convolution operation includes applying the SVD kernel data in parallel to a plurality of subsets of the camera data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08917952&OS=08917952&RS=08917952
owner: Siemens Medical Solutions USA, Inc.
number: 08917952
owner_city: Malvern
owner_country: US
publication_date: 20121022
---
Image convolution is an operator used in digital image processing. Convolution is useful in for example image smoothing edge detection and correlation. Convolution may be represented as follows 

For a separable kernel defined as K x y K x K y the two dimensional image convolution operation may be efficiently implemented by applying the horizontal kernel K x and the vertical kernel K y separately. The one dimensional horizontal kernel is applied to each row of the image and the result is a row smoothed image I. The one dimensional vertical kernel is then applied to each column of the row smoothed image I. The algorithm complexity for separable kernels is thus simpler and on the order of m l n m n o. The dimension complexity is greatly reduced relative to direct implementation using a moving two dimensional window.

By way of introduction the preferred embodiments described below include methods systems instructions and computer readable media for parallel processing of image convolution operations. In one embodiment the image convolution operations are based on singular value decomposition SVD kernel data of a non separable kernel.

In a first aspect a method of image processing includes receiving camera data representative of an object implementing with a processor a convolution operation on the camera data to generate filtered data representative of the object the convolution operation being configured with singular value decomposition SVD kernel data and storing the filtered data in a memory. Implementing the convolution operation includes applying the SVD kernel data in parallel to a plurality of subsets of the camera data.

In a second aspect a non transitory computer readable storage medium has stored therein data representing instructions executable by a programmed processor for image processing. The instructions include computer code to receive camera data representative of an object apply singular value decomposition SVD kernel data to the camera data the application convolving the camera data with a non separable kernel represented by the SVD kernel data and generating filtered data representative of the object and store the filtered data in a memory. The instructions to apply the SVD kernel data are configured to apply the SVD kernel data in parallel to multiple rows or multiple columns of the camera data.

In a third aspect a system for image processing includes a first memory in which camera data representative of an object is stored a processor configured to implement a convolution operation on the camera data to generate filtered data representative of the object the convolution operation being configured with singular value decomposition SVD kernel data and a second memory in communication with the processor to store the filtered data. The processor is further configured to apply the SVD kernel data in parallel to a plurality of subsets of the camera data.

The present invention is defined by the following claims and nothing in this section should be taken as a limitation on those claims. Further aspects and advantages of the invention are discussed below in conjunction with the preferred embodiments and may be later claimed independently or in combination.

Systems methods and computer readable media are provided to smooth or otherwise filter images through image convolution implemented via parallel processing. Single instruction multiple data SIMD and other parallel processing techniques may be used to process image data. The image convolution is based on singular value decomposition SVD of a non separable smoothing or other kernel. With convolution tasks processed in parallel the disclosed methods and systems may provide fast convolution of large images notwithstanding the non separable nature of the kernel. Convolving the image with SVD kernel data may be parallel processed via the SIMD techniques such as Streaming SIMD Extension SSE techniques provided with processors available from Intel Corporation. The disclosed methods and systems may provide convolution performance about 10 times as fast as direct convolution using a moving window and multi thread techniques such as those supported by the Open Multiprocessing OpenMP application programming interface API .

The parallel processing of the disclosed methods and systems may apply one instruction on multiple subsets of image or camera data. Each subset may correspond with a respective row or a respective column of the camera data. In some cases the disclosed methods and systems use byte aligned buffers for efficient processing of the camera data. For example in embodiments using Intel Streaming SIMD SSE processing the buffers may be configured such that the camera data and the SVD kernel data is 16 byte aligned. Such byte alignment may support the SIMD processing as well as maintain cache efficiency during the numerous memory buffer copy and processing operations involved in the SIMD processing.

The method may include decomposition of the non separable smoothing or other kernel into the set of separable two dimensional kernels. In some cases such decomposition may be implemented separately from the disclosed methods. For example data indicative of the separable kernels may be predetermined. Such data may then retrieved or otherwise obtained during implementation of the disclosed methods.

The camera data may be representative of a variety of objects. One exemplary type of object is a collimator of an image acquisition system or scanner such as a single photon emission computed tomography SPECT system. In some embodiments a SPECT system may be configured in accordance with filtered data generated by the disclosed methods and systems. For example the filtered data may provide an accurate representation of the positioning of the holes of the collimator. The kernel image in such cases may be similar to a single hole of the collimator e.g. a hexagonal shaped image . The filtered data may be used during manufacturing calibration or other configuration of the SPECT system. Although described in connection with characterization of collimators the disclosed methods systems and computer readable media are not limited to convolution of any particular type of image. The convolution processes may be applied to contexts other than the configuration of a scanner having a collimator. The disclosed methods systems and computer readable media are well suited for image convolution for a variety of purposes involving other types of large images.

The disclosed methods are well suited for convolution of large images. In one embodiment the large image is representative of a collimator of a SPECT system. In one example the camera data of the collimator image may have dimensions of about 3744 5616. The resolution or size of the image may vary. The collimator image may be convolved with an kernel image configured to clarify the positioning of the holes of the collimator. The camera data and disclosed methods may be used to configure the SPECT system by generating a vector map that characterizes the collimator. The vector map may specify center locations of the holes of the collimator along with the angles or directions of the holes. The nature of the object may also vary. Any type of object may be represented by the camera data.

The camera data is obtained or otherwise received for image processing in an act . The camera data may be arranged in a two dimensional array of pixels. Other formats or arrangements may be used. The camera data may be indicative of grayscale or other intensity values for each pixel or element in the array. The intensity values may be configured as float type numbers. The camera data may thus be configured as pixel data. The camera data may be raw data e.g. raw projection data from an image acquisition system. In other cases various types of preprocessing operations are implemented on raw camera data before receipt of the camera data.

The act may include storing the camera data in a memory in preparation for processing. The memory may be a temporary storage location for the camera data. The memory need not be configured to accommodate the parallel processing of the disclosed methods. The configuration and other characteristics of the memory may thus vary.

Once the camera data is received an image convolution operation is implemented in an act to generate filtered data representative of the object. A kernel of the image convolution operation may be configured to smooth or otherwise filter the camera data. The image convolution operation is implemented via parallel processing of the camera data. In this example the parallel processing of the camera data is configured for single instruction multiple data SIMD processing. Further details regarding examples of SIMD processing are set forth below in connection with . The manner in which the camera data is parallel processed may vary.

The image convolution operation is configured with SVD kernel data. The SVD kernel data is representative of the kernel image to be convolved with the camera data. The kernel image may be non separable and thus not easily applied to the camera data. For example the kernel image may have dimensions of about 25 25. In collimator examples the kernel image may be similar to a single hole of the collimator e.g. a hexagonal shaped hole and thus not constitute a separable kernel. Separable kernel data is provided via decomposition of the kernel image as described below in connection with . The SVD kernel data is representative of a set of separable kernels. The SVD kernel data may be predetermined or generated before or during the act .

Each of the separable kernels is applied to the camera data via the parallel convolution processing of the disclosed methods. Implementing the convolution operation thus includes applying the SVD kernel data in parallel to a plurality of subsets of the camera data. For example each subset may correspond with a respective row or a respective column of the camera data as described below. For each separable kernel SSE or other SIMD techniques may be used to process multiple rows e.g. four rows and or multiple columns e.g. four columns together. A multi threading technique such as OpenMP may be used to process multiple four row and or four column groups in parallel. The procedure may then iterate over the other separable kernels serially.

The filtered data resulting from implementing the convolution operation is stored in a memory in act . The filtered data may be smoothed or processed to for instance reveal a pattern in the camera data. For example the pattern may be the arrangement of holes of a collimator. The disclosed methods are not limited to any particular pattern or to pattern recognition. The kernel image may be configured to provide other types of filtering. The nature of the smoothing or other filtering provided by the disclosed methods may vary.

The memory may be configured to support the parallel processing of the operation. For example the memory may include a buffer configured to accommodate a number of subsets of the filtered data. The buffer may be used to accumulate the products of the application of the SVD kernel data to the camera data. Alternatively or additionally the memory is configured to store the results of the image convolution after completion of the parallel processing.

The act may alternatively or additionally include storage of the filtered data in an act in connection with configuration of an image acquisition system. In some embodiments a SPECT system may be configured in accordance with the filtered data. A collimator of the SPECT system may be characterized by a vector map computed or based on or otherwise including or involving the filtered data. The collimator acts as a front end of the SPECT system to limit the direction of the photons. The collimator may absorb those photons e.g. gamma rays not aligned with holes of the collimator. Only those photons aligned with the holes can reach a detector of the SPECT system.

The camera data may be used to accurately determine the positioning of the holes. The filtered data may be used during manufacturing calibration or other configuration of the SPECT system.

The construction of the collimator may vary. For example the collimator may be configured with parallel holes or non parallel holes. In non parallel cases the filtered data indicative of the locations of the holes may be combined with data indicative of the direction or angle of the holes. For example the combination may be arranged in a vector map of the collimator that may in turn be used during image reconstruction from raw projection data generated by the SPECT system.

Additional steps may be included in the image convolution method of . For example the implementation of the convolution in the act may include the generation of one or more user prompts via a display or other user interface to allow an operator to select a kernel image for the image convolution operation. The user interface may also support initiation of the decomposition of the kernel image into a set of separable kernel images.

The singular value decomposition of a non separable kernel image K an m n matrix with m n may be expressed as a product of rotation vectors or matrices and a set of singular values K U V where Uis a column orthogonal matrix is a diagonal matrix with positive or zero singular values and Vis another orthogonal matrix. The decomposition may be written as follows 

As described below for each separable kernel K KHKV the parallel processing of the disclosed methods applies the horizontal kernel KHon multiple e.g. four rows of the input image at the same time and applies the vertical kernel KVon multiple e.g. four columns at the same time.

The decomposition may include generation of the rotation vectors or matrices Uand V and singular values in an act . Any one of a number of available algorithms or routines may be used to perform the SVD processing of the non separable kernel image to generate the rotation vectors and the singular values.

In this embodiment the SVD kernel data to be used in the convolution operation is generated in an act by calculating horizontal and vertical kernel data for the set of separable kernels. Based on the above formula for K each column vector uof Umn multiplied by square root over is a horizontal one dimensional kernel and the corresponding vertical one dimensional kernel is the column vector vof Vmultiplied by square root over . Such horizontal and vertical kernel data may be calculated after performing the SVD processing of the kernel image.

In other embodiments the set of separable kernels are predetermined for a given non separable kernel image. The horizontal and vertical kernel data may also be pre calculated.

In act the camera data is adjusted for compatibility with the parallel application of the SVD kernel data. The adjustment may be implemented at any time before the parallel processing of the disclosed embodiments is initiated. In some embodiments the camera data may be adjusted to include a number of rows and or columns to be compatible with the parallel application of the SVD kernel data. For example the number of rows and columns may be adjusted to be multiples of four so that parallel processing of four rows or columns can be implemented. The adjustment may add or remove rows or columns. In cases where rows or columns are added e.g. along an edge of the input image the added camera data may be zero intensity interpolated values extrapolated values or any other intensity level. Any number of zeros may be padded to the camera data. In cases where rows or columns are removed the removed camera data may be located along an edge of the input image. The resulting dimensions of the camera data are referenced below as land o.

The act is optional. In some cases the camera data need not be adjusted even if not compatible with the parallel processing. For instance the disclosed methods may parallel process a number of rows and columns of the input image as possible and then process any remaining rows individually.

In act an amount of space e.g. a number of buffers in one or more memories is allocated to facilitate the implementation of the convolution operation. The memory buffers may be used to store the camera data the SVD kernel data any intermediate data generated during the parallel processing and or final or output data. The allocation of memory space may occur at any time before the initiation of the parallel processing. The memory buffers for the camera data the SVD kernel data and other data may be allocated at the same time or at different times.

In one example a pair of two dimensional memory buffers is allocated for the input image related data such as the camera data which are referenced below as image buffers Iand I. The image buffers may be configured to facilitate single instruction multiple data SIMD or other parallel processing. For example the image buffers may be byte aligned buffers such as 16 byte aligned buffers with lrows and ocolumns to handle the processing of the camera data. The 16 byte alignment may be used to support Intel Streaming SIMD Extension SSE or other parallel processing during the convolution operation. Other ways in which the addresses of the memory buffers or memory space correspond with the size of the floating point values may be used.

The memory buffer allocation may also include allocating a pair of memory buffers to hold the SVD kernel data. In this example the pair of memory buffers is configured to hold the horizontal and vertical kernel data respectively. For example the horizontal and vertical kernel memory buffers may be one dimensional memory buffer with dimensions and respectively to hold the horizontal and vertical kernel data. The horizontal and vertical kernel memory buffers are referenced below as Band B respectively. The kernel memory buffers may also be byte aligned e.g. 16 byte aligned to support the parallel processing e.g. SSE or other SIMD processing .

Another one dimensional memory buffer may also be allocated at this time to support the convolution operation calculations. The convolution memory buffer may be byte aligned e.g. 16 byte aligned with the size 4 n to hold four rows of the input image data or camera data. The size supports the horizontal or row convolution as described below.

In act the kernel memory buffers Band Bare filled using the values of the horizontal and vertical kernels KHand KV respectively. The kernel memory buffers may be filled with the SVD kernel data in a manner that supports the parallel processing e.g. SSE or other SIMD processing . The SVD kernel data may be repeated within the kernel memory buffer so that the kernel data may be applied to multiple subsets of the camera data in parallel. An example for SVD kernel data with three elements is shown in . The dimension i.e. three of the separable kernel data may vary from the example shown in accordance with the dimension of the non separable kernel image.

The kernel memory buffers may be filled at a different point in the procedure. For example the kernel memory buffers may be filled upon completion of the SVD processing in the acts .

In the embodiment of the generation of the SVD kernel data and or filling of the kernel memory buffers also includes determining in an act whether to disregard a respective separable kernel of the set of separable kernels. The determination may be based on whether a singular value of the respective kernel is negligible. One of the separable kernels may be disregarded by removing the separable kernel from the convolution operation thereby reducing the computations. The determination may analyze whether the singular value can be ignored or otherwise removed from the convolution operation via a comparison with or relative to the largest singular value and or the resolution or accuracy of the processor or processing system e.g. for floating point numbers used to implement the convolution operation.

In one embodiment the comparison to determine whether SVD kernel data is removed from the processing is based on both the largest singular value and or the floating point number accuracy. For example a condition for inclusion of the SVD kernel data may be specified as follows 0.5 square root over 1 where m and n are the kernel dimensions is the singular value with the largest absolute value and is the difference between 1 and the smallest value greater than 1 that is representable for the floating number data type. Any separable kernel for which the condition is satisfied may be ignored or otherwise removed from the convolution operation.

In preparation for the convolution operation the convolution buffer may be filled with the camera data in act . In some embodiments e.g. those implementing SSE and other SIMD parallel processing multiple rows e.g. four rows of the input image data or camera data are stored in the convolution buffer. One example of the manner in which the camera data is stored in the convolution buffer is shown in which depicts four rows of an input image having three columns.

In the embodiment of convolution of the camera data is implemented in an act . In this example the camera data is convolved with each separable kernel Kwhose corresponding singular value cannot be ignored. For each such separable kernel the convolution operations are applied to the camera data in the convolution buffer containing the four rows of input image data. For example Intel SSE operations may be used to implement the SIMD parallel processing. Intel SSE operations include intrinsic instructions for addition subtraction and multiplication operations in parallel. The separable kernels may then be applied serially e.g. after finishing the application of one separable kernel to the entire camera image then another separable kernel is applied.

Each convolution operation instruction e.g. add multiply etc. is applied to multiple subsets of camera data in parallel. Multiple pixels may thus be processed at the same time. Each subset corresponds with a respective row or a respective column of the camera data. Applying the SVD kernel data in parallel comprises implementing a single instruction multiple data SIMD operation on multiple rows or multiple columns of the camera data. For example each SSE instruction is applied to four pixels at the same time.

In the embodiment of implementing the convolution operation in the act includes an iterative SIMD application of the horizontal kernel data to a respective number of rows e.g. four rows of the camera data to generate row smoothed data in act which may include the application of one dimensional kernels to multiple groups of rows or columns in parallel using multithreading techniques e.g. OpenMP storage of the row smoothed data in an intermediate image buffer in act and application of vertical kernel data to a respective number of columns of row smoothed data to generate data indicative of individual SVD contributions to the filtered data in act . The parallel application of the horizontal and vertical kernel data may be implemented via OpenMP techniques. The SSE or other SIMD processing techniques are used to perform one dimensional convolution on multiple subsets of the camera data e.g. four rows of camera data.

In one example the one dimensional convolution of the act is concurrently applied to the four rows of camera data in the convolution memory buffer. After the one dimensional convolution is complete the row convolved data e.g. row smoothed data is copied in the act to the two dimensional image memory buffer I. The copying may be implemented in a manner that corresponds with the reverse of the memory transfer operation shown in . The vertical one dimensional convolution may be concurrently applied in act on four columns of the row convolved camera data stored in the memory buffer I.

The data indicative of the individual SVD contributions may then be stored in act in an aggregate image buffer e.g. the memory buffer I . In some embodiments such storage of the data indicative of individual SVD contributions is achieved by iteratively accumulating or summing the contributions in an act the data indicative of the individual SVD contributions in the aggregate image buffer. The intrinsic SSE addition operation or other SIMD operation may be used to concurrently sum four pixels of the convolved data.

The order in which the acts of are implemented may vary from the example shown. For example the memory buffers may be allocated or otherwise assigned or established before the decomposition of the non separable kernel image.

Some of the acts may be implemented in parallel or otherwise contemporaneously with one or more other acts. Such parallel processing may be provided in addition to the above described parallel processing involving multiple rows or columns of the camera data. For instance during the implementation of the convolution operation one or more multithreading techniques may be used. In one example in which a processing system used to implement the disclosed methods has a dual core or multi core CPU when implementing the horizontal row convolution a first computing core or other processor may be used to compute or convolve the first four rows of the camera data and a second computing core or other processor may be used to compute or convolve the next four rows of the camera data. The vertical convolution computations may be processed in a similar manner. Further or different parallel processing may be incorporated into the disclosed methods if the processing system has a different number of processing cores or other processors.

The OpenMP Application Programming Interface API may be used to deploy such multithreading techniques. The OpenMP may be used to implement the multi threaded processing via a shared memory computing model. Other multithreading techniques may be used including for example GNU techniques.

The camera is configured to generate the camera data. The camera may be any type of imaging system. In some cases the camera data is generated via projection. The camera may include one or more imaging modalities or scanners. In this example the camera is configured to capture photographic data representative of a collimator of the SPECT imaging system which may also include a processor and a memory . The processor and the memory may be integrated with one or more of the other processor s or memory ies of the system to any desired extent.

In the embodiment of the camera data is stored in the memory which may be configured as a database or other data repository. The configuration of the memory may vary. For example the memory may include any number of memories or data stores. The memory may also be used to store data indicative of one or more non separable kernels to be applied in the convolution operations. Alternatively or additionally data indicative of the SVD kernel data generated from such non separable kernels may be stored in the memory .

The SPECT imaging system and the memory may be disposed remotely from one or more other components of the system . For example the SPECT imaging system need not be located at the site of the processor . The SPECT imaging system and the memory may be communicatively coupled or connected with the processor via any communication technology such as a network.

The processor is in communication with one or more of the above described components of the system to filter e.g. smooth the camera data based on the SVD kernel data. The processor may also generate the SVD kernel data. The user input may be used to select a non separable kernel image or otherwise direct the generation of the SVD kernel data. The processor may also configure the SPECT imaging system based on the results of the convolution operations. The processor may access the camera data stored in the memory or otherwise receive the camera data captured by the camera . The processor may be configured to implement one or more image convolution procedures to smooth filter or otherwise process the camera data with the kernel data. Once the intensity data is smoothed or otherwise processed the processor may then generate a representation of the filtered camera data via the display . The display is then operable to display the representation during for instance a SPECT configuration procedure.

The camera data the SVD kernel data and other data may be obtained via any communication technology. Alternatively or additionally the processor may be integrated with the SPECT system to implement one or more processing tasks of the SPECT system in addition to collimator characterization and or other configuration tasks.

The processor may be configured to allocate or establish a number of memory buffers in the memory to support the convolution operations. The memory buffers may include one or more intermediate memory buffers to hold one or more subsets of the camera data during processing as well as one or more aggregate memory buffers to facilitate the accumulation of the results of the convolution operation as described above. The buffers may be one dimensional or two dimensional as described above. In the embodiment of the memory is configured with one or more kernel data buffers one or more image data buffers and one or more convolution buffers . For example one of the image data buffers may be an intermediate memory buffer and one of the image data buffers may be an aggregate memory buffer. One or more of the buffers may be configured as byte aligned buffers or otherwise configured to facilitate SIMD or other parallel processing.

As described above the processor may be configured to apply horizontal kernel data to respective rows of the camera data to generate row smoothed data store the row smoothed data in one of the image data buffers apply vertical kernel data to respective columns of the row smoothed data to generate data indicative of individual SVD contributions to the filtered data and store the data indicative of individual SVD contributions in another one of the image data buffers e.g. an aggregate image data buffer . The processor may thus accumulate the data indicative of individual SVD contributions in the aggregate image buffer.

The processor and or the processor is a general processor central processing unit control processor graphics processor digital signal processor three dimensional rendering processor image processor application specific integrated circuit field programmable gate array digital circuit analog circuit combinations thereof or other now known or later developed device for determining position and or generating images. The processor is a single device or multiple devices operating in serial parallel or separately. The processor may have any number of processing cores distributed over one or more devices. For example the disclosed methods may be implemented by a pair of central processing units CPUs having a total of four processing cores. The processor may be a main processor of a computer such as a laptop or desktop computer or may be a processor for handling some tasks in a larger system such as in an imaging system.

The memory and or the memory and or the memory is a graphics processing memory video random access memory random access memory system memory cache memory hard drive optical media magnetic media flash drive buffer database combinations thereof or other now known or later developed memory device for storing data or video information. The memory is part of an imaging system part of a computer associated with the processor part of a database part of another system or a standalone device.

The acts described in connection with may be implemented via instructions executed by the programmed processor . Data representative of the instructions may be stored in the memory or any other memory. The acts may be implemented by one or more processors and one or more memories in addition or alternative to the processor and the memory . The instructions may include computer code to direct the processor or other processor s to perform the acts described above. Additional fewer or different operations or acts may be implemented. For example the convolution operations may include the decomposition of the non separable kernel.

The memory or other memory may include a non transitory computer readable storage medium storing data representing instructions executable by the programmed processor . The instructions for implementing the processes methods and or techniques discussed herein are provided on computer readable storage media or memories such as a cache buffer RAM removable media hard drive or other computer readable storage media. Computer readable storage media include various types of volatile and nonvolatile storage media. The functions acts or tasks illustrated in the figures or described herein are executed in response to one or more sets of instructions stored in or on computer readable storage media. The functions acts or tasks are independent of the particular type of instructions set storage media processor or processing strategy and may be performed by software hardware integrated circuits firmware micro code and the like operating alone or in combination. Likewise processing strategies may include multiprocessing multitasking and parallel processing as described above.

In one embodiment the instructions are stored on a removable media device for reading by local or remote systems. In other embodiments the instructions are stored in a remote location for transfer through a computer network or over telephone lines. In yet other embodiments the instructions are stored within a given computer CPU GPU or system.

Additional fewer or different components may be provided. For example a network or network connection may be provided such as for networking with a medical imaging network or data archival system. One or more user inputs or other user interfaces may be provided.

The methods systems and computer readable media described above may be used to perform a convolution between a collimator image and a smoothing kernel to determine the positioning of the collimator holes. The performance of the disclosed convolution operation is compared to a direct convolution of the image and the smoothing kernel using a moving window written in the C programming language. Using the SVD kernel data and Intel SSE based parallel processing decreases the processing time of the image convolution from over 100 seconds to about 3 seconds. The disclosed convolution operation with separable kernels also exhibits a significant improvement in processing time e.g. a difference of about an order of magnitude over a direct convolution using multithreading techniques alone.

In collimator image convolutions a number of aspects of the disclosed methods and systems may lead to performance improvements beyond those arising from the parallel processing aspects e.g. SIMD processing with byte aligned memory buffers . For example performance may be improved via applying only some of the separable filters generated from the SVD processing of the kernel image. In the above case only 11 out of a total of 25 separable filters are applied due to the removal of the other separable filters as described above. Performance may alternatively or additionally be improved due to memory e.g. cache efficiency improvements arising from SVD processing and or SIMD processing. The SIMD processing e.g. Intel SSE processing may also lead to performance improvements through efficient use of hardware resources. For example the computations may be efficiently implemented in memories having 128 bit registers.

While the invention has been described above by reference to various embodiments it should be understood that many changes and modifications can be made without departing from the scope of the invention. It is therefore intended that the foregoing detailed description be regarded as illustrative rather than limiting and that it be understood that it is the following claims including all equivalents that are intended to define the spirit and scope of this invention.

