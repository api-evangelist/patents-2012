---

title: Web-based interaction with a local system
abstract: Systems, methods, and computer program products for facilitating web-based interaction with a local system are disclosed. Such systems, methods, and computer program products provide an approach that allows a web client within in a web browser environment to access local hardware and local software—via a web server contained in the local system—in a local computer system. In response to a user input, the web client directs local hardware and local software to perform actions (e.g., writing files and taking pictures). Information related to such actions is returned to the web client via the local web server. The local computer system may be remotely located from the web client and such returned information may be stored and/or executed at a remote site (e.g., cloud database). Security layers may be provided to authenticate the user as well as user permissions for accessing the local computer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09032303&OS=09032303&RS=09032303
owner: Microsoft Technology Licensing, LLC
number: 09032303
owner_city: Redmond
owner_country: US
publication_date: 20120228
---
The present disclosure generally relates to remote access interfaces and more particularly to systems methods and computer program products for facilitating web based interaction with a local computer system.

Developers typically design Internet websites to be platform agnostic. This is done using web based programming models such as HyperText Markup Language HTML HyperText Markup Language Ver. 5 HTML5 or Cascading Style Sheets CSS representational state transfer web services the JavaScript scripting language from Oracle America Inc. of Redwood shores California and the like. Such agnostic platform design allows all website visitors i.e. users to have a consistent experience regardless of the web browser application computer operating system and hardware platform employed by such various users. Similarly web based applications e.g. Flash games video players audio players mortgage calculators etc. are designed such that the programming model of the web based application has a consistent experience for all users across all computing platforms. Alternatively the developer may choose to limit the computing platform s the web based application may be accessed from e.g. by enforcing a smartphones only or a tablet computers only policy .

Generally web browsers and web browser environments provide an isolated Consistent rendering and application programming interface API for web based applications that does not provide access to the computing device s underlying and or local system device drivers services and or operating system APIs. Rather web based programming models provide an isolated environment in which web based applications can provide a defined set of functionality across a variety of computing device platforms. This is because if these web based applications software code were freely allowed to download and execute on the user s computing device the software code could maliciously expose the memory personal data and or operating system resources of the local computing device. Thus in order to avoid compromising the user s computing device or even remote computing devices in network communications with the user s computing device from unknown untrusted and or untested software code these web based applications often run in an isolated environment within the web browser environment.

Put another way the isolated environment described above prevents web based applications from accessing or making use of any underlying operating system services e.g. drivers APIs reading and writing files controlling input devices etc. . Such an isolated environment implemented by the above mentioned web based programming models allows web based applications to operate with limited tightly controlled resources. Thus network access and access to the host system and operating system services are typically unavailable and or prohibited.

This summary is provided to introduce a selection of concepts. These concepts are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is this summary intended as an aid in determining the scope of the claimed subject matter.

The present disclosure provides methods systems and computer program products that facilitate web based interaction with a local computer system. In an embodiment a component detects a user input made within a web based application i.e. client or client application . The client is located within a web browser environment. The user input indicates a user desired action at a local system such as taking a picture using a local system s camera. In an embodiment the local system is remotely located from the user s computing device. In response to the user input the client causes its local system interface component to transmit a request signal based upon the user input to the local system. The client receives a response signal from the local system which contains information related to a requested action specified by the user input.

In an embodiment the user input initially requests an action to be taken on local hardware and local software. Data is then transferred to a web based service and a component of the client determines whether the client needs to contact a remote server. If communication with a remote server is required a remote server interface component of the client sends a signal containing desired information to the remote server.

In yet another embodiment security layers may be provided when a module determines whether the requested action based upon the user input is a permissible action. Such security layers authorization process es may be implemented via a single step or multiple steps. Further such authorization process es may be performed on a per application basis per device basis or all or nothing basis.

Further features and advantages of the present disclosure as well as the structure and operation of various aspects of the present disclosure are described in detail below with reference to the accompanying drawings.

The present disclosure is directed to methods systems and computer program products for facilitating web based interaction with a local computer system.

Referring to a block diagram illustrating an interrelationship between exemplary components that facilitate web based interaction with a local system according to various embodiments of the present disclosure is shown. Configuration depicts local system containing a local web server local hardware and local software accessed by a web client . Local web server communicates with local system interface local hardware and local software . Web client contains software modules for controlling operations of remote server interface and local system interface . Remote server interface communicates with remote server and local system interface .

In various embodiments the methods systems and computer program products of the present disclosure provide an isolated web based application also referred to as web client operating within a web browser environment capable of accessing local system . Interaction is accomplished via a local system interface located within web browser environment that is located within web client in communication with local web server which is located at and operated by local system . For the purposes of this disclosure local system is the computing device or devices that web client accesses.

In an embodiment local system preferably includes computing devices equipped with local software and or local hardware e.g. cameras scanners global positioning system GPS antennae motors heat light motion or other sensors etc. . In an embodiment local system preferably includes computing devices capable of locally reading and writing data e.g. media player audio video player etc. . In an embodiment web client communicates with remote server to facilitate a web based service as specified by user input from user at a user interface screen of web client . In yet another embodiment security layers are provided to authenticate user requests i.e. user input thereby controlling access to local system . The authentication process limits access to local system via local web server .

In an embodiment web client operates within web browser environment . In an embodiment web browser environment is a web browser optimized for operating on a portable electronic device e.g. mobile phone slate laptop etc. . In an embodiment web browser environment operates on a stationary electronic device e.g. standalone computing device enterprise computing device workstation etc. . In such an embodiment web client includes one or more local system interface modules and remote server interface modules. These modules communicate with one or more local systems and remote servers respectively. Modules generate and send signals in response to directives from web client and receive signals from local systems and remote servers respectively.

In an embodiment modules are portions of software code contained within web client for facilitating communication with their designated targets i.e. local systems and remote servers . In an embodiment local system interface and remote server interface are part of an API designed to allow web client within web browser environment to access specific local system services. In an embodiment local system interface module and remote server interface module may be part of web client . In an embodiment local system interface contains selected portions of an API required to communicate with local system and or remote server . That is when a developer has designed web client to interact with only a portion of local system it is unnecessary to implement all portions of software code to communicate with local system .

In an embodiment web client utilizes local system interface to communicate with local system . Local system interface generates and transmits request signals to local web server located on and operated by local system . In an embodiment local system interface provides additional APIs that facilitate interaction with local system without additional developer knowledge of the local system configuration e.g. HTML HTML5 CSS representational state transfer web services JavaScript etc. .

In an embodiment local web server is a component of local system that allows access to local hardware and local software of local system . Local hardware may include hardware capable of being operated at least in part by a computing device. Local hardware may include internal and external input and output devices of local system e.g. cameras scanners global positioning system antennae motors sensors etc. In an embodiment local hardware may include device drivers and APIs associated with the above listed devices. Local software may include all software capable of running on a computing device e.g. operating system contained on local system and its services APIs third party application programs other computing services etc. . In an embodiment local software includes a digital modifiable calendar. In yet another embodiment local software includes a service that facilitates reading and writing files contained on local hardware .

In an embodiment local web server is a component of an operating system executing on local system . In an embodiment local web server may be a separate software program from the operating system provided by the same and or different developers of the operating system. In an embodiment local web server accesses local hardware and local software via application development models that have direct knowledge of the operating system e.g. C C Win32 MFC .NET Framework APIs exposed through software development kits etc. .

In an embodiment local web server is capable of returning response signals to local system interface of web client . That is local web server sends signals to local hardware and local software which cause local hardware and local software to perform the desired action as specified by user input . Local hardware and local software returns information related to the desired action to local web server . Local web server then generates response signals containing information related to the desired action which was carried out by local hardware and local software . Response signal is sent by local web server to local system interface located at web client in web browser environment . These software modules allow APIs of web client in web browser environment to access local system and utilize the local system services of local hardware and local software .

Referring to a flowchart illustrating an exemplary process for facilitating web based interaction with a local system according to an embodiment of the present disclosure is shown. In step a user input is received at web client . In an embodiment user input is from a user indicating a desired action to initiate via the graphical user interface GUI of web client . As will be appreciated by those skilled in the relevant art s after reading the description herein user input may be communicated to web client by a computing device remotely located from web client . 

In step web client utilizes local system interface to communicate with local system . That is local system interface generates and transmits one or more request signals to local web server located on local system .

Then in step local web server returns one or more response signals to local system interface of web client . That is local web server causes local hardware and or local software to perform the desired action as specified by input . Local hardware and local software returns information related to the desired action to local web server . Local web server then generates response signals containing information related to the desired action which was carried out by local hardware and local software .

As will be appreciated by those skilled in the relevant art s after reading the description herein user input as described herein may also be a non user initiated action. That is for example web client may be a GPS enabled application executing within web browser environment with a timer that continuously queries to obtain current GPS location via a remote API call to local system i.e. local hardware .

As will be apparent to one skilled in the relevant art s after reading the description herein code implementing process and processes described below that facilitates web based interaction with a local system may be part of a standard version of a web client application that ships from a developer or may be later added as part of an update or patch . Further a web client application utilizing an embodiment of the present disclosure advantageously does not need to modify the existing web browser environment . That is in an embodiment the present disclosure does not change the way that the browser interacts with local system through existing web standards e.g. Hypertext Transfer Protocol HTTP Extensible Markup Lnaguage XML RESTful services etc. . Thus the present disclosure overcomes the sandboxing problem where the browser defines the local machine API surface that web based applications may utilize forcing device developers to modify the browser should they wish to provide web applications access to additional hardware software modules on local device . More specifically the sandboxing problem is overcome in an embodiment by leaving the browser intact and instead configuring modules to provide an interface to local system or remote server respectively to expose the additional functionality of local hardware software to the web browser based application .

In one embodiment process in provides access to local system via a representational state transfer REST API set.

Referring to a flowchart illustrating an exemplary process for facilitating web based interaction with a local system according to an embodiment of the present disclosure is shown. More specifically process illustrates an example method of taking a picture with a web camera located within local hardware according to the present disclosure.

In step in response to a user input accepted at web client within web browser environment a picture is saved to a web based service. In an embodiment in addition to communicating with local system the user may also access a remote server . In an embodiment remote server is a computing device comprised of a private server accessible by only user . In one embodiment remote server is a computing device comprised of one or more public servers hosting public web based services such as media sharing sites e.g. FLICKR social media services e.g. FACEBOOK remote data back up services e.g. DROPBOX and location based services e.g. FOURSQUARE .

In step web client communicates with local system in response to user input by causing local system interface to generate and transmit a request signal to local web server .

In step in response to user input of user local web server receives a request signal from local system interface and thereby causes the web camera located at local hardware of local system to take a picture. This information is collected at local web server and response signal containing the information is sent back to web client . In an embodiment the only information sent back to web client is the picture taken by the web camera. In an embodiment additional information concerning completion of operation s is contained in response signal . In yet another embodiment only a portion of the picture is returned to web client in response signal . Similarly for embodiments where a requested action does not involve taking a picture e.g. determining a location of local system reading and or writing a file and or utilizing local hardware output devices response signal contains all some none or a portion of information accessed and or generated at local system .

In step web client determines based on user input whether it needs to communicate with remote server remotely located from web browser environment to save the picture to remote server of a web based service. If it is not necessary for web client to communicate with remote server an output signal is sent to web client indicating to user that the requested action specified by user input has been completed in step . Otherwise in step response signal is transmitted from local system interface to remote server interface . That is local system interface module transmits at least a portion of response signal containing the picture to remote server interface .

In response remote server interface sends a signal containing the picture to remote server in step . In an embodiment remote server interface provides additional APIs that facilitate interaction with remote server without requiring additional developer knowledge of the configuration of remote server . In an embodiment this is accomplished by providing additional APIs for web based development models i.e. HTML HTML5 CSS RESTS JavaScript etc. . After the picture has been saved to remote server of a web based service web client notifies user that the requested action has been completed in step .

Referring to and A B flowcharts illustrating exemplary processes for facilitating single step and multi step security methods according to embodiments of the present disclosure are shown. That is processes and relate to security measures for preventing unauthorized access to local system . In an embodiment access is restricted to local system via APIs providing access to a limited set of local hardware and local software . In an embodiment web client determines whether the action requested by user input will generate an authorized request signal . In an embodiment web client determines whether the action requested by user input is recognized by local system interface . If request signal is not an authorized signal web client will not permit requested action.

The requested action may be authorized either in a single step as in process or in multiple steps as in process . Where single step security process is utilized a determination is made in step as to whether permission has been granted to web client to access local hardware and or local software . In alternate embodiments permission may be granted by an administrator of a system containing web client local system and or an operating system associated with any such computing devices. Permission may also be granted at an API level e.g. oAuth or authentication using a well known token such as API Key and Permission Flags etc. . In an alternate embodiment permissions may be determined and granted by web client based upon digital signatures by the developer which verifies web client is safe to interact with certain classes of local systems .

In single step security process if permission is granted for web client to access local hardware and or local software local web server allows access to local hardware and or local software in step . If web client does not have permission local web server denies access to local hardware and or local software in step . In an embodiment web client may be configured to display a permission status to user via a GUI.

In multi step security process permission is provided to the user at multiple stages and or access credentials are checked at multiple stages of communication between web client and local system . When at least two steps are utilized to ensure security of local system is not compromised it is first determined whether web client has permission to access local system in step . If permission is not granted local web server denies access to local hardware and or local software in step . Where permission is granted for web client to access local hardware and or local software local web server allows access to local hardware and or local software in step . Access credentials are then provided to local web server in step thereby allowing local web server to access local hardware and or local software in step . In such an embodiment the two level authentication process is employed as follows A first authentication level preferably includes web client wherein web client files e.g. OPC CAB ZIP or EXE are digitally signed by the developer to verify that the application is safe to run and a second authentication level occurs at an API level e.g. oAuth or authentication using a well known token such as an API Key or Permission Flags .

Referring to authentication may be handled at least in part on a per device basis and or a per application basis respectively. Per device based security process allows or denies access to specific devices in local hardware . For example authentication process may occur at local web server which then determines at step if web client may access a web camera i.e. a local hardware on local system . In step access to the web camera in local hardware is allowed only if permission has been granted. Otherwise in step permission is denied. In alternate embodiments permission is granted to access only one device in local hardware only specific devices in local hardware and or only specific devices by a limited set of web clients .

In an embodiment per application based security process operates in a similar fashion to per device based security process . However per application based security process allows or denies access to specific applications and or services in local software . For example process may determine if local web server is allowed access to calendar application residing in local software in step . If so process proceeds to step otherwise process proceeds to step . In alternate embodiments permission is granted to access only one application in local software only specific application s while other specific applications e.g. operating system kernel are excluded and or specific applications by a limited set of web clients .

Various embodiments of the present disclosure utilize some or all of the above described security processes. When determining whether web client has permission to perform a specific task an embodiment may verify whether local web server in response to receiving request signal is authorized to communicate with local hardware and or local software .

Referring now to a flowchart illustrating an exemplary process for facilitating web based interaction with a local system according to an embodiment of the present disclosure is shown. In process steps are executed in a similar fashion to steps described above respectively. Then in step process determines whether web client desires to communicate with remote server which may be remotely located from web browser environment . If step is positive local system interface transmits response signal from local web server to remote server interface and remote server interface sends at least a portion of response signal to remote server as shown in step . Otherwise in step an output signal is sent to wet client indicating to user that the requested action specified by user input has been completed.

Referring now to a block diagram illustrating an interrelationship between exemplary components that facilitate web based interaction with a local system according to an embodiment of the present disclosure is shown. Configuration illustrates it is not necessary for all components of the present disclosure to reside at the same location. That is in the embodiment of configuration remote server is at location e.g. a server room in California . User input is entered at web client residing within web browser environment at location e.g. a laptop computer in a coffee shop in New York City . Local system is at location e.g. a computing device in Texas . In other exemplary embodiments some or all of location location and location may reside within a single address.

Referring to a block diagram illustrating an interrelationship between exemplary components that facilitate web based interaction with a local system according to an embodiment of the present disclosure is shown. That is configuration includes specific commands that access local system . In an embodiment JavaScript developers use XMLHttpRequest to local API service for making calls to local web server . This allows web client i.e. HTML CSS JavaScript based application to access local device services e.g. WriteFile to persist content from the running application a camera API to capture an image from an on device camera GPS Location Framework to obtain a current location etc. . In such an embodiment XMLHttpRequest to remote web service and the URL http localhost services camera capture are used to obtain a photo from a web camera on local system . To upload a captured picture to a cloud hosted web service e.g. the FLICKR service from Yahoo Inc. of Sunnyvale Calif. the XMLHttpRequest to remote web service uses URL http api.flickr.com services upload . In alternate embodiments other operating system APIs and device drivers may be accessed and utilized in a similar manner as described herein above.

Referring now to a block diagram of an example computing device or computer system that can be configured to implement various aspects of time managing emails in accordance with one or more embodiments of the present disclosure is shown. In an embodiment computing device implements local system or any other component of configuration .

Computing device includes one or more processors or processing units one or more computer readable media which can include one or more memory and or storage components one or more input output I O devices and a bus that allows the various components and devices to communicate with one another. Computer readable media and or one or more I O devices can be included as part of or alternatively may be coupled to computing device . Bus represents one or more of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port a processor or local bus and so forth using a variety of different bus architectures. Bus may include wired and or wireless buses.

Memory storage component represents one or more computer storage media. Memory and or storage may include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . Memory and or storage may include fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk etc. .

The techniques discussed herein may be implemented in software with instructions executed by one or more processing units . It is to be appreciated that different instructions can be stored in different components of computing device such as in a processing unit in various cache memories of a processing unit in other cache memories of device not shown on other computer readable media and so forth. Additionally it is to be appreciated that the location where instructions are stored in computing device may change over time.

One or more I O devices allow a user to enter commands and information to computing device and also allow information to be presented to the user and or other components or devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card and so forth.

Various techniques may be described herein in the general context of software or program modules. Generally software includes routines programs objects components data structures and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media may be any available medium or media that can be accessed by a computing device. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

 Computer storage media include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM Flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices and or any other medium which can be used to store the desired information and which can be accessed by a computer.

 Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier wave or other transport mechanism. Communication media may also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.

Generally any of the functions or techniques described herein can be implemented using software firmware hardware e.g. fixed logic circuitry system on a chip manual processing or a combination of these implementations. The terms module and component as used herein generally represent software firmware hardware or combinations thereof. In the case of a software implementation the module or component represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code may be stored in one or more computer readable memory devices. The features of the present disclosure described herein are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

As will be apparent to one skilled in the relevant art s after reading the description herein computing device may be configured as any number of computing devices such as a game console a portable media player a desktop a laptop a server a notebook computer a tablet computer a PDA a mobile computer a smart telephone a mobile telephone an intelligent communications device or the like.

While various aspects of the present disclosure have been described above it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art s that various changes in form and detail can be made therein without departing from the spirit and scope of the present disclosure. Thus the present disclosure should not be limited by any of the above described exemplary aspects but should be defined only in accordance with the following claims and their equivalents.

In addition it should be understood that the figures in the attachments which highlight the structure methodology functionality and advantages of the present disclosure are presented for example purposes only. The present disclosure is sufficiently flexible and configurable such that it may be implemented in ways other than that shown in the accompanying figures.

Further the purpose of the foregoing Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists engineers and practitioners in the relevant art s who are not familiar with patent or legal terms or phraseology to determine quickly from a cursory inspection the nature and essence of this technical disclosure. The Abstract is not intended to be limiting as to the scope of the present disclosure in any way.

