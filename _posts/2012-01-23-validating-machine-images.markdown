---

title: Validating machine images
abstract: In a resource-on-demand environment, virtual machine images are validated before use. A provider or source of a virtual machine image may generate a manifest, indicating executable components of the machine image. Before use, a created virtual machine may compare its executable components with those specified by the manifest. To ensure authenticity, the manifest may be associated with a signature, and the virtual machine may use the signature to verify the manifest and the source of the machine image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09009840&OS=09009840&RS=09009840
owner: Amazon Technologies, Inc.
number: 09009840
owner_city: Reno
owner_country: US
publication_date: 20120123
---
Internet or web based services are increasingly based on multi tenant cloud based infrastructure services also referred to as Infrastructure as a Service IaaS or resource on demand services. Resource on demand or IaaS services are typically provided by data centers that host large numbers of physical servers and associated resources. The physical servers are managed by virtualization software which dynamically creates virtual servers for requesting customers. Using virtualization a single hardware server can host multiple virtual servers. Individual virtual servers are referred to as server instances or virtual machines and are created based on virtual machine memory images that are provided or specified by customers.

In an IaaS environment virtual machine images may be used to specify the guest operating system and software applications that will run on behalf of customers. Virtual machine images are highly configurable and are usually built by extending and customizing an existing virtual machine image. For example a customer could take an existing image that contains an installation of an operating system and then install their own software product configure it and then transform the result into a new image that is shared with a customer community.

Customers have the option to store and run their images privately or they can share such images with other customers. In some cases customers may make virtual machine images public to be shared by the customer community at large. This requires a certain level of trust by consumers of the images with respect to the image producers and any other parties who may have been involved in conveying the images to the consumers. For example a consumer should trust that the producer did not install malware or open a covert channel into the operating environment. The consumer should also trust that the machine image was protected properly by intermediate parties to prevent a rogue employee or third party from maliciously tampering with the machine image.

This disclosure describes systems devices and techniques for verifying the sources of machine images and for ensuring that machine images have not been maliciously tampered with by unauthorized parties.

A machine image that is to be distributed to and used by other parties is inventoried to produce an image manifest. The image manifest lists the executable components or processes of the machine image. The image manifest is digitally signed by the producer of the machine image to create a digital signature that is made available to users or consumers of the machine image. Consumers can verify the integrity of a particular manifest by checking it against the signature. In some environments a cryptographic certificate may allow the consumer to determine the identity of the party that signed the manifest.

Prior to boot up of a virtual machine based on the machine image or during initialization of the virtual machine the virtual machine may be inventoried to identify its executable components. The results of the inventorying may be compared to the image manifest associated with the machine image. This allows the consumer of the machine image to reliably identify the producer of the image and to verify that the image has not been modified or tampered with subsequent to being made available by its producer.

The infrastructure service may include various types of management components and functionality which are represented generally in as infrastructure management . Generally the infrastructure management may be accessed by a developer to create monitor and control the virtual machines . The infrastructure management may also provide support for the storage retrieval and validation of virtual machine images as will be described in more detail below.

The infrastructure service may implement or have access to an image library which may contain or reference a plurality of image sources . Each image source may include or reference a virtual machine image . The virtual machine images may be obtained and used by or on behalf of developers when creating the virtual machines .

The infrastructure service may implement the image library as a resource for customers of the infrastructure service . Alternatively the image library may be implemented apart from the infrastructure service such as by other providers. In some environments developers may have access to multiple image libraries provided by different developers or image vendors. In some environments developers may access the image library through components and functionality of the infrastructure management .

In addition to the machine image each image source may include or be associated with an image manifest . The image manifest may enumerate or identify executable components of the machine image . For example executable components may be identified by their filenames process identifiers and or process names. The image manifest may also indicate characteristics of the identified executable components such as permissions capabilities checksums sizes sources creators and so forth.

In some implementations the manifest of the image source may comprise one or more structured text files. For example the manifest may be a text file that is formatted in accordance with an available structured language such as JSON javascript object notation or XML extensible markup language .

Each image source may also include or specify a verifiable signature corresponding to the manifest . The signature may be a cryptographic signature that can be inspected to verify the authenticity of the manifest . In particular the signature may be used to verify the source or provider of the manifest and or image and may also be used to establish that the manifest has not been altered since the signature was generated.

The image source may also include or identify a certificate of the entity providing the signature . The certificate may be a PKI public key infrastructure certificate which can be verified through a chain of trust to a trusted certificate authority. The certificate may identify a particular entity and may specify one or more cryptographic keys that allow verification that the signature was produced by the entity. For example the certificate may specify a public key portion of a public private key pair that is associated with the entity identified by the certificate. The public key portion may be used in conjunction with cryptographic techniques to verify that the entity identified by the certificate was the source of the signature .

The infrastructure management may support use of the image library by users or consumers of machine images . The infrastructure management may also support use of the image library by providers or vendors of the machine images . As examples of such management services or functional aspects that may be provided by the infrastructure management shows an image library management component a manifest services component and a virtual machine management component . Note that the specific division of responsibilities shown in and described below is intended only as an example and that the functionality described with reference to the infrastructure management may be allocated and implemented in various different ways by various different systems and components.

The image library management may be configured to perform functions relating to storage and retrieval of image sources . For example the image library management may expose APIs application programming interfaces that are accessible by vendors and other providers of machine images allowing such providers to submit and store machine images in the image library . The image library management may also expose APIs that are accessible by users or consumers of the machine images allowing developers to obtain the machine images and to use the machine images when instantiating virtual machines .

The manifest services may be configured to perform functions relating to the creation and or verification of image manifests such as generating the manifests and signatures and associating or assembling the various components of the image source . The manifest services may expose APIs that are accessible by producers and consumers of the machine images for these purposes.

In some embodiments the manifest services may include an executable module for installation on and execution by a virtual machine. Such a module may be executed in conjunction with initialization startup or booting of the virtual machine whereupon it may inspect or examine the virtual machine to identify the executable components of the virtual machine. This functionality may be used to generate the manifests as well as to inventory newly instantiated virtual machines in order to verify the authenticity and integrity of their machine images .

The virtual machine management may be configured for access by users to create and configure the virtual machines . The virtual machine management may expose APIs or other control mechanisms allowing customers of the infrastructure service to specify machine images and to create virtual machines based on the specified machine images . In certain embodiments a customer may specify one of the library images to be used as a virtual machine image when creating a new virtual machine .

An action may comprise receiving the machine image from an entity such as a developer customer vendor etc. The machine image may be submitted or specified through APIs of the image library management . In some embodiments the machine image may be specified by referencing an existing virtual machine. In such embodiments the machine image may comprise the memory image of the referenced virtual machine which the image library management may copy for storage within the image library .

An action may comprise creating the source manifest . This may be performed in some embodiments by the manifest services by examining the state of an existing virtual machine that has been created based on the machine image . In some cases the image library management may create a virtual machine based on the machine image specifically for the purpose of inventorying the executable components of the virtual machine and for creating the manifest . An executable inventory module may be installed to execute on the virtual machine as it boots to create the manifest based on analysis of the virtual machine.

As mentioned above the source manifest may be a text file or object such as an XML file or may be formatted in accordance with any other agreed upon standard. The source manifest may identify executable components or processes by their process identifiers by their filenames or by other characteristics. Various data or metadata regarding individual components or processes may also be included or enumerated within the source manifest such as checksums file sizes permissions capabilities and so forth.

An action may comprise signing the source manifest to create the signature . This action may in some embodiments be performed on behalf of a developer by the manifest services . The signature may be created using various different technologies and protocols including cryptographic techniques. For example some embodiments may generate a hash of the manifest and encrypt the hash to produce the signature . Some embodiments may utilize a public key infrastructure PKI which is based on certificates that bind entities to public private asymmetric key pairs. In this case a hash of the manifest may be signed or encrypted using the private portion of the key pair associated with the certificate . Successful subsequent decryption of the signature using the public portion of key pair specified by the certificate will verify that the signature was created by the entity specified by the certificate . The certificate itself can be verified through a chain of trust rooted in a trusted entity in accordance with conventional PKI techniques.

As an example the certificate and signature may comply with and be generated in accordance with the X.509 PKI standard.

An action may comprise storing the machine image the certificate the signature and the source manifest to create the image source within the image library . As illustrated multiple image sources may be stored by and available from the image library .

An action may comprise receiving a request for the creation of a virtual machine . The request may be received from a developer user or customer associated with the infrastructure service and may specify one of the image sources stored by the image library . The virtual machine management may expose APIs for this purpose.

In response to receiving the request an action may comprise verifying or validating the signature of the manifest associated with the specified image source . This may be performed in some environments by creating a hash of the manifest using an agreed upon protocol encrypting the hash and verifying that the encrypted hash matches the signature . The validation may be performed in accordance with one or more standards or protocols such as the X.509 PKI standard mentioned above.

The action may also comprise verifying that the certificate can be traced to a trusted source and that the certificate specifies a provider that is trusted. Again this can be performed in accordance with standards such as the X.509 PKI standard.

An action may comprise creating the virtual machine based on the image indicated by the specified image source .

An action may comprise inventorying the created virtual machine to identify its executable components. As discussed above this may comprise executing an inventory module in conjunction with startup or booting of the virtual machine . Such an inventory module which may be provided by the manifest services or virtual machine management may be configured upon startup to examine the state of the virtual machine and to produce a list of executable components. Executable components may be identified by process identifier filename or other means.

An action may comprise comparing the inventory of identified executable components with the manifest to determine whether the virtual machine has been created with a valid and trusted machine image. If the inventory and the manifest do not match the newly created virtual machine may be disabled or prevented from operating. The comparison of action may be performed by the virtual machine management or by the inventory module executing on the virtual machine .

The memory may be used to store any number of functional components that are executable by the processing unit . In many embodiments these functional components comprise instructions or programs that are executable by the processing unit and that when executed implement operational logic for performing the actions that are described above as being performed within or by the IaaS. In addition the memory may store various types of data that are referenced by executable programs.

Functional components stored in the memory may include an operating system and a virtual machine manager that provides and manages virtual instances within the server . Relevant logical functionality provided by the virtual machine manager is shown within a dashed box within the server . Such logical functionality may include a virtual network interface and one or more virtual machine instances only one of which is shown . In some embodiments each virtual machine may be configured with an inventory module that inventories and reports executable components of the virtual machine .

The server may also have a physical network interface for network communications outside of the physical server itself.

In addition to implementing individual virtual machines one or more servers such as shown by may be used to implement higher level management of the infrastructure service such as the functionality of the infrastructure management .

Note that the various techniques described above are assumed in the given examples to be implemented in the general context of computer executable instructions or software such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. for performing particular tasks or implement particular abstract data types.

Other architectures may be used to implement the described functionality and are intended to be within the scope of this disclosure. Furthermore although specific distributions of responsibilities are defined above for purposes of discussion the various functions and responsibilities might be distributed and divided in different ways depending on particular circumstances.

Similarly software may be stored and distributed in various ways and using different means and the particular software storage and execution configurations described above may be varied in many different ways. Thus software implementing the techniques described above may be distributed on various types of computer readable media not limited to the forms of memory that are specifically described.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as illustrative forms of implementing the claims. For example the methodological acts need not be performed in the order or combinations described herein and may be performed in any combination of one or more acts.

