---

title: Analytics driven engagement
abstract: Various embodiments relate to an engagement server and a related method of initiating an engagement between an agent device and a user device based on formed and modified engagement rules. In one embodiment, the engagement server can receive one or more third-party analytic reports and use them to form engagement rules that determine when the engagement server initiates an engagement between the agent device and user device. In some embodiments, the engagement server can also receive user interaction data from the user device to modify engagement rules to fit a particular user. In some embodiments, the engagement server can use the third-party analytic reports and/or user interaction data from a plurality of users to form a statistical model. The engagement server may then use the statistical model to form and/or modify the engagement rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08943002&OS=08943002&RS=08943002
owner: Liveperson, Inc.
number: 08943002
owner_city: New York
owner_country: US
publication_date: 20120306
---
This application claims the benefit of and priority under 35 U.S.C. 119 e to U.S. Provisional Application No. 61 632 815 filed on Feb. 10 2012 entitled Analytic Driven Engagement the entire disclosure of which is incorporated herein by reference in its entirety.

Various exemplary embodiments disclosed herein relate generally to methods executed on a computer and computer based apparatus including computer program products for an analytic driven engagement.

A company can use its website in a variety of ways to communicate information to its customers. For example a company can configure its website to provide information to a customer before the customer makes a purchasing decision. In other instances the company can directly provide its products and or services to its customers through its website provide customer service through a support network and or gather specific information about its potential customers.

In order to implement such a wide array of services which customers in this day and age have come to expect from Internet companies many companies must employ large robust websites and maintain large web presences. One consequence of creating such large and complex websites is that customers many not readily find the information or service they desire. For example a customer may navigate to a desired location e.g. web page on a company s website yet many not know the appropriate next steps to take once he or she reaches the desired location e.g. how to complete a purchase transaction how to compare a displayed product with other products etc. . It is often difficult to determine when to engage a user of a website e.g. to provide online chat help to send coupons to send advertisements etc. .

The methods and apparatus disclosed herein allow a website to engage website users or to offer engagement to users when the users may want or need help e.g. to offer online chat with customer service agents to provide coupons etc. . Actions or other properties associated with the user s interaction with the website can be used to decide when the website should engage with a customer e.g. offered help .

A brief summary of various exemplary embodiments is presented. Some simplifications and omissions may be made in the following summary which is intended to highlight and introduce some aspects of the various exemplary embodiments but not limit the scope of the invention. Detailed descriptions of a preferred exemplary embodiment adequate to allow those of ordinary skill in the art to make and use the inventive concepts will follow in the later sections.

In one embodiment a computerized method for automatically adjusting engagement rules based on user interaction with a website is featured. The method includes a server computer storing a set of engagement rules for a website wherein each engagement rule defines criteria that if met causes the website to engage a user of the website. The method includes the server computer receiving data indicative of a set of users interactions with the website wherein the data is generated by a third party data provider. The method also includes automatically the server computer adjusting one or more generated rules from the set of engagement rules based on the received data.

In another embodiment a computer program product tangibly embodied in a non transitory computer readable medium is featured. The computer program product includes instructions being configured to cause a data processing apparatus to store a set of engagement rules for a website wherein each engagement rule defines criteria that if met causes the website to engage a user of the website. The computer program product includes instructions being configured to cause a data processing apparatus to receive data indicative of a set of users interactions with the website wherein the data is generated by a third party data provider. The computer program product includes instructions being configured to cause a data processing apparatus to automatically adjust one or more generated rules from the set of engagement rules based on the received data.

In another embodiment an apparatus for automatically adjusting engagement rules based on user interactions with a website is featured. The apparatus comprises a processor and memory. The apparatus is configured to store a set of engagement rules for a website wherein each engagement rule defines criteria that if met causes the website to engage a user of the website. The apparatus is configured receive data indicative of a set of users interactions with the website wherein the data is generated by a third party data provider. The apparatus is configured to automatically adjust one or more generated rules from the set of engagement rules based on the received data.

In other examples any of the aspects above include one or more of the following features. In some examples the server computer receives second data indicative of a second set of users interactions with the website wherein the second data is generated by a second third party data provider that is different than the third party data provider. In some examples the server computer generates a statistical model based on the received data and the second received data. The received data and the second received data can each comprise one or more parameters. Generating the statistical model can comprise correlating a first parameter from the received data and a second parameter from the second received data using a principal component analysis PCA .

In some examples the statistical model can be indicative of user interaction with the website. The received data can comprise a website analytic report. Engaging a user can comprise transmitting a pop up window to the user. Automatically adjusting can comprise creating a new engagement rule in the set of engagement rules. Automatically adjusting can comprise changing an existing engagement rule in the set of engagement rules.

It should be apparent that in this manner various exemplary embodiments enable dynamic engagement between an agent and a user on a website or other user engagements such as providing targeted advertisements providing coupons etc. . Particularly by using analytical reports and modeling an agent can engage a user under predefined conditions which can result in a more meaningful engagement between the agent and user.

The techniques which include both methods and apparatuses described herein can provide one or more of the following advantages. The incorporation of one or more third party analytic tools and analytic reports allows the system to determine when to engage a user e.g. based on robust statistics that will more likely result in a successful engagement e.g. a helpful engagement to the user an engagement that promotes the sale of products or services etc. between agent and user. Automatically integrating such analytic tools with the rest of the engagement system eliminates the need for manual creation and maintenance of engagement rules that define the criterion s for when the system engages a user. Other aspects and advantages of the embodiments will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrating the principles of the invention by way of example only.

Referring now to the drawings in which like numerals refer to like components or steps there are disclosed broad aspects of various exemplary embodiments.

In general overview computerized systems and methods are provided for an analytic driven engagement system that initiates engagement with a user e.g. engagement between a customer service agent and the user based on at least analytic reports and or analytic tools. The analytic reports and tools can be produced both internally and can be received from a third party. An engagement can include for example direct communications between an agent and a user e.g. online text chat voice chat video chat etc. . An engagement can also include other forms of action based on a user s interaction with the website. For example a user can be presented with instructional text or video e.g. that is automatically generated based on the user s actions taken at the website coupons e.g. for products offered on the website and or for products related to the website content articles community created content social media content e.g. Facebook Twitter etc. An engagement server can monitor a user s activities when connected to a website or webpage. The engagement server using engagement rules dynamically formed from at least the analytic tools waits until the engagement rules are satisfied before engaging the user. In some embodiments the engagement server can form the engagement rules from other users activity data. In some embodiments the engagement server can initiate the engagement between an agent and the user through the creation of a chat session on both the user device and agent device that enable direct communication between the user and agent. In some embodiments the engagement server can initiate another form of initiation such as providing specific content like an advertisement.

Network can be for example a packet switching network that is able to forward packets to other devices based on information included in the packet. The network can provide for example phone and or Internet service to various devices like the user device and the agent device in communication with the network .

The engagement server can be for example a single web server with a processor and memory. In some embodiments the engagement server can include multiple web servers connected directly or through the network . For example the agent or agent company can improve brand management and or customer service by connecting its agents with its customers or users at what it deems opportune times e.g. as defined by the engagement rules . Advantageously the engagement server can receive user interaction data from a particular user device e.g. from tag and use various engagement rules to determine when to engage with user device e.g. to initiate an engagement between an agent and a user via the agent device and the user device . In some embodiments the engagement server can retrieve other data such as user analytics stored in engagement database DB to form and or modify its engagement rules. The engagement server can also store the engagement rules in the engagement database . In some embodiments the engagement server can retrieve one or more third party analytics such as third party analytic reports from third party databases A B via third party servers A B when forming and or modifying the stored engagement rules. The engagement server can also provide other software to both the user device and the agent device . For example the engagement server can provide chat software to the user device and the agent device to facilitate a chat session between the user device and the agent device .

Engagement database DB can be a database in communication with the engagement server that can provide user analytics to the engagement server . In some embodiments the engagement DB can be in communication with the engagement server through a direct connection. In other embodiments the engagement DB can be in communication with the engagement server through the network . In some embodiments the engagement database stores the engagement rules. In some embodiments the engagement DB can store web analytics received by the engagement server . In some embodiments the engagement DB can accumulate and store user interaction data the engagement server received from a plurality of user devices over time. In some embodiments the engagement DB can store statistical models form by the engagement server . The engagement server can access the engagement DB when forming and updating engagement rules statistical models and accumulated user interaction data. The engagement server can use information stored in the engagement DB with other information such as third party web analytics retrieved from other sources when forming or modifying engagement rules and or statistical models.

Third Party databases DBs A B can be one or more databases in communication with the engagement server through the network and third party servers A B. Each of the third party servers A B can be for example a single web server with a processor and memory that are controlled by a party other than the user or agent. Third party DBs A B can accumulate and store web analytics which the engagement server can access when forming and modifying its engagement rules and or statistical models. In some embodiments the web analytics stored in the third party DBs A B can be static web analytic reports. In other embodiments the third party DBs can include web analytic reports that are consistently updated by the third party. In some embodiments the engagement server can access the static and or updated web analytic reports stored in one or more of the third party DBs when forming and modifying its engagement rules or when forming and modifying its statistical models. For example the engagement server can connect to the first third party DB A to retrieve a static third party report connect to the second third party DB B to retrieve an updated third party report and or connect to the engagement DB to retrieve accumulated user interaction data to form a statistical model for the user.

In some embodiments the statistical model can be generated using partial least squares projections to latent structures PLS principal component analysis PCA or a combination of PLS and PCA. Further details of PCA and PLS analysis can be found in Multi and Megavariate Data Analysis Part I Basic Principles and Applications Eriksson et al Umetrics Academy January 2006 and Multi and Megavariate Data Analysis Part II Advanced Applications and Method Extensions Eriksson et al. Umetrics Academy March 2006 the entirety of which are herein incorporated by reference.

PLS is a multivariate analytical tool commonly used to analyze data. PLS is a method for relating two data matrices X and Y to each other by a linear multivariate model. In its simplest form a linear model specifies the relationship between a dependent or response variable y or a set of response variables Y and a set of predictor variables X s. For example the response variable y is a user specified quality for irregular objects and the predictor variables X are the measured data for the irregular objects.

A PLS component includes a vector of X scores t Y scores u weights w and c and loadings p. PLS components of a PLS model are traditionally calculated using the nonlinear iterative partial least squares NIPALS algorithm. There are many variations on the NIPALS algorithm which consist of a matrix vector multiplication e.g. X y to generate the weight vector w. The matrix vector multiplication is computed through a set of vector vector multiplications x y to result in scalar results w.

PLS can be represented graphically. For example consider a regression application with N observations 3 X variables factors predictors and 1 y variable response . Here the dimensions of the X matrix are 3 columns by N observations and the dimensions of the Y matrix is 1 column by N observations. Because there are two matrices each row or each observation of the N observations corresponds to two points one point on the X space for the X matrix and one in the Y space for the Y matrix. When the data table is graphed for all N observations there is a cluster of N points in the X space and a cluster of N points in the Y space. The first PLS component is a line or vector in the X space which approximates the cluster of points and provides a good correlation with the y vector. Upon computing the first PLS component the co ordinate of an observation i along the first component vector can be obtained by projecting the sample onto the line to achieve the score tof observation i. The scores of all the observations form the first X score vector t. A model estimate of y can be determined by multiplying tby the weight of the y vector c ct Equation 1 where 

Usually one PLS component is insufficient to adequately model the variation in the y data. A second PLS component is used to expand on the PLS model. The second PLS component is also a line in the X space which passes through the origin and is orthogonal to the first PLS component. After computing the second PLS component a second score vector tis achieved as well as weights cand w Equation 2 where 

This PLS component generation process is repeated until reaching the desired number of components for the PLS model. Additionally this can be performed with a single response y or multiple responses Y.

The vector vector multiplications of the NIPALS algorithm produce similar results to a least squares estimation of a slope of a line through the origin b x y x x where x x is a constant. Further partial averages of the sorted data set divided into three portions gives a good estimate of b yy yy xx xx where the average of the highest third of y is yy the average of the lowest third of y is yy the average of the highest third of x is xx and the average of the lowest third of x is xx. While partial averages can be a good estimate of b partial averages can be affected by outside tails of the distribution. Further computation of PLS components is limited based on the amount of memory available in the processing system. With large amounts of data storage becoming available at lower prices the size of data sets are becoming increasingly larger than the computer memory available in the processing system. Consequently PLS processing of large data sets becomes time consuming. Further standard PLS deflates both the X and Y matrices to speed up the computation with constant vector subtractions.

PCA is a multivariate projection method designed to extract and display the systematic variation in a data matrix X revealing groups of observations trends and outliers. Data matrix X is a matrix of data with N rows observations and K columns variables . The observations can be for example analytical samples chemical compounds or reactions process time points of a continuous process batches from a batch process biological individuals trials of a DOE protocol and other measurements. To characterize the properties of the observations variables are measured. The variables can be for example of spectral origin of chromatographic origin or measurements from sensors in a process e.g. temperatures flows pressures curves etc. .

In some embodiments the data are pre processed e.g. through scaling and mean centering described in further detail below . Once pre processed if at all the first principal component PC is computed which is the line in the K dimensional space that best approximates the data in the least squares sense. The line goes through the average point and each observation can be projected onto the line to calculate the observation s score. The model can be extended with additional principal components. Usually one principal component is insufficient to model the systematic variation of a data set. The second principal component for example is also represented by a line in the K dimensional space which is orthogonal to the first PC. The line also passes through the average point and improves the approximation of the X data as much as possible.

To determine which variables are responsible for the patterns seen among the observations the principal component loadings are analyzed which are vectors called pand p. Geometrically the principal component loadings express the orientation of the model plane in the K dimensional variable space. The direction of PC in relation to the original variables is given by the cosine of the angles for each variable. For example for three variables the direction is given by a a and a. These values indicate how the original variables e.g. x x and xfor a three variable matrix load or contribute to PC. A second set of loading coefficients expresses the direction of PC in relation to the original variables.

The principal component scores are the columns of the score matrix T e.g. t t and tfor first second and third components . These scores are the coordinates of the observations in the model. The scores can be sorted in descending importance e.g. texplains more variation than t . As discussed above the meaning of the scores is given by the loadings which build up the loading matrix P e.g. loadings of the first second and third components are p p and p. The loadings demonstrate the magnitude e.g. large or small correlation and the manner e.g. positive or negative correlation in which the measured variables contribute to the scores.

In some embodiments the data matrices are preprocessed before performing PCA and or PLS. For example when using PLS one or more of the matrices e.g. matrix X and or matrix Y are transformed centered and or scaled by a preprocessing method. Similarly prior to PCA the data can be pre treated into a form suitable for analysis e.g. to reshape the data such that important assumptions are better fulfilled . PLS modeling works best when the data are generally symmetrically distributed and have a generally constant error variance. Variables that vary more than ten fold can be logarithmically transformed before the analysis to remove undesired behavior. Transforming variables can improve the predictive power and interpretability of a multivariate model. For example a dataset which includes measurements that are outliers may unduly influence model building. Manipulating such measurements in some way prior to data analysis prevents the measurements from exerting a large influence on the model causing the measurements to dominate over the other measurements. For example outliers can be removed to minimize the effect that the measurements would have on the model.

To give variables i.e. columns of a matrix relatively or approximately equal weight in the subsequent analysis the data can be column wise transformed scaled and or centered. Transformations of variables are often used to give them a more symmetrical distribution. For example logarithmic transformations negative logarithm scaling logit scaling square root scaling fourth root scaling inverse scaling or power transformation scaling can be used.

For many types of data centering and scaling are intertwined. Centering corresponds to a subtraction of a reference vector where scaling the variables involves multiplying the variables by a scaling vector. The choice of scaling vector is crucial. In situations where variables of different origin and numerical range are encountered the scaling vector is usually chosen as the inverse spread of the variables. In other situations such as with process data the scaling vector may be defined relative to a tolerable spread in the variables.

A scaling vector is a representation of a number of observations on a line such that the positioning of the points is related in some mathematical sense to one or more criteria relevant to the observations. The scaling process involves regulating the length of a coordinate axis in variable space according to a predetermined criteria e.g. that the length of each coordinate axis be set to the same variance . A common technique for scaling data is referred to as unit variance UV scaling or auto scaling. Unit variance scaling involves calculating a standard deviation for a particular variable from a data set. A scaling weight is calculated as the inverse of the standard deviation. Each value of the variable is multiplied by the scaling weight to determine the scaled variable. After all of the variables in the data matrices have been scaled each of the variables i.e. coordinate axes have unit variance.

In The web server can be for example a single web server with a processor and memory. In other embodiments the web server can be a plurality of web servers configured to provide web services to a user device . The website can provide tag along with website code e.g. HTML code comprising code e.g. JavaScript code that when executed by the web browser on the user device monitors user activity of an associated website displayed in the web browser . In some embodiments instead of or in addition to the tag the website provided by the web server can provide an application programming interface API that facilitates monitoring user activity such as the monitoring of keywords in messages or other data used within the website e.g. which can be viewed by the user device . The API can be an interface implemented by the website that enables other software programs to interact with the website. In some embodiments the web server can provide a same website viewed on both the user device via the web browser and the agent device e.g. via a web browser on the agent device not shown . In such instances the website viewed on the agent device and user device may not be identical.

The user device can be computing devices with a processor and memory that can interact with the website through its web browser . For example the user device can include desktop computers laptop computer tablet computers and or mobile phones connected to the network . A user of the user device can use the user device to connect to the website provided by the web server and can be engaged with an agent device e.g. agent device through the engagement server .

The web browser can be software used by the user device to connect to other devices through the network . In some embodiments the user device can be connected to the web server before connecting to the network . In other embodiments the web server can be connected to the user device through the network .

Tag can be a coded tag such as an HTML tag that can be included in a web page the web server provides to the user device through the web browser . In some embodiments the tag can be a tag module stored in the memory of the user device that communicates with the web server and or the engagement server via the connection . For example when the user causes the web browser to load the web page the web browser processes the tag which causes the web browser to download default tag code e.g. a JavaScript code file from the web server . In some embodiments the engagement server can provide the default tag code to the web browser . The web browser can receive process and execute the default tag code to generate the tag. The default tag code can contain code instructions that monitor and transmit information indicative of the user s interaction with the web page e.g. user interaction data to the web server the engagement server or both. For example the user interaction data can include mouse clicks form entries and Uniform Resource Locator URL history. Combinations of one or more user interactions can trigger actions by the engagement server which is described below with reference to .

Agent device can be computing devices with a processor and memory that can connect to the engagement server and can be in communication with the user device . For example the agent device can include desktop computers laptop computers tablet computers and or mobile phones connected to the network . The agent using the agent device can use the agent device to connect to the user device through an engagement e.g. chat video chat phone chat etc. initiated by the engagement server . Once engagement is initiated the agent device and user device can be in communication with each other through the network . This can allow for example engagement between the agent and user through interactions such as a live chat session.

The engagement server can then proceed to step where it receives user interaction data from the user device . For example the tag included in the user device e.g. downloaded from web server can track and record user interaction data within the web browser . In some embodiments the tag sends the user interaction data to the web server which can then send the user interaction data through the network to the engagement server . In some embodiments the tag sends the user interaction data directly to the engagement server via connection . In some embodiments the tag can send the user interaction data to the engagement server in packets at standard intervals where the engagement server can accrue the packets of data. In other embodiments the tag can wait for triggers to send user interaction data to the engagement server . This can for example help reduce the volume of user interaction data sent to the engagement server .

After receiving the user interaction data the engagement server can then proceed to step where it can adjust the engagement rules. In some embodiments the engagement server can adjust the previously stored engagement rules to for example trigger based on different conditions. For example the engagement server in step may receive user interaction data that indicates that the user is spending longer than average times on each webpage before traversing to another page within the website. The engagement server can then adjust engagement rule to have a longer trigger time so that the engagement server initiates an engagement between the agent device and the user device after a longer period e.g. to prevent initiating an engagement before a user may need help .

In step the engagement server determines whether it has received data indicative of an engagement rule being satisfied. In some embodiments the engagement server can monitor the user interaction data received in step and compare the user interaction data against a plurality of engagement rules initiating an engagement between the agent device and the user device when the conditions of any of the plurality of engagement rules is satisfied. For example the engagement server can be using an engagement rule that waits until a user has been on a specific web page e.g. an FAQ page for at least a specified duration. When the engagement server reviews the received user interaction data to determine that the user has been on the specific web page for longer than the specified duration the engagement server may then proceed to step and initiate an engagement between with user device e.g. present the user device with a popup set up a service session between the user device and the agent device e.g. a chat session a video session etc. etc. . Otherwise the engagement server can loop back to step e.g. to analyze newly received user interaction data to determine whether any of its engagement rules have been satisfied.

In step the engagement server can initiate an engagement with the user. For example the engagement server can initiate a chat session between the agent and the user via the agent device and the user device . In some embodiments the engagement server can initiate an engagement with the user through other means such as providing additional text or video instructions based on the engagement rule satisfied. For example the engagement server can monitor an engagement rule regarding a user comparing two or more similar products. Once the engagement server determines that the comparison engagement rule has been satisfied the engagement server can provide a stored video comparison of the two or more products. In some embodiments the engagement server can use other means through JavaScript and HTML to engage with the user device . This can include for example providing to the web browser a banner a tool tip hover over text and similar methods to provide more information to the user. Once the engagement has been initiated the engagement server can stop method at step .

In step the engagement server can receive user interaction data from a plurality of user devices similar to the user device in . Similar to step in method the engagement server can receive data that indicates how a particular user is interacting with the site. In step the engagement server can receive user interaction data from a plurality of user devices such as simultaneously receiving data from multiple user devices in parallel. In some embodiments the engagement server can accumulate the user interaction data from the plurality of users and store this data for later use. The engagement server can track different data for different individual users this data may still be used together by the engagement server in later use.

The engagement server can then proceed from step and proceed to step where the engagement server generates a statistical model based on the accumulated user interaction data. In some embodiments the engagement server can use various third party analytics received from the plurality of third party databases A B in addition to stored user interaction data and the user interaction data received in step . The engagement server can form the statistical model to create a model user profile for example that can represent the expected actions of a typical default user. In such instances the engagement server bases its engagement decisions on the default statistical profile that can be constantly updated as the engagement server receives new user interaction data. In some embodiments the engagement server can use the statistical model to form a plurality of user profiles that it may use to model each of the plurality of user devices for which it is receiving user interaction data.

After creating the statistical model the engagement server can then proceed to step where it can adjust the engagement rules based on the received user interaction data. In some embodiments the engagement server can use the user interaction data to adjust the engagement rules. In other embodiments the engagement server can first use the statistical model to adjust the engagement rules and subsequently use the user interaction data to further adjust the engagement rules. The engagement server may act in a similar manner to that of step as the engagement server can use the user interaction data along with the statistical model to modify the previously received and stored engagement rules so that the engagement server initiates an engagement between the agent device and the user device at more opportune times.

In order to determine whether it is an opportune time to initiate an engagement between the user device and the agent device the engagement server may proceed to step where the engagement server determines whether it has received user interaction data from a user device indicative of any of the engagement rules being satisfied. In some embodiments the engagement server can constantly monitor multiple user devices and can determine whether one of the plurality of user devices satisfied its conditions for engagement. If not the engagement server can loop back to step and wait until a condition is satisfied.

When a condition is satisfied the engagement server can proceed to step where the engagement server initiates an engagement with the user device . Similar to step the engagement server can initiate direct communication such as for example a text or video chat session between an agent and user via the agent device and the user device . Once the engagement server successfully initiates an engagement with the user device it may proceed to step and end method .

The above described computerized methods and apparatuses can be implemented in digital and or analog electronic circuitry or in computer hardware firmware software or in combinations of them. The implementation can be as a computer program product i.e. a computer program tangibly embodied in a machine readable storage device for execution by or to control the operation of a data processing apparatus e.g. a programmable processor a computer and or multiple computers. A computer program can be written in any form of computer or programming language including source code compiled code interpreted code and or machine code and the computer program can be deployed in any form including as a stand alone program or as a subroutine element or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one or more sites.

The computerized method steps can be performed by one or more processors executing a computer program to perform functions of the invention by operating on input data and or generating output data. Method steps can also be performed by and an apparatus can be implemented as special purpose logic circuitry e.g. a FPGA field programmable gate array a FPAA field programmable analog array a CPLD complex programmable logic device a PSoC Programmable System on Chip ASIP application specific instruction set processor or an ASIC application specific integrated circuit . Subroutines can refer to portions of the computer program and or the processor special circuitry that implement one or more functions.

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital or analog computer. Generally a processor receives instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and or data. Memory devices such as a cache can be used to temporarily store data. Memory devices can also be used for long term data storage. Generally a computer also includes or is operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. A computer can also be operatively coupled to a communications network in order to receive instructions and or data from the network and or to transfer instructions and or data to the network. Computer readable storage devices suitable for embodying computer program instructions and data include all forms of volatile and non volatile memory including by way of example semiconductor memory devices e.g. DRAM SRAM EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and optical disks e.g. CD DVD HD DVD and Blu ray disks. The processor and the memory can be supplemented by and or incorporated in special purpose logic circuitry.

To provide for interaction with a user the above described techniques can be implemented on a computer in communication with a display device e.g. a CRT cathode ray tube plasma or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse a trackball a touchpad or a motion sensor by which the user can provide input to the computer e.g. interact with a user interface element . Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech and or tactile input.

The above described techniques can be implemented in a distributed computing system that includes a back end component. The back end component can for example be a data server a middleware component and or an application server. The above described techniques can be implemented in a distributed computing system that includes a front end component. The front end component can for example be a client computer having a graphical user interface a Web browser through which a user can interact with an example implementation and or other graphical user interfaces for a transmitting device. The above described techniques can be implemented in a distributed computing system that includes any combination of such back end middleware or front end components.

The computing system can include clients and servers. A client and a server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

The components of the computing system can be interconnected by any form or medium of digital or analog data communication e.g. a communication network . Examples of communication networks include circuit based and packet based networks. Packet based networks can include for example the Internet a carrier internet protocol IP network e.g. local area network LAN wide area network WAN campus area network CAN metropolitan area network MAN home area network HAN a private IP network an IP private branch exchange IPBX a wireless network e.g. radio access network RAN 802.11 network 802.16 network general packet radio service GPRS network HiperLAN and or other packet based networks. Circuit based networks can include for example the public switched telephone network PSTN a private branch exchange PBX a wireless network e.g. RAN bluetooth code division multiple access CDMA network time division multiple access TDMA network global system for mobile communications GSM network and or other circuit based networks.

Devices of the computing system and or computing devices can include for example a computer a computer with a browser device a telephone an IP phone a mobile device e.g. cellular phone personal digital assistant PDA device laptop computer electronic mail device a server a rack with one or more processing cards special purpose circuitry and or other communication devices. The browser device includes for example a computer e.g. desktop computer laptop computer with a world wide web browser e.g. Microsoft Internet Explorer available from Microsoft Corporation Mozilla Firefox available from Mozilla Corporation . A mobile computing device includes for example a Blackberry . IP phones include for example a Cisco Unified IP Phone 7985G available from Cisco System Inc and or a Cisco Unified Wireless Phone 7920 available from Cisco System Inc.

One skilled in the art will realize the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The foregoing embodiments are therefore to be considered in all respects illustrative rather than limiting of the invention described herein. Scope of the invention is thus indicated by the appended claims rather than by the foregoing description and all changes that come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.

