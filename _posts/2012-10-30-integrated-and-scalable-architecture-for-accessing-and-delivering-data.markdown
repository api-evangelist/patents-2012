---

title: Integrated and scalable architecture for accessing and delivering data
abstract: A distributed and scalable data historian framework is provided that allows historian functionality to be efficiently incorporated at various levels of an industrial enterprise. The framework includes a historian data interface system that provides a single interface and common protocol for configuring, managing, and viewing historian data located throughout a network of historian distributed across the industrial enterprise. The historian data interface system leverages a data model that models the enterprise and sources of historian data to facilitate fast and efficient retrieval of desired historian data. By unifying the distributed historians under a common framework, the data model can facilitate enterprise-level management of historian data collection and storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143563&OS=09143563&RS=09143563
owner: ROCKWELL AUTOMATION TECHNOLOGIES, INC.
number: 09143563
owner_city: Mayfield Heights
owner_country: US
publication_date: 20121030
---
This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61 558 798 filed on Nov. 11 2011 and entitled INTEGRATED AND SCALABLE ARCHITECTURE FOR ACCESSING AND DELIVERY OF DATA the entirety of which is incorporated herein by reference.

The subject invention relates generally to industrial control systems and more particularly to an integrated and scalable architecture that provides a common data model for capturing and managing historical data in an industrial controller environment.

Industrial controllers are special purpose computers utilized for controlling industrial processes manufacturing equipment and other factory automation such as data collection or networked systems. Logic processors such as Programmable Logic Controllers PLCs or PC based controllers are at the core of the industrial control system. Industrial controllers are typically programmed by systems designers to operate manufacturing processes via user designed logic programs or user programs. The user programs are stored in memory and can be executed by the industrial controller in a generally sequential manner although instruction jumping looping and interrupt routines are also common. The user program is typically associated with a plurality of memory elements registers and or variables that provide dynamics to controller operations and programs. Different types of industrial controllers are often distinguished by the number of inputs and outputs I O the controllers are able to process the amount of memory the number and type of instructions supported by the controller s instruction palette and speed of the controller s central processing unit CPU .

Industrial controllers interact with field devices on the plant floor to control automated processes relating to such objectives as product manufacture material handling batch processing supervisory control and other such applications. Industrial controllers store and execute the user defined control programs to effect decision making in connection with the controlled process. Such programs can include but are not limited to ladder logic sequential function charts function block diagrams structured text or other such platforms

In a more macro sense relative to the controller businesses have become progressively more complex in that higher order business systems or computers often need to exchange data with such industrial controllers. For instance an industrial automation enterprise may include several plants in different locations. Driven by such considerations as increased efficiency productivity improvement and cost reduction manufacturers are becoming more interested in collecting analyzing and optimizing data and metrics from global manufacturing sites. For example a food company may have several plants located across the globe for producing a certain brand of food. In the past these factories were standalone and generally isolated from one another rendering data collection and comparison of metrics between facilities difficult. In today s networked world manufacturers are demanding real time data from their factories to drive optimization and productivity.

Moreover manufacturers are faced with a growing obligation to comply with regulatory record keeping and reporting e.g. the Food and Drug Administration s CFR Part 11 requirements emissions reporting quality reporting etc. . Some industrial systems must also leverage historical data in order to perform process analytics such as comparing current process states with prior states e.g. batch comparison process optimization etc. analyzing production or machine metrics over time creating totalizers e.g. means max etc. performing advanced analysis using historical data to optimize a current process in real time or other such operations. To collect industrial data necessary for such analytics some systems employ a PC historian which is an industrial computer configured to capture data from industrial controllers.

However there are disadvantages to existing data collection and storage solutions. For example conventional PC historians are not tightly integrated with standard control systems limiting overall data collection performance and abilities. PC historians are generally applied on the back end of system design and are therefore loosely coupled or integrated within the framework of the control architecture. The relatively loose integration between historians and the control system can render configuration and deployment more complex and costly. This can also complicate the process of identifying which sets of data should or should not be captured.

There are also difficulties associated with mapping and integrating historians into a larger enterprise. For example an enterprise may employ a common scheme that defines security for underlying control components of an industrial system. Since current historian systems are conventionally applied outside the control system framework historian components may at best provide their own security implementation but may not be integrated in the enterprise s security framework with other similarly situated components including enterprise control components at higher levels of the enterprise.

The above described deficiencies of today s industrial control systems are merely intended to provide an overview of some of the problems of conventional systems and are not intended to be exhaustive. Other problems with conventional systems and corresponding benefits of the various non limiting embodiments described herein may become further apparent upon review of the following description.

The following presents a simplified summary in order to provide a basic understanding of some aspects described herein. This summary is not an extensive overview nor is intended to identify key critical elements or to delineate the scope of the various aspects described herein. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

One or more embodiments of the present disclosure relate to a distributed and scalable framework that enables data historian functionality to be efficiently incorporated and managed in a layered architecture. To this end a historian data interface system is provided that facilitates configuration management and viewing of distributed historian data using a single interface and using a common protocol. The historian data interface system leverages a data model that models an industrial enterprise and sources of historian data distributed across multiple levels of the enterprise. The data model exposes contexts and historian data to other components of the enterprise and allows the interface system to determine correlations between diverse historian tags located throughout the enterprise. The data model can also facilitate aggregation of data to promote efficient storage access and retrieval where aggregation can be a function of data relevancy age redundancy historical access patterns etc.

The historian data interface system can employ historian tags or other identifiers to facilitate data access and storage across a pool of historians. The common interface can present a single unified interface that allows the user to locate and view desired historian data without prior knowledge of the data s location within the enterprise. The system allows historian data to be accessed from any suitable device operatively coupled to the common interface.

Other features include alarm and event notification for historian components single point client programming for historian components across an organization and provision of services to collect and report historian data at different levels of the organization.

To the accomplishment of the foregoing and related ends certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways which can be practiced all of which are intended to be covered herein. Other advantages and novel features may become apparent from the following detailed description when considered in conjunction with the drawings.

The subject disclosure is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the subject disclosure can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof.

As used in this application the terms component system platform layer controller terminal station node interface are intended to refer to a computer related entity or an entity related to or that is part of an operational apparatus with one or more specific functionalities wherein such entities can be either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical or magnetic storage medium including affixed e.g. screwed or bolted or removably affixed solid state storage drives an object an executable a thread of execution a computer executable program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers. Also components as described herein can execute from various computer readable storage media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . As another example a component can be an apparatus with specific functionality provided by mechanical parts operated by electric or electronic circuitry which is operated by a software or a firmware application executed by a processor wherein the processor can be internal or external to the apparatus and executes at least a part of the software or firmware application. As yet another example a component can be an apparatus that provides specific functionality through electronic components without mechanical parts the electronic components can include a processor therein to execute software or firmware that provides at least in part the functionality of the electronic components. As further yet another example interface s can include input output I O components as well as associated processor application or Application Programming Interface API components. While the foregoing examples are directed to aspects of a component the exemplified aspects or features also apply to a system platform interface layer controller terminal and the like.

As used herein the terms to infer and inference refer generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources.

In addition the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from the context the phrase X employs A or B is intended to mean any of the natural inclusive permutations. That is the phrase X employs A or B is satisfied by any of the following instances X employs A X employs B or X employs both A and B. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from the context to be directed to a singular form.

Furthermore the term set as employed herein excludes the empty set e.g. the set with no elements therein. Thus a set in the subject disclosure includes one or more elements or entities. As an illustration a set of controllers includes one or more controllers a set of data resources includes one or more data resources etc. Likewise the term group as utilized herein refers to a collection of one or more entities e.g. a group of nodes refers to one or more nodes.

Various aspects or features will be presented in terms of systems that may include a number of devices components modules and the like. It is to be understood and appreciated that the various systems may include additional devices components modules etc. and or may not include all of the devices components modules etc. discussed in connection with the figures. A combination of these approaches also can be used.

The lower control and sensing level comprises industrial devices and which are monitored and controlled by industrial controllers . Industrial devices and can comprise field devices and systems that provide data to or receive data from the industrial controllers in connection with monitor and control of one or more industrial processes carried out on the plant floor. Accordingly industrial devices and can include such controller input devices as sensors telemetry devices meters or the like. Industrial devices and can also include controller output devices such as actuators motor drives and contactors or other such controllable devices. Industrial devices and may also include low level control systems such as vision systems barcode marking systems variable frequency drives industrial robots and the like which perform local control of portions of the industrial process or which have their own localized control systems but which are subservient to the industrial controllers on the middle control layer.

Industrial controllers can be for example programmable logic controllers PLCs or other programmable automation controllers PACs and facilitate monitor and control of one or more industrial automation systems via the industrial devices and . Exemplary automation systems can include but are not limited to batch control systems e.g. mixing systems continuous control systems e.g. PID control systems or discrete control systems. The controllers exchange data with the industrial devices and using native hardwired I O or via a plant network such as Ethernet IP Data Highway Plus ControlNet Devicenet or the like. Industrial controllers typically receive any combination of digital or analog signals from the industrial devices and indicating a current state of the devices and their associated processes e.g. temperature position part presence or absence fluid level etc. and execute user defined control programs that perform automated decision making for the controlled processes based on the received signals. Industrial controllers then output digital and or analog control signaling to the industrial devices and in accordance with the decisions made by the control program. These outputs can include device actuation signals temperature or position control signals motion control commands operational commands to a machining or material handling robot mixer control signals and the like. The control programs can comprise any suitable type of code used to process input signals read into the industrial controllers and to control output signals generated by the industrial controllers including but not limited to ladder logic sequential function charts function block diagrams structured text or other such platforms.

In exemplary enterprise industrial controllers reside on plant network which provides networked connectivity between controllers . One or more of industrial devices and may also reside on plant network . Plant network can utilize any suitable networking architecture and protocol including but not limited to Control and Information Protocol CIP Ethernet Ethernet IP Data Highway Plus ControlNet Devicenet or the like.

The enterprise level can comprise the business side of the enterprise and can include such business operations as financial analysis marketing sales order management long term business planning resource management inventory management and the like. The enterprise level can also include systems that leverage industrial data generated by and received from the plant floor levels such as reporting systems Enterprise Resource Planning ERP system and Manufacturing and Execution MES system . These enterprise level systems correlate and manage high level business functions in view of plant floor operations. An office network can interconnect one or more office systems residing on the enterprise level using a suitable office network protocol e.g. TCP IP over Ethernet . For example office network can interconnects employee desktop or laptop computers to an office server printing devices or other office equipment.

Office network may also be connected to plant network e.g. through a router or firewall to facilitate aggregation of data from the plant floor at the enterprise level. Accordingly exemplary enterprise can include an enterprise historian which provides long term enterprise level storage of plant floor or business side data collected from one or more facilities comprising the enterprise.

Devices on the middle control level and the lower control and sensing level can generate large amounts of data relating to control and monitoring of one or more industrial automation systems. Accordingly a plant historian can be provided on the plant network to aggregate and store data generated by one or more of the industrial controllers and or the industrial devices and . Moreover any of the industrial controllers and or the industrial devices and may have associated therewith respective embedded historians also referred to as micro historians e.g. historians H H . Micro historians H H act as local storage for the data generated by the respective devices.

As illustrated in historians H HN are distributed across various levels of the industrial enterprise to facilitate data collection across the organizational hierarchy. Each of historians H HN can offer a platform that provides high speed time series data storage and retrieval from multiple controllers or devices. Historians H HN can communicate with industrial controllers and industrial devices and through standard network interfaces or across the controllers respective backplanes. In some implementations the respective historians H HN can archive data to an Archive Engine that provides additional storage capabilities.

In some implementations one or more of the historians H HN can comprise live data servers which hold live e.g. near real time data which can then historized to other long term historians for archival storage. Live data maintained by such live data servers can include for example near real time telemetry or status data generated by industrial controllers and or industrial devices and . In an exemplary implementation such live data can be aggregated from multiple controllers or devices to a common live data server which provides external applications a means to access and view this live data. The live data can then be moved to a plant level or enterprise level historian for longer term storage. As will be explained in more detail below the historian data interface system and associated model can provide access to both live data components and historical data components from a common interface.

One or more embodiments of the present disclosure provide tools for correlating viewing and managing the data stored across the enterprise in historians H HN. To this end a historian data interface system can provide a common interface for distributed historians H HN that allows users to access the historian data facilitates creation of meaningful views of the data and provides other features to be described in more detail herein. Historian data interface system can correlate the respective historians H HN residing on the multiple levels of the enterprise such that data stored on any historian can be seamlessly accessed from a common interface or through a common protocol.

Historian data interface system can include an interface component an access component a migration component a report component a caching component one or more processors and memory . In various embodiments one or more of the historian data interface component access component migration component report component caching component one or more processors and memory can be electrically and or communicatively coupled to one another to perform one or more of the functions of the historian data interface system . In some embodiments components and can comprise software instructions stored on memory and executed by processor s . The historian data interface system may also interact with other hardware and or software components not depicted in . For example processor s may interact with one or more external user interface devices such as a keyboard a mouse a display monitor a touchscreen or other such interface devices.

Interface component can be configured to receive requests for access to selected historian data and present the requested data via an interface device. Access component can be configured to locate and retrieve desired historian data stored in a mesh network of data historians including determining a most efficient path between the desired data and request originator. Migration component can be configured migrate data to different storage locations to improve efficiency of storage and retrieval of the data. Report component can be configured to generate reports based on the historian data associated alarms notifications and the like. Caching component can be configured to selectively store historian data to facilitate servicing high speed requests for the data. The one or more processors can perform one or more of the functions described herein with reference to the systems and or methods disclosed. Memory can be a computer readable storage medium storing computer executable instructions and or information for performing the functions described herein with reference to the systems and or methods disclosed. In some embodiments memory can be cloud based storage provided by the cloud platform that maintains and executes the cloud based historian data interface system .

Framework as managed by historian data interface system leverages a common data model that allows the historians H HN to expose their contexts and data to other components of the enterprise and to automatically recognize and collect relevant data e.g. for archival system restoration purposes etc. . In one or more embodiments data model can represent the industrial enterprise in terms of multiple hierarchical levels where each level comprises units of the enterprise organized as instances of types and their properties. Exemplary types can include for example assets e.g. pumps extruders tanks fillers welding cells utility meters etc. structures e.g. production lines production areas plants enterprises production schedules operators etc. and processes e.g. quality audit repairs test inspection batch product parameters shifts etc. .

Turning briefly to an exemplary organizational hierarchy that can be used as a basis for data model is illustrated. In this exemplary organizational model the hierarchical levels can include from lowest to highest a workcell level a line level an area level a site level and an enterprise level . The type instances described above representing units of the enterprise can be defined for respective levels of this hierarchical structure. In one or more embodiments the historian data interface system described herein can provide a standard set of types that allow the user to model an industrial enterprise in terms of these standard types. The historian data interface system can also allow custom types to be created allowing users to represent their particular business or manufacturing processes using a combination of standard and user defined types.

Data model allows devices of an automation system their associated historians and data items stored therein to be described and identified in terms of these hierarchical levels allowing a common terminology to be used across the entire enterprise to identify devices and historian data associated with those devices. Thus individual items of historian data e.g. live analog and digital values stored in controller tags archived data values stored in a historian register or other long term data storage device etc. when integrated into framework can be identified and viewed through interface component by unique historian tags defined by data model . For example through adherence to data model a given item of data within the historian mesh network can be identified with a historian tag or identifier that indicates the data item s origin or context within the organizational hierarchy e.g. SoCal DieCastArea 1HeadlineMachine DowntimeTracking DowntimeMinutes . Data model can represent industrial controllers devices machines or processes as data structures e.g. type instances within this organizational hierarchy to provide context for data generated and stored throughout the enterprise relative to the enterprise as a whole. An exemplary portion of a browsable hierarchy based enterprise units defined for data model is illustrated in . Thus data model provides context enhancement that replaces the flat name structure that may be employed within the individual historians.

A given asset of an enterprise can be described in the data model in terms of a number of different type instances. Pursuant to an example consider a pump in service as part of an industrial process. The pump can be associated with multiple different types of data represented in the data model by respective type instances. For example live data for the pump e.g. pressure flow speed etc. is measured on a substantially real time basis. Such data might be maintained in a data tag of an industrial controller or human machine interface. Moreover a maintenance management system may record performance or maintenance statistics for the pump such as running hours performance specifications manufacturer data available spares or maintenance data. In addition an enterprise resource planning ERP system or MES system may record quality assurance data for the pump such as batch records leak test data lab sample results etc. Historical data can also be archived for the pump by one or more historians. This can include for example volume of material pumped product throughput operation history power consumed etc. Furthermore an asset database may record asset information for the pump e.g. purchase data cost warranty manufacturer engineering specifications related data vibration data etc. . Data model can facilitate correlation of these various sources of disparate pump information.

Data model can also provide for auto discovery and creation of such structures. For example if a new device or historian is added to the system historian data interface system can automatically detect the new device and determine the device s context within the organizational hierarchy modeled by data model . Data model can then reconfigure itself to incorporate the newly added device at the appropriate location within the organizational hierarchy and historian data interface system can automatically configure the new device or operation within mesh network . This can include identifying data tags available within the new device and establishing suitable correlations between these data tags and other historian tags already identified by the system.

Framework under the guidance of historian data interface system allows historians H HN to be tied to data model and its associated addressing mode enabling historian data to be automatically and efficiently exchanged between various layers of an organization across organizational boundaries or exchanged between lower level control entities to upper levels of the organization. In some embodiments data model can be distributed across control systems and other components of the organization e.g. business computers providing the historians with high level knowledge of overall system context and allowing the historians to automatically communicate with one another over the unified framework. Framework can also include a directory and location service to enable configuration of historians H HN and to facilitate automated integration at various levels of the organization.

Data model provides a unified view of data stored in distributed historians H HN allowing a user to view and retrieve selected subsets of the historian data through interface component . For example interface component can be configured to receive a request for access to a particular subset of historian data stored among historians H HN and present the results in a format selected by the user. To facilitate location of the subset of historian data requested by the user access component can leverage data model to locate the desired historian data based on request criteria provided to interface component . In one or more embodiments access component can determine a most efficient or fastest path to the desired data based on the location of the data and the origin of the data request. In this manner interface component access component and data model can allow a user to access and retrieve data stored at one or more of the historians H HN regardless of where the data is stored and without requiring user knowledge of the data s location.

To facilitate fast and efficient retrieval of data from the historian mesh network from any location historian data interface system can include a migration component configured to migrate data to different storage locations in accordance with one or more migration criteria. For example a subset of historian data e.g. data associated with a particular set of controller tags may be initially located and stored at historian H of historian mesh network . However based on such factors as a volume or frequency of requests for that subset of data and or the locations of origin of such requests the migration component may determine that relocating the subset of data to historian H will better position the data for faster and more efficient retrieval in response to future requests. Migration component may base this decision on a determination that historian H is physically closer relative to H to the location from which the majority of requests for the subset of data originate or that historian H has improved storage or processing capability relative to historian H rendering H better able to service data retrieval requests more quickly than H. Consequently migrating the subset of data from H to H will allow the system to provide the data to the interface component more quickly and with less processing overhead. This migration can be transparent to the end user by virtue of tag correlation features provided by historian data interface system . For example when a user selects the migrated subset of data for retrieval by selecting the relevant data tags associated with historian H via interface component data historian interface system will be aware of the data s new location in historian H and retrieve the data from this new location.

In some embodiments migration component can learn patterns of requests for the subset of data and dynamically migrate selected subsets of the data based on these learned request patterns. In an exemplary scenario the migration component may monitor access requests to a subset of data stored in historian H and learn that requests for the data originating from a particular user workstation or server on the enterprise level increase significantly between 2 30 and 3 00 e.g. as a result of a daily report that executes during this time . Based on this determination migration component will move the requested data from historian H which resides on the plant floor to a historian residing on the enterprise level of the organization e.g. historian H of at 2 15 prior to the time when requests are expected to increase. In this way when requests for the data from the enterprise level workstation increase as expected between 2 30 and 3 00 the data will located on a historian more readily accessible by the workstation. Migration component can determine suitable destination historians for a migration operation based at least in part on reference to data model which includes information on each historian H HN in the enterprise including the respective historians locations within the organization.

In some historian networks there is a possibility that duplicate data will be collected and stored in multiple locations within the historian mesh network . For example two or more industrial controllers may read measurements from a common telemetry device e.g. a flow meter a temperature or pressure sensor a variable frequency drive etc. and store this data in respective associated historians resulting in duplication of the meter data in multiple locations within the historian mesh network . Accordingly in order to substantially optimize the storage space consumed by the stored data migration component can identify and delete redundant instances of the same data throughout the historian mesh network . Migration component can also be configured to automatically delete data instances after a defined time period.

One or more embodiments of the migration component can employ weighing algorithms in connection with deciding where and how long to store particular sets of data at particular locations and at which locations within historian mesh network . For example through interface component a user can assign priority level to selected data tags within historians H HN. Migration component can then apply different data maintenance routines to the various priority levels based on different time based weighting algorithms. For example migration component will allow a first set of historian data designated as having a high priority to be stored in the system for a longer duration prior to deletion than data sets assigned lower priorities. To this end migration component can apply a first weighing algorithm to the first set of historian data such that the calculated value of the data decreases more slowly over time relative to a second weighing algorithm applied to a lower priority second set of historian data. In both cases the migration component will delete or migrate the sets of data when the respective weighing algorithms indicate that the calculated value of the data has fallen below a predefined setpoint as a function of time. The user can define through interface component whether the data sets will be deleted or alternatively whether the data sets will be migrated to a different long term storage location having slower read write access capability.

Weighted algorithms can also be maintained for historian data based on learned patterns of access to the data. For example a weighted algorithm can provide a weighting to a particular data tag based on how often the data tag is being requested from which level of the enterprise e.g. machine level plant level site level enterprise level etc. the data tag is frequently requested. Based on this weighting migration component can determine where data associated with the data tag should be stored. This can include determining which level of the enterprise and which historian on that level e.g. real time data server with having fast accessibility versus remote long term storage having slower retrieval times . The weighting algorithms can be re assessed in substantially real time as new information becomes available e.g. additional access pattern data so that migration component an use the algorithms to move data between one storage to another as the assumed value of the data changes.

Migration component can also be configured to perform data migrations from low level historians to higher level historians based on time spans. For example in many scenarios real time data that is data having the smallest time span is collected by machine level data tags on the plant floor such as those in an industrial controller or HMI. Machine level historians may archive this real time data from the controller tags to historian tags residing in the machine level historians. This machine level data can then be aggregated at a higher level historian e.g. a plant level historian or enterprise level historian for long term storage when the machine level historian data reaches a define age. Accordingly migration component can be configured to monitor the age of historian data on the machine level historian and automatically migrate the historian data to the higher level historian when the data reaches the predefined age e.g. one week and the data can be deleted from the machine level historians. In this manner the historian network maintains real time data on the industrial controller historian data having medium term time spans on the machine level historians and historian data having long time time spans on the higher level historians. Subsequently when specific data is requested from a client associated with historian data interface system the main time span being sought can be specified in order to quickly identify the data source and level that contains the requested data.

One or more embodiments of historian data interface system can also include a security component that leverages data model to control access to the pool of historian data stored in historians H HN. Security component can deny provide or revoke access to the historians and or their associated data. Security component can also allow a user to define a scope of access to selected subsets of historian data via interface component . For example through interface component a system administrator can browse to respective historian or controller tags and individually assign access privileges to the tags. Security component may also leverage native security mechanisms provided by an operating system on which historian data interface system is running. For example security component may support group security which allows a user or client application to be assigned to a group where the group is associated with access privileges to specific files data or applications. Assignment to the group can also confer rights to invoke install or deregister a service. Thus when a user or application attempts to access a subset of historian data a group identity and or other indicia associated with the user or application can be determined and the security component will grant suitable access privileges e.g. read write execute . . . based on the identity. Examples of security technologies that can be employed in accordance with the subject disclosure include but are not limited to Internet Protocol Security IPsec Secure Sockets Layer SSL Simple Authentication and Security Layer SASL Kerberos Lightweight Directory Access Protocol LDAP NT LAN Manager NTLM Active Directory or other authentication mechanisms. Furthermore security component can protect and or format instructions conveyed to stored in or obtained from the framework . For example such instructions can be encrypted digitally signed encoded compressed password protected etc. Moreover tying historians H HN to the data model allows the historians to be automatically integrated under a unified security scheme. This unified security scheme allows security changes to be propagated to the historians from other components of the system.

Historian data interface system provides a unified mechanism for configuring historians in the mesh network for collection of desired data. By unifying the historians H HN under a common interface that adheres to data model historian data interface system can allow users to mark selected items of control data to be collected for historian purposes. For example interface component can present a browsable hierarchical view of controller tags distributed throughout the enterprise e.g. controller tags located within industrial controllers of where the controller tags represent data items being monitored or generated by the respective controllers e.g. a meter value a machine state a production count etc. . The hierarchical view of the controller tags can accord to data model which defines the hierarchical levels of the organization and the units comprising each level. A user can interact with this unified presentation to browse controller tags and mark selected tags for collection by one or more historians H HN. Historian data interface system will propagate this configuration information to the appropriate historian s instructing the historians to record the marked data. Interface component can also allow selected data items e.g. data tags to be configured for publish and subscribe functionality whereby selected data is recorded in response to a change in data structure or when the data achieves a defined state rather than being recorded continuously.

By integrating the historians H HN under common data model historian data interface system can allow a user to configure components of an organization to collaborate to execute an overall scheme for historical data collection. For example PLCs residing on a middle control level of the organization e.g. controllers of and sensor components on a lower control and sensing level can be configured via interface component to share data collecting responsibilities or to provide collected data to higher levels of the organization e.g. devices on the enterprise level . In an exemplary scenario lower level collection components can include rack mounted historians which operate in an industrial controller rack and communicate to other modules in the rack over the controller s backplane. These rack mounted historians can collect data from the backplane and share the data across local networks. The historians can also share the data with remote systems such as a remote web browser operating one or more web pages. Such web pages or other remote interfaces can also be employed to configure historian functionality across local and or remote networks e.g. if historian data interface system resides on a web server accessible by the remote or web based interfaces .

Moreover data model provides the historian data interface system with a global enterprise wide view of the data collection process allowing the system to dynamically modify a current data collection scheme in response to changing conditions. For example interface system can monitor data collection processes carried out by historians H HN on a real time basis and may determine that a device or level has become over burdened with the data collection process. In response to this determination interface system can instruct the relevant historians to shift data collection responsibility from the over burdened device or level to another device or level with sufficient storage and processing resources to take on the additional data collection load thereby employing system wide resources more effectively. Historian data interface system can determine a suitable historian to take on the new data collection task based in part on the data to be collected the locations of the respective historians relative to the data being collected as determined by data model and the current data collection load seen by the respective historians.

To facilitate one or more of the historian data management features discussed above historian data interface system and its backbone can monitor and track locations of respective items of historian data. For example historian data interface system can implement as part of framework a crawler that crawls the various historians comprising historian mesh network to identify historian data items their respective locations and data types and correlations between historian tags. The crawler can identify for example correlations between historian tags and their associated real time tags within the control system e.g. on an industrial controller . The crawler can index this information including tag correlation information in a continuously updating tag dictionary in local cache memory to facilitate fast identification of an appropriate source for requested data. Historian data interface system can employ references or pointers to facilitate storage and retrieval of the historian data and data model can expose historian tags to provide for locating data across the historian mesh network or other storage devices.

Join component is configured to perform data joins between historian data items in connection with retrieving and provisioning of requested historian data as well as in connection with migration storage caching and the like. In particular join component can leverage data model to determine relationships between historian data items and establish database joins between selected data items based on these determined relationships. For example based on the organizational hierarchy encoded in data model join component may determine that a motor speed value located in a first historian e.g. H is associated with an industrial stamping press whose current or historical status is located in a second historian e.g. H . Based on this determination join component can create a data join between the historian tag for motor speed value located in historian H and the historian tag for e.g. the operating mode of the press or other relevant data item associated with the press located in historian H. Join component can create a record of this join in cache memory . Thereafter in response to a request received at interface component for data relating to the stamping press historian data interface system can quickly retrieve the relevant data based in part on the data joins created by join component and render the data in a selected viewing format via interface component .

One or more embodiments of the framework described herein can also selectively cache historian data to local storage to facilitate high speed service of data requests. For example based on a determination of relative importance of sets of data in the historian network e.g. assigned priority or observed number of accesses historian data interface system can migrate selected sets of data to cache memory so that data with relatively high importance can be delivered more quickly and efficiently in response to a retrieval request. Accordingly caching component can selectively store selected historian data to facilitate servicing high speed requests for the data. Decisions regarding whether a certain set of data is to be cached can be based on an explicit priority value designated to the respective historian tags. For example a user can browse the set of historian tags associated with historians via interface component and flag selected historian tags as having high priority. Alternatively or in addition historian data interface system can infer relative priorities for the historian tags based on learned patterns of access to the respective historian tags as described above in connection with migration component see . For example migration component can monitor access requests for respective items of historian data and learn that a particular subset of data items is requested at a frequency that exceeds a defined frequency setpoint. Accordingly historian data interface system will flag the historian tags associated with the identified data item as having a high priority. Bused an these priority designations caching component will cache the flagged historian data to cache memory to facilitate faster retrieval of the data in response to requests received by interface component .

In one or more embodiments caching component can cache the data items according to a desired degree of priority granularity. That is historian data interface system can support multiple importance levels e.g. high importance moderate importance low importance etc. such that the historian tags can be categorized under one of the multiple importance levels. To ensure that cached data is made available at a speed commensurate with the data s importance caching component can cache the historian data such that respective data items are assigned to one of multiple cache layers where each of the cache layers corresponds to an importance level. Each of the cache layers can be weighted as a function of access speed required. For example caching component will cache historian data flagged as having the highest level of importance at a layer that affords the fastest access speed while lower priority data is cached at layers offering lower access speeds. By caching historian data according to these granular layers historian data interface system can more efficiently utilize processing resources by allotting such resources among different cached data sets in accordance with the relative importance of the data sets.

The cache layers can also provide for progressive JPG like provisioning of historian data representations such that a coarse representation represented by the highest speed layer can initially be provided quickly in order to provide context for a selected set of historian data and progressively finer granularity of detail can be provided as the lower layers are subsequently provided to present a more comprehensive view and understanding of the historian data. For example a user may request to view a graphical representation of a set of historian data points for a selected time interval. The graphical representation may be a line graph that trends the set of historian data points although other types of graphical representations are also possible and within the scope of the present disclosure. When the graphical representation is requested the subset of historian data values cached at the layer having the fastest access speed which may correspond to data points having the highest importance will be retrieved first and represented on the trend providing an initial view of the trend made up of the most important data points. As time progresses historian data values from the other cache layers having progressively slower access speeds will be retrieved and incorporated into the trend at speeds commensurate with the access speeds of the respective cache layers causing the trend to become progressively more detailed as time passes.

Through automatic migration of historian data together with automatic data tag correlation and tracking offered by the historian data interface system historical data storage can be substantially optimized in a dynamic manner without the need to update automated reports that leverage this data to make the reports aware of new locations of the data. For example a report that generates automatically and the end of a shift may be configured to retrieved data from a particular historian tag for inclusion in the report. Conventionally such reports are preconfigured to point to the historian tag with the expectation that the data will be available from that specific tag. However the automatic migration and correlation features of historian data interface system can facilitate migration of such historian data to sources that afford faster access to the data while automatically correlating the original historian tag with the new source. Accordingly the automated report can continue to request data from the original historian tag and historian data interface system will automatically retrieve the data from the new source based on the tag correlation.

Historian data interface system can also include a report component configured to generate reports that leverage the historian data that is historian data cached in cache memory and or non cached historian data residing exclusively on the network of historians . These reports can include but are not limited to daily production summaries event or alarm logs graphical trends charts and the like. depict two exemplary graphical views of historian data that can be rendered by report component e.g. via interface component . illustrates an exemplary graph of a machine s operating state as a function of time. Report component can generate this graph in response to request input received at the interface component . This request input can include for example identification of a machine selection of a type of data requested e.g. machine status a selection of a report type e.g. time graph and a range of times for which the report is to be generated. In response to this input access component similar to access component will access data model and or index information stored in cache memory by index component in order to determine which subset of historian tags contain operating mode data for the selected machine as well as the location s of historian data associated with the identified historian tags. Access component can also determine a most efficient or fastest path to the identified historian data from the origin of the report request. If the one of the identified historian data items resides at multiple locations within the network of historians access component will determine the location nearest to the origin of the report request and retrieve the duplicated data item from the selected location. If one or more of the identified data items have been cached in cache memory as described above access component will retrieve those data items from their respective cache layers in cache memory .

Once access component has retrieved the desired historian data from their respective locations report component will leverage the data to generate graph which plots the operating mode of the machine either Idle Running Blocked or Service over the requested time range. Report component can also support visualization of the retrieved historian data as a tag cloud as illustrated in . For example analysis of the retrieved historian data may determine that from 1 00 to 7 00 the machine experienced four operating statuses Idle Running Blocked and Service. In particular the historian data may indicate that Idle took up 115 minutes Running took up 178 minutes Blocked took up 2 minutes and Service took up 65 minutes. As illustrated on graph these statuses may not necessarily be continuous. Rather for the time period of interest some machine statuses may have occurred multiple times during the time period e.g. during the time period of interest there were four Running durations five Idle durations one blocked duration and one service duration . Report component can determine the total amount of time the machine spent in each status based on these individual duration times.

Based on this information report component will generate tag cloud which depicts the operating modes in the form of strings having font sizes that are a function of the relative amounts of time that the machine was in the respective modes for the selected time period. In the present example tag cloud illustrates that the machine was in Running mode for the greatest percentage of the time period followed in descending order by Idle mode Service mode and Blocked mode. In this way tag cloud offers an overview of the machine s health that can quickly convey to an operator where attention should be focused. Interface component can allow the user to switch between these two views time graph and tag cloud as desired. Although the exemplary tag cloud distinguishes the relative durations of the machine statuses according to font size report component can also use other string characteristics to convey the relative status durations e.g. font color . Moreover depending on the data being viewed report component can generate tag clouds that convey other types of information such as relative production counts of different machines for a given shift or other such information.

It is to be appreciated that the historian data interface system described herein not limited to historian data management within a single plant facility. Rather embodiments described herein can provide a framework that unifies and correlates historian data tags across multiple facilities of an enterprise and provides a common interface for configuring data collection and viewing historian data distributed across the multiple facilities. illustrates an exemplary architecture in which historian data interface system provides a common interface with which to configure manage and view historian data across two facilities of an enterprise at two different locations. Similar to previous examples historian data interface system utilizes a data model similar to data models or to provide unified access to historian data stored in a plurality of data historians distributed across multiple levels of the enterprise. In the present example historian data interface system is located at a first facility Facility of an enterprise. Similar to enterprise of Facility comprises multiple levels including a control or micro level on which industrial devices reside. Industrial devices may have associated therewith respective historians H and H . Facility also includes a historical database residing on a higher level than the control level e.g. a plant level which comprises another data historian H .

Facility is a second plant facility of the enterprise at remote location relative to Facility and also includes one or more industrial devices on a control level and a historical database on a plant level where industrial devices and historical database have associated therewith respective historians H H. Facilities and are communicatively connected over an external network such as the Internet through firewalls and .

Historian data interface system is capable of collectively managing and viewing the multiple historians distributed across the multiple levels and the multiple plant facilities by treating the historians at both locations as a collective mesh network similar to the mesh network in . To this end data model can model the multiple level multiple facility enterprise accordingly.

Turning now to various historian data management functions are described in connection with an example system . In the present example historian data interface system is used to manage and view data distributed across multiple components of an industrial system. The industrial system includes a controller having a data tag Tag A which represents a real time data value e.g. a temperature value a production count a machine status etc. measured or generated by controller in connection with monitoring or controlling an industrial process. A live data server residing on the plant floor or on the business level of the enterprise monitors Tag A in controller reading the live value of Tag A into a data tag of its own Tag LD A . A machine historian located on the plant floor and associated with the machine level of the enterprise e.g. machine level of captures time series historical data relating to a particular machine comprising the industrial process. Accordingly machine historian also monitors Tag A in controller and stores time varying values of Tag A in a series of historical tags for simplicity only two such time series tags Tag A and Tag A are depicted in machine historian . In addition a plant historian residing on a level higher than the control level e.g. plant level of aggregates selected sets of data from the plant floor for historical collection. To this end plant historian monitors the live data tag Tag LD A in live data server and stores historical values of the live data e.g. in Tag LD A . Plant historian also monitors Tags A and A in machine historian and duplicates the values in its own historical tags e.g. Tag ME A and Tag ME A . As a result of this configuration live data server machine historian and plant historian represent three different historians having respective data tags some containing duplicate data e.g. Tag ME A and Tag A and some containing respective real time and historical versions of the same data e.g. Tag LD A and Tag LD A .

Historian data interface system similar to historian data interface systems or can correlate these distributed data tags such that when a subset of the data stored in the data tags is requested historian data interface system makes a determination regarding the best source of the requested data. Historian data interface system can make such transactions substantially transparent to the user allowing the user to access desired data from a single reference point. Accordingly historian data interface system correlates Tag A and Tag ME A as having the same historical data and likewise correlates Tag A and Tag ME A. Historian data interface system also correlates Tag LD A and Tag LD A as being respectively live and historical versions of Tag A in controller .

In the present example Tag ME A on plant historian represents the same data as Tag A on machine historian . Accordingly historian data interface system will automatically correlate these two data tags. Consequently when a user at historian data interface system selects the historian tag representing Tag ME A historian data interface system e.g. using access component will determine which source of the data Tag ME A at plant historian or Tag A at machine historian is capable of providing the requested data item more quickly based on such considerations as the physical locations of the data sources relative to historian data interface system processing load currently seen by the respective data sources hardware specifications of the respective data sources etc. Thus when data items are historized in multiple historians historian data interface system determines the best source of the data items in response to requests for the data.

Historian data interface system can leverage tag correlation in a number of ways to improve efficiency and speed of historian data presentation. For example if a user of historian data interface system selects a historian tag from the tag hierarchy for inclusion in a graphical trend and the selected data is available in an alternate tag on a higher speed historian elsewhere on the historian network or in cache memory if the selected data has been previously cached historian data interface system may select the alternate tag as the source of the data for trending purposes. In another example if a selected historian tag has been added to a live data trend and the historian tag or its associated historian becomes unavailable historian data interface system can locate another source for the data based on previously determined historian tag correlations. In yet another exemplary scenario if a user created data trend is trending data from a selected historian tag and historian data interface system determines that another historian tag having a newer version of the selected data becomes available historian data interface system may automatically replace the source of the data trend from the previously selected historian tag to the newly available data tag.

Historian data interface system can also facilitate automated data aggregation. For example in response to a request for an aggregated set of historian data such as when a report is being generated requiring data from multiple historians historian data interface system can make a determination that such requests may be handled faster and more efficient by a particular historian. Accordingly historian data interface system will automatically forward such requests to the identified historian for processing. This can reduce calculation loads on an interface server allowing for processing of aggregations at a server determined to provide the best performance.

Historian data interface system can also facilitate role based access to the data available in the various distributed historians. For example a user with administrator rights can use historian data interface system to associated respective historians groups of historians or data tags with a particular level of access privilege and associate users with respective access levels. These access levels can be based on a user s role in the enterprise e.g. operator plant manager accounting etc. . Users accessing the historian network through their own client interfaces will then be afforded access to the historians and associated data according to their role and the access privileges defined for their respective access level. The access levels can define for example which data sets a user is allowed to view e.g. data sets associated with a particular production area whether the user is granted write privileges to the data e.g. in order that incorrect historian values can be re written with correct values etc. Thus users at all levels of the enterprise can view historian data located throughout the enterprise hierarchy according to their respective roles.

In order to provide for or aid in the numerous determinations or inferences described herein e.g. inferring best historian data or historian tags to access components of the framework can examine the entirety or a subset of the data to which it is granted access and can provide for reasoning about or infer states of the system environment etc. from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data.

Such inference can result in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources. Various classification explicitly and or implicitly trained schemes and or systems e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines etc. can be employed in connection with performing automatic and or inferred action in connection with the claimed subject matter.

A classifier can map an input attribute vector x x1 x2 x3 x4 xn to a confidence that the input belongs to a class as by f x confidence class . Such classification can employ a probabilistic and or statistical based analysis e.g. factoring into the analysis utilities and costs to prognose or infer an action that a user desires to be automatically performed. A support vector machine SVM is an example of a classifier that can be employed. The SVM operates by finding a hyper surface in the space of possible inputs where the hyper surface attempts to split the triggering criteria from the non triggering events. Intuitively this makes the classification correct for testing data that is near but not identical to training data. Other directed and undirected model classification approaches include e.g. na ve Bayes Bayesian networks decision trees neural networks fuzzy logic models and probabilistic classification models providing different patterns of independence can be employed. Classification as used herein also is inclusive of statistical regression that is utilized to develop models of priority.

In addition a user can interact with the graphical trend to overlay additional related information and historian data interface system can leverage the predetermined historian tag correlations to facilitate location and display of the additional data. For example while a data point is being trended a requester can click a button on the trend to overlay alarm information. In response historian data interface system will determine the relevant historians and historian tags based on the historian tag correlations and retrieve relevant alarms for the specified time span and tags being displayed.

One or more embodiments of the historian data interface system described herein can also include features that facilitate migration of historian data to a cloud platform. illustrates an exemplary architecture that leverages a cloud platform in connection with storage management and provision of historian data. As described in previous examples historian data interface system can include a data model similar to data models and that facilitates configuration and management of historian network . Historian network comprises a plurality of data historians distributed across multiple levels of an enterprise and or across multiple plant facilities of the enterprise. Historian data interface system also includes cache memory similar to cache memory of which contains indexed information regarding locations content and relationships of the various data tags located throughout historian network . Cache memory or another memory associated with historian data interface system can also have stored thereon cached values of selected subsets of historian data that have been flagged as having particular importance so that the cached values can be retrieved more quickly in response to a request for the data.

In the present example historian data interface system also includes a cloud interface component which can facilitate migration of historian information to a cloud platform . Historian information that can be migrated to cloud platform includes historian tag data historian configuration information data model or other historian information. Cloud platform can be any infrastructure that allows cloud based storage and or computing services to be accessed and utilized by cloud capable devices. Cloud platform can be a public cloud accessible via the Internet by devices having Internet connectivity and appropriate authorizations to access the cloud platform . In some scenarios cloud platform can be provided by a cloud provider as a platform as a service PaaS allowing a subscriber to utilize cloud storage and processing resources as desired. Alternatively cloud platform can be a private cloud operated internally by the enterprise. An exemplary private cloud can comprise a set of servers hosting the cloud storage and processing resources and residing on a corporate network protected by a firewall.

Providing historian data interface system with cloud capability can provide a number of advantages particular to industrial automation. For one cloud based storage offered by cloud platform can be easily scaled to accommodate the large quantities of data generated daily by an industrial enterprise. Moreover multiple industrial facilities at different geographical locations can migrate their respective historian data to the cloud for aggregation collation collective analysis and enterprise level reporting without the need to establish a private network between the facilities. In another exemplary application cloud based diagnostic applications can monitor the health of respective automation systems or their associated industrial devices across an entire plant or across multiple industrial facilities that make up an enterprise. Cloud based lot control applications can be used to track a unit of product through its stages of production and collect production data for each unit as it passes through each stage e.g. barcode identifier production statistics for each stage of production quality test data abnormal flags etc. . These industrial cloud computing applications are only intended to be exemplary and the systems and methods described herein are not limited to these particular applications.

Migration component can be configured to migrate or replicate selected sets of historian data to cloud storage on cloud platform . This can include replicating contents of cache memory to cloud storage migrating or replicating contents of selected historian tags distributed across historian network etc. Migration component can be configured to perform these migrations periodically e.g. daily weekly etc. or on demand. Migration component can also replicate data model to the cloud platform to yield a replicated data model which can be leveraged by a cloud based historian data interface system for remote access and management of historian network to be described in more detail below . In this way a local set of historians and historian data can be virtualized on a cloud based framework providing a reliable backup of the historian data and configurations as well as making the historian data available for remote access via the cloud platform .

Historian data that has been replicated or migrated to cloud storage can be accessed remotely by cloud capable client devices such as mobile phones tablet computers desktop computers or other suitable devices. Replicated data model can allow the data to be viewed on client devices in the context of the overall enterprise hierarchy.

Also one or more embodiments of the historian data interface system described herein can be embodied as a cloud based historian system. illustrates an exemplary architecture for such a cloud based historian system. In this example historian data interface system resides and executes on cloud platform as a cloud based service. In some scenarios access to cloud platform and historian data interface system can be provided to customers as a subscription service. Alternatively historian data interface system can be owned and maintained by the end user and executed on a cloud platform belonging to or provisioned to the user. If cloud platform is a web based cloud devices on the plant level such as historians H HN comprising historian network may interact with the historian data interface system directly or via the Internet. In an exemplary configuration historians H HN may interact with historian data interface system through a cloud gateway device not shown where the historians H HN connect to the cloud gateway through a physical or wireless local area network or radio link. In another exemplary configuration historians H HN may access the cloud platform directly using respective integrated cloud interfaces.

Cloud based historian data interface system includes a data model similar to data models or and can perform any of the configuration management viewing and reporting functions described above but does so remotely from cloud platform . For example historian data interface system can provide a common historian interface to client devices having Internet capability and suitable access privileges. Accordingly historian data interface system includes a client interface component configured to receive data retrieval requests from client devices and to render selected subsets of historian data to the client devices in response to the requests. Through client interface component historian data interface system can deliver any preconfigured interface screens to the client devices such as the interfaces depicted in and allow the user to remotely request and view historian data stored in historians H HN through interaction with these screens. Historian data interface system can also facilitate remote configuration of historians H HN via cloud platform .

Since historian data can be served to diverse types of client devices e.g. desktop computers mobile phones tablet computers laptop computers HMI terminals television monitors etc. client interface component can render a given display screen in a format suitable for display on the client device invoking the screen and in a manner that makes efficient use of the device s resources. For example if client interface component receives a request for a historian display screen from a cellular phone the client interface component can deliver the requested display screen to the cellular phone in a format adapted to the display capabilities of the phone e.g. at a display ratio and resolution suitable for display on the phone s screen .

In another exemplary application migration component can be configured to replicate or migrate selected sets of historian data from historians H HN to cloud storage on cloud platform allowing the data to be quickly retrieved by client devices . Migration component can also replicate historian data residing on cloud storage back to historians H HN if required providing a mechanism for reliable cloud based backup storage of historian data. To facilitate access level granularity cloud storage associated with cloud platform can be partitioned such that portions of cloud storage can be selectively masked or unmasked to respective parties. With cloud storage partitioned in this manner migration component can be configured to migrate or replicate a first subset of historian data to a first partition having full public access settings and a second subset of historian data to a second partition set as private where access to historian data on the second partition is granted only to users having suitable access privileges.

In some embodiments cloud based historian data interface system can also be configured to perform cloud side analytics on historian data stored in historians H HN and generate reports alarms or notifications based on results of these analytics. For example historian data interface system can include a notification component configured to issue notifications to selected client devices in response to a determination that a subset of historian data stored in historians H HN has met one or more predefined conditions. These conditions can include for example detecting that a particular process value has exceeded a defined setpoint detecting a transition to a particular machine state detecting an alarm condition determining that a specified production goal has been achieved or other such conditions that can be detected through analysis of the historian data.

When notification component detects an actionable condition within the historian data it can identify one or more specific plant employees who are to receive the notification as well as information identifying a user notification device phone number or email address for each person to be notified. Notification component can determine this notification information for example by cross referencing a configuration file not shown that identifies which personnel are to be notified for a given type of condition one or more notification methods for each identified person and or other relevant information. Notification component can access this configuration file to determine for example which personnel should be notified which user devices should receive the notification a required action to be taken by the recipient a due date for the action a format for the notification and or other relevant information. The configuration file can maintain multiple separate personnel lists respectively associated with different types of actionable situations. In some embodiments the personnel list selected for a given notification can be at least partly a function of a context associated with the historian data as determined by data model . For example if a subset of historian data indicates that a process parameter has exceeded a setpoint value notification component can identify the list of personnel to receive the notification based on the facility area and or workcell to which the process parameter relates.

It is to be appreciated that the common interface and framework described herein can be accessed and utilized across many types of devices including but not limited to desktops machines equipment mobile devices cell phones programmable logic controllers PLCs controllers servers mobile phones tablets etc. The common interface and framework can also be implemented as part of a user interface browser webpage etc.

At historian tags associated with respective historians distributed across the industrial enterprise are identified. This can be achieved for example by accessing the respective historians and determining available data items e.g. data tags available for retrieval from the respective historians. Historian tags can include historical data tags within machine or plant historians real time data tags within an industrial controller or live data server data registers within a smart meter or other such sources of data.

At correlations between the historian tags identified at can be established based in part on the model. For example based on contexts provided by the data model it can be determined that a first data tag representing a temperature value relates to a particular machine. Accordingly the first data tag can be correlated with other tags relating to the same machine e.g. a machine status tag . In another example it may be determined based on the data model that multiple different data tags located on different historians represent the same data item. As such these data tags can be correlated as representing the same data. The data model makes it possible to establish correlation between historian tags independently of the physical location of the respective tags. That is correlations can be made between tags residing on different historians or between tags residing at different facilities.

At functionality of the multiple historians is managed based in part on the correlations established at step . For example if a particular data item is requested at a common historian interface and the correlations indicate that the requested data item is available from multiple different historian tags a determination can be made regarding the best source from which to retrieve the requested data item based for example on which historian is closest to the source of the request which historian has the most available processing resources etc. . In another example if a historian currently responsible for collecting a particular data item is experiencing performance degradation as a result of becoming overloaded with processing tasks a backup historian capable of collecting the data item can be identified based on the data model and responsibility for collecting the data item can be shifted from the original historian to the backup historian.

In response to the determination made at a second historian capable of serving high volumes of data retrieval requests more quickly than the first historian is identified at . This determination can be made based at least in part on a data model of the enterprise that maintains nominal and or actual processing capabilities of respective historians in the pool of historians. At the subset of historian data is migrated from the first historian to the second historian thereby improving responsiveness of the system to requests for the subset of data.

At data joins between the historian data items are established based on determined relationships between the data items. For example a data model e.g. data model can be referenced to determine relationships between historian data items and establish database joins between selected historian data items based on these determined relationships. At the index and join information created at steps and are leveraged to locate historian data within the network of historians.

Embodiments systems and components described herein as well as industrial control systems and industrial automation environments in which various aspects set forth in the subject specification can be carried out can include computer or network components such as servers clients programmable logic controllers PLCs automation controllers communications modules mobile computers wireless components control components and so forth which are capable of interacting across a network. Computers and servers include one or more processors electronic integrated circuits that perform logic operations employing electric signals configured to execute instructions stored in media such as random access memory RAM read only memory ROM a hard drives as well as removable memory devices which can include memory sticks memory cards flash drives external hard drives and so on.

Similarly the term PLC or automation controller as used herein can include functionality that can be shared across multiple components systems and or networks. As an example one or more PLCs or automation controllers can communicate and cooperate with various network devices across the network. This can include substantially any type of control communications module computer Input Output I O device sensor actuator and human machine interface HMI that communicate via the network which includes control automation and or public networks. The PLC or automation controller can also communicate to and control various other devices such as I O modules including analog digital programmed intelligent I O modules other programmable controllers communications modules sensors actuators output devices and the like.

The network can include public networks such as the Internet intranets and automation networks such as control and information protocol CIP networks including DeviceNet ControlNet and Ethernet IP. Other networks include Ethernet DH DH Remote I O Fieldbus Modbus Profibus CAN wireless networks serial protocols and so forth. In addition the network devices can include various possibilities hardware and or software components . These include components such as switches with virtual local area network VLAN capability LANs WANs proxies gateways routers firewalls virtual private network VPN devices servers clients computers configuration tools monitoring tools and or other devices.

In order to provide a context for the various aspects of the disclosed subject matter as well as the following discussion are intended to provide a brief general description of a suitable environment in which the various aspects of the disclosed subject matter may be implemented.

With reference to an example environment for implementing various aspects of the aforementioned subject matter includes a computer . The computer includes a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .

The system bus can be any of several types of bus structure s including the memory bus or memory controller a peripheral bus or external bus and or a local bus using any variety of available bus architectures including but not limited to 8 bit bus Industrial Standard Architecture ISA Micro Channel Architecture MSA Extended ISA EISA Intelligent Drive Electronics IDE VESA Local Bus VLB Peripheral Component Interconnect PCI Universal Serial Bus USB Advanced Graphics Port AGP Personal Computer Memory Card International Association bus PCMCIA and Small Computer Systems Interface SCSI .

The system memory includes volatile memory and nonvolatile memory . The basic input output system BIOS containing the basic routines to transfer information between elements within the computer such as during start up is stored in nonvolatile memory . By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable PROM EEPROM or flash memory. Volatile memory includes random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM .

Computer also includes removable non removable volatile non volatile computer storage media. illustrates for example a disk storage . Disk storage includes but is not limited to devices like a magnetic disk drive floppy disk drive tape drive Jaz drive Zip drive LS 100 drive flash memory card or memory stick. In addition disk storage can include storage media separately or in combination with other storage media including but not limited to an optical disk drive such as a compact disk ROM device CD ROM CD recordable drive CD R Drive CD rewritable drive CD RW Drive or a digital versatile disk ROM drive DVD ROM . To facilitate connection of the disk storage to the system bus a removable or non removable interface is typically used such as interface .

It is to be appreciated that describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system which can be stored on disk storage acts to control and allocate resources of the computer . System applications take advantage of the management of resources by operating system through program modules and program data stored either in system memory or on disk storage . It is to be appreciated that one or more embodiments of the subject disclosure can be implemented with various operating systems or combinations of operating systems.

A user enters commands or information into the computer through input device s . Input devices include but are not limited to a pointing device such as a mouse trackball stylus touch pad keyboard microphone joystick game pad satellite dish scanner TV tuner card digital camera digital video camera web camera and the like. These and other input devices connect to the processing unit through the system bus via interface port s . Interface port s include for example a serial port a parallel port a game port and a universal serial bus USB . Output device s use some of the same type of ports as input device s . Thus for example a USB port may be used to provide input to computer and to output information from computer to an output device . Output adapter is provided to illustrate that there are some output devices e.g. monitors speakers and printers among other output devices which require special adapters. The output adapter includes by way of illustration and not limitation video and sound cards that provide a means of connection between the output device and the system bus . It should be noted that other devices and or systems of devices provide both input and output capabilities such as remote computer s .

Computer can operate in a networked environment using logical connections to one or more remote computers such as remote computer s . The remote computer s can be a personal computer a server a router a network PC a workstation a microprocessor based appliance a peer device or other common network node and the like and typically includes many or all of the elements described relative to computer . For purposes of brevity only a memory storage device is illustrated with remote computer s . Remote computer s is logically connected to computer through a network interface and then physically connected via communication connection . Network interface encompasses communication networks such as local area networks LAN and wide area networks WAN . LAN technologies include Fiber Distributed Data Interface FDDI Copper Distributed Data Interface CDDI Ethernet IEEE 802.3 Token Ring IEEE 802.5 and the like. WAN technologies include but are not limited to point to point links circuit switching networks like Integrated Services Digital Networks ISDN and variations thereon packet switching networks and Digital Subscriber Lines DSL .

Communication connection s refers to the hardware software employed to connect the network interface to the bus . While communication connection is shown for illustrative clarity inside computer it can also be external to computer . The hardware software necessary for connection to the network interface includes for exemplary purposes only internal and external technologies such as modems including regular telephone grade modems cable modems and DSL modems ISDN adapters and Ethernet cards.

What has been described above includes examples of the subject innovation. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the disclosed subject matter but one of ordinary skill in the art may recognize that many further combinations and permutations of the subject innovation are possible. Accordingly the disclosed subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims.

In particular and in regard to the various functions performed by the above described components devices circuits systems and the like the terms including a reference to a means used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. a functional equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary aspects of the disclosed subject matter. In this regard it will also be recognized that the disclosed subject matter includes a system as well as a computer readable medium having computer executable instructions for performing the acts and or events of the various methods of the disclosed subject matter.

In addition while a particular feature of the disclosed subject matter may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes and including and variants thereof are used in either the detailed description or the claims these terms are intended to be inclusive in a manner similar to the term comprising. 

In this application the word exemplary is used to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion.

Various aspects or features described herein may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick key drive . . . .

