---

title: Creating and viewing digital note cards
abstract: Systems, techniques, and methods are presented for creating digital note cards and presenting a graphical user interface for interacting with digital note cards. For example, content from an electronic book can be displayed in a graphical user interface. Input can be received in the graphical user interface highlighting a portion of the content and creating a note, the note including user generated content. A digital note card can be created where one side of the digital note card includes the highlighted text, and the other side of the digital note card includes the note. The digital note card can be displayed in the graphical user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09275028&OS=09275028&RS=09275028
owner: Apple Inc.
number: 09275028
owner_city: Cupertino
owner_country: US
publication_date: 20120817
---
This application claims priority to U.S. Provisional Application Ser. No. 61 525 701 entitled CREATING AND VIEWING DIGITAL NOTE CARDS filed on Aug. 19 2011 the entire contents of which are incorporated herein by reference.

Physical books provide a reader with the ability to augment the text presented on the pages of a book. For example a reader can use a highlighter to highlight or underline text on a page in a physical book. The reader can also augment the text by writing notes and comments in line with the text or in the margins surrounding the text. To review the highlighted text notes or comments the reader would need to revisit the physical pages containing the highlighted text notes or comments. Alternatively a reader can make note cards and include text from a book personal notes and comments on the note cards.

Many types of display devices can be used to display text. For example text from ebooks can be stored on and read from a digital device such as an electronic book reader ebook reader personal digital assistant PDA mobile phone a laptop computer a tablet computer or the like. An electronic book can be purchased from an online store on the World Wide Web and downloaded to such a device. The device can have buttons for scrolling through the pages of the electronic book as the user reads.

This disclosure describes technology which can be implemented as a method electronic device and or computer software embodied in a computer readable medium and which among other things can be used to create digital note cards and present a graphical user interface to interact with digital note cards.

In general in one aspect a method performed by one or more processes executing on a computer system includes displaying content from an electronic book in a graphical user interface receiving first input highlighting a portion of the content receiving second input creating a note the note including user generated content creating a first digital note card where one side of the first digital note card includes the highlighted text and the other side of the first digital note card includes the note and displaying in the graphical user interface the first digital note card.

This and other aspects can include one or more of the following features. A stack of digital note cards may be displayed in the graphical user interface where a front of the first digital note card can be displayed on the top of the stack the front containing the highlighted text. Input may be received requesting to flip the first digital note card over and responsive to the received input request the first digital note card can be flipped over in a series of graphical transitions and a back of the first digital note card can be displayed in the graphical user interface the back containing the note. Further input requesting to move the first digital note card to the bottom of the stack of digital note cards can be received and responsive to the received input the first digital note card can be visually moved to the bottom of the digital note card stack in a series of graphical transitions and a front of a second digital note card can be displayed on the top of the digital note card stack and at least a portion of the first digital note card can be displayed at the bottom of the digital note card stack. Further input may be received requesting to move a second digital note card at the bottom of the digital note card stack to the top of the digital note card stack and responsive to the received input the second digital note card can be visually moved to the top of the digital note card stack in a series of graphical transitions and a front of the second digital note card can be displayed on the top of the digital note card stack and at least a portion of the first digital note card can be displayed below the second digital note card. The digital note cards contained in the digital note card stack can be dynamically filtered based on user feedback indicating a level of comprehension for at least one digital note card contained in the digital note card stack. The digital note cards in the digital note card stack can be filtered based at least in part on a color associated with the highlighted portion of content contained on the digital note cards. The digital note card stack may include in addition to the first digital note card a plurality of vocabulary digital note cards where the front of the vocabulary digital note cards include a vocabulary word from a glossary of vocabulary words included with the ebook and a back of the vocabulary digital note cards include a corresponding definition of the vocabulary word.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features objects and advantages will be apparent from the description and drawings and from the claims.

In some implementations GUI of content display device can be a touch sensitive surface. The touch sensitive surface can receive user input through various input techniques. Example touch surface inputs include touch inputs and gesture inputs. A touch input is an input where a user holds his or her finger or other input tool at a particular location. A gesture input is an input where a user moves his or her finger or other input tool . An example gesture input is a swipe input where a user swipes his or her finger or other input tool across the screen of a touch sensitive surface. In some implementations inputs can be in direct contact with a touch sensitive surface or within a particular vertical distance of a touch sensitive surface e.g. within one or two inches of a touch sensitive surface . Users can simultaneously provide input at multiple locations on a touch sensitive surface. For example inputs simultaneously touching at two or more locations can be received. Example touch surface input types can include but are not limited to swipe press and hold tap double tap flick pinch multiple finger tap multiple finger press and hold and press and slide.

In some implementations content display device can implement various device functionalities. As part of one or more of these functionalities content display device can present GUI on a touch sensitive surface of content display device . Graphical user interface can respond to input received from a user for example through the touch sensitive surface. For example a user can invoke an electronic book application on the device for accessing a stored electronic book ebook .

In some implementations a user can visually distinguish portions of text contained in an ebook presented in GUI . For example while reading an ebook a user can select text and elect to visually distinguish the selected text by highlighting the text e.g. with a background color or pattern or applying another visually distinguishing quality to the text e.g. underling italics strike through bold etc. . A highlight can be visually displayed on GUI using any suitable color e.g. yellow green blue purple or any suitable background pattern e.g. checkered horizontal stripes vertical stripes etc. 

In some implementations a user can elect to create a note and attach associate the note with selected text in an ebook. For example a user can select a portion of text displayed in GUI and through one or more controls presented on GUI the user can elect to create and attach a note with the selected text. In some implementations a note can include text input by a user through a virtual keyboard displayed on GUI . In other implementations a note can include any number of suitable media forms. For example a note can include embedded audio video HTML hypertext and the like.

In some implementations a user can add a note to highlight by selecting note button in HUD . For example in response to tap input selecting note button GUI shown in can be presented on content display device . As described below GUI provides a user interface for a user to input content to be included in note attached to highlighted text.

In other implementations a user can delete highlight by selecting delete button in HUD . In other implementations a user can navigate to additional context menus for HUD by selecting button . For example in response to a user tap at input position in additional context menu items and can be displayed in HUD shown in . In some implementations copy button corresponds to a copy feature for copying the text highlighted by highlight copy button corresponds to a note option for creating and attaching a note to highlighted text search button corresponds to a search option for searching the text highlighted by highlight and share button corresponds to a share option for sharing the text highlighted by highlight . In some implementations context menu can be presented on GUI in response to receiving a double tap input at input position on previously highlighted text

In some implementations highlights presented in notes view can be filtered by a highlight property associated with the highlights. For example notes view can be filtered such that only highlights with particular highlight color are displayed in notes view .

In some implementations GUI includes note cards button to toggle between GUI and a note cards view e.g. GUI shown in . If no highlights or notes exist for a chapter selected in navigation window and no vocabulary terms are available for the current chapter notecards button can be disabled.

In digital note cards can be created from vocabulary terms included in a glossary of an electronic book. At content display device can receive vocabulary terms from an electronic book for example from a glossary created by a user of the ebook. At a note card can be created for each vocabulary term included in the glossary where a vocabulary word is on one side of the note card and the corresponding definition for the vocabulary word is on the other side of the note card. At the vocabulary note cards can be presented e.g. as described below to a user of content display device along with the user generated content note cards created by the process described in connection with .

In some implementations a user can interact with note cards contained in note card stack through graphical user interface . For example GUI can receive user input to flip the top note card e.g. note card in note card stack over. In some implementations a single tap received by GUI on note card can cause note card to be flipped over thus presenting the back or other side of note card in GUI . In some implementations upon receiving a tap input e.g. tap input note card can be visually flipped over in one or more visual frames resulting in an animation of a note card being flipped over described in more detail below. In some implementations if no note is associated with highlighted text on the front of note card note card will not be flipped over in response to tap input . Alternatively if no note is associated with highlighted text note card can still be flipped over in response to tap input but the back of note card may be blank.

In some implementations a user can interact with GUI to move the top note card e.g. note card in note card stack to the bottom of note card stack . For example a horizontal swipe input on top note card can cause note card to be moved to the bottom of note card stack . In some implementations the top notecard s position on GUI changes relative to the position of a swipe input. As the top note card s position reaches a predetermined location in GUI the top note card can be snapped to the bottom of the note card stack. As the top note card is snapped to the bottom of the note card stack if the note card was flipped over the note card can be reset such that front of the notecard is facing the top of the note card stack.

In some implementations a portion of the last note card or bottom note card of note card stack can be presented in GUI . For example in GUI a corner of bottom note card can visually be shown indicating that note card is at the bottom of note card stack . In some implementations bottom note card can be moved to the top of note card stack . For example in response to user tap or swipe on the visible portion of note card note card can be re positioned at the top of note card stack .

If a note card in note card stack contains more text than can visibly be shown on the note card a vertical swipe input can scroll to other portions of text not visibly shown in GUI . In some implementations a double tap input anywhere on the top note card in note card stack can exit the note card study mode shown in GUI and return the user to the notes view GUI shown in with the highlight corresponding to the note card on the top of stack being displayed in GUI .

In some implementations double tapping a note portion of the top note card in note card stack e.g. when the note card is flipped over presenting the corresponding note can exit the note card study mode and navigate the user to my notes view with the keyboard expanded for editing the current note. Alternatively a virtual keyboard may be displayed in GUI allowing a user to edit the note directly in the note card view.

In some implementations HUD can include an option to view note cards in note card stack in a live interactive way. For example visual display device can determine a subset of note cards included in note card stack that a user is likely to be more interested in viewing. In some implementations a user can dynamically remove note cards from note card stack for example if the user is familiar with the note card and no longer wants to view the note card. In addition user feedback can be provided in graphical user interface allowing a user to provide feedback indicating a level of comprehension of a note card. Visual display device may then reorganize note card stack based on the user feedback resulting in for example certain note cards in note card stack being displayed more often than other note cards in note card stack .

Sensors devices and subsystems can be coupled to peripherals interface to facilitate multiple functionalities. For example positioning system motion sensor light sensor and proximity sensor can be coupled to the peripherals interface to facilitate various positioning orientation lighting and proximity functions. For example in some implementations light sensor can be utilized to facilitate adjusting the brightness of touch screen . In some implementations motion sensor e.g. an accelerometer velicometer or gyroscope can be utilized to detect movement of the device. Accordingly display objects and or media can be presented according to a detected orientation e.g. portrait or landscape.

Other sensors can also be connected to peripherals interface such as a temperature sensor a biometric sensor a gyroscope or other sensing device to facilitate related functionalities.

Location determination functionality can be facilitated through positioning information from positioning system . Positioning system in various implementations can be a component internal to the device or can be an external component coupled to the device e.g. using a wired connection or a wireless connection . In some implementations positioning system can include a Global Navigation Satellite System GNSS receiver or chipset such as a Global Positioning System GPS receiver or chipset and a positioning engine e.g. including a Kalman filter operable to derive positioning information from received GPS satellite signals. In other implementations positioning system can include a magnetometer to provide direction indications e.g. magnetic or true North . In still further implementations positioning system can use wireless signals e.g. cellular signals or 3G WiFi or IEEE 802.11 signals to determine location information associated with the device. Hybrid positioning can also be used. Other positioning systems are possible.

Camera subsystem and optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS optical sensor can be utilized to facilitate camera functions such as capturing photographs and video clips.

Communication functions can be facilitated through one or more communication subsystems . Communication subsystem s can include one or more wireless communication subsystems and one or more wired communication subsystems. Wireless communication subsystems can include radio frequency receivers and transmitters and or optical e.g. infrared receivers and transmitters. Wired communication system can include a port device e.g. a Universal Serial Bus USB port or some other wired port connection that can be used to establish a wired connection to other computing devices such as other communication devices network access devices a personal computer a printer a display screen or other processing devices capable of receiving and or transmitting data. The specific design and implementation of communication subsystem can depend on the communication network s or medium s over which the device is intended to operate. For example the device may include wireless communication subsystems designed to operate over a global system for mobile communications GSM network a GPRS network an enhanced data GSM environment EDGE network 802.x communication networks e.g. Wi Fi WiMax or 3G networks code division multiple access CDMA networks and a Bluetooth network. Communication subsystems may include hosting protocols such that the device may be configured as a base station for other wireless devices. As another example the communication subsystems can allow the device to synchronize with a host device using one or more protocols such as for example the TCP IP protocol HTTP protocol UDP protocol and any other known protocol.

Audio subsystem can be coupled to speaker and one or more microphones . One or more microphones can be used for example to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions.

I O subsystem can include touch screen controller and or other input controller s . Touch screen controller can be coupled to a touch surface . Touch surface and touch screen controller can for example detect contact and movement or break thereof using any of a number of touch sensitivity technologies including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch surface or proximity to touch surface .

Other input controller s can be coupled to other input control devices such as one or more buttons rocker switches thumb wheel infrared port USB port and or a pointer device such as a stylus. The one or more buttons not shown can include an up down button for volume control of speaker and or microphone . A user of the device may customize a functionality of one or more of the buttons. Touch surface can be used to implement virtual or soft buttons and or a keyboard.

In some implementations the device can present recorded audio and or video files such as MP3 AAC and MPEG files. In some implementations the device can include the functionality of an MP3 player such as an iPhone .

Memory interface can be coupled to memory . Memory can include high speed random access memory and or non volatile memory such as one or more magnetic disk storage devices one or more optical storage devices and or flash memory e.g. NAND NOR . Memory can store operating system such as Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks. Operating system may include instructions for handling basic system services and for performing hardware dependent tasks. In some implementations the operating system can be a kernel e.g. UNIX kernel .

Memory may also store communication instructions to facilitate communicating with one or more additional devices one or more computers and or servers. Communication instructions can also be used to select an operational mode or communication medium for use by the device based on a geographic location obtained by GPS Navigation instructions of the device. Memory may include graphical user interface instructions to facilitate graphic user interface processing such as described in reference to sensor processing instructions to facilitate sensor related processing and functions phone instructions to facilitate phone related processes and functions electronic messaging instructions to facilitate electronic messaging related processes and functions web browsing instructions to facilitate web browsing related processes and functions media processing instructions to facilitate media processing related processes and functions GPS Navigation instructions to facilitate GPS and navigation related processes and instructions e.g. mapping a target location camera instructions to facilitate camera related processes and functions and instructions for an ebook reader application for reading ebooks and for creating and interacting with note cards as described in reference to . Memory may also store other software instructions not shown such as Web video instructions to facilitate web video related processes and functions and or Web shopping instructions to facilitate web shopping related processes and functions. In some implementations media processing instructions are divided into audio processing instructions and video processing instructions to facilitate audio processing related processes and functions and video processing related processes and functions respectively.

Each of the above identified instructions and applications can correspond to a set of instructions for performing one or more functions described above. These instructions need not be implemented as separate software programs procedures or modules. Memory can include additional instructions or fewer instructions. Furthermore various functions of the device may be implemented in hardware and or in software including in one or more signal processing and or application specific integrated circuits.

Devices and can also establish communications by other means. For example wireless device can communicate with other wireless devices e.g. other devices or cell phones etc. over wireless network . Likewise devices and can establish peer to peer communications e.g. a personal area network by use of one or more communication subsystems such as a Bluetooth communication device. Other communication protocols and topologies can also be implemented.

Devices or can communicate with one or more services over one or more wired and or wireless networks . These services can include for example online resources such as an online store for accessing purchasing and or downloading digital books to the devices and or . Online resources can also include a Web based ebook reader application that can be used by subscribing users through a browser.

The features described can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. The features can be implemented in a computer program product tangibly embodied in an information carrier e.g. in a machine readable storage device for execution by a programmable processor and method steps can be performed by a programmable processor executing a program of instructions to perform functions of the described implementations by operating on input data and generating output.

The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language e.g. Objective C Java including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors or cores of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer can communicate with mass storage devices for storing data files. These mass storage devices can include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or that includes a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

One or more features or steps of the disclosed embodiments can be implemented using an Application Programming Interface API . An API can define on or more parameters that are passed between a calling application and other software code e.g. an operating system library routine function that provides a service that provides data or that performs an operation or a computation.

The API can be implemented as one or more calls in program code that send or receive one or more parameters through a parameter list or other structure based on a call convention defined in an API specification document. A parameter can be a constant a key a data structure an object an object class a variable a data type a pointer an array a list or another call. API calls and parameters can be implemented in any programming language. The programming language can define the vocabulary and calling convention that a programmer will employ to access functions supporting the API.

In some implementations an API call can report to an application the capabilities of a device running the application such as input capability output capability processing capability power capability communications capability etc.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. For example many of the examples presented in this document were presented in the context of an ebook. The systems and techniques presented herein are also applicable to other electronic text such as electronic newspaper electronic magazine electronic documents etc. Elements of one or more implementations may be combined deleted modified or supplemented to form further implementations. As yet another example the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

