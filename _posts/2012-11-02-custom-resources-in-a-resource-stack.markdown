---

title: Custom resources in a resource stack
abstract: A resource stack managed by a resource stack provider is created based on a resource stack template that integrates a custom resource from a second provider into the resource stack using a notification system with the second provider. For example, a customer may create a template that defines a resource stack that comprises resources available from the resource stack provider and one or more custom resources provided by a second provider. When a resource stack is created, resources available from the resource stack provider may be provisioned. Custom resources may be initialized by notifying the provider of the custom resource of the requested integration of the custom resource with the resource stack and requested configuration details. The custom resource provider may respond with an indication of successful integration when the custom resource has been successfully initialized. After initializing the resources, the resource stack may be enabled for use.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09058219&OS=09058219&RS=09058219
owner: Amazon Technologies, Inc.
number: 09058219
owner_city: Reno
owner_country: US
publication_date: 20121102
---
Organizations may utilize various computing resources in support of their operations. Computing include various types of resources such as computing resources data storage resources and network resources. Computing resources are often also provided as a service. A provider of such services may provide access to a machine to host an application storage to store application data cache to quickly respond to repeated data requests and networking to enable communication between resources. The resources may be physically hosted in a data center for multiple data centers and remotely and programmatically managed by others. By making use of the data center services a customer may pay for computing and or resource use from a provider rather than purchasing anticipated hardware needs. This enables a customer to expand and contract use of computing services according to demand. For example an application may be configured to request more storage as needed rather than a developer or administrator monitoring and anticipating use. This on demand infrastructure model can be referred to as Infrastructure as a Service IaaS . A collection of resources in an IaaS model is often referred to as a resource stack.

Other provider models include Platform as a Service PaaS and Software as a Service SaaS . In a PaaS model a provider provides an execution environment in which a developer may construct an application. For example a provider may provide an operating system programming language execution environment database and webserver in which a customer may construct a web application. In a SaaS model a provider provides an application that may be accessed by a customer. For example a customer may only see a single interface to the application hut the SaaS provider may scale the application dynamically to meet client demands.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include creating a resource stack managed by a resource stack provider from a resource stack template that integrates a custom resource from a second provider into the resource stack using a notification system with the second provider. For example a resource stack provider may provide tools to create a collection of interdependent resources that form a resource stack. The resource stack provider may have a catalog of resources that it manages that can be included in the resource stack. Other resources including those not managed by the resource stack provider may be still be included in the catalog for use in a resource stack as a custom resource even though the custom resource is managed by the custom resource provider. This allows for resources that do not conform to internal requirements of the resource stack provider to be included in resource stacks. The custom resource provider may provide template integration configuration and or communication information to the resource stack provider to use in communicating requests for creating reading updating and destroying custom resources as part of a resource stack. The proper construction of a template may be described in documentation provided to users that construct templates to build a resource stack.

In one embodiment a customer may create select or otherwise specify a template that defines a resource stack. The resource stack may comprise resources available from the resource stack provider and one or more custom resources provided by a second provider. The template may also provide information about linking the resources in the resource stack together including the custom resource and configuring the resources. When a resource stack is created the resource stack template may be followed. Dependencies between resources may be determined and an ordering of instantiation of the resources determined. Resources available from the resource stack provider may be provisioned. Custom resources may be initialized by notifying the provider of the custom resource of the requested integration of the custom resource with the resource stack and requested configuration details. The custom resource provider may respond with an indication of successful integration when the custom resource has been successfully initialized. After successful provisioning and integration of the resources and custom resources in the resource stack the resource stack may be enabled for use. An advantage of this resource stack that integrates custom resources is that resources managed by other systems may be integrated into the resource stack. This may allow a resource stack to integrate IaaS PaaS and SaaS solutions from other providers that may not be available through the provider or that may be preferable to solutions from a provider of the resource stack.

The initialization of the custom resource may be performed by a provider of the custom resource in response to a notification from the resource stack provider. The notification may include or otherwise reference information that enables the provider of the custom resource to integrate the custom resource into the resource stack. In one embodiment the resource stack provider constructs a message that comprises an independent portion and a payload. The independent portion may be custom resource independent and include information about the resource stack and or template. The payload may include information specific to the configuration of the custom resource. The provider of the custom resource may then use the information from the notification to initialize the custom resource for use with a resource stack associated with the notification. The custom resource provider may then provide an indication of successful integration with the resource stack to the resource stack provider. In an embodiment this indication may include a success fail identifier a custom resource identifier for use when interacting with the custom resource and additional information specific to the custom resource such as default settings. In some embodiments the indication is returned via a return message. In other embodiments the indication is returned by placing the response in a storage location. In one embodiment a messaging service is used in which the protocol may be selected by the message receiver.

For example a web application template may include a webserver database and external electronic mail service. The template may specify one or more dependencies between the webserver database and external main service. For instance one specified dependency may require that the database and external electronic mail service must be active before the webserver is running. The stack management system may receive a request to create a resource stack. Using the template a stack management system may cause a workflow to be created that provisions resources of the resource stack while respecting any dependencies specified by the template. A workflow processing system of the stack management system may execute the workflow and cause the database to be provisioned before other resources of the resource stack. The workflow processing system may then notify a management system of the external electronic mail service that integration of the electronic mail service with the resource stack is requested. The management system of the external electronic mail service may in response to being notified of the need to integrate the external electronic mail service with the resource stack initialize the external electronic mail service to integrate with the resource stack. Upon successful initialization of the external electronic mail service the management system of the external electronic mail service may then return an indication of successful integration of the electronic mail service with the resource stack. This return may include further information useful to the webserver to use the external electronic mail service such as authentication credentials necessary for the external electronic mail service to operate properly in the network stack.

After the database and external electronic mail service are provisioned initialized and or configured the webserver may be provisioned. The workflow processing system may cause the webserver which may be implemented as a virtual computer system to be provisioned using a machine image and configuration that allows the webserver to use the resources in the resource stack. The machine image may be a set of data used to instantiate a virtual computer system with a particular operating system. In some embodiments the machine image may be accessed from a durable data storage service and provided to a block data storage device service that is operably connected over a network to a computing resource service e.g. program execution service to enable a hardware host to utilize the machine image to activate and operate as a virtual computer system. Once the webserver is active the workflow processing system in this example may enable the resource stack for use. Enabling the resource stack for use may include reconfiguring one or more internal systems to provide programmatic control of the resource stack to the entity for whom the resource stack was provisioned.

In some embodiments the independent portion of the message transmitted for notification includes a stack identifier logical resource identifier unique identifier namespace and context information. The stack identifier may provide a value that can be used to reference the resource stack. The logical resource identifier may be an identifier that refers to the custom resource in the template. A unique identifier may uniquely identify the message so that duplicate messages may be discarded. A namespace may define the bounds of identifiers to allow for disambiguation of similar identifiers. The context information may provide information about the resource stack construction such as identifiers. In one embodiment the context includes unique identifiers and or configurations of resources present in the stack so that a custom resource may refer to specific resources in the stack when in communication with resources in the stack.

As discussed dependencies in the resource template may be respected while provisioning resources of a resource stack. Dependencies and may be explicit or implicit. An explicit dependency may be specified by the template. For example an explicit dependency may be defined by the template as a first resource that must have a second resource active before the first resource may be constructed. Definition of a dependency in a template may itself be explicit and or may be implicit for example by relative positions of resources in a schema of the template. In another example an explicit dependency may be shown through a linear ordering of construction of resources or a directed acyclic graph DAG . An implicit dependency may not be described in the template but determined from other sources. In some embodiments an external rule set is given that determines implicit dependencies. In other embodiments connections between resources and or configuration information may be used to determine implicit dependencies.

Custom resource definitions for use in a template may be created by a provider of a custom resource and used by a customer to integrate the custom resource in a resource stack definition in a template defining the resource stack. In one embodiment a provider of a custom resource defines valid information about a custom resource that may be used to populate a template. The provider may also provide a generator that constructs a notification and or payload in a notification to the provider that may be used in conjunction with the template and the custom resource. A generator may be a programming module implemented on a computer system that is configured to translate a custom resource definition in a template into at least a payload based at least in part on the template and or resource stack implementation details. The provider may also provide a configurator that consumes a response from the provider in response to the notification and provides configuration and or modifications to resources in the resource stack to integrate the custom resource. A configurator may be a programming module implemented on a computer system that is executed in response to a response from a custom resource provider to finish integration of the custom resource with other resources.

In some embodiments the resource stack provider and the custom resource provider are sub entities of a service provider. For example a service provider includes a resource stack provider that manages provisioning of databases virtual machines and storage devices. The service provider may also include services that are not managed by the resource stack provider but can be integrated through a custom resource such as search functionality electronic mail log publishing and monitoring services. In one embodiment the resource stack provider manages a selection of resources and provides a custom resource construct for managed resources that already have management functionality. For example the resource stack provider may provide infrastructure such as virtual machines and storage while allowing a custom resource construct for services such as electronic mail and search services. The services may actually be constructed of a separate resource stack that is managed by a provider different than the stack management system.

Techniques described and suggested herein also provide ways by which a resource stack can be used to create read update and destroy resources together including a custom resource. In one embodiment a user may choose to upgrade components of a resource stack while keeping others. For example a user may choose to upgrade a virtual machine instance of a particular type to a virtual machine instance that is more capable in one or more regards such as a virtual machine instance with more computing power. The user may modify the original stack template to include the more capable instance or use a user interface to select the more capable instance and request the change. In response the more capable instance may be provisioned. Settings of the resource stack that relied on the virtual machine instance may be changed to use new settings of the more capable instance such as hostname and or Internet Protocol IP address. In another embodiment a custom resource may be modified and settings updated to match the updated custom resource. For example a template may be modified to select additional monitoring services from a custom resource or a user may select the additional monitoring services from a user interface such as a web browser. A notification may be sent to the provider of the monitoring services with information about the requested modification. An indication of successful integration with the resource stack may be returned. Information included with the indication may be used to further configure and or modify other resources in the resource stack to integrate the change. After the modification has been successfully integrated the resource stack may be used with the modifications.

In one embodiment use of the custom resource may cause a cost to accrue to an account of a customer. The cost may be applied to an account related to the custom resource or an account related to the stack management system. In one embodiment a unified billing may be imposed where a provider of a custom resource informs a provider of the resource stack about usage of a custom resource. The customer may pay a unified bill received from the resource stack provider which may then pay the provider of the custom resource. In some embodiments a custom resource provider may receive a percentage of usage fees for use of the resource stack.

The term provisioning is meant to be read broadly to include the assignment of a computing resource to a use. In some embodiments this includes preparing the computing resource for use. In one embodiment a provisioning of a resource would include the assignment of a server installation of an operating system installation and configuration of the software to be placed on the resource and enabling the constructed resource for use. For example a provisioning system may select a server to use as a webserver. The provisioning system may then create a workflow that prepares the server for use as a webserver. As part of the workflow a machine image may be loaded on the server. The machine image may include operation system web hosting software and or settings. After loading the machine image the server may be caused to boot into the operating system and receive any further software and or settings. Such settings may include a domain name and or website and security configuration. After provisioning is complete the server may be turned over to a management system for use as a webserver and inclusion in the resource stack.

Turning now to an illustrative example of a system with a resource stack in accordance with at least one embodiment is shown. A user may create a template to define a resource stack to automate creation of a system such as a system supporting a web application. The template may define resources connections properties dependencies identification and or settings of resources and of a resource stack . The template may also define links between resources defined in the template . Linking may include configuring resources of a resource stack to communicate with one another over a network transmit requests receive responses and otherwise interoperate. The template may define connections of the resource stack such as a network topology for use with the resource stack that defines connectivity and or communication paths available to resources within the resource stack. When used herein a connection may be viewed as a communication path between two or more resources. The template may be submitted to a stack management system to create the resource stack as defined in the template . The stack management system may parse the template and determine an order of construction of the resources and in the resource stack . The stack management system may communicate with a provisioning system to managing provisioning of the resource stack . The provisioning system may request a resource provisioning system provision resources and that are managed by the provider of the stack management system . Custom resource may be initialized by requesting the initialization of the custom resource from a custom resource manager through notification through custom resource messaging . The notification may include information necessary to integrate custom resource into the resource stack including any connections with resources and . The custom resource manager may then return an indication of successful integration back through custom resource messaging . The indication may include settings including unique identifiers to identify the custom resources that may be applied by the stack management system to resources and or in the resource stack . Examples of custom resources may include electronic mail services website monitoring solutions log polling services and other IaaS PaaS or SaaS services.

As an illustrative example a resource stack may include an application server database and search engine. The search engine may be a custom resource that is managed outside of the responsibility of a provider of the stack management system . An example of such separation of management responsibility may include resources implemented on hardware hosted outside of the provider of the stack management system. Another example of separate management includes a service implemented on resources controlled by a same provider of the stack management system but managed by an entity other than the provider of the stack management system. Yet another example of separate management includes a service implemented by the same provider of the stack management system but managed as a separate entity to hide the complexity of the service from the user of the custom resource. The resource stack may be defined by a template that is created by a developer of the application. The definitions in the template of the application server and database may use terms and variables recognized by the stack management system . The definitions in the template of the search engine may include terms that define integration with the resource stack as recognized by the stack management system and also terms and or options recognized by a custom resource manager . A customer may request construction of the resource stack using the template . The stack management system may determine dependencies of the application server database and search engine in the resource stack .

In order to respect the determined dependencies the stack management system may cause a provisioning system to provision resources in an order according to dependencies when requesting the resource provisioning system to construct resources. In the embodiment shown the resource provisioning system will first construct the application server and database. The provisioning system may then compose a notification to a custom resource manager that includes information about the resource stack and configuration specific to the search engine. The configuration may be provided by a program such as a configuration generator that is provided to the provisioning system by the provider of the custom resource. The configuration generator may be associated with a custom resource definition that is contained in the template and executed when the definition is encountered. The notification may be sent by a custom resource messaging system protocol or other transmission to the custom resource manager . The custom resource manager may cause the search engine to integrate with the database and application server using the information provided in the notification. The custom resource manager may then return an indication of success that may also include information about the search engine for use by and or introduced into configurations of the resources in the resource stack . After instantiation and configuration of the resources in the resource stack the resource stack may be enabled for use.

The custom resource messaging may be implemented in several different ways. In some embodiments a notification service is used. A custom resource manager may subscribe to a subject of a notification service relating to initialization requests of a custom resource. A notification service may allow a receiver create a subject sometimes referred to as a topic in some suitable messaging systems to which other services may request publication. In some embodiments the receiver may define the protocol used for receipt of published messages. For example a custom resource manager of an electronic mail service may create a subject of custom resource administration requests for the electronic mail service. The delivery of messages may be customized by the custom resource manager including the protocol such as hypertext transfer protocol HTTP file transfer protocol FTP or other protocols or combination of protocols suitable for the transmission of messages from one system to another. The notification service may then push messages to the custom resource manager when received from the provisioning system . In one embodiment a notification may be deposited on a storage device in a specified location. The recipient such as the provisioning system or custom resource manager may periodically poll the location to determine if an action is required. In another embodiment application programming interface API calls are used to pass the messages. The API interface may be standardized to simplify the complexity of supporting multiple APIs by the provisioning system . In some embodiments a combination of the forgoing methods may be used. For example a notification service may be used for the transmission of the notification and a response to the notification may be made by placing the response in storage. Communications between the provisioning system and custom resource manager may be secured. For example verification of the messages may occur. Only notifications that are electronically signed by the provisioning system with an electronic e.g. digital signature verifiable by the custom resource manager will be performed by the custom resource manager . Only responses signed by the custom resource manager may be accepted by the stack management system.

Modifying resources and in the resource stack may also occur while keeping the integration of the resource stack . For example a database instance may be upgraded to a higher capacity database instance. The new database instance may be provisioned and data from the smaller database instance may be provided to the new database instance. Connections to the smaller database within the resource stack may be modified to use the new database instance. Resources managed by the provisioning system may be more directly modified. Custom resources may be informed through a notification to the custom resource manager that includes the modification information of the database. An indication of successful integration with the resource stack may confirm the modifications were successfully applied to the custom resource .

In some embodiments the resource stack may be modified as a whole. In one embodiment the template defines options for scaling the resource stack . Using these options a user may indicate which resources or all resources that may be scaled. The provisioning system may cause the resource provisioning system to modify resources managed by the provisioning system and notify the custom resource manager of changes to the resource stack and requested scaling of the custom resource . In other embodiments the resource stack may be operated on to form a copy backup or even be deleted. During a copy operation the resource provisioning system copy computing resources according to processes in place for the management of the computing resources and reference the copies as part of metadata about the resource stack. The provisioning system may then send a notification through custom resource messaging to the custom resource manager to form a copy of the custom resource . The custom resource manager may return an indication of success along with a reference to the copy of the custom resource . The reference to the copy of the custom resource may then be stored with the resource stack metadata. Reconstruction of the copy may use resource stack metadata to reference resources including custom resources in a request to reconstruct the copy. In another embodiment the resource stack may be deleted as a Whole. A request may be received that requests deletion of a resource stack matching a stack identifier. The provisioning system may cause the resource provisioning system to deprovision resources and managed by the provisioning system . Notifications to custom resource managers may be sent requesting destruction or retirement of the custom resource . Indications of successful destruction or retirement may be returned to the stack management system via the provisioning system . The success or failure may then be returned to the party that requested deletion of the stack.

For the purpose of illustration templates are used throughout the present disclosure. It should be recognized however that other methods of creating resource stacks that do not necessarily use templates as described herein may be used. As one example a customer of a computing resource provider may cause a stack to be created through an API call that provides instructions for creating the stack. In another embodiment a message identifying a storage location that contains a representation of a resource stack contains the request to create a resource stack.

In an example of an implementation of shows a diagram representing a resource stack that includes provider managed resources of a load balancer application servers and databases . The resource stack in this illustrative example also includes an electronic mail service managed by a vendor external to the provider . A template may define the resource stack and connections between the resources and . In the example shown the application servers are connected to the load balancers databases and electronic mail service . The template may also define dependencies such as the electronic mail service and database being initialized before the application servers are initialized. The template may also contain custom resource terms that cause a configuration generator to be executed and produce at least configuration information to send to the custom resource manager .

As a result of a request to create the resource stack a stack management system may determine dependencies and request a provisioning system cause instantiation of resources and according to the dependencies determined. These dependencies may be represented by an ordering of instantiation and or a directed acyclic graph with each node being a resource and each directed edge being a dependency. In the embodiment shown the provisioning system may cause the resource provisioning system to provision the load balancers and database before the application server because of dependencies. The stack management system may also execute a configuration generator that provides configuration for the custom resource manager based on the template information and resource stack configuration before requesting the provisioning system to provision the application servers . The provisioning system may then cause a notification to be sent to the custom resource manager of the electronic mail service that includes the configuration information generated. The custom resource manager may then integrate the electronic mail service with the resource stack and more specifically prepare the electronic mail service for connection to the application server such as by providing access credentials. The custom resource manager may return an indication of success such as a message that includes configuration and other information such as the access credentials that may be used to configure the application servers . After the dependencies have been satisfied the provisioning system may then cause the resource provisioning system to provision the application servers . The provisioning system may further include configuration from the load balancers databases and electronic mail service in a request to the resource provisioning system to prepare the application servers for operation in the resource stack. After finishing the creation of the resource stack the resource stack may be enabled for service. In one embodiment should any resource fail to instantiate or cause stack creation to exceed a timeout period the stack may be considered to fail and a reason for failure returned. In some embodiments all successfully instantiated resources further processed to be destroyed.

Because the stack management system and or provisioning system contains information about each of the resources and requested modifications to the resource stack may be relayed to the resources and . For example information about additional application servers may be relayed by the provisioning system to the load balancers to use as an option for load balancing. The additions to the application servers may also be reported to the electronic mail service through a notification such that the electronic mail service operates according to connections from the additions being authorized. The information to relay upon modification may be defined in the template intrinsic to the provider defined by the vendor that operates the custom resource or otherwise provided to the stack management system and or provisioning system .

Turning now to an illustrative example of a message in accordance with at least one embodiment is shown. The message may be transmitted from a provisioning system of to a custom resource manager as a result of the stack management system encountering a definition of a custom resource in a template and requesting the provisioning system construct the custom resource. The provisioning system of may send notifications such as this message shown in to a custom resource manager . The message may include a resource independent portion and a payload directed to information specific to the custom resource. The resource independent portion may include information about the resource stack and the properties of the custom resource in the resource stack. In the embodiment shown a provisioning system builds the resource independent portion of the message that comprises a context stack identifier logical association identifier namespace and resource identifier . A context such as a unique identifier may uniquely identify the message so that duplicate and or prior messages may be discarded. The context may also provide information about the resource stack construction. The stack identifier may provide a value that can be used to reference the resource stack. The logical association identifier may be an identifier that refers to the custom resource used in the template that triggered the creation of this message . A namespace may define the bounds of identifiers to allow for disambiguation of similar identifiers. The resource identifier may provide the provisioning system s reference to the custom resource being addressed.

The message may also include a payload . The stack management system may treat the payload as an information blob i.e. arbitrary information that should be attached to the message without the stack management system operating on the information within the payload . In the embodiment shown the payload may be defined by the template as processed through the stack management system to be included in the message . Processing the template through the stack management system provides an indication of the template to a custom resource manager. In another embodiment the payload may be constructed by a configuration generator that is registered with a parsing system that parses the template and gives the resulting payload to the stack management system for inclusion in the payload . The parsing system may parse the template into tokens such as definitions that may be used to construct configure and otherwise operate upon resources in the resource stack. Upon parsing a custom resource term the parsing system may pass the configuration generator information from the template and or resource stack information to complete the configuration. The configuration generator may then generate the payload to be attached to the message . This payload may contain configuration specific to the custom resource that may not be contained in the resource independent portion of the message . For example the electronic mail service in may be provided configuration in a payload that defines domains name servers and individual electronic mail addresses.

Turning now to an illustrative example of a process that may be used in accordance with at least one embodiment is shown. The process may be accomplished by any suitable system such as collectively by systems described above in connection with including a stack management system custom resource manager provisioning system. resource stack resources and and custom resource . A stack management system may receive a request to create a resource stack. For example a developer may give access to a template defining a resource stack to a tester for purpose of testing a new version of a web application. The tester may request that the resource stack be created in a testing environment in a program execution service such that testing of the new version may be accomplished. The program execution service may determine whether the template request is authorized and if so provide the request to the stack management system.

As illustrated the stack management system may in parallel provision resources under its control and send a message to a custom resource manager to initialize custom resources not under the control of the stack management system. It should be noted however that provisioning the resources and sending the message may be performed in sequence and not necessarily in parallel. The stack management system may receive a response as a result of sending the message. The response may indicate successful initialization of the custom resource and provide information about the custom resource such as an identifier and or credentials recognized by the custom resource manager. In some embodiments a custom resource may be eventually consistent and therefore an indication of success may be different than an indication that the custom resource is ready to use. For example eventually consistent storage may acknowledge a request for storage as an indication of success but the storage may not be made available until later. Using the response and the resources the stack management system may con resources in the resource stack to integrate with the custom resource. After the integration the resource stack may be enabled . In some embodiments an enabled resource stack may be immediately used. In another embodiment an enabled resource stack is made available for customization but is not activated for its intended use.

As an illustrative example of an embodiment of the process the stack management system may receive a request to create a stack with a webserver connected to an offsite backup service that stores daily incremental backups. The stack management system may provision the webserver and send a message to the offsite backup service to request initialization of a location for daily incremental backups of the webserver. In one embodiment a location may be a URL that is used to access a storage area provided for the backups. The offsite backup service may return a response identifying a location configured to receive daily incremental backups for the webserver and information used to secure the connection with the offsite backup service. In one embodiment the information used to secure the connection may be credentials used in encrypting the connection to the offsite backup service. The stack management system may then use the location information to configure the webserver for daily incremental backups. After configuration of the resource stack is complete the resource stack containing the webserver and backup service may be enabled for the user to customize or make live.

Some or all of the process or any other processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

Using the determined dependencies the stack management system in an embodiment determines an order of construction of resources defined in the template. Starting at the first resource in the determined order the stack management system accesses the next resource from the template to examine. Examining the next resource from the template to example may include making a determination whether the resource is a custom resource. If it is determined that the resource is not a custom resource but is managed by the stack management system the resource is provisioned and integrated into the stack such as by configuring connections to other resources as defined by the template. Performance of the process may include determining whether construction of the resource has exceeded a predetermined amount of time a timeout . A timeout may be measured by a timer. Th some embodiments the timeout is global and applied to the resource stack as a whole. In other embodiments each resource in the resource stack is given an individual timeout. If it is determined that the timeout is exceeded such as a timeout between 1 to 10 hours or more specifically 4 hours the creation of the stack may be caused to fail . In instances of failure in an embodiment instantiated resources managed by the stack management system may be destroyed. Destroying a resource may include deprovisioning the resource such that the infrastructure supporting the resource may be returned to a pool of available infrastructure. Instantiated custom resources may also be destroyed by sending the management system of the instantiated custom resource a notification to destroy the custom resource. In some embodiments the notification to destroy will not be sent without user intervention because destruction of a custom resource may result in destruction of data. This reaction to failure may be controlled by template information user settings and or defaults set by a provider of the custom resource. If the timeout is not exceeded and the creation of the stack is complete the stack may be enabled for use. If determined that the construction of the resource stack has not exceeded a timeout a determination may be made whether construction of the resource stack is complete. If it is determined that construction of the resource stack is not complete the next resource may be examined and the process may proceed as described above.

However if it is determined that the resource is not custom the stack management system may construct a message to the custom resource manager based on the template information resource stack information and other information provided by the user and or provider of the custom resource. The message may then be sent to the custom resource manager according to an agreed upon messaging system or protocol. The stack management system may then receive an indication of successful integration with the resource stack by the custom resource manager. For example the indication may be sent by message API call deposit at a storage location or other communication with a stack management system. While not illustrated it should be recognized that an indication of failure may also be provided if failure has occurred. Such failure may include an incorrect configuration sent to the custom resource manager failure to create the custom resource and or insufficient permission to create the custom resource. The process may be adapted accordingly to process such failure. The stack management system may then perform integration tasks to finish the integration of the custom resource. The cycle of resource instantiation from operations to operation may then repeat if the resource stack is not completely instantiated and the timeout has not been exceeded . Otherwise if the timeout has not been exceeded and no more resources remain for instantiation the stack may be enabled for further use such as deployment and or personalization.

In some embodiments a notification service is used for sending the message and receiving an indication of success. In one embodiment a notification service is used. A custom resource manager may subscribe to a subject of a notification service relating to initialization requests of a custom resource. The delivery of messages may be customized by the custom resource manager including the protocol such as HTTP FTP electronic mail SMS a queue or other protocols. The notification service may then push messages to the custom resource manager when received from the provisioning system . In another embodiment a notification may be deposited on a storage device in a specified location. The recipient such as the provisioning system or custom resource manager may poll the location to determine if an action is required. In another embodiment application programming interface API cabs are used to pass the messages. The API interface may be standardized to simplify the complexity of supporting multiple APIs by the provisioning system . In other embodiments a combination of the forgoing methods may be used. For example a notification service may be used for the transmission of the notification and a response to the notification may be made by placing the response in storage. Verification of the messages may also occur. In one embodiment only notifications signed by the provisioning system will be performed by the custom resource manager.

Turning now to an illustrative example of a process that may be used by a custom resource manager in accordance with at least one embodiment is shown. The process may be accomplished by systems shown in including a stack management system custom resource manager provisioning system resource stack resources and and custom resource . The custom resource manager may receive a request to integrate a custom resource provided with a resource stack. The custom resource manager may parse the request into an independent portion and a payload. The custom resource manager may then use the payload to determine a configuration of the custom resource to construct as part of the resource stack. In some embodiments the independent portion may also be used or exclusively used to determine the configuration of the custom resource. Based at least in part on the determined configuration the custom resource manager may initialize the custom resource and configure the custom resource to integrate with the resource stack. For example a custom resource may be provided by a vendor in a data center separate from a provider of the stack management system. Initialization of the custom resource may include provisioning the custom resource setting up services creating database entries constructing credentials and otherwise preparing the custom resource for integration with the resource stack. In another example a custom resource may be provided by a sub entity of a provider of the stack management system. Initialization of the custom resource may include construction of a second resource stack under the management of the sub entity. As the second resource stack is treated as a custom resource the creation and management of the second resource stack may be transparent to a user of the custom resource in their resource stack.

If successful initiation of the custom resource is successful the custom resource manager may return an indication of success and any additional information for the resource stack such as a handle physical source identifier and or identification for the custom resource and other settings. For example if the custom resource is a monitoring solution the additional information may include alarms that have been created. In some embodiments some or all of the independent portion is returned to identify to which resource stack the message belongs. In other embodiments the additional information is returned for customer access rather than for the stack management system to access as the customer may choose to self configure. In one example a custom resource may be a three dimensional printer and the configuration information may be a design. Upon receiving the notification the three dimensional printer may construct the design. Upon completion of the design the three dimensional printer may send an indication of successful construction of the custom resource. In another example a custom resource may be a crowd sourced resource such as a resource based in human knowledge. A question may be posed to a group of people and the most common answer may be selected and returned as part of the indication of success.

The custom resource manager may also receive requests to modify the custom resource. The request may also be parsed and the requested modification determined. The custom resource may be modified according to the determined request and re integrated back into the resource stack. In some embodiments this re integration may require reconfiguration such as if a hostname address or other identifying information has been changed and or scaled to increase or decrease a number of contact points. Once the modifications have been integrated the custom resource manager may return an indication of successful integration back to the stack management system.

As custom resource management is out of the control of the stack management system failures of the custom resource may be handled in different manners. For example a custom resource provider may refuse to respond because the provider s data center has been damaged. A timeout from the notification may protect the stack management system from waiting too long for an acknowledgement. The exceeded timeout may then be reported to a calling entity that had requested that the resource stack be built. In some embodiments the calling entity may choose to react to a detected failure. In one embodiment a failure during a resource stack operation may be reported to the calling entity. The calling entity may choose to react such substitute a different template or custom resource in place of the current template or custom resource. In another embodiment operational failure outside of the resource stack operations such as create read update and destroy may be detected and a response determined by other systems. In some embodiments the response may include a request to modify the resource stack.

A resource stack provider may provide its catalog in a marketplace format. A customer may select resources managed by the provider and or custom resources managed by the custom resource provider. In some embodiments selections from the marketplace may be included in a template for a resource stack. In one embodiment a custom resource provider may pay a one time or reoccurring fee to be included in a catalog of available resources to include in a resource stack. The provider may then receive costs accrued by use of the custom resource and or a fee for construction of the resource.

A template may define various aspects of the resource stack including identification of resources in the resource stack properties of resources parameters interconnections between resources of the resource stack connections outside the resource stack configurations of the resource stack setup operations to have resources perform and operations to have resources to perform. In one embodiment the template may include hierarchal definitions of resources. For example a template may begin with a definition of the resource stack that contains sub definitions of resources custom resources operations to perform on or by resources and connections between resources. Each sub definitions of resources may further contain sub definitions including options descriptions parameters connections sub resources or other relevant definitions applicable to the resource.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

