---

title: Resource manager
abstract: A resource manager may monitor resources offered by a resource provider. The resource manager receives computing metrics from the resources and may perform a management action when a customer defined usage limit is satisfied. The management action may include the resource manager generating an alert, or the resource manager preventing the customer from further accessing the resources offered by the resource provider. The resource manager may also be used to reduce the cost of running a customer's application that uses resources offered by the service provider. The resource manager may also receive business metrics from the customer and determine rates of return using the business metrics and the computing metrics.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09531607&OS=09531607&RS=09531607
owner: AMAZON TECHNOLOGIES, INC.
number: 09531607
owner_city: Seattle
owner_country: US
publication_date: 20120620
---
Organizations may operate computer networks that interconnect numerous computing systems to support the operations of the organizations. The computing systems may be co located or part of a local network or the computing systems may be distributed across multiple distinct geographical locations and include one or more private or public networks. For example some organizations make use of data centers that may house large amounts of data for the organization. The data centers may be part of an organization s local network or the organization may utilize a data center that in a separate geographical location. Further the data center itself may be implemented as a co located computing system or it may be a distributed across one or more private or public networks.

Organizations may also utilize virtualization technologies for creating dynamically scalable computing systems. Through the use of virtualization technologies organizations need not purchase dedicated hardware for processing. Rather the organization may purchase computing resources on an as needed basis from a computing resource service provider. For example virtualization technologies may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by a single physical computing machine. Each virtual machine may be a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource. In addition some virtualization technologies are capable of providing virtual resources that span two or more physical resources such as a single virtual machine with multiple virtual processors that spans multiple distinct physical computing systems. As another example virtualization technologies may allow data storage hardware to be shared among multiple users by providing each user with a virtualized data store that provides users with the illusion that they are the sole operators and administrators of the data storage resource.

In many environments utilizing virtualization technologies resource provider networks that offer different types of virtualized computing storage and or other network accessible functionality to customers allow the customers to access various services for a fee. For example a resource provider may offer a storage service a database service a load balancing service a DNS service and or compute service that enables customers to reserve or purchase access to computing resources using different resource allocation models and using different pricing policies. In a specific example a customer may reserve access to computing resources in the form of one or more instances for a relatively long duration such as one year or three years or a customer may purchase access to computing resources on an as needed basis. For example a customer selling goods using virtual computing resources may require more computing resources during a busy holiday season and may require fewer resources during non holiday seasons. By purchasing computing resources on an as needed basis the customer only pays for the computing resources it needs at a given time.

For some types of resource reservations at least a portion of the price paid by the customer may fluctuate over time in response to the changing supply and demand of the resources within the provider network. The provider network operator may need to ensure that a number of potentially competing demands are met e.g. that all guaranteed commitments to clients such as long term reservations for which payment has already been made are honored that the dynamically varying component of resource pricing does not get so high that customer satisfaction suffers that the provider s data center investment is justified by a reasonable level of resource utilization and revenue and so on. In business environments where clients may choose from among multiple providers for network based computing options provider network operators may wish to maintain high levels of customer satisfaction and customer retention e.g. by making resource acquisition easy and economical and by reducing the complexity of client resource budget management as much as possible.

Resource providers may provide resource instances for customers. Resource instances may be one or more virtual machines that a customer may use to perform computing tasks or execute business applications. A resource instance may conceptually represent a single hardware computing device but may be implemented as software executing on a portion of a single hardware computing device or as software executing across several hardware computing devices. Thus to the customer a resource instance may be viewed as one dedicated computing device although in implementation the customer may be sharing a hardware computing device with other customers each customer with their own resource instance . Alternatively a resource instance may be viewed by a customer as a single dedicated computing device although it may be implemented across several hardware computing devices. By offering customers virtual machine resource instances resource providers can maximize their hardware computing devices to satisfy a large number of customers in a more efficient manner than if each customer was operating its own hardware computing device.

Resource providers may also provide infrastructure applications or computing services to customers. The infrastructure applications may be executed by the resource instances to provide customers a platform for their business applications. Infrastructure applications may be applications libraries development tools etc. that allow a customer to implement their business application. For example a customer may have a business application consisting of an e commerce store front. The customer may purchase one or more infrastructure applications such as pre configured web servers database servers and or third party user interface libraries from the resource provider to execute with its resource instances. Resource providers may also provide services to customers in addition to or in lieu of infrastructure applications. For example a resource provider may offer a payment processing service or database service to the e commerce store front customer.

Described herein are various embodiments for managing resources in an environment using virtualization technologies. Resource providers for example a company or a public sector organization may set up networks to provide one or more virtualization services accessible via a network to a distributed set of customers. A resource provider network may include one or more data centers hosting various resource pools such as collections of physical servers used to host instances on behalf of customers storage devices database services networking equipment and the like needed to implement and distribute the infrastructure applications and services offered by the resource provider. The computing resources may in some embodiments be offered to clients in units called instances such as virtual machines or instances that run directly on the physical hardware of a server. An instance may be implemented for example by one or more servers with a specified computational capacity for example processing speed number of CPUs memory size storage size bandwidth etc. . An instance may also include an operating system and one or more applications. For example the instance may execute an operating system that itself executes various software applications such as database components data processing components or web server components.

In some embodiments a customer or user may be provided direct access to a resource instance e.g. by giving a user an administrator login and password. In other embodiments the resource provider may allow clients to specify execution requirements for specified client applications and schedule execution of the applications on behalf of the client on execution platforms such as application server instances Java virtual machines JVMs general purpose or special purpose operating systems or high performance computing platforms suitable for the applications without for example requiring the client to access an instance or an execution platform directly. A given execution platform may utilize one or more resource instances in some implementations in other implementations multiple execution platforms may be mapped to a single resource instance.

Resource providers may in some cases utilize a flexible set of resource reservation control and access interfaces for their customers For example a resource provider may implement a programmatic resource reservation interface e.g. via a web site or a set of web pages that allows customers to learn about select purchase access to and or reserve resource instances. Such an interface may include capabilities to allow browsing of a resource catalog provide details and specifications of the different types or sizes of resources supported the different reservation types or modes supported pricing models and so on. The provider network may support several different purchasing modes or reservation modes. For example the resource provider may support purchasing resources for reserved long term use a reserved instance on demand use an on demand instance or bid price based use a bid priced instance or spot instance . When a customer purchases a reserved instance the customer may make a low one time upfront payment for a resource instance reserve it for a specified duration such as a one or three year term and pay a low hourly rate for the instance the client would be assured of having the reserved instance available for the term of the reservation. When a customer purchases an on demand instance a customer client could pay for capacity by the hour or some appropriate time unit without any long term commitments or upfront payments. When a customer purchases a bid priced instance the customer may define rules for purchasing instances that may trigger whether the customer purchases instances. For example the customer could specify the maximum price per unit of time that it is willing to pay for a particular type of resource and if the client s maximum price exceeds a dynamic bid price that type of resource would be provided to the customer In some embodiments bid priced instance pricing may fluctuate based on the current supply and demand of resource instances.

In some embodiments dynamically resizable pools of resource instances may be set aside for the different reservation types or modes e.g. long term reserved instances may be allocated from one pool on demand instances from another and so on. During periods when the supply of the requested resource type exceeds the demand the price may become significantly lower than the price for on demand mode. In some implementations if the price increases beyond the maximum bid specified by a customer a resource allocation may be interrupted i.e. a resource instance that was previously allocated to the customer may be reclaimed by the resource manager and may be allocated to some other customer that is willing to pay a higher price. Other purchasing modes or combinations of modes may be implemented by the resource provider in some embodiments.

Resource providers may also provide identity and access management tools for customers to set create one or more user accounts so that more than one developer or entity may access the resources that customers purchase from the resource providers. For example an on line retail catalog the customer may purchase virtual computing resources from resource providers. The on line retail catalog may have several content developers e.g. web page developers database administrators plug in application developers that require access to the computing resources of the customer. Through the use of the identity and access management tools the on line retrial catalog may create a user account or profile for each developer that requires access to the resources and create individual security credentials for each user so that the developers only have access to the computing resources each user needs according to the scope of their development role. In some embodiments the resource provider may allow customers to define access for users at different levels of granularity. For example a customer may grant access to a user at the resource instance level the virtual machine level the application level or the application programming interface API level. In some embodiments the identity and access management tools may allow customers to define roles that may represent one or more users sharing similar attributes or define users with respect to a resource or system as opposed to human computer operator.

Customers may wish to monitor the cost and allocation of resources in a virtual computing environment. This may prove difficult however as customers may have several instances and may be using different infrastructure applications and services with each instance. In addition customers may be interested in alternative instances infrastructure applications or services that may provide a cost benefit or a faster processing benefit. For example a customer may be interested that other customers using the same database application also use a particular enhancement service to improve queue latency. In addition when customers create users and define security credentials for those users they are typically not linked to the user s usage of the computing resources as resource providers may not track computing resource usage data at the user level. Thus a customer is unable to restrict the access of a user for abusing computing resources.

As described herein to monitor the cost and allocation of resources customers may advantageously create resource groups. A resource group may be a combination of resource instances infrastructure applications and or services that the customer uses to perform a task or execute a business application. Customer may create resource groups by associating a tag or usage identifier with resource instances infrastructure applications storage services or some other computing resources to logically groups the computing resources together in one bucket. As a customer instantiates resource instances with the resource provider requests storage from the resource provider launches infrastructure applications within instances or utilizes services of the resource provider the customer may provide a tag or usage identifier to the resource provider. The resource provider may then form a resource group for monitoring cost and usage of the tagged computing resources.

Customers may form resource groups for various reasons. For example customers may form a resource group for each of their business applications. Customers may also form resource groups to track cost and or usage over a period of time. In some cases customers may want to compare business application implementations to determine which implementation provides the best results. Through the use of resource groups customers may logically group any combination of computing resource for monitor and control. Further when customers make spending decisions for computing resources they generally track their costs historically but it is difficult to correlate the costs for the computing resources to their benefit. Resource groups provide a mechanism to facilitate the correlation of costs to their benefits. For example a customer using a virtual computing environment to run a distributed gaming application may be interested in linking the number of instances running the gaming application to the amount of playing time number of users or revenue generated by players playing the game. The customer may be interested in determining the return on investment or rate of return for adding additional instances instances running different infrastructure applications e.g. running different databases applications etc. different types of instances e.g. instances having differing amounts of RAM processors network bandwidth storage etc. using additional services offered by the resource provider. Currently customers are not able to automatically link their business metrics e.g. metrics used to measure business performance with usage metrics e.g. amount of CPU time used storage used bandwidth used requests issued etc. or the cost of using such resources. Since different computing resource instances use different pricing policies the problem is further compounded. For example the customer executing the gaming application may be interested in determining the rate of return for executing a reserved instance versus the rate of return for executing an on demand or bid priced instance. Resource groups may provide an advantageous mechanism for determining a rate of return with a particular resource instance type e.g. on demand or bid priced .

Accordingly the present disclosure describes embodiments of computer systems that allow customers to monitor optimize and realize maximum value of resources that are offered by resource providers of virtual computing environments. In some embodiments a resource provider may work in conjunction with a resource manager. A resource manager may be one or more computer systems that assist customers in the management of the computer resources resource provider allocates to the customers.

According to some embodiments a computer system acting as a resource manager receives a request from a customer to monitor the computing resources of the customer. The request may include a resource usage limit and a usage identifier that identifies a plurality of resources of the customer. The system may access resource usage data that indicates an amount of resources associated with the usage identifier that have been used. When the amount of resources satisfies the resource usage limit the computer system performs a management action. In some embodiments the management action may be generating an alert while in some embodiments the management action may prevent access to the plurality of computer resources of the customer. The usage identifier may include an identification of a user that has been granted permission to utilize the plurality of computing resources of the customer.

According to some embodiments a computer system acting as a resource manager may determine first computing metrics for a first resource group that are used to for example run a web based application. The first resource group may include one or more instances running one or more infrastructure applications as well as other services offered by a resource provider e.g. database services storage services load balancing services etc. . The computer system may also determine second computing metrics for a second resource group that includes resources that differ from the resources included in the first resource group. The computer system may compare the first computing metrics and the second computing metrics to determine if the second computing metrics indicate that the second resource provides a greater benefit for running the web based application than the first resource group. The computer system may then provide a notification to the customer comprising the differences and or an indication of the greater benefit. The greater benefit may be faster processing or lower cost for example. In some embodiments the computer system may provide the notification in a user interface make it available via an Application Program Interface API call or send the notification via email to the customer.

In some other embodiments a computer system acting as a resource manager may determine baseline metrics for a baseline resource group used to run a business application such as a web based application for example. The resources may include one or more one or more instances one or more infrastructure applications running on the instances and one or more services e.g. a storage service a database service a load balancing service etc. offered by one or more service providers. The computer system may also determine modified metrics for running the web based application using a modified resource group. For example the modified resource group could include at least a portion of the resources from the baseline resource group with one or more enhancement elements added to it. When the computer system determines that the modified metrics indicate that the modified resource group provides a benefit for running the web based application over the baseline resource group it may generate a notification. The notification may include an identification of the one or more enhancement elements. The system may communicate the notification to a customer that is executing the web based application similar to the baseline resource group. In a specific example suppose the baseline resource group uses a virtual machine running an operating system and a database management program to effectuate a digital photograph sharing application. In this example the modified resource group could replace the virtual machine running the database management program with a database service offered by the resource provider. Metrics can be gathered for both the virtual machine running the database management program and the database service. In the situations where the modified resource group saves the customer money a recommendation could be sent to the customer providing notice that a change from using the virtual machine running the database management program with the database service could result in potential savings to the customer.

In some embodiments the system may log transactions and use the log to replay the transactions against the customer s business application as it uses the baseline resource group or the modified resource group. The metrics may then be communicated to the customer. In some embodiments the one or more enhancement elements may be automatically added to the resource group used by the business application when the system determines that the one or more enhancement elements provide a benefit to the customer.

According to one embodiment a computing system acting as a resource manager may access business metrics of a customer that are associated with a task that uses a group of resources. The resource manager may determine computing metrics for the task and determine a rate of return based at least in part on the computing metrics and the business metrics. The resource manager may generate and communicate the rate of return in a report. Alternatively the customer may determine the rate of return using his or her local resources. For example the resource manager may make the computing metrics available to the customer e.g. via an API and the customer may download them. The customer may locally determine a rate of return based at least in part on the computing metrics and the business metrics.

In some embodiments a computing system acting as a resource manager may access or receive business metrics associated with a business application. The resource manager may determine first computing metrics for a first resource group executing tasks of the business application and may determine a first rate of return based at least in part on the first computing metrics and the business metrics. The resource manager may also determine second computing metrics for a second resource group and may determine a second rate of return based at least in part on the second computing metrics and the business metrics. When the resource manager determines that the second rate of return is greater than the first rate of return it may automatically direct future tasks of the business application to the second resource group. The resource manager may also in some embodiments generate and communicate a report to a customer computing system describing the first and second rate of return.

Embodiments of the disclosure will now be described with reference to the accompanying figures wherein like numerals refer to like elements throughout. The terminology used in the description presented herein is not intended to be interpreted in any limited or restrictive manner simply because it is being utilized in conjunction with a detailed description of certain specific embodiments of the disclosure. Furthermore embodiments of the disclosure may include several novel features no single one of which is solely responsible for its desirable attributes or which is essential to practicing the embodiments of the disclosure herein described. Further although various aspects of the disclosure will be described with regard to illustrative examples and embodiments it can be appreciated that the disclosed embodiments and examples should not be construed as limiting. For example although the present application will be discussed with respect to certain computing devices it can be appreciated that the systems methods and process described for managing resources may be applied to any computing device that may share resources within a network.

In some embodiments the resource manager may implement one or more modules for managing computing resources of one or more customers. For example as shown in the illustrative embodiment of the resource manager may implement a pricing module a metrics collection module and a management action module . The modules of the resource manager may be in communication with a data store . In some embodiments the data store may be part of or co located with the resource manager as shown in . In other embodiments the data storage may be remotely accessed by the resource manager and or may be implemented as a web service.

The pricing module in some embodiments may include software code that when executed calculates the price charged to the customer for the customer s use of computing resources made available by the resource provider . For example the pricing module may determine the price to charge a customer for the reserved instances on demand instances infrastructure applications and or services the customer used during the last month. In some embodiments the pricing module may access pricing policies for the computing resources from the data storage . For example pricing for reserved instances or on demand instances may be fixed and stored in the data storage . When a customer uses a reserved or on demand instance the pricing module may access the associated pricing policy to determine the pricing for the customer. In some embodiments the pricing module includes software code that calculates the pricing for bid priced instances based on the availability of resources. Since bid priced instance pricing fluctuates depending on the supply and demand of computer resources the pricing module may calculate the price of bid priced instances according the availability of computing resources. In some embodiments the pricing module may store a customer s pricing data in the data store for historical purposes. For example the pricing module may store the amount a customer was charged for computer resources during a given time frame so that other modules of the resource manager e.g. the metrics collection module or the management action module may access it.

The resource manager may also implement a metrics collection module . The metrics collection module may include software code that when executes collects computing metrics from the resource provider or the business metrics from customer computer systems . The metrics collection module may interface with the resource provider to collect raw usage data. For example the metrics collection module may collect the number of instances used by a customer the types of instances used by the customer meta data indicating the types of infrastructure applications used in the resource groups of the customer e.g. operating systems database servers web servers application servers processing modules gigabytes GBs of storage used by a customer number of input output operations used bandwidth or any other value that may prove advantageous to collect for virtual computing environment billing or performance. In some embodiments the computing metrics collected by the metrics collection module may be stored in data storage so that they may be available to the pricing module and the management action module .

Customers may in some embodiments opt in or opt out of having their computing metrics collected by the metric collection module . For example some customers may use the resource provider to purchase computing resources but may not request monitoring of those resources by the resource manager . Further these customers not want to share their computing metrics with other customers even if the metrics are used anonymously. Thus in some embodiments the resource manager or the resource provider may provide a mechanism for customers to opt out of or opt in to having computing metrics collected. The mechanism may be for example a user interface that is part of the customer account creation process that allows the customer to select or de select a checkbox indicating that collection of computing metrics is permitted. In some embodiments the resource manager may require customers requesting monitoring to consent to have their anonymous computing metrics used to suggest enhancements to other customers.

Computing metrics may be collected at several different levels of granularity. For example computing metrics may be collected at a resource provider level to determine the number of instances that are used across all customers and the types of those instances. Resource provider level metrics may be used by the pricing module to determine pricing for bid priced instances for example. The computing metrics may also be collected at a customer level. For example the computing metrics may quantify the number and type of instances used by a customer or the number of GBs of storage a customer is using. In some embodiments computing metrics may also be collected at a user level. Customers may be able to create user or sub customer accounts associated with their customer accounts and grant different security credentials to the created user accounts to access the computer resources of the customer. The user accounts may correspond to an individual human user of a computer a role that may be filled by one or more individual human computer users of a computer or a computing system or group of computing systems. The created user accounts may be associated with user computer systems that access the resource provider through a connection to the customer computer system or the created user accounts may be associated with user computer systems that access the resources of the customer directly via the network . In other embodiments user computer systems may access the resource provider through the customer computer system and the network. As users utilize different instances applications and services the metrics collection module may collect data indicating the amount of resources a user account of a customer has used. User level data may be used by the management action module to generate alerts or restrict the user s access to computing resources as described below with respect to .

In some embodiments the metrics collection module collects business metrics from customer computer systems . The business metrics may quantify the performance of a customer s advertising campaign service or product. For example business metrics may indicate the amount of revenue generated through the customer s use of a resource group or the business metrics may reflect the number of sales for a particular product that was generated through the use of the resource provider . In other embodiments business metrics may reflect the output of a business application or task. For example a research institution may use the resource provider to process large sets of research data to determine several quantifiable result values. The number of result values determined may represent a business metric that is important to the research institution in determining the effectiveness of using the resource provider. Business metrics may also in some embodiments represent feedback from the consumers of the customer s goods or services. For example business metrics may reflect customer survey data or may reflect approval numbers associated with the customer s goods or services. It should be understood that business metrics could be any metric that has value to the customer and can be used to evaluate the performance quality or satisfaction associated with the customer s goods or services.

In some embodiments the business metrics may be received from customers via a user interface or ftp put operation. For example when a customer makes use of the computing resources offered by the resource provider the customer may associate a usage identifier or tag through the API used to access resources and create a resource group. As the customer uses the resource group the customer may collect business performance metrics such as revenue generated. The customer may then use the user interface provided by the metrics collection module to provide the performance metrics and link it with the tag used by the resource group. For example a customer may use the resource provider computer system to execute a mass marketing campaign for selling automobiles. When the customer creates the marketing campaign the customer provides Auto 1 as a usage identifier when instantiating one or more computing resources with the resource provider thereby creating a resource group. As the customer sells automobiles the customer may access a user interface that allows the customer to input each recorded sale and associated it with the Auto 1 resource group tag. As a result the metrics collection module may link the business metric auto sales with the resources that resulted in the sale the Auto 1 resource group . In other embodiments the metrics collection module may receive the business metrics through a put operation as opposed to through a user interface.

In some embodiments the resource provider may provide an API for customers to use to record business metrics programmatically as the resource group is used. For example if the customer creates software code that is to be executed by resource instances provided by the resource provider the customer may add a function or method call to an API that invokes the metrics collection module . For example suppose an accounting firm uses resource instances to process payroll. At the end of the processing required to issue a paycheck to an employee the code may make a call to the API of the metrics collection module to increment a business metric by one. The call may be for example incrementMetric 1 PAYCHECK where the function incrementMetric may accept as arguments 1 the amount to increase the metric by and 2 a metric identifier. Additional functions may be used to manage the collection of business metrics through an API. For example the API may provide functions for initializing incrementing decrementing resetting archiving or deleting metrics. One skilled in the art will recognize there are many functions that could support metric collection through the use of an API.

In other embodiments a metrics agent may be installed on customer computer systems to collect business metrics from customer side application. In embodiments where the operations and functions of the customer computer system are executed virtually through the use of instances the metrics agent may be deployed or installed within the customer s virtual computing environment. In addition services running in the customer s instances may also collect metrics and act as a metrics agent. A metrics agent may also be a service the resource provider makes available to customers. The metrics agents may be in communication with a business metrics data store where customers may store business metrics at the customer computer system . The business metrics data store may be part of or co located with the customer computer system as shown in . In other embodiments the business metrics data store may be remotely accessed by the customer computer system and or may be implemented as a web service or service within the customer s instance. Metrics agents may prove advantageous in situations where a customer uses a legacy customer side application for collecting business metrics but uses a resource provider to execute some or all of a marketing campaign. In such instances the metrics agent may automatically and or periodically transfer business metrics from the business metrics data store of the customer computer system to the metrics collection module . In some embodiments the metric agent may be time synched with the metrics collection module so that business metrics may be linked to the computing metrics collected by the metrics collection module . In some embodiments the metrics agent may transfer the business metrics using a tag that associates the business metrics with resource groups used by the customer computer system .

The resource manager may implement a management action module . The management action module may analyze and interpret computing or usage metrics and business metrics and perform a management action. Management actions may include for example generating an alert sending a command to the resource provider to restrict access to computing resources or sending a command to the resource provider to load balance processing toward those resource groups that provide a greater benefit for cost or processing or a greater rate of return. Management actions may also include turning off instances de allocating or de provisioning instances or temporarily suspending instances.

In some embodiments the management action module may generate a user interface that allows a customer to create and define a management action. In some embodiments a customer may be able to define an alert when the total cost of all of the customer s resources satisfied a resource usage limit value. For example a customer may only have 5 000 a billing cycle to spend on computing resources available from the resource provider. The customer may access a usage alert definition user interface generated by the management action module to define the alert. The customer may request that an email be sent to the customer computer system when the sum of all resource instance charges reaches 4 500. During the billing cycle the metrics collection module collects usage data of the customer from the resource provider and the pricing module determines the cost for the computing resources reflected in the usage data. The management action module may periodically calculate a billing cycle total charge and compare it to the resource usage limit value 4 500 . If the billing cycle total charge satisfies i.e. is greater than or equal to the resource usage limit value the management action module will generate an email and send it to customer computer system.

The management action module may also command the resource provider computer system to prevent access to additional resources or terminate processing of resources. In some embodiments a customer may be able to set a resource usage limit. The customer computer system may be able to set resource usage limits through a user interface or through a command line prompt. For example a customer may be able to limit or cap total cost number of on demand instances number of bid priced instances number of reserved instances GBs cost per instance type on demand bid priced reserved GBs used inputs and outputs throughput bandwidth e.g. megabits per second or any other relevant metric per billing cycle. As the billing cycle progresses the management action module may analyze collected computing metrics to determine if access to additional resources need to be restricted. For example a customer may wish to purchase no more than three on demand instances per billing cycle. As the billing cycle progresses the customer may purchase three on demand instances. Once the management action module discovers the customer has used three on demand instances through the use of the metrics collected and stored by the metrics collection module the management action module may send a command to the resource provider computer system to prevent the customer from using any more on demand instances during the billing cycle. When the customer attempts to instantiate a fourth instance the resource provider will reject the request.

In some embodiments the management action module allows a customer to define management actions at different operational levels. The management action module may generate a user interface that allows a customer to define the management actions at different operational levels. In other embodiments management actions may be set through a command line interface client that connects to the management action module and allows customers to define management actions through commands or scripts. Examples of different operational levels may include management actions at the customer level the user level and a resource group level. At the customer level resource usage limits may be applied to usage types across all of the customer s resources. For example the customer may wish to prevent additional resource allocation when the cost for computing resources reaches 10 000 for a billing cycle. At the user level resource usage limits may be applied to usage types for a user that has been granted permission by the customer to the computing resources of the customer. For example the customer may wish to prevent a developer from allocating additional resources after the developer has incurred a resource usage cost of 5 000 per billing cycle. At the resource group level resource usage limits may be applied to resources for which a customer supplied usage identifier or tag e.g. by supplying the tag through an API to the resource provider . For example the customer may wish to prevent allocating additional resources using for a tag after resources bearing the tag reach a usage cost of 5 000 per billing cycle.

In some embodiments the management action module may also generate a notification to send to a customer when one or more enhancements may be made to improve the efficiency of a resource group. For example the management action module may analyze data in the data storage to find resource groups that are similar across more than one customer. For example more than one customer may have a resource group including a Linux operating system executing a MySql database server application. The management action module may also discover that 75 of customers using the Linux operating system executing a MySql database server resource group may also be executing an additional service that improves queue latency. As a result the management action module may generate a notification to the 25 of customers that are not using the additional service to inform the customers of a performance improvement opportunity.

In other embodiments the management action module may send commands to the resource provider computer system to load balance a customer s tasks toward a resource group that provides the best possible rate of return for the customer s business metrics. The management action module may provide an API that allows customers to associate business metrics with tasks it is processing using the resource provider or associate business metrics two resource groups processing similar tasks. As the tasks are processed the management action module may determine the rate of return for each resource group then command the resource provider to allocate more resources toward the resource group that offers the best rate of return. For example a customer may be providing a real time gaming application and may utilize a combination of reserved instances and on demand instances with various infrastructure applications to serve requests for the gamming application. The customer may create resource groups by associating the reserved instances and on demand instances through a tagging API. The customer may also provide through the API business metrics such as hours of game time. As the gamers use the customer s gaming application the management action module can determine which resource group results in more hours of game time and send a command to the resource provider to load balance requests handled by the gaming application toward the resource group that has the highest rate of return.

In some embodiments the resource manager may be in communication with a resource provider computer system . The resource provider may provide resources to customer computer systems . In some embodiments customers can instantiate instances from an available instance pool based on the type of instance the customer would like to use as a computing resource. For example a customer may access reserves instances from a reserved instance pool on demand instances from an on demand instance pool and or bid priced instances from a bid priced instance pool. When a customer instantiates an instance the customer may tag the instances to create a resource group. In addition the customer may access or launch various infrastructure applications such as operating systems servers libraries and or utilities that are capable of implementing the customer s business application. For example a customer may have an business application for executing a large scale multi channel marketing campaign. The customer s business application may use a resource group that includes an operating system a database application that stores and manages leads and one or more services applications that send out communications to leads. The elements of the resource group may also be custom applications developed by the customer or they may be third party applications developed by third parties and offered in a market place where customers may purchase them.

In some embodiments the resource provider exposes an API so that customer computer systems may instantiate create call or utilize resource instances infrastructure applications and services. The API may have methods or functions for the customer to associate a usage identifier with the resource instances infrastructure applications and services thereby creating a resource group for management purposes. For example if a customer has several marketing campaigns the customer can label each one with a different usage identifier. The usage identifier may then be used by the resource manager to monitor and manage the resources of each marketing campaign as separate resource groups. For example the customer may wish to track the amount of money spent on computing resources for each marketing campaign independently from one another.

The resource provider may also have an API that allows the resource manager to commands it. For example the resource provider may expose and API that allows the resource manager to halt the execution of an resource group when a customer has set a usage limit. The resource provider may also expose an API in some embodiments to limit a user of the customer s usage of resources. The usage limit APIs may be called by the resource manager when a usage limit defined by the customer is satisfied. For example a customer may request a management action to prevent a user from further access to the resources the customer has purchased with the resource provider once the user exceeds 1000 in resource usage costs. When the resource manager determines that the user has reached 1000 in costs it may make an API call to the resource provider to command the resource provider to not allow the user to access additional resources.

With reference now to the interaction between various computing systems of will be illustrated. For purposes of the example however the illustration has been simplified such that many of the components utilized to facilitate communications are not shown. For example do not illustrate the modules of each computing system. It can be appreciated that such components can be utilized and that additional interactions would accordingly occur without departing from the spirit and scope of the present disclosure. In addition in some embodiments some steps shown in may be performed as the same time or in a different order or other intervening steps may occur without departing from the spirit and scope of the present disclosure

At 2 the customer computer system may send a request to the resource manager computer system to monitor the customer s resources. In some embodiments the request may include a resource usage limit. For example the customer may request a resource usage limit of 5 GB of storage. A resource usage limit may also be a cost associated with a the use of resources. For example a customer may set a resource usage limit of 500 for on demand instances. Resource usage limits and resource usage limit types may also apply to resource groups or individual resources. For example a customer may set a resource usage limit 500 000 queries handled by a database in the customer s resource group.

In some embodiments the request may also include a usage identifier identifying the resource group for which the request applies. The usage identifier or tag may correspond to a group of one or more resources that are used together to implement a business application of the customer e.g. photo sharing application web store distributing gaming application or perform one or more processing tasks for the customer. The usage identifiers may also be used to denote the cost center of subgroup of the customer for which the cost of processing may be attributed. For example an online e commerce aggregator may be one customer of the resource provider but may have one or more customers of its own. As a result the online e commerce aggregator may wish to tag or identify the resources that are being used by each of its customers. In some embodiments the usage identifier may represent a user of the customer computer system. For example the user may be a developer that works for the customer or it may be a third party customer of the customer. In some embodiments the usage identifier is flexible and may be programmatically set by the customer through an API provided by the resource provider.

In some embodiments at 3 the resource manager retrieves usage data for customers that have requested resource monitoring. The resource manager may request the usage data through an API call that the resource provider exposes. In some embodiments the resource provider computer system may upload or put the usage data to a data store accessible by the resource manager. For example the resource provider may load all of its usage data on a periodic basis to a data store where the resource manager may access it for analysis. In some embodiments the resource manager may deploy a usage meter module to the resource provider that collects data and reports it back to the resource manager in real time.

Once the resource manager has access to the usage data at 4 it may analyze the usage data. The resource manager may analyze data on a periodic basis or it may analyze the usage data on a real time basis depending on the embodiment. Analysis may include for example determining the cost for resources used by customers comparing the usage limits defined by customers to the customers actual usage data. The analysis may also include attributing usage of resources to the customer s users or to the customer s usage identifiers. After the analysis as 4 the resource manager may notify the customer at 5 that a usage limit has been satisfied. The notification may be an alert such as e mail user interface SMS message MMS message instant message phone call text message or any other means of communication known in the art. The notification may also be an electronic message designed to be consumed by an application. For example the resource manager may expose an API that accepts a callback function pointer that may be called when the usage limit is satisfied thereby allowing the customer to create a custom notification handler.

At 5 in some embodiments once the resource usage limit is satisfied the resource manager may send a command to the resource provider commanding the resource provider to not allocate further resources to a customer a user of the customer or to resource group associated with a usage identifier. For example a customer may request that any resources bearing the tag catalog sales not exceed 100 hours of use per billing cycle. Once the resource manager determines that resources tagged with catalog sales have reached 100 hours of use it may send a command to the resource provider to suspend execution of resource group with the catalog sales tag and or prevent additional resources from being instantiated with the catalog sales tag. In some embodiments the resource manager may send a command to the resource provider to not allow users of the customer to access additional computing resources.

As described above with respect to in some embodiments the customer may create users with individual security or access credentials to use the computing resources of the customer. Customers may wish to limit individual users access to the resources. For example a customer may wish to limit resource usage of developers that are not efficiently using computing resources or the customer may have sub customers that it allows to use the customer s resources. When a customer requests usage monitoring for a particular user and requests that user s be preventing from accessing additional resources once the resource usage limit is met at 5 the resource manager may command the resource provide to restrict access to the customer s resources to the identifier user once the resource usage limit is met. Then when the user attempts to access the resources at 6 the resource provider will prevent the user from accessing the customer s resources. In some embodiments the resource provider at 6 may turn off instances or de provision resources associated with the user when the user exceeds the usage limit.

It should be understood that while and describe different functionality it is possible that the functionality described in and may be combined in one embodiment that is an embodiment may have both alert and resource prevention functionality. For example a gaming site customer may have players that sign up for service with the gaming site. The gaming site customer may create a user for each player and assign separate security credentials for each player. The gaming site customer may also charge for player access in time increments and may allow players a maximum of 30 hours of use for their accounts. The gaming site may then for each player request resource monitoring from the resource manager for each user player for no more than 30 hours of resource usage but may also request for a notification when a player reached 25 hours. Thus when a player reaches 25 hours the customer will be notified and then the player reaches 30 hours the player will no longer be able to access the resources.

In one embodiment at 1 of each customer computer system registers and defines resource groups as described above. In the embodiment of both of the customers have defined similar resource groups however one of the customers is also using an enhancement. As each customer utilizes their resource groups usage data is collected and reported to the resource manager 2 . The usage data may include data describing the resource group of each customer. For example the usage data may include an indication that a first customer is running two reserved Linux virtual machine instances executing database servers and an on demand instance executing a web server while the second customer is running two reserved Linux virtual machine instances executing database servers and a query optimization program and an on demand instance executing a web server.

At 3 the resource manager may analyze the usage data to determine if there are resource groups that are substantially similar. Using the example from the preceding paragraph the resource manager may determine that the first customer and the second customer are using substantially similar resource groups. Once the resource manager determines that at least two customers are using substantially similar resource groups but one of the customers is receiving a processing or cost benefit from an enhancement that the other customers are not utilizing the resource manager may notify the customers not running the enhancement about the existence of the enhancement at 5 . For example the resource manager may notify the first customer that the query optimization program is available. In some embodiments the resource manager may also notify the resource provider that the customer may add the enhancement.

In some embodiments once the resource manager notifies the customer of the availability of an enhancement the customer may request that a test task be executed using the enhancement to determine if it there is a cost benefit associated with the adding the enhancement to the customer s resource group. depicts an illustrative interaction between the resource manager computer system resource provider computer system and customer computer systems when the resource manager computer system automatically adds an enhancement to a resource group. At 1 the customer computer system provides a test task to the resource provider. The test task may be for example a large set of data that requires processing or may be a sample marketing campaign implemented using electronic communications such as email. The test task may also be a program that simulates Internet page request for example.

At 2 the resource provider processes the test task. In some embodiments the resource provider will process the test task using a customer s resource group without the enhancement and also process the test task using the customer s resource group with the enhancement. Usage data for processing the test task with and without the enhancement may be collected and provided to the resource manager at 3 . Once the resource manager receives the usage data it may analyze the usage data at 4 to determine if the enhancement provides a benefit to the customer for processing the test task.

In some embodiments when the resource manager determines that the enhancement provides a benefit e.g. processing benefit or cost benefit to the customer the resource manager may send a command to the resource provider to include the enhancement in the customer s resource group. The resource provider may expose an API with one or more function calls that allow the resource manager to specify the customer s resource group and the identity of the enhancement. In some embodiments the resource manager computer system may notify the customer that the enhancement was beneficial and it may be up to the customer to add the enhancement to the customer s resource group.

In some embodiments customers may perform what if scenarios or run tests on potential enhancements to determine if the enhancement provides a benefit e.g. processing benefit or cost benefit . depicts an illustrative interaction between the resource manager computer system resource provider computer system and a customer computer system when the resource manager computer system tests a potential enhancement to a resource group. At 1 the customer provides a test task and a potential enhancement to the resource provider . The potential enhancement could be an add on that improves performance an alternative infrastructure application e.g. a different database server alternative instance execution location or the like. Once the resource provider receives the test task and the potential enhancement it may process the test task with and without the enhancement at 2 . Computing metrics may then be sent to the resource manager at 3 where they are analyzed at 4 . Once analyzed the resource manager may notify the customer of the test results. For example the resource manager may generate a web page or an email and send it to the customer computer system showing the cost of using the resource group with and without the enhancement. In other embodiments the customer may have specified to automatically incorporate the enhancement if it provides a benefit. In such embodiments the resource manager at 5 may command the resource provider to incorporate the enhancement.

Some embodiments of the resource manager computer system allow a customer to upload or provide customer business metrics to the resource manager that may be used to determine a rate of return for using the computing resources provided by the resource provider. depicts an illustrative interaction between the resource manager computer system resource provider computer system and customer computer systems when the resource manager computer system reports a rate of return for computing resources to a customer computer system. At 1 the customer defines its resource groups. As the resource groups execute the resource provider may provide computing metrics to the resource manager computer system.

At 3 the resource manager may receive business metrics. In some embodiments the business metrics are collected and provided to the resource manager through the use of a client side agent that is deployed to the customer computer system or within the resource group of the resource provider. In some embodiments the customer computer system may provide the business metrics through an API call exposed by the resource manager . In some embodiments the customer may provide the business metrics through the use of a user interface or put command line operation. Once the resource manager receives the business metrics and the computing metrics it may analyze the metrics at 4 . The analysis may include linking business metrics with their corresponding computing metrics. The resource manager may link the business metrics to the computing metrics through the use of tags or labels or through the use of API calls that identify the resource instances and or resource groups of the customer that are associated with the business metrics.

In some embodiments the rate of return may be calculated in a ratio of computing metric to business metric. For example the rate of return may be calculated as resource group cost sales. A customer may use the resource provider to provide computing resources in support of a virtual market place. The customer may wish to track the average cost of resources per transaction. The resource manager may receive business metrics indicating the number of transactions for a time period and it may also determine the cost of providing resources during the time period. By dividing the number of transactions by the cost of providing resources the resource manager may determine a rate of return.

Once the resource manager determines the rate of return it may provide the value to the customer computer system at 5 . In some embodiments the resource manager may calculate rates of return for a periodic basis and provide a report to the customer showing trends in rates of return for several periods. For example the resource manager may calculate rates of return per month and then generate a report to provide to the customer showing a rate of return over the course of a year. The report may be generated and displayed in a user interface for example or may be sent in a data stream or as a data object that the customer may use to render its own report. In some embodiments the resource manager may provide the rate of return or rate of return reports in an email or it may print a paper copy of the report and mail it to an address associated with the customer computer system.

By calculating rates of return the resource manager provides a benefit of allowing customers to try more than one resource group for executing a business application or completing one or more computing tasks and then shift processing toward the resource group that is providing a greater rate of return. depicts an illustrative interaction between the resource manager computer system resource provider computer system and customer computer systems when the resource manager computer system directs additional resources to a resource group of a customer that has a greater rate of return. At 1 the customer may define multiple resource groups. As the resource groups execute the resource provider provides computing metrics to the resource manager at 2 . At 3 the customer provides business metrics that are associated with its resource groups to the resource manager defined. Once the resource manager analyses the business metrics and the computing metrics it may determine the rates of return 4 .

In some embodiments the resource manager may have the ability to command the resource provider to direct processing toward the resource group that is generating the higher rate of return. The resource provider may expose an API that allows the resource manager to command the resource provider to direct processing toward the resource group that is providing a greater rate of return or turn off those instances that are not generating as high of a rate of return. For example a customer may be using the resource provider for a marketing campaign and may track the number of clients it attracts using the resource provider s resources. The customer may wish to execute two different resource groups one using an open source database and another using a proprietary database. As the marketing campaign progresses the customer may add additional on demand instances executing either database to handle increased response from leads generated from the marketing campaign. The customer may request that the resource manager calculate a rate of return e.g. cost per lead for the open source database application resource group and the proprietary database resource group. When additional on demand instances are required to handle the requests the resource manager may instruct the resource provider to use the resource group with the best rate of return. For example when the open source database resource group provides a higher rate of return the resource manager may instruct the resource provider to allocate additional on demand instances executing the open source database as opposed to the proprietary database. In some embodiments the resource manager may direct processing toward the resource group with the higher rate of return gradually or the resource manager may direct all processing toward the resource group with a higher rate of return in one instant. In some embodiments the customer may request that only a certain portion of processing go to the resource group with the higher rate of return. For example if the customer may have two resource groups handing page requests and would like to have both resource groups actively handling requests regardless of each resource group s respective rate of return. The customer may request that at minimum each resource group handles 25 of the requests. Accordingly the resource manager may only direct up to 75 of processing toward the resource group with the greater rate of return.

If however the management action is not to prevent access then processing moves to box . At box the management action module generates an alert. The alert may be an electronic communication that may be sent to another computing system. It may for example be an email. Once the alert is generated processing moves to box where the alert is communicated to the customer that requested resource monitoring.

Once the metrics collection module determines the baseline metrics and the modified metrics the management action module may analyze the metrics to determine if any enhancements or modifications to the baseline resource group will provide a performance or cost benefit to customers. If so then processing moves to block where the management action module finds customers using the baseline resource group but without the enhancements or modifications of the modified resource group. The management action module may generate and provide a notification to those customers. The notification may include the identity of the enhancement or modification.

In some embodiments the process of may be performed automatically and periodically by the resource manager computer system without initiation by one or more customers. For example the resource manager may execute simulated tasks against available pre packaged resource groups. When a third party develops an enhancement for a pre packaged resource group it may notify the resource manager that the enhancement was designed for use the pre packaged resource group. The resource manager may then execute the process of and notify customers of the new enhancement that has become available for the resource group. Customers may then wish to test the enhancement using their own data and may in some embodiments request that the enhancement be added to their resource groups if it improves the performance cost or both of their resource groups.

In some embodiments the business metrics may not be accessed from the customer but rather may be accessed from the resource provider . The business metrics may be metrics that are recordable by the resource provider and may be common across all customers. For example customers running a web site may be interested in a page view metric. Since page views may be calculated by the web server which would be running in an instance of the resource provider the metrics could be calculated automatically and without customer interaction. In some embodiments the resource manager may offer several common business metrics that could be used to calculate rates of return without the customer installing a local metrics agent or without the customer uploading or providing business metric data.

All of the processes described herein may be embodied in and fully automated via software code modules executed by one or more general purpose computers or processors. The code modules may be stored in any type of non transitory computer readable medium or other computer storage device. Some or all the methods may alternatively be embodied in specialized computer hardware. In addition the components referred to herein may be implemented in hardware software firmware or a combination thereof

Conditional language such as among others can could might or may unless specifically stated otherwise are otherwise understood within the context as used in general to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Conjunctive language such as the phrase at least one of X Y and Z unless specifically stated otherwise is to be understood with the context as used in general to convey that an item term etc. may be either X Y or Z or some combination thereof. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of X at least one of Y and at least one of Z to each be present.

Any process descriptions elements or blocks in the flow diagrams described herein and or depicted in the attached figures should be understood as potentially representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or elements in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved as would be understood by those skilled in the art.

It should be emphasized that many variations and modifications may be made to the above described embodiments the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

