---

title: Chromeless user interface
abstract: Techniques are described to implement a user interface for a display of a mobile device. In an implementation, the user interface may include a chromeless menu configured to be displayed when menu-based user input to the mobile device is available; a system tray configured to be displayed on the display when a notice containing status information affecting operability of the mobile device is available; and a task switcher module operable to cause a chromeless overlay be displayed over an active application being executed by the mobile device to allow selection of one or more applications of the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08914072&OS=08914072&RS=08914072
owner: Microsoft Corporation
number: 08914072
owner_city: Redmond
owner_country: US
publication_date: 20120313
---
This application claims priority under 35 U.S.C. Section 120 as a continuation of U.S. application Ser. No. 12 414 455 filed Mar. 30 2009 and titled Chromeless User Interface the disclosure of which is hereby incorporated by reference in its entirety.

Mobile devices such as mobile phones including smart phones wireless phones and so forth have become an integral part of everyday life. Communication techniques that may be employed using a mobile device have also increased. For example users were traditionally limited to telephone calls between mobile communications devices and landline telephones. Advances have been made to provide a variety of other communication techniques e.g. text messaging email social networking and so forth. However inclusion of these additional communication techniques on mobile devices having traditional form factors may cause these devices to become unwieldy and less suitable for mobile applications. For example traditional input devices that were employed by these communication techniques may be less suitable when applied by traditional mobile devices.

Techniques are described to implement a user interface for a display of a mobile device that is configured to generate a chromeless user experience for the mobile device. In implementations the user interface may include a menu system configured to be displayed when menu based user input to the mobile device is available. In additional implementations the user interface may include a system tray configured to be displayed in response to a notification containing at least one of communication related information or device status information affecting operability of the mobile device. In further implementations the user interface may include a task switcher operable to display indicia corresponding to one or more non active tasks running on the mobile device in an overlay superimposed over a user experience of an active task the task switcher being configured to switch to one of the one or more non active tasks in response selection of the indicia.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

The functionality provided by mobile devices such mobile phones including smart phones cell phones and so forth is ever increasing. Traditionally mobile devices employed user interfaces that relied heavily on graphical elements such as menu bars scroll bars windows text boxes and so on to generate the user experience for the mobile device. These graphical elements are referred to as the chrome of the user interface.

As the functionality of mobile devices has increased more complex user interfaces are employed to organize the increasing amount of information presented to the user. These more complex user interfaces tend to make extensive use of chrome elements. However mobile devices generally have small form factors and typically employ displays that furnish limited space for display of the user interface. Consequently in complex user interfaces chrome may occupy a substantial amount of the mobile device s display area making the display appear cluttered and lessening the user experience.

Techniques are described to implement a user interface that is configured to generate a chromeless user experience for a mobile device. In an implementation an application may be executed that is configured to furnish a user experience for a display of a mobile device such as a mobile phone. The user interface is implemented to cause an application programming interface API to be generated to expose functionality to the application to configure the application for chromeless display of the user experience.

In implementations the user interface may include a variety of features. For instance in one implementation the user interface employs a menu system that provides extended functionality to applications running on the mobile device without the use of traditional chrome elements. The menu system employs menu elements that are displayed when menu base user input is available. The user interface may also include a system tray configured to be displayed in response to a notification containing at least one of communication related information or device status information affecting operability of the mobile device. In embodiments common device status notifications such as battery status or signal strength may be removed from the user interface until they become important so that chrome elements are not used to display these notifications.

The user interface may also employ a task switcher operable to display indicia e.g. thumbnails or icons corresponding to one or more non active tasks running on the mobile device in an overlay superimposed over a user experience of an active task. The task switcher is configured to switch to one of the non active tasks in response selection of the indicia. Still further the user interface may employ a dashboard configured to access to one or more settings of the mobile device so that common settings such may be readily adjusted. In embodiments the system tray may comprise one or more launch points for launching tasks. For example in one embodiment the system tray may include a task switcher launch point and a dashboard launch point configured to launch the task switcher and dashboard respectively.

In the following discussion an example environment is first described that is operable to generate a user interface. Examples of user interfaces are then described that may be employed in the illustrated environment as well as in other environments without departing from the spirit and scope thereof.

The network may assume a wide variety of configurations. For example the network may include a cellular telephone network the Internet a wide area network WAN a local area network LAN a wireless network e.g. a WIFI IEEE 802.11 network a public telephone network an extranet an intranet and so on. Further although a single network is shown the network may be configured to include multiple networks. For instance the mobile device configured as a smart phone may access a webpage within a corporate intranet via a cellular telephone network. A variety of other instances are also contemplated.

The mobile device also includes a display to display information to the user of the mobile device . In embodiments the display may comprise an LCD Liquid Crystal Diode display a TFT Thin Film Transistor LCD display an LEP Light Emitting Polymer or PLED Polymer Light Emitting Diode display and so forth configured to display text and or graphical information such as a graphical user interface. The display may be backlit via a backlight such that it may be viewed in the dark or other low light environments. In specific implementations the display may be provided with a touch screen for entry of data and commands. The mobile device may further include one or more input output I O devices e.g. a keypad buttons a wireless input device data input and so on . The input output devices may include one or more audio I O devices such as a microphone speakers and so on.

The various devices and modules of the mobile device are communicatively coupled to a processor and memory . The processor provides processing functionality for the mobile device and may include any number of processors micro controllers or other processing systems and resident or external memory for storing data and other information accessed or generated by the mobile device . The processor may execute one or more software programs which implement the techniques and modules described herein. The processor is not limited by the materials from which it is formed or the processing mechanisms employed therein and as such may be implemented via semiconductor s and or transistors e.g. electronic integrated circuits ICs and so forth.

The memory is an example of computer readable media that provides storage functionality to store various data associated with the operation of the mobile device such as the software program and code segments mentioned above or other data to instruct the processor and other elements of the mobile device to perform the techniques described herein. Although a single memory is shown a wide variety of types and combinations of memory may be employed. The memory may be integral with the processor stand alone memory or a combination of both. The memory may include for example removable and non removable memory elements such as RAM ROM Flash e.g. SD Card mini SD card micro SD Card magnetic optical USB memory devices and so forth. In embodiments of the mobile device the memory may include removable ICC Integrated Circuit Card memory such as provided by SIM Subscriber Identity Module cards USIM Universal Subscriber Identity Module cards UICC Universal Integrated Circuit Cards and so on.

In implementations the mobile device includes a user interface module which is storable in memory and executable by the processor . The user interface module is representative of functionality to generate a user experience that is operable to control the display of information and data to the user of the mobile device via the display . The user interface module may also provide functionality to allow the user to interact with one or more applications of the mobile device by providing inputs via the touch screen and or the I O devices . Applications may comprise software which is storable in memory and executable by the processor to perform a specific operation or group of operations and or to furnish a user experience for the mobile device . Example applications may include cellular telephone applications instant messaging applications browsers photograph sharing applications calendar applications address book applications and so forth.

In an implementation an application stored in memory may be executed by the processor . The application is configured to furnish a user experience for the mobile device . For example the application may furnish a user experience for display by the display of the mobile device e.g. by providing content to be displayed by the display. The user interface module may cause an application programming interface API to be generated to expose functionality to the application to configure the application for chromeless display of the user experience by the display . In embodiments the user interface module may also provide functionality to allow the user to interact with user experience furnished by the application by providing inputs via the touch screen and or the I O devices . An example user interface that may be implemented by the user interface module to generate a chromeless user experience is described in relation to .

In implementations the user interface module may include a menu system module a system tray module and a task switcher module . The menu system module is representative of functionality to generate a menu system that provides functionality to user interface module and or applications executing on the mobile device . In embodiments the menu system does not permanently display chrome elements such as status bars scroll bars and so forth. Instead the menu system may be displayed in response to a determination that a menu based input is available. Menu based input may be made to the user interface module or an application . In embodiments the menu system includes menu items that may be selected by a user of the mobile device via the touch screen or an I O device such as a keypad a button and so on. When the menu based input is not available the menu system is not displayed. An example procedure that may be employed by the menu system module to generate a menu system is described below in relation to . An example menu system that may be generated by the menu system module is described below in relation to . Example menu items that may be utilized by the menu system of are described in relation to .

The system tray module is representative of functionality to generate a system tray that is configured to provide notifications including communication related notifications and device status notifications to a user of the mobile device . In embodiments the system tray module may cause common device system status notifications such as battery status signal strength and so forth to be removed from the user interface until the status information meets predefined criteria resulting in a determination that the status information is to be furnished to the user. For example in one embodiment the system tray module may cause a status notification indicating that low battery life is to be displayed when the battery life of the mobile device falls below a predetermined level. In this manner chrome elements traditionally employed by user interfaces to provide status information may be removed from the display to reduce display clutter.

The system tray module may also provide functionality to generate launch points for launching various tasks such as elements of the user interface applications and so forth. For instance in one embodiment the system tray module may cause launch points to be generated within the user interface to launch a dashboard to display settings used for operation of the mobile device operational status notification e.g. low battery life low signal strength etc. and so forth. An example system tray that may be generated by the system tray module is described in relation to B and C. An example dashboard that may be launched from the system tray is described in relation to .

The task switcher module is representative of functionality to generate a task switcher. In embodiments the task switcher may be accessed via a single user interaction to navigate among two or more tasks e.g. an application supported by the mobile device . For instance the task switcher module may be configured to cause an overlay to be displayed over a user experience of an active task e.g. an application being executed by the processor of the mobile device causing information to be displayed by the display . The overlay may include indicia e.g. thumbnails or icons corresponding to one or more non active tasks running on the mobile device so that a user may switch to one of the one or more non active tasks in response selection of one of the indicia. An example task switcher is described in relation to .

Generally any of the functions described herein may be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module and functionality as used herein generally represent software firmware hardware or a combination thereof. In the case of a software implementation for instance the module represents executable instructions that perform specified tasks when executed on a processor such as the processor of the mobile device of . The program code may be stored in one or more tangible computer readable media an example of which is the memory of the mobile device of . The features of the user interface generation techniques described below are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

The following discussion describes user interface configuration and generation techniques that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware firmware software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference will be made to the environment of and or other example embodiments.

The menu system may also be initiated when menu based input is requested by an application of the mobile device to select an option of the application to enter information in response to a prompt generated by the application to set one or more settings of the application and so forth. In implementations when the menu system is initiated block a top level menu is first displayed block . Multiple top level menus may be provided. Each top level menu may include one or more menu items that may be selected by the user of the mobile device.

One or more submenus may also be displayed block . For instance a submenu may be accessed through a top level menu. Submenus may also be nested beneath a top level menu so that they may be accessed through other submenus. Menu based inputs may be received through the menu system via selection of one or more menu items of a top level menu or a submenu block . When menu based input is no longer available the menu system may be dismissed block so that menus of the menu system e.g. the top level menu and or any displayed sub menus are hidden block until menu based input is again available block .

In embodiments the system tray may also be initiated to provide an interface to launch a dashboard to display settings used for operation of the mobile device operational status notification e.g. low battery life low signal strength etc. and so forth block . When the system tray is no longer used the system tray may be dismissed block so that the system tray is hidden block until it is again initiated block .

The task switcher may then be launched block . In embodiments the task switcher may comprise an overlay that is displayed over the user experience of an active task e.g. an application being executed by the processor of the mobile device shown in . The overlay may include one or more indicia e.g. thumbnails icons etc indicating other currently running tasks e.g. applications notifications etc. that may be accessed. In embodiments the task switcher may remain open until dismissed by the user of the mobile device. For example a determination may be made whether the task switcher is to be dismissed decision block . If a determination is made that the task switcher is to be dismissed yes from decision block the task switcher is dismissed block so that the overlay is no longer displayed. Otherwise a determination is made that the task switcher is not to be dismissed no from decision block .

A determination is then made whether a task has been selected decision block . When a task is selected by the user yes from decision block the task may be launched block and the task switcher dismissed block . In embodiments when a task is not selected no from decision block the task switcher may allow the user to pan through the indicia indicating other currently running tasks block until a task may be selected and launched block or the task switcher dismissed block by the user without a selection being made. In some embodiments the task switcher may also be timed out and dismissed block when no input is received within a predetermined duration of time.

This section presents elements of a user interface that may be generated using the processes and techniques discussed herein to provide a chromeless user experience. Aspects of the user interface may be generated in hardware firmware software or a combination thereof. In portions of the following discussion reference will be made to the environment of and the procedures and of and respectively and or other example environments and procedures.

The user interface may include text and or graphics that provide context to the user experience . For instance in the embodiment illustrated the user interface includes a title and subtitle that are configured to identify the particular application accessed and or to provide context to the content of the user experience displayed by the application. Thus a photo sharing application might include the title Photos and the subtitle Summer Vacation 2008 to provide context photos displayed by the photo sharing application while a cellular telephone application might include the title Phone and the subtitle Call Log to provide context to information displayed by the cellular telephone call log application. Other examples are contemplated.

Submenus may be employed to display menu items that are not displayed in a top level menu . illustrates example submenus that may be accessed via a top level menu of the menu system . Unlike top level menus submenus may be configured to display more than two menu items although it is contemplated that a submenu may configured to display no more than one or two menu items . In implementations submenus may be accessed via selection of a menu item within a top level menu that is configured to act as access point to the submenu . When a menu item configured to access a submenu is selected the top level menu containing the selected menu item is hidden and the submenu is displayed. The menu items of the submenu may be arranged in a pseudo radial fashion around a central point satellite that is anchored at the initial location of the selected menu item of the top level menu .

In implementations multiple submenus may be nested in levels beneath a top level menu . Thus menu items within some submenus may be accessed by navigating e.g. drilling down from a top level menu through other intermediate submenus . For example as illustrated in the selection of the secondary menu item of a top level menu may cause a first submenu to be displayed. The first submenu may include a submenu item that is configured to provide access to a second submenu when selected.

The menu items of each of the submenus are clustered around satellites anchored at the initial location of the menu item e.g. secondary menu item and submenu item respectively that was selected to cause display of the submenu . As nested submenus are traversed the satellites within the submenus may be selected to return to a higher level submenu or a top level menu respectively. For instance in the embodiment shown in the satellite of the second submenu may be selected to hide the second submenu and display the first submenu . Similarly the satellite of the first submenu may be selected to cause the first submenu to be hidden and the top level menu to be displayed.

Navigation from a submenu such as the second submenu directly to a top level menu while bypassing intermediate level submenus such as submenu may also be supported. For instance selection of a point outside of a submenu may cause the submenu to be hidden and the top level menu to be displayed. In other embodiments a satellite may be selected and held for a duration of time to return directly to a top level menu . Similarly submenus within the menu system may include indicia such as a back button that is configured to provide navigation directly to a top level menu from the submenu when selected.

In implementations the menu system of may be animated. For instance as shown in when a top level menu is displayed the menu items of the top level menu may appear to slide down from the top edge of the display over the user experience as indicated by down arrow . Similarly when top level menus are hidden the menu items of the top level menus may appear to slide up to the top edge and off of the display as indicated by up arrow . Display of submenus may also be animated. For example a submenu may appear to fly from the satellite in a pseudo radial fashion when initiated. Similarly selection of a satellite may cause a displayed submenu to shrink into the satellite while transitioning to a higher level submenu or a top level menu .

In the menu items illustrated are shown as generic blocks for purposes of explanation. However it is contemplated example menu systems may employ menu items having a variety of shapes colors text styles and so forth. For instance in one embodiment the menu items employed by a menu system may share a generally common shape such as an oval a circle a box a speech bubble and so forth. In other embodiments menu items employed by the menu system may be provided with a variety of distinct shapes that allow a user to readily identify the function and or content of each menu item . The menu items may be auto sized according to the text and or graphics to be displayed.

Menu items may further have a variety of visual states. In one embodiment menu items may have a normal state a selected tapped state and a disabled state. In this embodiment the normal state of a menu item is the visual state of the item when it is displayed in the menu system . The tapped state of a menu item is the visual state of the item that occurs when a user selects taps the menu item . For example a menu item may enter the tapped state for a prescribed duration of time when selected to allow the user to recognize that the menu item was selected. After selection the menu item may then return to the normal state or be placed in the disabled state. The disabled state of a menu item is used to indicate that the menu item is not a valid selection in a particular context. For example a menu item in a disabled state may be hidden so that it is not available for selection.

In embodiments the menu system may include different menu item types. For example the menu system may include action menu items toggle menu items submenu selection menu items and so forth. Action menu items are used to indicate a particular action that a user can take. In embodiments action menu items may be identified by a verb e.g. Display or Dismiss to indicate the action performed in response to selection of the menu item . In some instances a submenu containing the action menu item may be dismissed upon selection of the menu item so that the action may be performed.

Toggle menu items toggle between two or more options for example to select a setting within an application. illustrates the functionality of various toggle menu items that may be employed by the menu system shown in . Toggle menu items may include dual toggle menu items tri toggle menu items and multi toggle menu items . Dual toggle menu items toggle between two option states. For example a dual toggle menu item may be utilized to turn a feature e.g. a wireless transmitter on or off. Tri toggle menu items toggle between three option states. In this manner each time the toggle menu item is selected the value of the setting is changed. For example a tri toggle menu item may be used to adjust the size of an element e.g. text size between small medium and large sizes. In embodiments the setting adjusted by the dual toggle and tri toggle menu items and the current state of the setting may be identified by indicia e.g. text graphics and so forth within the menu item .

Multi toggle menu items toggle between four or more option states. In embodiments the setting adjusted by a multi toggle menu item and the current state of the setting may be identified by indicia e.g. text graphics and so forth within the menu item . Selection of a multi toggle menu item causes a submenu to be displayed. The submenu includes four or more menu items that correspond to the valid options for the setting. Thus an option may be set by selecting one of the menu items of the submenu . After the option is selected the submenu may be dismissed and the multi toggle menu item again displayed.

In example implementations the system tray may be devoid of chrome elements and may remain hidden from the user until an event occurs that is deemed by an application and or the user interface to merit the user s attention. For example the system tray may be hidden during full screen notifications during an active phone call while the dashboard is active while the task switcher is active while taking a photograph while watching a full screen video while viewing a full screen photo while playing a game and so on. However when displayed the system tray may comprise a persistent user experience that is overlaid on top of other user experience content. As shown the system tray utilizes the bottom left and bottom right corners of the display to display information and host launch points into the dashboard and the task switcher .

In implementations the system tray may be comprised of a task switcher launch point and a dashboard launch point . The task switcher launch point may be located in the bottom left corner of the display . In embodiments the task switcher launch point allows the task switcher to be selected via a single tap gesture. Further when multiple tasks are available the task switcher launch point may be configured to display an icon representing the most recent task accessed by the user as identified by the task switcher . As the user changes to a new task using the task switcher this icon may be updated to reflect the changes made within the task switcher.

As shown in the task switcher launch point may also host incoming communication related notifications such as phone calls emails instant messages e.g. SMS MMS IM and so forth which are dismissed not read or for which the maximized state the notification has timed out causing the notification to be minimized or hidden. Additionally during phone calls the task switcher launch point may provide in call notifications such as call waiting notifications missed call notifications voice mail notifications email notifications and so forth. Similarly the task switcher launch point may display a persistent icon if a phone call user experience is minimized in order to access another application such as when the phone call is put on hold. In embodiments this icon may include the time that the call has been active.

As illustrated the dashboard launch point may be located in the bottom right corner of the display . The dashboard launch point allows a dashboard such as the dashboard of discussed below to be launched via a input by the user such as a single tap gesture. The dashboard launch point may also be configured to host device status notifications that are determined to be important to the user by the user interface. In implementations the dashboard launch point may include a clock that is displayed when no device status notifications are present. However when a device status notification is available the notification may be displayed in place of or in addition to the clock . The dashboard launch point may further display an indication indicating signal strength during phone calls.

In example embodiments communication related notifications and device status notifications may have at least two states minimized and maximized. In embodiments a device status notification is displayed in either the maximized or minimized states while the status condition that triggered the notification exists. For example when a device status notification is first displayed the notification is furnished in the maximized state so that the notification may be viewed by the user. After a duration of time e.g. 3 seconds the device status notification may transition to the minimized state. illustrate a device status notification in a maximized state and a minimized state .

In implementations a user may select a device status notification while the notification is in the maximized state to launch a dashboard e.g. dashboard . After returning from the dashboard the device status notification may thereafter be displayed in a minimized state. In the minimized state the device status notification is not viewable by the user. Instead indicia e.g. ring shaped icon shown in may be displayed within the dashboard launch point to indicate that a minimized device status notification is present. The user may select the indicia to launch the device status notification in the maximized state. Similar indicia e.g. ring shaped icon in may be used to display communication related notifications in a minimized state.

As shown in the overlay may be divided into areas that provide a variety of information describing the operation of the mobile device. In the embodiment illustrated the overlay may include an operator information roaming status area a current date time area settings quick toggle area a device status area and an advanced settings launch point area . The operator information roaming status area identifies the operator e.g. an owner or user of the mobile device and may provide information describing the roaming status of the device . The current date time area displays a current date and time. The settings quick toggle area contains a bank of tabs describing settings e.g. Ringtone Bluetooth Wi Fi and Alarm that can be toggled e.g. on off and displays status information about the settings e.g. silent on off 7 45 am respectively .

The device status area provides information about the status of the mobile device such as battery life wireless signal strength and so forth. In embodiments the device status area may display status notifications via one or more graphical elements. For example in the embodiment shown icons that are generated to give the impression of stickers are used to display status information for the mobile device . The icons may be formatted to provide information about the status notification. The advanced settings launch point area furnishes access a detailed settings page that allows adjustment of settings not provided by dashboard .

In embodiments the task switcher may be configured to display indicia such as thumbnails corresponding to non active e.g. minimized or hidden tasks running on the mobile device in a translucent overlay superimposed the then current user experience e.g. the user experience of an active task . A user may interact with the task switcher in a variety of ways. For example the user can select a task by selecting a thumbnail corresponding to the task. The user may pan through thumbnails provided via the overlay . In instances where more thumbnails are available than are be displayed thumbnails may be scrolled onto and off of the overlay . For example as shown in the overlay may be configured to display a limited number of thumbnails at a given time.

Additional thumbnails that are not displayed but which are available for selection by the user may appear to be partially hidden under an edge of the overlay . A user may then pan through the displayed thumbnails to cause one or more of the additional thumbnails to be scrolled onto the display while one or more of the originally displayed thumbnails are scrolled off of the display and hidden. If a new task is not selected the user may exit the task switcher and return to the task that was running when the switcher was launched by selecting a back button . The task switcher may also time out and be dismissed and hidden automatically after a period of inactivity. For example the task switcher may be hidden after 5 seconds have elapsed if the user has provided no input such as panning through the thumbnails or selecting a thumbnail .

Although the invention has been described in language specific to structural features and or methodological acts it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as example forms of implementing the claimed invention.

