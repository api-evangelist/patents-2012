---

title: Deliverability-based e-mail sending
abstract: Methods and systems for deliverability-based e-mail sending are disclosed. A plurality of e-mail addresses for a user are acquired. For each of the e-mail addresses, a connection between a sending computer system and a receiving computer system is opened. A likelihood of successful e-mail delivery is determined for each of the connections. The connection having the highest likelihood of delivery is automatically selected. An e-mail is sent using the selected connection, and the other connections are closed without sending an e-mail.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230245&OS=09230245&RS=09230245
owner: Amazon Technologies, Inc.
number: 09230245
owner_city: Reno
owner_country: US
publication_date: 20120621
---
Most e mail traffic involves one sender i.e. the address specified in the From field and one recipient i.e. the address specified in the To field . In some cases multiple recipients are specified using the To Cc and or Bcc fields. Generally speaking however bulk or transactional e mail is sent on a one to one basis for the sake of deliverability i.e. the likelihood of the recipient s ISP to deliver the e mail as well as the recipient s privacy.

Typically a sending application composes the content for an e mail and passes the content to an agent called a mail transport agent MTA . The MTA on the sender s side calls the recipient s domain as specified in the recipient s e mail address. The sending MTA connects to the receiving MTA sitting behind the recipient s domain and then pushes the message across the connection. If the message cannot be delivered a bounce may be generated. In response to the bounce the sending MTA may retry or give up.

Message delivery may fail for a variety of reasons. The recipient s e mail address may be abandoned by its user reclaimed by its host e.g. due to prolonged inactivity canceled by its user e.g. along with cancelation of service with the host or otherwise deactivated for any number of potential reasons. The host of the recipient s domain may be temporarily inaccessible due to network problems or problems with hardware and or software at the host s e mail servers. In some cases delivery may be significantly delayed by the host e.g. for hours or days due to transient problems or host policies.

Online merchants typically maintain only one e mail address for each customer account. Therefore if a message sent by the merchant bounces back the merchant may have no other way to contact the customer electronically. For the many reasons discussed above the message may not be available to the customer at the e mail address associated with the customer s account within a reasonable amount of time after the message has been sent by the merchant. Some types of messages such as advertisements or solicitations may not be time critical for the customer. However detrimental consequences may follow if other types of messages such as order confirmations are not received promptly by the customer.

Accordingly it is desirable for senders of e mail e.g. merchants to have reliable techniques for contacting recipients e.g. customers .

While embodiments are described herein by way of example for several embodiments and illustrative drawings those skilled in the art will recognize that embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit embodiments to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to. 

Various embodiments of methods and systems for sending one or more e mails to a plurality of candidate recipients are described. A sender such as an online merchant may acquire a plurality of different e mails for a particular user e.g. a customer . In one embodiment the sender may send an e mail only to the e mail address having the highest likelihood of successful delivery. In another embodiment the sender may send an e mail to individual ones of the e mail addresses in sequence until one of the e mails is successfully delivered.

Using the address acquisition module multiple e mail addresses for a particular user may be acquired and stored. In one embodiment each of the e mail addresses may be associated with the same customer account at an online merchant. Any suitable technique may be used to obtain the e mail addresses . For example the customer may be asked to enter multiple e mail addresses in a web interface associated with the customer s account with an online merchant. The e mail addresses may be solicited from the customer through a popup in the checkout process through a reminder when the customer logs in and or by allowing customers to provide new addresses via their account settings. In one embodiment the customer may designate one of the e mail addresses as a primary address and one or more other e mail addresses as alternate addresses. The different e mail addresses may typically belong to different domains but some of the e mail addresses may belong to the same domain.

The message generation module may generate e mails such as e mail A. E mail A may include a header and message content i.e. a body . The header may include one or more of the e mail addresses . The sending computer system A may be in communication with a plurality of potential receiving computer systems A B N over one or more networks e.g. the internet . Each of the receiving computer systems A B N may correspond to an e mail server or host for the domain of one of the e mail addresses . Although three receiving computer systems A B N are shown for purposes of illustration it is contemplated that the sending computer system A may be in communication with any suitable number of receiving computer systems.

Once the various SMTP connections A B N have been initiated or opened the sending computer system C may obtain data indicative of the likelihood of e mail delivery for each of the connections. The delivery likelihood data A B N may be obtained from each SMTP connection. In one embodiment the delivery likelihood data A B N may be obtained while the various SMTP connections A B N are simultaneously open. In one embodiment the delivery likelihood data A B N may be stored by the sending computer system C as delivery likelihood data . It is contemplated that the delivery likelihood data may comprise different elements or combinations of elements.

To obtain the delivery likelihood data A B N the MTA may attempt to send two initial commands associated with sending an e mail a first hello command i.e. an acknowledgement that a connection is made followed by an RCPT command i.e. providing the address of the recipient to the recipient s e mail server . The MTA may then listen for a response if any from each receiving computer system. For example a recipient server may not respond at all may respond positively within a relatively short or long amount of time i.e. RCPT OK or may claim that the address is invalid. Based on the quality of the responses and or the quality of the connection the address selection module may determine which SMTP connection and associated e mail address has the highest likelihood of delivering the message.

In one embodiment the delivery likelihood data may comprise data indicating the success or failure of the opening of the connection between the sending MTA and the respective receiving MTA. For example if the connection cannot be opened or is immediately closed by the recipient MTA e.g. SMTP server response code is received by the sending MTA then the likelihood of successful e mail delivery for the corresponding e mail address may be given a low rank for deliverability among the e mail addresses. In one embodiment the delivery likelihood data may comprise a reply code to an RCPT command sent from the sending MTA to the respective receiving MTA. For example a reply code indicating that the recipient is invalid unavailable or cannot be verified e.g. SMTP code may result in a low rank. However a reply code to the RCPT command indicating that the requested action is OK e.g. SMTP code may result in a higher rank.

In one embodiment the delivery likelihood data may comprise a response time to an RCPT command sent from the sending MTA to the respective receiving MTA. Faster response times may result in a higher rank for deliverability than slower response times. In one embodiment the delivery likelihood data may comprise any other measurement of latency in the SMTP connection.

The address selection module may implement any suitable algorithm or logic for assessing the delivery likelihood data to select one of the e mail addresses . In one embodiment the address selection module may comprise a rules engine that measures different vectors. For example a failed connection or a closed connection may disqualify the corresponding e mail address. Similarly a failure of the receiving MTA to acknowledge the validity of the recipient s e mail address e.g. in response to an RCPT command may disqualify the corresponding e mail address. Among the open connections for which the RCPT command results in an OK or acknowledgement of validity the connections and their corresponding e mail addresses may be ranked according to their response times or latency. Accordingly the verified e mail address with the fastest open connection may typically be selected. If two or more connections are equally fast or otherwise tied in the deliverability ranking any suitable tie breaker may be used to select one of them.

In one embodiment additional elements of the delivery likelihood data may be obtained from sources other than the recipient MTAs via the simultaneously opened connections. In one embodiment information that is collected regarding the customer s receipt or viewing of previously sent e mails may be used to score the deliverability of the customer s e mail addresses. This information may be referred to as engagement metrics. For example if the customer clicks on a link or an image within an e mail and clicking of the link or image results in the use of a server associated with the online merchant then that information may be used to score the deliverability of the e mail address. In one embodiment an invisible tracking pixel may be included in an e mail when the e mail is opened the pixel is rendered and the opening of the e mail may be communicated to a server associated with the merchant. This information may be deemed to increase the likelihood of a message being delivered to that address in the future. As a further example if a message from the merchant is marked by the customer as unsolicited e mail or spam the customer s ISP may communicate the complaint to the merchant. The spam information may be used to lower the likelihood of delivery to the e mail address or to skip the e mail address when sending a message in the future.

As discussed above with respect to the delivery based e mail sending methods and systems may select the recipient e mail address and the receiving computer system based on deliverability data. In one embodiment the delivery based e mail sending methods and systems may also select the sending computer system from a pool of such computer systems. The sending computer system may be associated with one or more IP Internet Protocol addresses. In this embodiment the delivery likelihood data may include data regarding individual computer systems in the pool of sending computer systems. For example the delivery likelihood data may include the fact that the IP address identifying a particular sending computer system has been blocked by one or more of the receiving computer systems A B N. In such circumstances the blocked system s and any associated IP addresses may be ranked below the system s that have not been blocked in choosing the system from which to send the e mail. In selecting one of the sending computer systems from the pool techniques for load balancing may also be employed. The load balancing techniques may attempt to maximize the collective processor memory and or network resources of the pool of sending computer systems.

In the examples of the address selection module is illustrated as being separate from the MTA . In an alternate embodiment a custom MTA may implement the functionality of the address selection module . In this alternate embodiment another component such as the message generation module may send a list of e mail addresses to the custom MTA e.g. using a suitable Application Programming Interface API call . The custom MTA may then open the various SMTP connections simultaneously gather and assess the delivery likelihood data select the most deliverable e mail address close the other connections and send the e mail to the selected address using the corresponding connection.

A sending computer system e.g. associated with an online merchant may desire to send an e mail to a user e.g. a customer . In one embodiment a message generation module may generate message content for an e mail. The plurality of e mail addresses for the user may be retrieved from storage. As shown in a connection may be opened between the sending computer system and the receiving computer system for each of the e mail addresses. In one embodiment a connection may be opened between the sending MTA of the sending computer system and the receiving MTA for the receiving computer system for each of the e mail addresses. The connection may comprise an SMTP connection.

As shown in data indicative of a likelihood of e mail delivery may be obtained for each of the e mail addresses i.e. for each of the connections . As discussed above with respect to the delivery likelihood data may be obtained from any suitable source including but not limited to the success or failure of the opening of the connections with the various receiving computer systems response times for commands sent using the open connections e.g. RCPT commands reply codes to commands sent using the open connections e.g. RCPT commands previous indications of deliverability for individual e mail addresses and global data regarding the deliverability for various e mail domains. Any suitable algorithm or logic may be used to assign values or weights to elements of the likelihood data in order to rank the e mail addresses. As shown in the e mail address i.e. the corresponding connection having the highest likelihood of e mail delivery may be selected for sending the e mail.

As shown in the connection between the sending computer system and the receiving computer system may be closed for each of the e mail addresses other than the selected e mail address. The other connections may be closed without sending an e mail to the corresponding e mail addresses. As shown in an e mail comprising the message content may be sent to the selected e mail address. In one embodiment the e mail may be sent using the previously opened connection. In another embodiment the previously opened connection may be closed along with the other connections and another connection e.g. an SMTP connection may be opened for sending the e mail to the selected e mail address.

In one embodiment the addresses may be tried in a random i.e. pseudo random order. In one embodiment the addresses may be tried in a particular pre determined order. For example the list of addresses may be ordered based on a priority specified by a user such as a designation of a primary address and one or more alternate addresses. In one embodiment the list of addresses may be ordered by estimated deliverability i.e. likelihood of delivery . The deliverability estimates may be based on one or more previous attempts to send a message to a plurality of the user s addresses e.g. using the deliverability based e mail sending methods and systems illustrated in . The deliverability estimates may also be based on attempts to send e mails to a plurality of users. In this regard data regarding e mail domains across multiple customer accounts may be mined to generate global deliverability data. For example if one particular domain is tending to be unavailable for recent attempts across multiple customer accounts then that domain may be lowered in the round robin order.

In one embodiment the sending computer system D may modify the header of a first e mail B to include the first address. The sending MTA may then push the e mail B across the SMTP connection to the MTA of the receiving computer system associated with the first e mail address. As shown in the example of the first e mail address corresponds to the receiving computer system A which receives the e mail B using MTA A. If the first e mail B is successfully delivered to the receiving computer system A then the round robin scheduling module may discontinue any further attempts to send the message content of the e mail B to the user.

In response to the delivery failure of the first e mail B the round robin scheduling module may automatically instruct the MTA to attempt to send a second e mail C to another of the user s e mail addresses. The sending computer system D may modify the header of a second e mail C to include the second address. The sending MTA may then push the e mail C across the SMTP connection to the MTA of the receiving computer system associated with the second e mail address. As shown in the example of the second e mail address corresponds to the receiving computer system B which receives the e mail C using MTA B. In this manner the round robin scheduling module may keep sending the e mails to the user s addresses in sequence until one of the e mails is successfully delivered or until the list of e mail addresses is exhausted.

In the examples of the round robin scheduling module is illustrated as being separate from the MTA . For each e mail sent to each receiving computer system the round robin scheduling module may send a separate instruction to the MTA where each instruction specifies only one of the e mail addresses. In an alternate embodiment however a custom MTA may implement the functionality of the round robin scheduling module . In this alternate embodiment another component such as the message generation module may send a list of e mail addresses to the custom MTA e.g. using a suitable API call . The custom MTA may then send the e mail each of the supplied addresses in sequence until a successful delivery is achieved. In one embodiment a custom MTA may implement both the deliverability based e mail sending functionality e.g. as illustrated in and the round robin e mail scheduling functionality e.g. as illustrated in .

A sending computer system e.g. associated with an online merchant may seek to send an e mail to a user e.g. a customer . In one embodiment a message generation module may generate message content for an e mail. The plurality of e mail addresses for the user may be retrieved from storage. The first e mail address for the user may be selected for sending a first e mail. The first e mail address may be selected from among the plurality of e mail addresses using any suitable technique such as selecting the first e mail address at random or selecting the first e mail address based on previously obtained deliverability data for individual addresses and or domains e.g. data as shown in .

As shown in a first e mail comprising the message content may be sent to the first e mail address. The first e mail may be sent automatically in response to deciding to contact the user and or in response to selecting the first e mail address for the user. In one embodiment the first e mail may be sent using an SMTP connection between the sending computer system and a receiving computer system associated with the domain of the first e mail address. In one embodiment a connection may be opened between the sending MTA of the sending computer system and the receiving MTA for the receiving computer system for the first e mail address.

As shown in the sending computer system may automatically determine whether the first e mail was successfully delivered to the first e mail address. In one embodiment the sending computer system may determine successful delivery or failed delivery based on receipt of an SMTP response indicating successful delivery or failed delivery i.e. a bounce from the receiving computer system. As shown in if the first e mail was successfully delivered then the process may end with no further e mails being sent to the same user with the same message content.

However if the first e mail was not successfully delivered then as shown in the sending computer system may automatically send a second e mail comprising the same message content to the second e mail address. The second e mail address may be selected from among the plurality of e mail addresses using any suitable technique such as selecting the second e mail address at random or selecting the second e mail address based on previously obtained deliverability data for individual addresses and or domains e.g. data as shown in . In one embodiment the second e mail may be sent using an SMTP connection between the sending computer system and a receiving computer system associated with the domain of the second e mail address. In one embodiment a connection may be opened between the sending MTA of the sending computer system and the receiving MTA for the receiving computer system for the second e mail address.

In one embodiment the sending computer system may continue to send e mails in sequence to individual e mail addresses associated with the user until one of the e mails is successfully delivered or until all of the e mail addresses have been exhausted without a successful delivery. For example the sending computer system may automatically determine whether the second e mail was successfully delivered to the second e mail address. If the second e mail was not successfully delivered to the second e mail address the sending computer system may automatically send a third e mail comprising the message content to the third e mail address.

A sending computer system e.g. associated with an online merchant may seek to send an e mail to a user e.g. a customer . In one embodiment a message generation module may generate message content for an e mail. The plurality of e mail addresses for the user may be retrieved from storage. The first e mail address for the user may be selected for sending a first e mail. The first e mail address may be selected from among the plurality of e mail addresses using any suitable technique such as selecting the first e mail address at random or selecting the first e mail address based on previously obtained deliverability data for individual addresses and or domains e.g. data as shown in .

As shown in a first e mail comprising the message content may be sent to the first e mail address. The first e mail may be sent automatically in response to deciding to contact the user and or in response to selecting the first e mail address for the user. In one embodiment the first e mail may be sent using an SMTP connection between the sending computer system and a receiving computer system associated with the domain of the first e mail address. In one embodiment a connection may be opened between the sending MTA of the sending computer system and the receiving MTA for the receiving computer system for the first e mail address.

As shown in the sending computer system may automatically determine whether the first e mail was successfully delivered to the first e mail address. In one embodiment the sending computer system may determine successful delivery or failed delivery based on receipt of an SMTP response indicating successful delivery or failed delivery i.e. a bounce from the receiving computer system. As shown in if the first e mail was successfully delivered then the process may end with no further e mails being sent to the same user with the same message content.

However if the first e mail was not successfully delivered then as shown in the sending computer system may automatically send an additional e mail comprising the same message content to one of the additional e mail addresses. The additional e mail address may be selected from among the plurality of additional e mail addresses using any suitable technique such as selecting the additional e mail address at random or selecting the additional e mail address based on previously obtained deliverability data for individual addresses and or domains e.g. data as shown in . In one embodiment the additional e mail may be sent using an SMTP connection between the sending computer system and a receiving computer system associated with the domain of the additional e mail address. In one embodiment a connection may be opened between the sending MTA of the sending computer system and the receiving MTA for the receiving computer system for the additional e mail address.

If the additional e mail was not successfully delivered then the sending computer system may send yet another e mail to yet another of the additional e mail addresses. In this manner the sending computer system may continue to send e mails in sequence to individual ones of the additional e mail addresses until one of the e mails is successfully delivered or until all of the additional e mail addresses have been exhausted without a successful delivery.

The sending computer system E may provide the identity of the selected e mail address and an indication of successful delivery of the e mail to a web engine module . Using the information provided by the sending computer system E the web engine may generate an order confirmation page . The web engine may use any suitable technique for generating a web page and for providing the order confirmation page to a web browser of the customer. The order confirmation page may include an indication of the selected e mail address to inform the customer that the order confirmation or other transactional message was sent to the selected e mail address.

In one embodiment the identity of the selected e mail address may also be provided to the web engine to produce an order history page or order status page. The identity of the selected e mail address may be stored with a record of the order or transaction that prompted the e mail D. When the customer desires to access the order history or order status at any point the web engine may obtain or retrieve the selected e mail address associated with the record of the order or transaction to inform the customer that the order confirmation or other transactional message was sent to the selected e mail address. The web engine may use any suitable technique for generating a web page and for providing the order status page or order history page to a web browser of the customer.

As shown in when the customer places an order via the merchant s website the merchant s website may provide an order confirmation page to the customer s web browser. Using the systems and methods described herein the identity of the e mail address to which the message was successfully delivered may be determined and then included in order confirmation page. The web engine may wait to obtain the e mail address for up to a pre determined amount of time before providing the order confirmation page to the customer. However the merchant s web engine may not wait beyond the pre determined amount of time e.g. five seconds to obtain the identity of the e mail address . For example the address may not be selected or the e mail may not be successfully delivered within the pre determined amount of time. If the identity of the e mail address is not obtained within the pre determined amount of time then the order confirmation page may be provided to the customer without the identity of the e mail address . However the e mail address may be specified on an order status or order history page that the customer may check at a later time.

In one embodiment any of the e mail sending or scheduling methods and systems described herein may be provided to third parties by an entity that maintains any of the sending computer systems A B C D or E. The deliverability based e mail sending service and or the round robin e mail service may be made available as a service to a third party e mail sender that seeks to reach e mail recipients in a reliable manner. For example Amazon Simple E Mail Service available from Amazon.com or Amazon Web Services LLC may include options for its clients to use the deliverability based e mail sending techniques and or the round robin e mail techniques. Using SMTP or simple API calls a client of a service such as Amazon Simple E Mail Service may access an e mail infrastructure to efficiently communicate to the client s customers using the systems and methods described herein. The client of the e mail service may maintain or control various components shown in and including the address acquisition module e mail address storage and or message generation module .

In one embodiment the client of the e mail service may supply information that is used to identify or order the plurality of recipient e mail addresses. For example the service provider e.g. via the sending computer system A B C D and or E may acquire the plurality of e mail addresses from the client through a suitable API call. As another example the client may provide a priority or ranking of the e mail addresses such as a designation of one of the addresses as a primary address. In one embodiment the client of the e mail service may supply elements of the delivery likelihood data to the sending computer system. For example the client may provide an indication that previous e mails to one of the e mail addresses have been flagged as spam by the user or recipient host. As another example the client may provide information based on engagement metrics to indicate the potential deliverability of each e mail address. The deliverability data may be provided via a suitable API call.

In at least some embodiments a computer system that implements a portion or all of one or more of the technologies described herein including the techniques to implement the functionality of sending computer systems A B C D and or E may include a general purpose computer system that includes or is configured to access one or more computer readable media. illustrates such a general purpose computing device . In the illustrated embodiment computing device includes one or more processors coupled to a system memory via an input output I O interface . Computing device further includes a network interface coupled to I O interface .

In various embodiments computing device may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may include any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store program instructions and data accessible by processor s . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing one or more desired functions such as those methods techniques and data described above are shown stored within system memory as code i.e. program instructions and data .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computing device and other devices attached to a network or networks such as other computer systems or devices as illustrated in for example. In various embodiments network interface may support communication via any suitable wired or wireless general data networks such as types of Ethernet network for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a computer readable i.e. computer accessible medium configured to store program instructions and data as described above for for implementing embodiments of the corresponding methods and apparatus. However in other embodiments program instructions and or data may be received sent or stored upon different types of computer readable media. Generally speaking a computer readable medium may include non transitory storage media or memory media such as magnetic or optical media e.g. disk or DVD CD coupled to computing device via I O interface . A non transitory computer readable storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc that may be included in some embodiments of computing device as system memory or another type of memory. Further a computer readable medium may include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface . Portions or all of multiple computing devices such as that illustrated in may be used to implement the described functionality in various embodiments for example software components running on a variety of different devices and servers may collaborate to provide the functionality. In some embodiments portions of the described functionality may be implemented using storage devices network devices or special purpose computer systems in addition to or instead of being implemented using general purpose computer systems. The term computing device as used herein refers to at least all these types of devices and is not limited to these types of devices.

Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer readable medium. Generally speaking a computer readable medium may include storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM etc. ROM etc. In some embodiments a computer readable medium may also include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as network and or a wireless link.

The various methods as illustrated in the Figures and described herein represent exemplary embodiments of methods. The methods may be implemented in software hardware or a combination thereof. In various of the methods the order of the steps may be changed and various elements may be added reordered combined omitted modified etc. Various of the steps may be performed automatically e.g. without being prompted by user input and or programmatically e.g. according to program instructions .

Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. It is intended to embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

