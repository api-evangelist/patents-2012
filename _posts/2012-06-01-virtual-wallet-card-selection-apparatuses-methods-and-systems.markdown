---

title: Virtual wallet card selection apparatuses, methods and systems
abstract: The VIRTUAL WALLET CARD SELECTION APPARATUSES, METHODS AND SYSTEMS (“VWCS”) transform virtual wallet card selections by users utilizing mobile devices via VWCS components into virtual wallet card-based transaction purchase notifications. In one implementation, the VWCS obtains a user authentication request for a purchase transaction, and extracts a universal card account number from it. Upon querying a database, the VWCS determines that the user has access to a virtual wallet and obtains virtual wallet card selection options for the user from the database. The VWCS provides the virtual wallet card selection options to a user mobile device, and obtains a user selection of an account included among the options. The VWCS initiates a purchase transaction using the user selection. Also, upon completion of authorization of the purchase transaction, the VWCS provides a purchase receipt to the user mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08577803&OS=08577803&RS=08577803
owner: Visa International Service Association
number: 08577803
owner_city: San Francisco
owner_country: US
publication_date: 20120601
---
This application claims priority under 35 USC 119 to U.S. provisional patent application Ser. No. 61 492 854 filed Jun. 3 2011 entitled VIRTUAL WALLET CARD SELECTION APPARATUSES METHODS AND SYSTEMS . The entire contents of the aforementioned applications are expressly incorporated herein by reference.

This application for letters patent discloses and describes various novel innovations and inventive aspects of VIRTUAL WALLET CARD SELECTION technology hereinafter disclosure and contains material that is subject to copyright mask work and or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the disclosure by anyone as it appears in published Patent Office file records but otherwise reserve all rights.

The present innovations generally address apparatuses methods and systems for electronic purchase transactions and more particularly include VIRTUAL WALLET CARD SELECTION APPARATUSES METHODS AND SYSTEMS VWCS .

Consumer transactions require a customer to select a product from a store shelf and then to check them out at a checkout counter. Product information is entered into a point of sale terminal device or the information is entered automatically by scanning an item barcode with an integrated barcode scanner and the customer is usually provided with a number of payment options such as cash check credit card or debit card. Once payment is made and approved the point of sale terminal memorializes the transaction in the merchant s computer system and a receipt is generated indicating the satisfactory consummation of the transaction.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

The VIRTUAL WALLET CARD SELECTION APPARATUSES METHODS AND SYSTEMS hereinafter VWCS transform virtual wallet card selections by users utilizing mobile devices via VWCS components into virtual wallet card based transaction purchase notifications. show block diagrams illustrating example aspects of a virtual wallet card selection based purchase transaction in some embodiments of the VWCS. The VWCS has many features and capabilities of which the ones in are examples. More detail with regard to may be found with regard to . With reference to in some implementations a user e.g. may desire to purchase a product service offering and or the like product from a merchant. The user may communicate with a merchant server e.g. via a client such as but not limited to a personal computer mobile device television point of sale terminal kiosk ATM and or the like e.g. . For example the user may provide user input e.g. purchase input into the client indicating the user s desire to purchase the product. In various implementations the user input may include but not be limited to keyboard entry card swipe activating a RFID NFC enabled hardware device e.g. electronic card having multiple accounts smartphone tablet etc. mouse clicks depressing buttons on a joystick game console voice commands single multi touch gestures on a touch sensitive interface touching user interface elements on a touch sensitive display and or the like. For example the user may direct a browser application executing on the client device to a website of the merchant and may select a product from the website via clicking on a hyperlink presented to the user via the website. As another example the client may obtain track data from the user s card e.g. credit card debit card prepaid card charge card etc. such as the example track data provided below 

In some implementations the client may generate a purchase order message e.g. and provide e.g. the generated purchase order message to the merchant server. For example a browser application executing on the client may provide on behalf of the user a Secure Hypertext Transfer Protocol HTTP S GET message including the product order details for the merchant server in the form of data formatted according to the eXtensible Markup Language XML . Below is an example HTTP S GET message including an XML formatted purchase order message for the merchant server 

In some implementations the merchant server may obtain the purchase order message from the client and may parse the purchase order message to extract details of the purchase order from the user. The merchant server may generate a card query request e.g. to determine whether the transaction can be processed. For example the merchant server may attempt to determine whether the user has sufficient funds to pay for the purchase in a card account provided with the purchase order. The merchant server may provide the generated card query request e.g. to an acquirer server e.g. . For example the acquirer server may be a server of an acquirer financial institution acquirer maintaining an account of the merchant. For example the proceeds of transactions processed by the merchant may be deposited into an account maintained by the acquirer. In some implementations the card query request may include details such as but not limited to the costs to the user involved in the transaction card account details of the user user billing and or shipping information and or the like. For example the merchant server may provide a HTTP S POST message including an XML formatted card query request similar to the example listing provided below 

In some implementations the acquirer server may generate a card authorization request e.g. using the obtained card query request and provide the card authorization request e.g. to a pay network server e.g. . For example the acquirer server may redirect the HTTP S POST message in the example above from the merchant server to the pay network server.

In some implementations the pay network server may obtain the card authorization request from the acquirer server and may parse the card authorization request to extract details of the request e.g. the user ID and purchase card details. The pay network server may attempt to determine whether the user has access to a virtual wallet from which the user may select a card to use to complete the purchase transaction. In some implementations the pay network server may query e.g. a pay network database e.g. to obtain data on virtual card selection options for the user. In some implementations the database may store details of the user a flag indicating whether the user has access to a virtual wallet account numbers associated with the user s virtual wallet and or the like. For example the database may be a relational database responsive to Structured Query Language SQL commands. The pay network server may execute a hypertext preprocessor PHP script including SQL commands to query the database for virtual wallet card selection options available to the user. An example PHP SQL command listing illustrating substantive aspects of a virtual wallet card selection query to a database is provided below 

In response to obtaining the virtual wallet card selection query e.g. the pay network database may provide e.g. the requested virtual wallet card selection options to the pay network server. The pay network server may generate a request for a selection of one of the payment options from the user s virtual wallet and provide e.g. the virtual wallet card selection request to a user device e.g. such as but not limited to a personal computer mobile device interactive television personal digital assistant tablet computer e book reader gaming console netbook laptop computer and or the like. For example the pay network server may provide a HTTP S POST message including an XML formatted virtual wallet card selection request similar to the example listing provided below 

The user device may display the virtual wallet card selection options for the user e.g. . For example the user device may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone and or play an audio message etc. and provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

In some implementations the user may provide a card selection input e.g. in response to the virtual wallet card selection options presented by the user device to the user. For example the user may tap swipe touchscreen of a mobile device press a key on a keyboard perform a single mouse click etc. to provide a selection of a card from the user s virtual wallet with which to complete the purchase transaction. The user device may generate a virtual wallet card selection response based on the user s card selection input and provide e.g. the virtual wallet card selection response to the pay network server. For example the user device may provide a HTTP S POST message including an XML formatted virtual wallet card selection response similar to the example listing provided below 

In some implementations the user may provide that the purchase transaction is to be processed as a split tender e.g. in the example virtual wallet card selection response above 60 of the cost is to be applied to one card and 40 is to be applied to the other. User interfaces describing providing split tender options are further described below in the discussion with reference to .

With reference to in some implementations a user e.g. may desire to purchase products services and or other offerings products in person. The user may e.g. enter see e.g. into a store warehouse etc. to purchase a product. The user may desire to procure purchase items available at the store in person see e.g. . The user may in some implementations attempt to check out the purchase items see e.g. at a point of sale POS terminal e.g. . For example the user may swipe a charge card e.g. credit card debit card prepaid card etc. hereinafter universal card . The POS terminal may provide the details of the user s universal card for processing the purchase transaction. For example the POS terminal may provide the purchase transaction details to a pay network e.g. credit card company issuer bank acquirer bank etc. for payment processing. The pay network may identify e.g. based on the universal card details that the user associated with the universal card has access to a virtual wallet of cards. The pay network may e.g. in real time query e.g. the user for a selection of one of the cards from user s virtual wallet. For example the pay network may send to the user s device e.g. e.g. smartphone tablet computer netbook laptop personal digital assistant gaming console etc. a message e.g. Secure HyperText Transfer Protocol HTTP S POST GET message electronic mail message Short Messaging Service SMS message HTTP Real Time Streaming Protocol RTSP video stream text message Twitter tweet Facebook message wall posting etc. requesting the user to select a payment option from the user s virtual wallet. Based on the message a user interface rendered by the user s device may be populated with user card selection options see . In some examples even though the universal card is not a credit card a most appropriate card may be selected by the user using the user device. Alternatively the payment network server may select a pre set card with which to process the purchase transaction.

In some implementations upon obtaining the message the device may provide the user with an interface to make a selection of a card from the user s virtual wallet to utilize to complete the purchase transaction. For example the user s device may be executing an application module app via which the user s device may communicate with the pay network. The user s device may display the virtual wallet card selection options obtained from the pay network via the app to the user. In some implementations the app may provide the user an option to buy the purchase items on the spot by performing a single action e.g. tap swipe touchscreen of a mobile device press a key on a keyboard perform a single mouse click etc. .

In some implementations the app may provide various alternate options for the user. For example the app may provide the user with alternate merchants where the user may obtain the products and or similar products alternate products that may be comparable to the purchase products competitive pricing information between merchants discounts coupons and or other offers for the user etc. In some implementations the app may indicate that the user may earn rewards points if the user purchases the product at another merchant. In some implementations the app may indicate that the may be required to use fewer rewards points to pay for the purchase transaction if the user purchases the product at another merchant because the other merchant may have a better relationship with the rewards points provider. In some implementations the app may indicate that the user may earn more rewards points if the uses a specific or alternative card to pay for the purchase transaction. In some implementations the app may indicate that the user may obtain a greater amount of cash back if the user purchases the card at an alternate merchant and or using an alternate card. In various implementations offers to the user including and similar to those described herein may originate from various entities and or components including but not limited to merchants pay networks card issuers acquirers and or the like.

With reference to in some implementations the user may buy see e.g. the product on the spot from the current merchant and or other merchant s by performing the single action on the user device e.g. one tap of a touchscreen of the user device . In such implementations the VWCS server may initiate a card based purchase transaction using a card e.g. checking account savings account Paypal account Google Checkout account credit card debit card prepaid card etc. selected from the user s virtual wallet see e.g. . In some implementations the VWCS may be able to arbitrage credit card payment networks in that a merchant card issuer acquirer pay network and or the like entities and or VWCS components may switch how payments for the user are processed because of transaction cost considerations.

In some implementations the pay network e.g. may initiate the card based purchase transaction e.g. and may generate a purchase confirmation receipt for the user. The VWCS server may provide the purchase confirmation receipt to the client device e.g. . In some implementations the user may desire to exit the store after purchasing items via the app. In such implementations the user may be required to provide proof of purchase of the product at the exit of the store e.g. . The user may utilize the purchase confirmation receipt obtained from the VWCS via the app on the client device to provide such proof of product purchase e.g. . For example the receipt may include a purchase identifier e.g. . For example the purchase identifier may include a barcode a QR code an image of a receipt a video of a purchase action etc. The user may utilize such confirmations of the purchase as proof at the exit of the store. Accordingly in some implementations the user may obtain greater security in transactions because a purchase can only be completed if the person has both the user s universal card and access to the user s device as well as access to the app executing on the user s device. Further even at outdated POS terminals a user may obtain access to the user s virtual wallet via the user s device thus improving the user s efficiency and ease in the shopping experience.

In some implementations the user may select to conduct the transaction using a one time anonymized credit card number see e.g. . For example the VWCS may utilize a pre designated anonymized set of card details see e.g. AnonCard1 AnonCard2 . As another example the VWCS may generate e.g. in real time a one time anonymous set of card details to securely complete the purchase transaction e.g. Anon It 1X . In such implementations the app may automatically set the user profile settings such that the any personal identifying information of the user will not be provided to the merchant and or other entities. In some implementations the user may be required to enter a user name and password to enable the anonymization features.

In some implementations the VWCS may utilize a text challenge procedure to verify the authenticity of the user e.g. . For example the VWCS may communicate with the user via text chat SMS messages electronic mail Facebook messages Twitter tweets and or the like. The VWCS may pose a challenge question e.g. for the user. The app may provide a user input interface element s e.g. virtual keyboard to answer the challenge question posed by the VWCS. In some implementations the challenge question may randomly selected by the VWCS automatically in some implementations a customer service representative may manually communicate with the user. In some implementations the user may not have initiated the transaction e.g. the transaction is fraudulent. In such implementations the user may cancel e.g. the text challenge. The VWCS may then cancel the transaction and or initiate fraud investigation procedures on behalf of the user.

In some implementations the app may be configured to recognize product identifiers e.g. barcodes QR codes etc. . For example for fraud prevention the app may require the user to utilize the user s device to obtain snapshot of the items being purchased thus ensuring that the person who swiped the card is also in possession of the user s device as well as the purchase items. In some implementations the user may be required to sign in to the app to enable its features. Once enabled the camera may provide in person one tap purchasing features for the user. For example the client device may have a camera via which the app may acquire images video data streaming live video and or the like e.g. . The app may be configured to analyze the incoming data and search e.g. for a product identifier e.g. . In some implementations the app may overlay cross hairs target box and or like alignment reference markers e.g. so that a user may align the product identifier using the reference markers so facilitate product identifier recognition and interpretation. In some implementations the app may include interface elements to allow the user to switch back and forth between the product identification mode and the product offer interface display screens see e.g. so that a user may accurately study the deals available to the user before capturing a product identifier. In some implementations the app may provide the user with the ability to view prior product identifier captures see e.g. so that the user may be able to better decide which product identifier the user desires to capture. In some implementations the user may desire to cancel product purchasing the app may provide the user with a user interface element e.g. to cancel the product identifier recognition procedure and return to the prior interface screen the user was utilizing. In some implementations the user may be provided with information about products user settings merchants offers etc. in list form see e.g. so that the user may better understand the user s purchasing options. Various other features may be provided for in the app see e.g. .

In some implementations the user may be able to view and or modify the user profile and or settings of the user e.g. by activating user interface element see . For example the user may be able to view modify a user name e.g. account number e.g. user security access code e.g. user pin e.g. user address e.g. social security number associated with the user e.g. current device GPS location e.g. user account of the merchant in whose store the user currently is e.g. the user s rewards accounts e.g. and or the like. In some implementations the user may be able to select which of the data fields and their associated values should be transmitted to facilitate the purchase transaction thus providing enhanced data security for the user. For example in the example illustration in the user has selected the name account number security code merchant account ID and rewards account ID as the fields to be sent as part of the notification to process the purchase transaction. In some implementations the user may toggle the fields and or data values that are sent as part of the notification to process the purchase transactions. In some implementations the app may provide multiple screens of data fields and or associated values stored for the user to select as part of the purchase order transmission. In some implementations the app may provide the VWCS with the GPS location of the user. Based on the GPS location of the user the VWCS may determine the context of the user e.g. whether the user is in a store doctor s office hospital postal service office etc. . Based on the context the user app may present the appropriate fields to the user from which the user may select fields and or field values to send as part of the purchase order transmission.

For example a user may go to doctor s office and desire to pay the co pay for doctor s appointment. In addition to basic transactional information such as account number and name the app may provide the user the ability to select to transfer medical records health information which may be provided to the medical provider insurance company as well as the transaction processor to reconcile payments between the parties. In some implementations the records may be sent in a Health Insurance Portability and Accountability Act HIPAA compliant data format and encrypted and only the recipients who are authorized to view such records may have appropriate decryption keys to decrypt and view the private user information.

Various additional advantageous example features of such apps are further described in the discussion below with reference to .

In some implementations the client may generate a purchase order message e.g. and provide e.g. the generated purchase order message to the merchant server. For example a browser application executing on the client may provide on behalf of the user a Secure Hypertext Transfer Protocol HTTP S GET message including the product order details for the merchant server in the form of data formatted according to the eXtensible Markup Language XML . Below is an example HTTP S GET message including an XML formatted purchase order message for the merchant server 

In some implementations the merchant server may obtain the purchase order message from the client and may parse the purchase order message to extract details of the purchase order from the user. The merchant server may generate a card query request e.g. to determine whether the transaction can be processed. For example the merchant server may attempt to determine whether the user has sufficient funds to pay for the purchase in a card account provided with the purchase order. The merchant server may provide the generated card query request e.g. to an acquirer server e.g. . For example the acquirer server may be a server of an acquirer financial institution acquirer maintaining an account of the merchant. For example the proceeds of transactions processed by the merchant may be deposited into an account maintained by the acquirer. In some implementations the card query request may include details such as but not limited to the costs to the user involved in the transaction card account details of the user user billing and or shipping information and or the like. For example the merchant server may provide a HTTP S POST message including an XML formatted card query request similar to the example listing provided below 

In some implementations the acquirer server may generate a card authorization request e.g. using the obtained card query request and provide the card authorization request e.g. to a pay network server e.g. . For example the acquirer server may redirect the HTTP S POST message in the example above from the merchant server to the pay network server.

In some implementations the pay network server may obtain the card authorization request from the acquirer server and may parse the card authorization request to extract details of the request e.g. the user ID and purchase card details. The pay network server may attempt to determine whether the user has access to a virtual wallet from which the user may select a card to use to complete the purchase transaction. In some implementations the pay network server may query e.g. a pay network database e.g. to obtain data on virtual card selection options for the user. In some implementations the database may store details of the user a flag indicating whether the user has access to a virtual wallet account numbers associated with the user s virtual wallet and or the like. For example the database may be a relational database responsive to Structured Query Language SQL commands. The pay network server may execute a hypertext preprocessor PHP script including SQL commands to query the database for virtual wallet card selection options available to the user. An example PHP SQL command listing illustrating substantive aspects of a virtual wallet card selection query to a database is provided below 

In response to obtaining the virtual wallet card selection query e.g. the pay network database may provide e.g. the requested virtual wallet card selection options to the pay network server. The pay network server may generate a request for a selection of one of the payment options from the user s virtual wallet and provide e.g. the virtual wallet card selection request to a user device e.g. such as but not limited to a personal computer mobile device interactive television personal digital assistant tablet computer e book reader gaming console netbook laptop computer and or the like. For example the pay network server may provide a HTTP S POST message including an XML formatted virtual wallet card selection request similar to the example listing provided below 

The user device may display the virtual wallet card selection options for the user e.g. . For example the user device may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone and or play an audio message etc. and provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

In some implementations the user may provide a card selection input e.g. in response to the virtual wallet card selection options presented by the user device to the user. For example the user may tap swipe touchscreen of a mobile device press a key on a keyboard perform a single mouse click etc. to provide a selection of a card from the user s virtual wallet with which to complete the purchase transaction. The user device may generate a virtual wallet card selection response based on the user s card selection input and provide e.g. the virtual wallet card selection response to the pay network server. For example the user device may provide a HTTP S POST message including an XML formatted virtual wallet card selection response similar to the example listing provided below 

In some implementations the user may provide that the purchase transaction is to be processed as a split tender e.g. in the example virtual wallet card selection response above 60 of the cost is to be applied to one card and 40 is to be applied to the other. User interfaces describing providing split tender options are further described below in the discussion with reference to .

With reference to in some implementations the pay network server may obtain the virtual wallet card selection response from the user device and may parse the virtual wallet card selection response to extract details of the virtual wallet card selection . Using the extracted fields and field values the pay network server may generate a query e.g. for an issuer server corresponding to the user s card account selected from the user s virtual wallet. For example the user s card account may be linked to an issuer financial institution issuer such as a banking institution which issued the card account for the user. An issuer server e.g. of the issuer may maintain details of the user s card account. In some implementations a database e.g. pay network database may store details of the issuer servers and card account numbers associated with the issuer servers. For example the database may be a relational database responsive to Structured Query Language SQL commands. The pay network server may execute a hypertext preprocessor PHP script including SQL commands to query the database for details of the issuer server. An example PHP SQL command listing illustrating substantive aspects of querying the database is provided below 

In response to obtaining the issuer server query e.g. the pay network database may provide e.g. the requested issuer server data to the pay network server. In some implementations the pay network server may utilize the issuer server data to generate a card authorization request e.g. to redirect the card authorization request from the acquirer server via the user s virtual wallet card selection to the issuer server. The pay network server may provide the card authorization request e.g. to the issuer server. In some implementations the issuer server e.g. may parse the card authorization request and based on the request details may query a database e.g. user profile database for data of the user s card account selected from the user s virtual wallet e.g. . For example the issuer server may issue PHP SQL commands similar to the example provided below 

In some implementations on obtaining the user data e.g. the issuer server may determine whether the user can pay for the transaction using funds available in the account e.g. . For example the issuer server may determine whether the user has a sufficient balance remaining in the account sufficient credit associated with the account and or the like. If the issuer server determines that the user can pay for the transaction using the funds available in the account the server may provide an authorization message e.g. to the pay network server. For example the server may provide a HTTP S POST message similar to the examples above. If the issuer server determines that the user cannot pay for the transaction using the funds available in the account the pay network server may provide another virtual wallet card selection request to the user device unless the prior number of such requests provided exceeds a threshold in which case the pay network server may indicate to the merchant server that the transaction has not been authorized.

In some implementations the pay network server may obtain the authorization message and parse the message to extract authorization details. Upon determining that the user possesses sufficient funds for the transaction the pay network server may generate a transaction data record from the card authorization request it received and store the details of the transaction and authorization relating to the transaction in a transactions database. For example the pay network server may issue PHP SQL commands similar to the example listing below to store the transaction data in a database 

In some implementations the pay network server may forward the authorization message e.g. to the acquirer server which may in turn forward the authorization message e.g. to the merchant server. The merchant may obtain the authorization message and determine from it that the user possesses sufficient funds in the card account to conduct the transaction. The merchant server may add a record of the transaction for the user to a batch of transaction data relating to authorized transactions. For example the merchant may append the XML data pertaining to the user transaction to an XML data file comprising XML data for transactions that have been authorized for various users e.g. and store the XML data file e.g. in a database e.g. merchant database . For example a batch XML data file may be structured similar to the example XML data structure template provided below 

In some implementations the server may also generate a purchase receipt e.g. and provide the purchase receipt to the client e.g. . The client may render and display e.g. the purchase receipt for the user. For example the client may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone and or play an audio message etc. and provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

With reference to in some implementations the merchant server may initiate clearance of a batch of authorized transactions. For example the merchant server may generate a batch data request e.g. and provide the request e.g. to a database e.g. merchant database . For example the merchant server may utilize PHP SQL commands similar to the examples provided above to query a relational database. In response to the batch data request the database may provide the requested batch data e.g. . The server may generate a batch clearance request e.g. using the batch data obtained from the database and provide e.g. the batch clearance request to an acquirer server e.g. . For example the merchant server may provide a HTTP S POST message including XML formatted batch data in the message body for the acquirer server. The acquirer server may generate e.g. a batch payment request using the obtained batch clearance request and provide the batch payment request to the pay network server e.g. . The pay network server may parse the batch payment request and extract the transaction data for each transaction stored in the batch payment request e.g. . The pay network server may store the transaction data e.g. for each transaction in a database e.g. transactions database . For each extracted transaction the pay network server may query e.g. a database e.g. pay network database for an address of an issuer server. For example the pay network server may utilize PHP SQL commands similar to the examples provided above. The pay network server may generate an individual payment request e.g. for each transaction for which it has extracted transaction data and provide the individual payment request e.g. to the issuer server e.g. . For example the pay network server may provide a HTTP S POST request similar to the example below 

In some implementations the issuer server may generate a payment command e.g. . For example the issuer server may issue a command to deduct funds from the user s account or add a charge to the user s credit card account . The issuer server may issue a payment command e.g. to a database storing the user s account information e.g. user profile database . The issuer server may provide a funds transfer message e.g. to the pay network server which may forward e.g. the funds transfer message to the acquirer server. An example HTTP S POST funds transfer message is provided below 

In some implementations the acquirer server may parse the funds transfer message and correlate the transaction e.g. using the request ID field in the example above to the merchant. The acquirer server may then transfer the funds specified in the funds transfer message to an account of the merchant e.g. .

In some implementations the pay network server may obtain the card authorization request from the acquirer server and may parse the card authorization request to extract details of the request e.g. . For example the pay network server may obtain the user ID of the user card account number of the card the user swiped at the client etc. The pay network server may attempt to determine whether the user has access to a virtual wallet from which the user may select a card to use to complete the purchase transaction. In some implementations the pay network server may generate a query e.g. to a pay network database to obtain virtual card selection options available to the user as discussed above in the description with reference to . In response to the virtual wallet card selection query e.g. the pay network database may provide e.g. the requested virtual wallet card selection options to the pay network server. The pay network server may generate a request for a selection of one of the payment options from the user s virtual wallet e.g. and provide the virtual wallet card selection request to a user device. For example the query results mayt return a listing of several user e wallet accounts e.g. credit debit prepaid etc. from numerous issuers and merchants this list of query results may be wrapped into a dynamic user interface object e.g. an HTML XML CSS etc. wrapper see which may then be rendered by the user device. In some implementations the user device may render e.g. the virtual wallet card selection options provided by the pay network server and display the virtual wallet card selection options for the user e.g. . For example the selection object may be rendered in a display portion of the screen e.g. in a web rendering object view.

In some implementations the user may provide a card selection input e.g. in response to the virtual wallet card selection options presented by the user device to the user. The user device may generate a virtual wallet card selection response based on the user s card selection input e.g. and provide the virtual wallet card selection response to the pay network server. In some implementations the pay network server may wait for at least a predetermined amount of time for a response from the user to the virtual wallet card selection request. If the wait time exceeds the predetermined amount of time the pay network server may determine that the user s time has run out resulting in a timeout. This may provide an element of security to the user s virtual wallet. If the user has timed out e.g. option Yes the server may determine whether the user timed out more than a pre specified number of times in the processing of the current transaction. If the user has not responded or if the user s selections all have failed to result in successful authorization more than a pre specified threshold number of times e.g. option Yes the pay network server may determine that the transaction must be cancelled and generate an authorization fail message for the merchant server e.g. . In some implementations if the pay network server determines that the user has timed out and or that the number of timeouts for the current transaction has exceed a predetermined threshold the server may utilize a default virtual wallet card selection previously set by the user and continue transaction processing using the default selection. In some implementations the pay network server may always use the default virtual wallet card selection of the user and may not attempt to contact the user via the user device to obtain a user selection. It is to be understood that varying permutations and or combinations of the features presented herein may be utilize to balance the security interest in contacting the user to obtain authorization and a custom selection of the card to utilize from the virtual wallet against minimizing the number of times a user is contacted in order to effect a purchase transaction.

In some implementations if the pay network server successfully captures a valid user selection of a card account from the virtual wallet card selection options the pay network server may obtain the virtual wallet card selection response from the user device and may parse the virtual wallet card selection response to extract details of the virtual wallet card selection. Using the extracted fields and field values the pay network server may generate a query e.g. for an issuer server corresponding to the user s card account. In response to obtaining the issuer server query the pay network database may provide e.g. the requested issuer server data to the pay network server. In some implementations the pay network server may utilize the issuer server data to generate a forwarding card authorization request e.g. to redirect the card authorization request from the acquirer server to the issuer server. The pay network server may provide the card authorization request to the issuer server. In some implementations the issuer server may parse e.g. the card authorization request and based on the request details may query a database e.g. for data of the user s card account. In response the database may provide the requested user data e.g. . On obtaining the user data the issuer server may determine whether the user can pay for the transaction using funds available in the account e.g. . For example the issuer server may determine whether the user has a sufficient balance remaining in the account sufficient credit associated with the account and or the like but comparing the data from the database with the transaction cost obtained from the card authorization request. If the issuer server determines that the user can pay for the transaction using the funds available in the account the server may provide an authorization message e.g. to the pay network server.

In some implementations the pay network server may obtain the authorization message and parse the message to extract authorization details e.g. . Upon determining that the user possesses sufficient funds for the transaction e.g. option Yes the pay network server may extract the transaction card from the authorization message and or card authorization request e.g. and generate a transaction data record e.g. using the card transaction details. The pay network server may provide the transaction data record for storage e.g. to a database. In some implementations the pay network server may forward the authorization message e.g. to the acquirer server which may in turn forward the authorization message e.g. to the merchant server. The merchant may obtain the authorization message and parse the authorization message to extract its contents e.g. . The merchant server may determine whether the user possesses sufficient funds in the card account to conduct the transaction. If the merchant server determines that the user possess sufficient funds e.g. option Yes the merchant server may add the record of the transaction for the user to a batch of transaction data relating to authorized transactions e.g. . The merchant server may also generate a purchase receipt e.g. for the user. If the merchant server determines that the user does not possess sufficient funds e.g. option No the merchant server may generate an authorization fail message e.g. . The merchant server may provide the purchase receipt or the authorization fail message to the client. The client may render and display e.g. the purchase receipt for the user.

In some implementations the merchant server may initiate clearance of a batch of authorized transactions by generating a batch data request e.g. and providing the request to a database. In response to the batch data request the database may provide the requested batch data e.g. to the merchant server. The server may generate a batch clearance request e.g. using the batch data obtained from the database and provide the batch clearance request to an acquirer server. The acquirer server may generate e.g. a batch payment request using the obtained batch clearance request and provide the batch payment request to a pay network server. The pay network server may parse e.g. the batch payment request select a transaction stored within the batch data e.g. and extract the transaction data for the transaction stored in the batch payment request e.g. . The pay network server may generate a transaction data record e.g. and store the transaction data e.g. the transaction in a database. For the extracted transaction the pay network server may generate an issuer server query e.g. for an address of an issuer server maintaining the account of the user requesting the transaction. The pay network server may provide the query to a database. In response the database may provide the issuer server data requested by the pay network server e.g. . The pay network server may generate an individual payment request e.g. for the transaction for which it has extracted transaction data and provide the individual payment request to the issuer server using the issuer server data from the database.

In some implementations the issuer server may obtain the individual payment request and parse e.g. the individual payment request to extract details of the request. Based on the extracted data the issuer server may generate a payment command e.g. . For example the issuer server may issue a command to deduct funds from the user s account or add a charge to the user s credit card account . The issuer server may issue a payment command e.g. to a database storing the user s account information. In response the database may update a data record corresponding to the user s account to reflect the debit charge made to the user s account. The issuer server may provide a funds transfer message e.g. to the pay network server after the payment command has been executed by the database.

In some implementations the pay network server may check whether there are additional transactions in the batch that need to be cleared and funded. If there are additional transactions e.g. option Yes the pay network server may process each transaction according to the procedure described above. The pay network server may generate e.g. an aggregated funds transfer message reflecting transfer of all transactions in the batch and provide e.g. the funds transfer message to the acquirer server. The acquirer server may in response transfer the funds specified in the funds transfer message to an account of the merchant e.g. .

In one embodiment for example a user may select the option current items as shown in the left most user interface of . When the current items option is selected the middle user interface may be displayed. As shown the middle user interface may provide a current list of items in a user s shopping cart . A user may select an item for example item to view product description of the selected item and or other items from the same merchant. The price and total payable information may also be displayed along with a QR code that captures the information necessary to effect a snap mobile purchase transaction.

With reference to in another embodiment a user may select the bills option. Upon selecting the bills option the user interface may display a list of bills and or receipts from one or more merchants. Next to each of the bills additional information such as date of visit whether items from multiple stores are present last bill payment date auto payment number of items and or the like may be displayed. In one example the wallet shop bill dated Jan. 20 2011 may be selected. The wallet shop bill selection may display a user interface that provides a variety of information regarding the selected bill. For example the user interface may display a list of items purchased a QR code encoding data regarding those items a total number of items and the corresponding value . For example 7 items worth 102.54 were in the selected wallet shop bill. A user may now select any of the items and select buy again to add purchase the items. The user may also refresh offers to clear any invalid offers from last time and or search for new offers that may be applicable for the current purchase. As shown in a user may select two items for repeat purchase. Upon addition a message may be displayed to confirm the addition of the two items which makes the total number of items in the cart .

With reference to in yet another embodiment a user may select the address book option to view the address book which includes a list of contacts and make any money transfers or payments. In one embodiment the address book may identify each contact using their names and available and or preferred modes of payment. For example a contact Amanda G. may be paid via social pay e.g. via FACEBOOK as indicated by the icon . In another example money may be transferred to Brian S. via QR code as indicated by the QR code icon . In yet another example Charles B. may accept payment via near field communication Bluetooth and email . Payment may also be made via USB e.g. by physically connecting two mobile devices as well as other social channels such as TWITTER.

In one implementation a user may select Joe P. for payment. Joe P. as shown in the user interface has an email icon next to his name indicating that Joe P. accepts payment via email. When his name is selected the user interface may display his contact information such as email phone etc. If a user wishes to make a payment to Joe P. by a method other than email the user may add another transfer mode to his contact information and make a payment transfer. With reference to the user may be provided with a screen where the user can enter an amount to send Joe as well as add other text to provide Joe with context for the payment transaction . The user can choose modes e.g. SMS email social networking via which Joe may be contacted via graphical user interface elements . As the user types the text entered may be provided for review within a GUI element . When the user has completed entering in the necessary information the user can press the send button to send the social message to Joe. If Joe also has a virtual wallet application Joe may be able to review social pay message within the app or directly at the website of the social network e.g. for Twitter Facebook etc. . Messages may be aggregated from the various social networks and other sources e.g. SMS email . The method of redemption appropriate for each messaging mode may be indicated along with the social pay message. In the illustration in the SMS Joe received indicates that Joe can redeem the 5 obtained via SMS by replying to the SMS and entering the hash tag value 1234 . In the same illustration Joe has also received a message via Facebook which includes a URL link that Joe can activate to initiate redemption of the 25 payment.

With reference to in some other embodiments a user may select merchants from the list of options in the shopping mode to view a select list of merchants . In one implementation the merchants in the list may be affiliated to the wallet or have affinity relationship with the wallet. In another implementation the merchants may include a list of merchants meeting a user defined or other criteria. For example the list may be one that is curated by the user merchants where the user most frequently shops or spends more than an x amount of sum or shopped for three consecutive months and or the like. In one implementation the user may further select one of the merchants Amazon for example. The user may then navigate through the merchant s listings to find items of interest such as . Directly through the wallet and without visiting the merchant site from a separate page the user may make a selection of an item from the catalog of Amazon . As shown in the right most user interface of the selected item may then be added to cart. The message indicates that the selected item has been added to the cart and updated number of items in the cart is now .

With reference to in one embodiment there may be a local proximity option which may be selected by a user to view a list of merchants that are geographically in close proximity to the user. For example the list of merchants may be the merchants that are located close to the user. In one implementation the mobile application may further identify when the user in a store based on the user s location. For example position icon may be displayed next to a store e.g. Walgreens when the user is in close proximity to the store. In one implementation the mobile application may refresh its location periodically in case the user moved away from the store e.g. Walgreens . In a further implementation the user may navigate the offerings of the selected Walgreens store through the mobile application. For example the user may navigate using the mobile application to items available on aisle 5 of Walgreens. In one implementation the user may select corn from his or her mobile application to add to cart

With reference to in another embodiment the local proximity option may include a store map and a real time map features among others. For example upon selecting the Walgreens store the user may launch an aisle map which displays a map showing the organization of the store and the position of the user indicated by a yellow circle . In one implementation the user may easily configure the map to add one or more other users e.g. user s kids to share each other s location within the store. In another implementation the user may have the option to launch a store view similar to street views in maps. The store view may display images video of the user s surrounding. For example if the user is about to enter aisle 5 the store view map may show the view of aisle 5. Further the user may manipulate the orientation of the map using the navigation tool to move the store view forwards backwards right left as well clockwise and counterclockwise rotation

In one implementation the user may combine funds from multiple sources to pay for the transaction. The amount displayed on the user interface may provide an indication of the amount of total funds covered so far by the selected forms of payment e.g. Discover card and rewards points . The user may choose another form of payment or adjust the amount to be debited from one or more forms of payment until the amount matches the amount payable . Once the amounts to be debited from one or more forms of payment are finalized by the user payment authorization may begin.

In one implementation the user may select a secure authorization of the transaction by selecting the cloak button to effectively cloak or anonymize some e.g. pre configured or all identifying information such that when the user selects pay button the transaction authorization is conducted in a secure and anonymous manner. In another implementation the user may select the pay button which may use standard authorization techniques for transaction processing. In yet another implementation when the user selects the social button a message regarding the transaction may be communicated to one of more social networks set up by the user which may post or announce the purchase transaction in a social forum such as a wall post or a tweet. In one implementation the user may select a social payment processing option . The indicator may show the authorizing and sending social share data in progress.

In another implementation a restricted payment mode may be activated for certain purchase activities such as prescription purchases. The mode may be activated in accordance with rules defined by issuers insurers merchants payment processor and or other entities to facilitate processing of specialized goods and services. In this mode the user may scroll down the list of forms of payments under the funds tab to select specialized accounts such as a flexible spending account FSA health savings account HAS and or the like and amounts to be debited to the selected accounts. In one implementation such restricted payment mode processing may disable social sharing of purchase information.

In one embodiment the wallet mobile application may facilitate importing of funds via the import funds user interface . For example a user who is unemployed may obtain unemployment benefit fund via the wallet mobile application. In one implementation the entity providing the funds may also configure rules for using the fund as shown by the processing indicator message . The wallet may read and apply the rules prior and may reject any purchases with the unemployment funds that fail to meet the criteria set by the rules. Example criteria may include for example merchant category code MCC time of transaction location of transaction and or the like. As an example a transaction with a grocery merchant having MCC may be approved while a transaction with a bar merchant having an MCC may be refused.

With reference to in one embodiment the wallet mobile application may facilitate dynamic payment optimization based on factors such as user location preferences and currency value preferences among others. For example when a user is in the United States the country indicator may display a flag of the United States and may set the currency to the United States. In a further implementation the wallet mobile application may automatically rearrange the order in which the forms of payments are listed to reflect the popularity or acceptability of various forms of payment. In one implementation the arrangement may reflect the user s preference which may not be changed by the wallet mobile application.

Similarly when a German user operates a wallet in Germany the mobile wallet application user interface may be dynamically updated to reflect the country of operation and the currency . In a further implementation the wallet application may rearrange the order in which different forms of payment are listed based on their acceptance level in that country. Of course the order of these forms of payments may be modified by the user to suit his or her own preferences.

With reference to in one embodiment the payee tab in the wallet mobile application user interface may facilitate user selection of one or more payees receiving the funds selected in the funds tab. In one implementation the user interface may show a list of all payees with whom the user has previously transacted or available to transact. The user may then select one or more payees. The payees may include larger merchants such as Amazon.com Inc. and individuals such as Jane P. Doe. Next to each payee name a list of accepted payment modes for the payee may be displayed. In one implementation the user may select the payee Jane P. Doe for receiving payment. Upon selection the user interface may display additional identifying information relating to the payee.

With reference to in one embodiment the mode tab may facilitate selection of a payment mode accepted by the payee. A number of payment modes may be available for selection. Example modes include blue tooth wireless snap mobile by user obtained QR code secure chip TWITTER near field communication NFC cellular snap mobile by user provided QR code USB and FACEBOOK among others. In one implementation only the payment modes that are accepted by the payee may be selectable by the user. Other non accepted payment modes may be disabled.

With reference to in one embodiment the offers tab may provide real time offers that are relevant to items in a user s cart for selection by the user. The user may select one or more offers from the list of applicable offers for redemption. In one implementation some offers may be combined while others may not. When the user selects an offer that may not be combined with another offer the unselected offers may be disabled. In a further implementation offers that are recommended by the wallet application s recommendation engine may be identified by an indicator such as the one shown by . In a further implementation the user may read the details of the offer by expanding the offer row as shown by in the user interface.

With reference to in one embodiment the social tab may facilitate integration of the wallet application with social channels . In one implementation a user may select one or more social channels and may sign in to the selected social channel from the wallet application by providing to the wallet application the social channel user name and password and signing in . The user may then use the social button to send or receive money through the integrated social channels. In a further implementation the user may send social share data such as purchase information or links through integrated social channels. In another embodiment the user supplied login credentials may allow VWCS to engage in interception parsing.

In one implementation the user may select a transaction for example transaction to view the details of the transaction. For example the user may view the details of the items associated with the transaction and the amounts of each item. In a further implementation the user may select the show option to view actions that the user may take in regards to the transaction or the items in the transaction. For example the user may add a photo to the transaction e.g. a picture of the user and the iPad the user bought . In a further implementation if the user previously shared the purchase via social channels a post including the photo may be generated and sent to the social channels for publishing. In one implementation any sharing may be optional and the user who did not share the purchase via social channels may still share the photo through one or more social channels of his or her choice directly from the history mode of the wallet application. In another implementation the user may add the transaction to a group such as company expense home expense travel expense or other categories set up by the user. Such grouping may facilitate year end accounting of expenses submission of work expense reports submission for value added tax VAT refunds personal expenses and or the like. In yet another implementation the user may buy one or more items purchased in the transaction. The user may then execute a transaction without going to the merchant catalog or site to find the items. In a further implementation the user may also cart one or more items in the transaction for later purchase.

The history mode in another embodiment may offer facilities for obtaining and displaying ratings of the items in the transaction. The source of the ratings may be the user the user s friends e.g. from social channels contacts etc. reviews aggregated from the web and or the like. The user interface in some implementations may also allow the user to post messages to other users of social channels e.g. TWITTER or FACEBOOK . For example the display area shows FACEBOOK message exchanges between two users. In one implementation a user may share a link via a message . Selection of such a message having embedded link to a product may allow the user to view a description of the product and or purchase the product directly from the history mode.

In one embodiment the history mode may also include facilities for exporting receipts. The export receipts pop up may provide a number of options for exporting the receipts of transactions in the history. For example a user may use one or more of the options which include save to local mobile memory to server to a cloud account and or the like print to a printer fax email and or the like. The user may utilize his or her address book to look up email or fax number for exporting. The user may also specify format options for exporting receipts. Example format options may include without limitation text files .doc .txt .rtf iif etc. spreadsheet .csv .xls etc. image files .jpg .tff .png etc. portable document format .pdf postscript .ps and or the like. The user may then click or tap the export button to initiate export of receipts.

With reference to in one embodiment the snap mode may facilitate payment reallocation post transaction. For example a user may buy grocery and prescription items from a retailer Acme Supermarket. The user may inadvertently or for ease of checkout for example use his or her Visa card to pay for both grocery and prescription items. However the user may have an FSA account that could be used to pay for prescription items and which would provide the user tax benefits. In such a situation the user may use the snap mode to initiate transaction reallocation.

As shown the user may enter a search term e.g. bills in the search bar . The user may then identify in the tab the receipt the user wants to reallocate. Alternatively the user may directly snap a picture of a barcode on a receipt and the snap mode may generate and display a receipt using information from the barcode. The user may now reallocate . In some implementations the user may also dispute the transaction or archive the receipt .

In one implementation when the reallocate button is selected the wallet application may perform optical character recognition OCR of the receipt. Each of the items in the receipt may then be examined to identify one or more items which could be charged to which payment device or account for tax or other benefits such as cash back reward points etc. In this example there is a tax benefit if the prescription medication charged to the user s Visa card is charged to the user s FSA. The wallet application may then perform the reallocation as the back end. The reallocation process may include the wallet contacting the payment processor to credit the amount of the prescription medication to the Visa card and debit the same amount to the user s FSA account. In an alternate implementation the payment processor e.g. Visa or MasterCard may obtain and OCR the receipt identify items and payment accounts for reallocation and perform the reallocation. In one implementation the wallet application may request the user to confirm reallocation of charges for the selected items to another payment account. The receipt may be generated after the completion of the reallocation process. As discussed the receipt shows that some charges have been moved from the Visa account to the FSA.

With reference to in one embodiment the snap mode may facilitate payment via pay code such as barcodes or QR codes. For example a user may snap a QR code of a transaction that is not yet complete. The QR code may be displayed at a merchant POS terminal a web site or a web application and may be encoded with information identifying items for purchase merchant details and other relevant information. When the user snaps such as a QR code the snap mode may decode the information in the QR code and may use the decoded information to generate a receipt . Once the QR code is identified the navigation bar may indicate that the pay code is identified. The user may now have an option to add to cart pay with a default payment account or pay with wallet .

In one implementation the user may decide to pay with default . The wallet application may then use the user s default method of payment in this example the wallet to complete the purchase transaction. Upon completion of the transaction a receipt may be automatically generated for proof of purchase. The user interface may also be updated to provide other options for handling a completed transaction. Example options include social to share purchase information with others reallocate as discussed with regard to and archive to store the receipt.

With reference to in one embodiment the snap mode may also facilitate offer identification application and storage for future use. For example in one implementation a user may snap an offer code e.g. a bar code a QR code and or the like . The wallet application may then generate an offer text from the information encoded in the offer code. The user may perform a number of actions on the offer code. For example the user use the find button to find all merchants who accept the offer code merchants in the proximity who accept the offer code products from merchants that qualify for the offer code and or the like. The user may also apply the offer code to items that are currently in the cart using the add to cart button . Furthermore the user may also save the offer for future use by selecting the save button .

In one implementation after the offer or coupon is applied the user may have the option to find qualifying merchants and or products using find the user may go to the wallet using and the user may also save the offer or coupon for later use.

With reference to in one embodiment the snap mode may also offer facilities for adding a funding source to the wallet application. In one implementation a pay card such as a credit card debit card pre paid card smart card and other pay accounts may have an associated code such as a bar code or QR code. Such a code may have encoded therein pay card information including but not limited to name address pay card type pay card account details balance amount spending limit rewards balance and or the like. In one implementation the code may be found on a face of the physical pay card. In another implementation the code may be obtained by accessing an associated online account or another secure location. In yet another implementation the code may be printed on a letter accompanying the pay card. A user in one implementation may snap a picture of the code. The wallet application may identify the pay card and may display the textual information encoded in the pay card. The user may then perform verification of the information by selecting the verify button . In one implementation the verification may include contacting the issuer of the pay card for confirmation of the decoded information and any other relevant information. In one implementation the user may add the pay card to the wallet by selecting the add to wallet button . The instruction to add the pay card to the wallet may cause the pay card to appear as one of the forms of payment under the funds tab discussed in . The user may also cancel importing of the pay card as a funding source by selecting the cancel button . When the pay card has been added to the wallet the user interface may be updated to indicate that the importing is complete via the notification display . The user may then access the wallet to begin using the added pay card as a funding source.

For example a user may go to doctor s office and desire to pay the co pay for doctor s appointment. In addition to basic transactional information such as account number and name the app may provide the user the ability to select to transfer medical records health information which may be provided to the medical provider insurance company as well as the transaction processor to reconcile payments between the parties. In some implementations the records may be sent in a Health Insurance Portability and Accountability Act HIPAA compliant data format and encrypted and only the recipients who are authorized to view such records may have appropriate decryption keys to decrypt and view the private user information.

With reference to in some implementations the app executing on the user s device may provide a VerifyChat feature for fraud prevention. For example the VWCS may detect an unusual and or suspicious transaction. The VWCS may utilize the VerifyChat feature to communicate with the user and verify the authenticity of the originator of the purchase transaction. In various implementations the VWCS may send electronic mail message text SMS messages Facebook messages Twitter tweets text chat voice chat video chat e.g. Apple FaceTime and or the like to communicate with the user. For example the VWCS may initiate a video challenge for the user e.g. . For example the user may need to present him her self via a video chat e.g. . In some implementations a customer service representative e.g. agent may manually determine the authenticity of the user using the video of the user. In some implementations the VWCS may utilize face biometric and or like recognition e.g. using pattern classification techniques to determine the identity of the user. In some implementations the app may provide reference marker e.g. cross hairs target box etc. e.g. so that the user may the video to facilitate the VWCS s automated recognition of the user. In some implementations the user may not have initiated the transaction e.g. the transaction is fraudulent. In such implementations the user may cancel the challenge. The VWCS may then cancel the transaction and or initiate fraud investigation procedures on behalf of the user.

In some implementations the VWCS may utilize a text challenge procedure to verify the authenticity of the user e.g. . For example the VWCS may communicate with the user via text chat SMS messages electronic mail Facebook messages Twitter tweets and or the like. The VWCS may pose a challenge question e.g. for the user. The app may provide a user input interface element s e.g. virtual keyboard to answer the challenge question posed by the VWCS. In some implementations the challenge question may be randomly selected by the VWCS automatically in some implementations a customer service representative may manually communicate with the user. In some implementations the user may not have initiated the transaction e.g. the transaction is fraudulent. In such implementations the user may cancel the text challenge. The VWCS may cancel the transaction and or initiate fraud investigation on behalf of the user.

In some embodiments the merchant server may obtain the checkout request from the client and extract the checkout detail e.g. XML data from the checkout request. For example the merchant server may utilize a parser such as the example parsers described below in the discussion with reference to . Based on parsing the checkout request the merchant server may extract product data e.g. product identifiers as well as available PoS client data from the checkout request. In some embodiments using the product data the merchant server may query e.g. a merchant acquirer merchant database e.g. to obtain product data e.g. such as product information product pricing sales tax offers discounts rewards and or other information to process the purchase transaction and or provide value added services for the user. For example the merchant database may be a relational database responsive to Structured Query Language SQL commands. The merchant server may execute a hypertext preprocessor PHP script including SQL commands to query a database table such as Products for product data. An example product data query substantially in the form of PHP SQL commands is provided below 

In some embodiments in response to obtaining the product data the merchant server may generate e.g. checkout data to provide for the PoS client. In some embodiments such checkout data e.g. may be embodied in part in a HyperText Markup Language HTML page including data for display such as product detail product pricing total pricing tax information shipping information offers discounts rewards value added service information etc. and input fields to provide payment information to process the purchase transaction such as account holder name account number billing address shipping address tip amount etc. In some embodiments the checkout data may be embodied in part in a Quick Response QR code image that the PoS client can display so that the user may capture the QR code using a user s device to obtain merchant and or product data for generating a purchase transaction processing request. In some embodiments a user alert mechanism may be built into the checkout data. For example the merchant server may embed a URL specific to the transaction into the checkout data. In some embodiments the alerts URL may further be embedded into optional level 3 data in card authorization requests such as those discussed further below with reference to . The URL may point to a webpage data file executable script etc. stored on the merchant s server dedicated to the transaction that is the subject of the card authorization request. For example the object pointed to by the URL may include details on the purchase transaction e.g. products being purchased purchase cost time expiry status of order processing and or the like. Thus the merchant server may provide to the payment network the details of the transaction by passing the URL of the webpage to the payment network. In some embodiments the payment network may provide notifications to the user such as a payment receipt transaction authorization confirmation message shipping notification and or the like. In such messages the payment network may provide the URL to the user device. The user may navigate to the URL on the user s device to obtain alerts regarding the user s purchase as well as other information such as offers coupons related products rewards notifications and or the like. An example listing of a checkout data substantially in the form of XML formatted data is provided below 

Upon obtaining the checkout data e.g. the PoS client may render and display e.g. the checkout data for the user.

In some embodiments upon authenticating the user for access to virtual wallet features the user wallet device may provide a transaction authorization input e.g. to a point of sale PoS client e.g. . For example the user wallet device may communicate with the PoS client via Bluetooth Wi Fi cellular communication one or two way near field communication NFC and or the like. In embodiments where the user utilizes a plastic card instead of the user wallet device the user may swipe the plastic card at the PoS client to transfer information from the plastic card into the PoS client. For example the PoS client may obtain as transaction authorization input track data from the user s plastic card e.g. credit card debit card prepaid card charge card etc. such as the example track data provided below 

In embodiments where the user utilizes a user wallet device the user wallet device may provide payment information to the PoS client formatted according to a data formatting protocol appropriate to the communication mechanism employed in the communication between the user wallet device and the PoS client. An example listing of transaction authorization input substantially in the form of XML formatted data is provided below 

In some embodiments the PoS client may generate a card authorization request e.g. using the obtained transaction authorization input from the user wallet device and or product checkout data see e.g. . An example listing of a card authorization request substantially in the form of a HTTP S POST message including XML formatted data is provided below 

In some embodiments the card authorization request generated by the user device may include a minimum of information required to process the purchase transaction. For example this may improve the efficiency of communicating the purchase transaction request and may also advantageously improve the privacy protections provided to the user and or merchant. For example in some embodiments the card authorization request may include at least a session ID for the user s shopping session with the merchant. The session ID may be utilized by any component and or entity having the appropriate access authority to access a secure site on the merchant server to obtain alerts reminders and or other data about the transaction s within that shopping session between the user and the merchant. In some embodiments the PoS client may provide the generated card authorization request to the merchant server e.g. . The merchant server may forward the card authorization request to a pay gateway server e.g. for routing the card authorization request to the appropriate payment network for payment processing. For example the pay gateway server may be able to select from payment networks such as Visa Mastercard American Express Paypal etc. to process various types of transactions including but not limited to credit card debit card prepaid card B2B and or like transactions. In some embodiments the merchant server may query a database e.g. merchant acquirer database for a network address of the payment gateway server for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query. For example the merchant server may issue PHP SQL commands to query a database table such as Pay Gateways for a URL of the pay gateway server. An example payment gateway address query substantially in the form of PHP SQL commands is provided below 

In response the merchant acquirer database may provide the requested payment gateway address e.g. . The merchant server may forward the card authorization request to the pay gateway server using the provided address e.g. . In some embodiments upon receiving the card authorization request from the merchant server the pay gateway server may invoke a component to provide one or more services associated with purchase transaction authorization. For example the pay gateway server may invoke components for fraud prevention loyalty and or rewards and or other services for which the user merchant combination is authorized. The pay gateway server may forward the card authorization request to a pay network server e.g. for payment processing. For example the pay gateway server may be able to select from payment networks such as Visa Mastercard American Express Paypal etc. to process various types of transactions including but not limited to credit card debit card prepaid card B2B and or like transactions. In some embodiments the pay gateway server may query a database e.g. pay gateway database for a network address of the payment network server for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query. For example the pay gateway server may issue PHP SQL commands to query a database table such as Pay Gateways for a URL of the pay network server. An example payment network address query substantially in the form of PHP SQL commands is provided below 

In response the payment gateway database may provide the requested payment network address e.g. . The pay gateway server may forward the card authorization request to the pay network server using the provided address e.g. .

With reference to in some embodiments the pay network server may process the transaction so as to transfer funds for the purchase into an account stored on an acquirer of the merchant. For example the acquirer may be a financial institution maintaining an account of the merchant. For example the proceeds of transactions processed by the merchant may be deposited into an account maintained by at a server of the acquirer.

In some embodiments the pay network server may generate a query e.g. for issuer server s corresponding to the user selected payment options. For example the user s account may be linked to one or more issuer financial institutions issuers such as banking institutions which issued the account s for the user. For example such accounts may include but not be limited to credit card debit card prepaid card checking savings money market certificates of deposit stored cash value accounts and or the like. Issuer server s e.g. of the issuer s may maintain details of the user s account s . In some embodiments a database e.g. pay network database may store details of the issuer server s associated with the issuer s . In some embodiments the pay network server may query a database e.g. pay network database for a network address of the issuer s server s for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query. For example the merchant server may issue PHP SQL commands to query a database table such as Issuers for network address es of the issuer s server s . An example issuer server address es query substantially in the form of PHP SQL commands is provided below 

In response to obtaining the issuer server query e.g. the pay network database may provide e.g. the requested issuer server data to the pay network server. In some embodiments the pay network server may utilize the issuer server data to generate funds authorization request s e.g. for each of the issuer server s selected based on the pre defined payment settings associated with the user s virtual wallet and or the user s payment options input and provide the funds authorization request s to the issuer server s . In some embodiments the funds authorization request s may include details such as but not limited to the costs to the user involved in the transaction card account details of the user user billing and or shipping information and or the like. An example listing of a funds authorization request substantially in the form of a HTTP S POST message including XML formatted data is provided below 

In some embodiments an issuer server may parse the authorization request s and based on the request details may query a database e.g. user profile database for data associated with an account linked to the user. For example the merchant server may issue PHP SQL commands to query a database table such as Accounts for user account s data. An example user account s query substantially in the form of PHP SQL commands is provided below 

In some embodiments on obtaining the user account s data e.g. the issuer server may determine whether the user can pay for the transaction using funds available in the account . For example the issuer server may determine whether the user has a sufficient balance remaining in the account sufficient credit associated with the account and or the like. Based on the determination the issuer server s may provide a funds authorization response e.g. to the pay network server. For example the issuer server s may provide a HTTP S POST message similar to the examples above. In some embodiments if at least one issuer server determines that the user cannot pay for the transaction using the funds available in the account the pay network server may request payment options again from the user e.g. by providing an authorization fail message to the user device and requesting the user device to provide new payment options and re attempt authorization for the purchase transaction. In some embodiments if the number of failed authorization attempts exceeds a threshold the pay network server may abort the authorization process and provide an authorization fail message to the merchant server user device and or client.

In some embodiments the pay network server may obtain the funds authorization response including a notification of successful authorization and parse the message to extract authorization details. Upon determining that the user possesses sufficient funds for the transaction e.g. the pay network server may invoke a component to provide value add services for the user.

In some embodiments the pay network server may generate a transaction data record from the authorization request and or authorization response and store the details of the transaction and authorization relating to the transaction in a transactions database. For example the pay network server may issue PHP SQL commands to store the data to a database table such as Transactions . An example transaction store command substantially in the form of PHP SQL commands is provided below 

In some embodiments the pay network server may forward a transaction authorization response e.g. to the user wallet device PoS client and or merchant server. The merchant may obtain the transaction authorization response and determine from it that the user possesses sufficient funds in the card account to conduct the transaction. The merchant server may add a record of the transaction for the user to a batch of transaction data relating to authorized transactions. For example the merchant may append the XML data pertaining to the user transaction to an XML data file comprising XML data for transactions that have been authorized for various users e.g. and store the XML data file e.g. in a database e.g. merchant database . For example a batch XML data file may be structured similar to the example XML data structure template provided below 

In some embodiments the server may also generate a purchase receipt e.g. and provide the purchase receipt to the client e.g. . The client may render and display e.g. the purchase receipt for the user. In some embodiments the user s wallet device may also provide a notification of successful authorization to the user. For example the PoS client user device may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone and or play an audio message etc. and provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

In some embodiments upon authenticating the user for access to virtual wallet features the user wallet device may provide a transaction authorization input e.g. to a point of sale PoS client. For example the user wallet device may communicate with the PoS client via Bluetooth Wi Fi cellular communication one or two way near field communication NFC and or the like. In embodiments where the user utilizes a plastic card instead of the user wallet device the user may swipe the plastic card at the PoS client to transfer information from the plastic card into the PoS client. In embodiments where the user utilizes a user wallet device the user wallet device may provide payment information to the PoS client formatted according to a data formatting protocol appropriate to the communication mechanism employed in the communication between the user wallet device and the PoS client.

In some embodiments the PoS client may obtain the transaction authorization input and parse the input to extract payment information from the transaction authorization input e.g. . For example the PoS client may utilize a parser such as the example parsers provided below in the discussion with reference to . The PoS client may generate a card authorization request e.g. using the obtained transaction authorization input from the user wallet device and or product checkout data see e.g. .

In some embodiments the PoS client may provide the generated card authorization request to the merchant server. The merchant server may forward the card authorization request to a pay gateway server for routing the card authorization request to the appropriate payment network for payment processing. For example the pay gateway server may be able to select from payment networks such as Visa Mastercard American Express Paypal etc. to process various types of transactions including but not limited to credit card debit card prepaid card B2B and or like transactions. In some embodiments the merchant server may query a database e.g. for a network address of the payment gateway server for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query. In response the merchant acquirer database may provide the requested payment gateway address e.g. . The merchant server may forward the card authorization request to the pay gateway server using the provided address. In some embodiments upon receiving the card authorization request from the merchant server the pay gateway server may invoke a component to provide one or more service associated with purchase transaction authorization e.g. . For example the pay gateway server may invoke components for fraud prevention see e.g. VerifyChat loyalty and or rewards and or other services for which the user merchant combination is authorized.

The pay gateway server may forward the card authorization request to a pay network server for payment processing e.g. . For example the pay gateway server may be able to select from payment networks such as Visa Mastercard American Express Paypal etc. to process various types of transactions including but not limited to credit card debit card prepaid card B2B and or like transactions. In some embodiments the pay gateway server may query a database e.g. for a network address of the payment network server for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query. In response the payment gateway database may provide the requested payment network address e.g. . The pay gateway server may forward the card authorization request to the pay network server using the provided address e.g. .

With reference to in some embodiments the pay network server may process the transaction so as to transfer funds for the purchase into an account stored on an acquirer of the merchant. For example the acquirer may be a financial institution maintaining an account of the merchant. For example the proceeds of transactions processed by the merchant may be deposited into an account maintained by at a server of the acquirer. In some embodiments the pay network server may generate a query e.g. for issuer server s corresponding to the user selected payment options. For example the user s account may be linked to one or more issuer financial institutions issuers such as banking institutions which issued the account s for the user. For example such accounts may include but not be limited to credit card debit card prepaid card checking savings money market certificates of deposit stored cash value accounts and or the like. Issuer server s of the issuer s may maintain details of the user s account s . In some embodiments a database e.g. a pay network database may store details of the issuer server s associated with the issuer s . In some embodiments the pay network server may query a database e.g. for a network address of the issuer s server s for example by using a portion of a user payment card number or a user ID such as an email address as a keyword for the database query.

In response to obtaining the issuer server query the pay network database may provide e.g. the requested issuer server data to the pay network server. In some embodiments the pay network server may utilize the issuer server data to generate funds authorization request s e.g. for each of the issuer server s selected based on the pre defined payment settings associated with the user s virtual wallet and or the user s payment options input and provide the funds authorization request s to the issuer server s . In some embodiments the funds authorization request s may include details such as but not limited to the costs to the user involved in the transaction card account details of the user user billing and or shipping information and or the like. In some embodiments an issuer server may parse the authorization request s e.g. and based on the request details may query a database e.g. for data associated with an account linked to the user.

In some embodiments on obtaining the user account s data e.g. the issuer server may determine whether the user can pay for the transaction using funds available in the account e.g. . For example the issuer server may determine whether the user has a sufficient balance remaining in the account sufficient credit associated with the account and or the like. Based on the determination the issuer server s may provide a funds authorization response e.g. to the pay network server. In some embodiments if at least one issuer server determines that the user cannot pay for the transaction using the funds available in the account the pay network server may request payment options again from the user e.g. by providing an authorization fail message to the user device and requesting the user device to provide new payment options and re attempt authorization for the purchase transaction. In some embodiments if the number of failed authorization attempts exceeds a threshold the pay network server may abort the authorization process and provide an authorization fail message to the merchant server user device and or client.

In some embodiments the pay network server may obtain the funds authorization response including a notification of successful authorization and parse the message to extract authorization details. Upon determining that the user possesses sufficient funds for the transaction e.g. the pay network server may invoke a component to provide value add services for the user e.g. .

In some embodiments the pay network server may forward a transaction authorization response to the user wallet device PoS client and or merchant server. The merchant may parse e.g. the transaction authorization response and determine from it that the user possesses sufficient funds in the card account to conduct the transaction e.g. option Yes. The merchant server may add a record of the transaction for the user to a batch of transaction data relating to authorized transactions. For example the merchant may append the XML data pertaining to the user transaction to an XML data file comprising XML data for transactions that have been authorized for various users e.g. and store the XML data file e.g. in a database. In some embodiments the server may also generate a purchase receipt e.g. and provide the purchase receipt to the client. The client may render and display e.g. the purchase receipt for the user. In some embodiments the user s wallet device may also provide a notification of successful authorization to the user. For example the PoS client user device may render a webpage electronic message text SMS message buffer a voicemail emit a ring tone and or play an audio message etc. and provide output including but not limited to sounds music audio video images tactile feedback vibration alerts e.g. on vibration capable client devices such as a smartphone etc. and or the like.

With reference to in some embodiments for each extracted transaction the pay network server may query e.g. a database e.g. pay network database for an address of an issuer server. For example the pay network server may utilize PHP SQL commands similar to the examples provided above. The pay network server may generate an individual payment request e.g. for each transaction for which it has extracted transaction data and provide the individual payment request e.g. to the issuer server e.g. . For example the pay network server may provide an individual payment request to the issuer server s as a HTTP S POST message including XML formatted data. An example listing of an individual payment request substantially in the form of a HTTP S POST message including XML formatted data is provided below 

In some embodiments the issuer server may generate a payment command e.g. . For example the issuer server may issue a command to deduct funds from the user s account or add a charge to the user s credit card account . The issuer server may issue a payment command e.g. to a database storing the user s account information e.g. user profile database . The issuer server may provide an individual payment confirmation e.g. to the pay network server which may forward e.g. the funds transfer message to the acquirer server. An example listing of an individual payment confirmation substantially in the form of a HTTP S POST message including XML formatted data is provided below 

In some embodiments the acquirer server may parse the individual payment confirmation and correlate the transaction e.g. using the request ID field in the example above to the merchant. The acquirer server may then transfer the funds specified in the funds transfer message to an account of the merchant. For example the acquirer server may query e.g. an acquirer database for payment ledger and or merchant account data e.g. . The acquirer server may utilize payment ledger and or merchant account data from the acquirer database along with the individual payment confirmation to generate updated payment ledger and or merchant account data e.g. . The acquirer server may then store e.g. the updated payment ledger and or merchant account data to the acquire database.

The pay network server may parse the batch payment request obtained from the acquirer server and extract the transaction data for each transaction stored in the batch payment request e.g. . The pay network server may store the transaction data e.g. for each transaction in a pay network database. In some embodiments the pay network server may invoke a component e.g. to provide analytics based on the transactions of the merchant for whom purchase transaction are being cleared.

With reference to in some embodiments for each extracted transaction the pay network server may query e.g. a pay network database for an address of an issuer server. The pay network server may generate an individual payment request e.g. for each transaction for which it has extracted transaction data and provide the individual payment request to the issuer server. In some embodiments the issuer server may parse the individual payment request e.g. and generate a payment command e.g. based on the parsed individual payment request. For example the issuer server may issue a command to deduct funds from the user s account or add a charge to the user s credit card account . The issuer server may issue a payment command e.g. to a database storing the user s account information e.g. a user profile database. The issuer server may provide an individual payment confirmation e.g. to the pay network server which may forward e.g. the individual payment confirmation to the acquirer server.

In some embodiments the acquirer server may parse the individual payment confirmation and correlate the transaction e.g. using the request ID field in the example above to the merchant. The acquirer server may then transfer the funds specified in the funds transfer message to an account of the merchant. For example the acquirer server may query e.g. an acquirer database for payment ledger and or merchant account data e.g. . The acquirer server may utilize payment ledger and or merchant account data from the acquirer database along with the individual payment confirmation to generate updated payment ledger and or merchant account data e.g. . The acquirer server may then store e.g. the updated payment ledger and or merchant account data to the acquire database.

Users e.g. which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the VWCS controller may be connected to and or communicate with entities such as but not limited to one or more users from user input devices peripheral devices an optional cryptographic processor device and or a communications network . For example the VWCS controller may be connected to and or communicate with users e.g. operating client device s e.g. including but not limited to personal computer s server s and or various mobile device s including but not limited to cellular telephone s smartphone s e.g. iPhone Blackberry Android OS based phones etc. tablet computer s e.g. Apple iPad HP Slate Motorola Xoom etc. eBook reader s e.g. Amazon Kindle Barnes and Noble s Nook eReader etc. laptop computer s notebook s netbook s gaming console s e.g. XBOX Live Nintendo DS Sony PlayStation Portable etc. portable scanner s and or the like.

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The VWCS controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeably throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effectuate communications operations storage etc. The computer systemization may be connected to a power source e.g. optionally the power source may be internal. Optionally a cryptographic processor and or transceivers e.g. ICs may be connected to the system bus. In another embodiment the cryptographic processor and or transceivers may be connected as either internal and or external peripheral devices via the interface bus I O. In turn the transceivers may be connected to antenna s thereby effectuating wireless transmission and reception of various communication and or sensor protocols for example the antenna s may connect to a Texas Instruments WiLink WL1283 transceiver chip e.g. providing 802.11n Bluetooth 3.0 FM global positioning system GPS thereby allowing VWCS controller to determine its location Broadcom BCM4329FKUBG transceiver chip e.g. providing 802.11n Bluetooth 2.1 EDR FM etc. BCM28150 HSPA and BCM2076 Bluetooth 4.0 GPS etc. a Broadcom BCM4750IUB8 receiver chip e.g. GPS an Infineon Technologies X Gold 618 PMB9800 e.g. providing 2G 3G HSDPA HSUPA communications Intel s XMM 7160 LTE DC HSPA Qualcom s CDMA 2000 Mobile Data Station Modem Snapdragon and or the like. The system clock may have a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock may be coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. It should be understood that in alternative embodiments any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to floating point units integer processing units integrated system bus controllers logic operating units memory management control units etc. and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state value. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s classic e.g. ARM7 9 11 embedded Coretx M R application Cortex A embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Intel s Atom Celeron Mobile Core 2 Duo i3 i5 i7 Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code . Such instruction passing facilitates communication within the VWCS controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed VWCS mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller mobile devices e.g. smartphones Personal Digital Assistants PDAs etc. may be employed.

Depending on the particular implementation features of the VWCS may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the VWCS some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the VWCS component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the VWCS may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example VWCS features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the VWCS features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the VWCS system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the operation of basic logic gates such as AND and XOR or more complex combinational operators such as decoders or simple mathematical operations. In most FPGAs the logic blocks also include memory elements which may be circuit flip flops or more complete blocks of memory. In some circumstances the VWCS may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate VWCS controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the VWCS.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the VWCS thereby providing an electric current to all the interconnected components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters frequently although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters may connect to the interface bus via expansion and or slot architecture. Various expansion and or slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus ExpressCard Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA Thunderbolt and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 Ethernet fiber channel Small Computer Systems Interface SCSI Thunderbolt Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the VWCS controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed VWCS architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the VWCS controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB Bluetooth IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital DisplayPort Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless transceivers 802.11a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA high speed downlink packet access HSDPA global system for mobile communications GSM long term evolution LTE WiMax etc. and or the like. One output device may be a video display which may take the form of a Cathode Ray Tube CRT Liquid Crystal Display LCD Light Emitting Diode LED Organic Light Emitting Diode OLED Plasma and or the like based monitor with an interface e.g. VGA DVI circuitry and cable that accepts signals from a video interface. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Often the video interface provides the composited video information through a video connection interface that accepts a video display interface e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a DVI display cable HDMI etc. .

User input devices often are a type of peripheral device see below and may include card readers dongles finger print readers gloves graphics tablets joysticks keyboards microphones mouse mice remote controls retina readers touch screens e.g. capacitive resistive etc. trackballs trackpads sensors e.g. accelerometers ambient light GPS gyroscopes proximity etc. styluses and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces directly to the interface bus system bus the CPU and or the like. Peripheral devices may be external internal and or part of the VWCS controller. Peripheral devices may include antenna audio devices e.g. line in line out microphone input speakers etc. cameras e.g. still video webcam etc. dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added capabilities e.g. crypto devices force feedback devices e.g. vibrating motors near field communication NFC devices network interfaces printers radio frequency identifiers RFIDs scanners storage devices transceivers e.g. cellular GPS etc. video devices e.g. goggles monitors etc. video sources visors and or the like. Peripheral devices often include types of input devices e.g. microphones cameras etc. .

It should be noted that although user input devices and peripheral devices may be employed the VWCS controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the VWCS controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield e.g. Solo Connect etc. SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 sMIP s e.g. 208956 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the VWCS controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the operation of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism however such an embodiment would result in an extremely slow rate of operation. In one configuration memory may include ROM RAM and a storage device . A storage device may employ any number of computer storage devices systems. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the VWCS component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection may be stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the VWCS controller. The operating system may facilitate access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Nan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft DOS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. In addition emobile operating systems such as Apple s iOS Google s Android Hewlett Packard s WebOS Microsofts Windows Mobile and or the like may be employed. Any of these operating systems may be embedded within the hardware of the NICK controller and or stored loaded into memory storage. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the VWCS controller to communicate with other entities through a communications network . Various communication protocols may be used by the VWCS controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be an Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Apple s iMessage Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the VWCS controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the VWCS database operating systems other program components user interfaces Web browsers and or the like.

Access to the VWCS database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the VWCS. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the VWCS as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access capabilities operation and display of data and computer hardware and operating system resources and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua and iOS s Cocoa Touch IBM s OS 2 Google s Android Mobile UI Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium Mobile NT XP Vista 7 8 i.e. Aero Metro Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a hypertext viewing application such as Goofle s Mobile Chrome Microsoft Internet Explorer Netscape Navigator Apple s Mobile Safari embedded web browser objects such as through Apple s Cocoa Touch object class and or the like. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. Chrome FireFox Internet Explorer Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones smartphones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Also in place of a Web browser and information server a combined application may be developed to perform similar operations of both. The combined application would similarly effect the obtaining and the provision of information to users user agents and or the like from the VWCS equipped nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be an Internet mail server such as but not limited to Apple s Mail Server 3 dovect sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POPS simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the VWCS.

Access to the VWCS mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a mail viewing application such as Apple Mobile Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD5 which is a one way hash operation passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the VWCS may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the VWCS component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the VWCS and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The VWCS database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be any of a number of fault tolerant relational scalable secure databases such as DB2 MySQL Oracle Sybase and or the like. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field i.e. the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the VWCS database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObjectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the VWCS database is implemented as a data structure the use of the VWCS database may be integrated into another component such as the VWCS component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user id ssn dob first name last name age state address firstline address secondline zipcode devices list contact info contact type alt contact info alt contact type and or the like. The Users table may support and or track multiple entity accounts on a VWCS. A Devices table may include fields such as but not limited to device ID device name device IP device GPS device MAC device serial device ECID device UDID device browser device type device model device version device OS device apps list device securekey wallet app installed flag and or the like. An Apps table may include fields such as but not limited to app ID app name app type app dependencies app access code user pin and or the like. An Accounts table may include fields such as but not limited to account number account security code account name issuer acquirer flag issuer name acquirer name account address routing number access API call linked wallets list and or the like. A Merchants table may include fields such as but not limited to merchant id merchant name merchant address store id ip address mac address auth key port num security settings list and or the like. An Issuers table may include fields such as but not limited to issuer id issuer name issuer address ip address mac address auth key port num security settings list and or the like. An Acquirers table may include fields such as but not limited to account firstname account lastname account type account num account balance list billingaddress line1 billingaddress line2 billing zipcode billing state shipping preferences shippingaddress line1 shippingaddress line2 shipping zipcode shipping state and or the like. A Pay Gateways table may include fields such as but not limited to gateway ID gateway IP gateway MAC gateway secure key gateway access list gateway API call list gateway services list and or the like. A Shop Sessions table may include fields such as but not limited to user id session id alerts URL timestamp expiry lapse merchant id store id device type device ID device IP device MAC device browser device serial device ECID device model device OS wallet app installed total cost cart ID list product params list social flag social message social networks list coupon lists accounts list CVV2 lists charge ratio list charge priority list value exchange symbols list bill address ship address cloak flag pay mode alerts rules list and or the like. A Transactions table may include fields such as but not limited to order id user id timestamp transaction cost purchase details list num products products list product type product params list product title product summary quantity user id client id client ip client type client model operating system os version app installed flag user id account firstname account lastname account type account num account priority account ratio billingaddress line1 billingaddress line2 billing zipcode billing state shipping preferences shippingaddress line1 shippingaddress line2 shipping zipcode shipping state merchant id merchant name merchant auth key and or the like. A Batches table may include fields such as but not limited to batch id transaction id list timestamp list cleared flag list clearance trigger settings and or the like. A Ledgers table may include fields such as but not limited to request id timestamp deposit amount batch id transaction id clear flag deposit account transaction summary payor name payor account and or the like. A Products table may include fields such as but not limited to product ID product title product attributes list product price tax info list related products list offers list discounts list rewards list merchants list merchant availability list and or the like. An Offers table may include fields such as but not limited to offer ID offer title offer attributes list offer price offer expiry related products list discounts list rewards list merchants list merchant availability list and or the like. A Behavior Data table may include fields such as but not limited to user id timestamp activity type activity location activity attribute list activity attribute values list and or the like. An Analytics table may include fields such as but not limited to report id user id report type report algorithm id report destination address and or the like.

In one embodiment the VWCS database may interact with other database systems. For example employing a distributed database system queries and data access by search VWCS component may treat the combination of the VWCS database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the VWCS. Also various accounts may require custom database tables depending upon the environments and the types of clients the VWCS may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The VWCS may be configured to keep track of various settings inputs and parameters via database controllers.

The VWCS database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the VWCS database communicates with the VWCS component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The VWCS component is a stored program component that is executed by a CPU. In one embodiment the VWCS component incorporates any and or all combinations of the aspects of the VWCS discussed in the previous figures. As such the VWCS affects accessing obtaining and the provision of information services transactions and or the like across various communications networks. The features and embodiments of the VWCS discussed herein increase network efficiency by reducing data transfer requirements the use of more efficient data structures and mechanisms for their transfer and storage. As a consequence more data may be transferred in less time and latencies with regard to transactions are also reduced. In many cases such reduction in storage transfer time bandwidth requirements latencies etc. will reduce the capacity and structural infrastructure requirements to support the VWCS s features and facilities and in many cases reduce the costs energy consumption requirements and extend the life of VWCS s underlying infrastructure this has the added benefit of making the VWCS more reliable. Similarly many of the features and mechanisms are designed to be easier for users to use and access thereby broadening the audience that may enjoy employ and exploit the feature sets of the VWCS such ease of use also helps to increase the reliability of the VWCS. In addition the feature sets include heightened security as noted via the Cryptographic components and throughout making access to the features and data more reliable and secure.

The VWCS component may transform virtual wallet card selections by users utilizing mobile devices via VWCS components into virtual wallet card based transaction purchase notifications and or the like and use of the VWCS. In one embodiment the VWCS component takes inputs e.g. purchase input card selection input virtual wallet card selection options issuer server data user data checkout request product data wallet access input transaction authorization input payment gateway address payment network address issuer server address es funds authorization request s user s account s data batch data payment network address issuer server address es individual payment request payment ledger merchant account data and or the like etc. and transforms the inputs via various components e.g. VW CTE UPC PTA PTC and or the like into outputs e.g. virtual wallet card selection request authorization message batch append data purchase receipt checkout request message checkout data card authorization request funds authorization response s transaction authorization response batch append data purchase receipt batch clearance request batch payment request transaction data individual payment confirmation updated payment ledger merchant account data and or the like .

The VWCS component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the VWCS server employs a cryptographic server to encrypt and decrypt communications. The VWCS component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the VWCS component communicates with the VWCS database operating systems other program components and or the like. The VWCS may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the VWCS node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.

The configuration of the VWCS controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA Jini local and remote application program interfaces JavaScript Object Notation JSON Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex yacc XML and or the like which allow for grammar generation and parsing capabilities which in turn may form the basis of communication messages within and between components.

where Value1 is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. JSON SOAP and or like parsers that may be employed to parse e.g. communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

For example in some implementations the VWCS controller may be executing a PHP script implementing a Secure Sockets Layer SSL socket server via the information server which listens to incoming communications on a server port to which a client may send data e.g. data encoded in JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. client identifying information etc. and or extracted information in a relational database accessible using the Structured Query Language SQL . An exemplary listing written substantially in the form of PHP SQL commands to accept JSON encoded input data from a client device via a SSL connection parse the data to extract variables and store the data to a database is provided below 

Also the following resources may be used to provide example embodiments regarding SOAP parser implementation 

all of which are hereby expressly incorporated by reference herein. Non limiting exemplary embodiments highlighting numerous further advantageous aspects include 

4. The means of embodiment 3 wherein the virtual wallet card selection options are based on the universal card account number extracted from the user authentication request.

5. The means of embodiment 4 wherein the universal card account number extracted from the user authentication request includes encoded virtual wallet card selection option information and user identification information.

6. The means of embodiment 5 wherein the encoded virtual wallet card selection option information is encoded as flags in the universal card account number extracted from the user authentication request.

7. The means of embodiment 1 wherein the user selection of the virtual wallet card account includes a selection of an anonymous card account for processing the purchase transaction.

8. The means of embodiment 7 wherein the anonymous card account is a one time anonymous card account generated in response to receiving the user selection of the virtual wallet card account.

10. The means of embodiment 1 wherein the user device is a user mobile device executing a virtual wallet application.

In order to address various issues and advance the art the entirety of this application for VIRTUAL WALLET CARD SELECTION APPARATUSES METHODS AND SYSTEMS including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various example embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical operational organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any data flow sequence s program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes processors services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are also contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the innovations and inapplicable to others. In addition the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical operational organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs and or characteristics of a VWCS individual and or enterprise user database configuration and or relational model data type data transmission and or network framework syntax structure and or the like various embodiments of the VWCS may be implemented that allow a great deal of flexibility and customization. For example aspects of the VWCS may be adapted for fraud prevention online virtual shopping online financial management and or the like. While various embodiments and discussions of the VWCS have been directed to electronic purchase transactions however it is to be understood that the embodiments described herein may be readily configured and or customized for a wide variety of other applications and or implementations.

