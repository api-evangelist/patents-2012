---

title: Overscan support
abstract: Systems, methods, and computer readable media for dynamically setting an executing application's display buffer size are described. To ameliorate display device overscan operations, the size of an executing application's display buffer may be set based on the display device's extent and a display mode. In addition, contents of the executing application's display buffer may be operated on as they are moved to a frame buffer based on the display mode. In one mode, for example, display buffer contents may be scaled before being placed into the frame buffer. In another mode, a black border may be placed around display buffer contents as it is placed into the frame buffer. In yet another mode, display buffer contents may be copied into the frame buffer without further processing.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09013512&OS=09013512&RS=09013512
owner: Apple Inc.
number: 09013512
owner_city: Cupertino
owner_country: US
publication_date: 20120208
---
This disclosure relates generally to the field of display technology. More particularly this disclosure relates to a technique for setting an executing application s display buffer size based at least in part on the type of information that application indicates it will display.

Early televisions were highly variable in how the video image was framed within the television s cathode ray tube CRT . Because of this manufactures defined three areas 1 title safe an area assumed to be visible on all display devices and as such where text was certain not to be cut off 2 action safe an area that represents the visible area for a perfect display device and 3 overscan the full image area. Thus the term overscan refers to an area around the four edges of a video image that may not be reliably seen by a viewer.

While early display devices performed overscan to compensate for manufacturing issues modern pixelated display devices such as liquid crystal displays LCDs do not need to do this. Many however do so. This and the fact that applications do not know whether the display device coupled to the system on which they are executing perform overscanning can result in a sub optimal display. For example if an application assumes the display device overscans it may pre compensate for this by scaling its output to a size smaller than the display device s actual extent. If the display device does overscan it will display the application s output with a black border. If the display does not overscan however the application produces an output with an unnecessary black border. On the other hand if the application does not assume that the display device overscans it may generate an output matching the display device s full extent. If the display device does not overscan the application will use it s full extent. Now however if the display device does overscan some of the application s output will be clipped. Thus it would be beneficial to provide a mechanism to dynamically set the display region used by an application based at least in part on the application s type of output.

Techniques described herein provide methods to set an executing application s display buffer size based on a display device s extent and a display mode. A display method in accordance with a first embodiment includes determining one or more characteristics of a display device. Illustrative characteristics include the display device s display extent and whether the device overscans its input. An executing application may then indicate its desired display mode. In a first illustrative display mode the application does not compensate for overscanning expecting the supporting environment to take care of these chores. In a second illustrative mode the application pre compensates for the expected overscanning. In a third illustrative mode the application provides content that may be cropped by overscanning without affecting the application s performance and content that should not be cropped. In this latter case the application may place the second type of content in a display safe region of its display buffer. Once the application has specified its desired display mode one or more display buffer characteristics may be sent to the executing application based at least in part on the display mode and at least one of the display device characteristics. The application may use these characteristics to define the size of its display buffer. For example in one mode the application may be told to set its display buffer to a size that is less i.e. smaller than a frame buffer used to drive the display device. In this mode the application can pre compensate its display output by writing only to the smaller display buffer. In another mode the application may be given two size values the first representing the display device s full extent and a small value indicating a region within the display buffer that is display safe. Methods in accordance with this disclosure may be embodied in program code and placed in non transitory storage or embodied in hardware devices e.g. computer systems and or mobile devices that using a program control device e.g. a computer processor may implement the described methods.

This disclosure pertains to systems methods and computer readable media for dynamically setting an executing application s display buffer size. In general an application may address the overscan display issue in one of three ways 1 ignore it 2 pre compensate by limiting the area in a display buffer that it uses to store information it wants displayed and 3 use a display device s full extent while restricting the location of information it does not want clipped to a region in its display buffer that may be reliably viewed. To improve display performance the size of an application s display buffer and the tasks performed when moving the contents of that display buffer to a frame buffer may be based not only on the extent of the target display device but on how the application intends to address the overscan issue i.e. the type of information to be displayed . More particularly once a display device s characteristics are determined e.g. its extent the executing application may be told to set its display buffer size to different values based on the manner in which it indicates it wants to address the overscan issue.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the inventive concept. As part of this description some of this disclosure s drawings represent structures and devices in block diagram form in order to avoid obscuring the invention. Moreover the language used in this disclosure has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter resort to the claims being necessary to determine such inventive subject matter. Reference in this disclosure to one embodiment or to an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the invention and multiple references to one embodiment or an embodiment should not be understood as necessarily all referring to the same embodiment.

It will be appreciated that in the development of any actual implementation as in any development project numerous decisions must be made to achieve the developers specific goals e.g. compliance with system and business related constraints and that these goals will vary from one implementation to another. It will also be appreciated that such development efforts might be complex and time consuming but would nevertheless be a routine undertaking for those of ordinary skill in the design of image capture devices having the benefit of this disclosure.

In the following various embodiments will be described in which an executing application approaches the overscan issue in one of the three ways identified above 1 ignore it 2 pre compensate or 3 use the display device s full extent. For convenience these approaches will be assigned modes mode 1 for approach 1 mode 2 for approach 2 and mode 3 for approach 3. In addition a display device extent corresponding to the 720p standard will be used for illustrative purposes throughout this disclosure. Referring to display region in accordance with the 720p standard has an extent measuring 1 280 pixels by 720 pixels inset region may have X pixels in the horizontal direction and Y pixels in the vertical direction such a region defining overscan area . It will be recognized that the particular values assigned to X and Y may vary based on the specific type of display device i.e. the size of its overscan area . One of ordinary skill in the art will understand that the invention is not so limited to these embodiments. Other numbers of modes and or other display extents may be easily accommodated.

Referring to operational timeline for a display operation in accordance with this disclosure shows the communication between executing application display control and display device . As used herein the phrase display control may refer to one or more software modules and or select hardware of an operational environment within which application executes. Initially display control queries display device to obtain its display characteristics . In another embodiment display device may affirmatively push its display characteristics to display control . At some later time application informs display control of its display mode . In response display control may tell application the size it should make its display buffer .

Referring to Table 1 in the embodiment being described here when application indicates that it is operating in display mode 1 display control may tell application to make its display buffer 1280 720. When application indicates that it is operating in display mode 2 display control may tell application to make its display buffer 1216 684. And when application indicates that it is operating in display mode 3 display control may tell application to make its display buffer 1280 720. The reduced display buffer size identified in Table 1 1216 684 corresponding to inset region is merely illustrative the exact dimensions being dependent upon the display device itself and or on any rue the designer desires to implement for overscan compensation e.g. a flat 5 along both horizontal and vertical directions .

When application begins sending display buffers to display control for display on device and it has been determined that display device overscans display control may perform the action designated in Table 1 as it passes the display buffer s contents to display device .

Referring to the action indicated in Table 1 for each of the illustrative display modes is shown. In mode 1 application does nothing to address overscan operations by display device . As such display control may take the application s display buffer content and scale it to correspond to inset region . The scaled display buffer content is placed and centered into the display device s frame buffer with a black border. It will be recognized that placing content into a frame buffer is tantamount to sending that content to a display device. Generally the transfer of data from a frame buffer to a display device is handled by hardware. In mode 2 application has pre compensated for the overscan operation of display device . As such display control may simply copy the application s display buffer content into the center of the frame buffer and again provide a black border. In mode 3 application uses the display device s full extent only this time the application itself has ensured content that should not be clipped is in a buffer region that will not get clipped during overscan operations of display device . As such display control may again simply copy the application s display buffer content into the frame buffer this time no black border need be provided.

Referring to display operation in accordance with this disclosure begins by obtaining a display device s display characteristics block . Such information may be obtained directly from the display device itself or it may be obtained from a data store e.g. a database that is either local or distal to display control e.g. accessed through a computer network such as the Internet . On being informed of the application s preferred display mode block the application is told how large to make its display buffer block . In one embodiment if an application does not indicate a preferred display mode a default mode may be automatically selected e.g. mode 1 . As the application begins to send display buffer content block that content is manipulated and sent to a frame buffer based on the application s display mode block .

Acts in accordance with block in which the possible display modes and operational characteristics are as shown in Table 1 are illustrated in . If display mode 1 has been selected the YES prong of block the application s display buffer content may be scaled to fit within the display device s inset region see and centered in the frame buffer with a black border block . If the display mode is not mode 1 the NO prong of block a check may be made to determine if display mode 2 has been selected. If it has the YES prong of block the application s display buffer content may be copied directly to the center of the frame buffer and a black border provided block . If neither mode 1 or mode 2 has been selected the NO prong of block the application s display buffer may be copied directly to the frame buffer block . While shows in flowchart form what was discussed above vis vis Table 1 and the number of modes and specific actions is entirely up to the designer.

Referring to illustrative operational environment is seen to include user space framework space graphics space kernel space and hardware space . As shown application in user space communicates with display mode control through an application programming interface API . In like fashion display mode control communicates with components in graphics space via an API. Through standard interaction between graphics space kernel space and hardware space display mode control effectively functionally communicates with frame buffer and display device . Also shown in are data store and communication with computer network and distal data store .

In one embodiment operations in accordance with and may be performed by display mode control . Display mode control could for example consist of one or more software modules that execute at the framework space level. By way of calls through an API to graphics space display mode control mediates the transfer of display buffer content from application to frame buffer and hence to display device . In another embodiment the functionality of display mode control e.g. computer program code may be distributed throughout or across different levels framework space graphics space and kernel space .

It will be understood that user space framework space graphics space and kernel space are typically embodied in computer program code executing in memory wherein the different spaces may represent different abstract levels of operation. It will be further understood that application includes memory within user space designated as a display buffer. In addition while display device is shown as a standard computer display unit e.g. part of a desktop computer system this is not necessary. For example display device could be incorporated within a portable device such as a notebook or tablet computer as well as a hand held unit such as a mobile telephone or personal music video player.

Referring now to a simplified functional block diagram of device is shown according to one embodiment. As already noted device may represent a desktop notebook or tablet computer system. Device may also represent hand held devices such as mobile telephones personal digital assistants and personal music video units. As illustrated device may include processor display user interface graphics hardware device sensors e.g. proximity sensor ambient light sensor accelerometer and or gyroscope microphone one or more audio codecs one or more speakers communications circuitry digital image capture unit one or more video codecs memory one or more storage devices storage device and communications bus .

Processor may execute instructions necessary to carry out or control the operation of many functions performed by device e.g. such as operations in accordance with . Processor may for instance drive display and receive user input from user interface . User interface may allow a user to interact with device and can take a variety of forms such as a button keypad dial a click wheel keyboard display screen and or a touch screen. Processor may also for example be a system on chip such as those found in mobile devices and include a dedicated graphics processing unit GPU . Processor may be based on reduced instruction set computer RISC or complex instruction set computer CISC architectures or any other suitable architecture and may include one or more processing cores. Graphics hardware may be special purpose computational hardware for processing graphics and or assisting processor process graphics information. In one embodiment graphics hardware may include a programmable graphics processing unit GPU .

Sensor and camera circuitry may capture still and video images that may be processed at least in part by video codecs and or processor and or graphics hardware and or a dedicated image processing unit incorporated within circuitry . Images so captured may be stored in memory and or storage . Memory may include one or more different types of media used by processor and graphics hardware to perform device functions. For example memory may include memory cache read only memory ROM and or random access memory RAM . Storage may store media e.g. audio image and video files computer program instructions or software preference information device profile information and any other suitable data. Storage may include one more non transitory storage mediums including for example magnetic disks fixed floppy and removable and tape optical media such as CD ROMs and digital video disks DVDs and semiconductor memory devices such as Electrically Programmable Read Only Memory EPROM and Electrically Erasable Programmable Read Only Memory EEPROM . Memory and storage may be used to tangibly retain computer program instructions or code organized into one or more modules and written in any desired computer programming language. When executed by for example processor such computer program code may implement one or more of the methods described herein. It will also be understood that processor may represent one or more processing units communicatively coupled.

Finally it is to be understood that the above description is intended to be illustrative and not restrictive. For example the description above assumed the display device performed overscan. If this is not the case display mode control could simply pass the executing application s display buffer contents directly to frame buffer . In effect this implements operations in accordance with mode 3 application display buffer content is copied directly to the frame buffer .

The above description indicates an execution application s display buffer content is moved e.g. sent and received as it is processed by display mode control in accordance with and . In practice may computer systems may simply manipulate pointers to reduce the amount of data that is physically manipulated. Such operations are to be considered part of the acts of moving sending etc. within the context of this disclosure. Finally it should be understood that the above described embodiments may be used in combination with each other. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. As such the scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. 

