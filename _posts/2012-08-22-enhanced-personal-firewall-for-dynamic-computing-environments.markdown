---

title: Enhanced personal firewall for dynamic computing environments
abstract: An enhanced personal firewall system having an inter-firewall connection listener which binds to a specified communications port and listens for inbound and/or outbound connection requests; and an inter-firewall controller which establishes a trusted communications through a local firewall and a remote firewall by exchanging public keys, a signed trusted computer firewall request, and using the keys to determine if a local key storage indicates previous authorization to trusted communications. If not, then a user of the targeted resource is notified and prompted to authorize the access. If so, then the firewall rules protecting the targeted resource are modified, even if temporarily, to allow the requesting firewall to have trusted access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08745720&OS=08745720&RS=08745720
owner: International Business Machines Corporation
number: 08745720
owner_city: Armonk
owner_country: US
publication_date: 20120822
---
This is a continuation of U.S. patent application Ser. No. 11 684 067 filed on Mar. 9 2007 by Ravi Prakah Bansal which is currently under notice of allowance.

The present invention relates generally to an improved firewall system and method with particular application to dynamic computing environments.

Whereas the determination of a publication technology or product as prior art relative to the present invention requires analysis of certain dates and events not disclosed herein no statements made within this Background of the Invention shall constitute an admission by the Applicants of prior art unless the term Prior Art is specifically stated. Otherwise all statements provided within this Background section are other information related to or useful for understanding the invention.

Firewall products which are often distributed as software application programs can be considered to fall into one of two broad categories corporate network firewalls and personal firewalls. Corporate network firewalls also referred to as sub net firewalls monitor traffic at a network bottleneck such as at a point where a corporate intranet interfaces to the Internet. At this position all of the computers on the corporate intranet can be protected from threats outside the intranet originating from the Internet. This is a cost effective and efficient solution for corporations whereas firewall products must only be installed and administered at the one or more key networking interfaces between the intranet s and the Internet. Addition of a wireless network portion to the corporate intranet can pose a backdoor vulnerability to the intranet whereas any computer with a wireless network interface which connects to and accesses the intranet may also act as a wireless bridge to another wireless network such as a neighboring corporate network or a hacker s wireless computer.

The second broad category of firewall product is a personal firewall. These products are provided by companies such as Symantec e.g. Norton McAfee Computer Associates and Kerio. These firewalls run directly on a computer such as a computer with a wireless network interface. Some are distributed or provided as a separate application program while others such as Microsoft s Windows firewall are embedded in an operating system. Whereas the firewall protects the computer from threats coming from its wireless or wired network interfaces it s configuration preferences and performance is limited and may not match or be equal to that of a corporate network firewall. Further many companies find it cost prohibitive to outfit and administer every computer or every mobile computer in their corporation with a personal firewall installed directly on each computer.

But current personal computer firewall products lack features needed to securely access trusted resources of another computer in a dynamic computing environment such as an environment containing mobile personal computers PC .

Thus far many corporations require by policy personal firewall software operate on employee s computers to prevent various software security threats such as trojan horse programs viruses and the like from spreading between computers within the corporation. It is common for one mobile PC to often require access to another computer for a variety of reasons including backing up of software mirroring remote control software input device sharing etc. Additionally the mobile computers need access to workstations in a variety of locations including workstations physically near the mobile PC e.g. computers on the same subnet at home using a VPN or offices around the world.

Present personal firewall technology has not yet securely solved these access problems related to inclusion of a mobile device in a computing environment. Current personal firewall software allows users to restrict network access to trusted computer resources in several methods. For example entire networks can be either trusted or untrusted. Additionally specific ports and hosts can be trusted by either Internet Protocol IP or host name.

Unfortunately in a dynamic and mobile computing environment where mobile computers can present themselves into or onto a trusted network for a limited period of time then leave the network returning at some time later again the IP address of a mobile PC often changes.

Another method employed by some personal firewalls is to establish trust relationships by Media Access Control MAC address. However MAC addresses are not transferred across subnets thereby limiting this method s use to computers which are always located on the same subnet.

Some current personal firewalls can be set up to trust an entire range of IPs but trusting more IPs than necessary is also security risk. Technologies such as Dynamic Host Configuration Protocol DHCP attempt to provide a more convenient centralized point of administration of IP addresses with some provision of automatic assignment of IP addresses and automatic expiration and re use of IP addresses. Through configuration of short address lease times IP addresses can be more efficiently utilized and some security enhancements are realized but still the networked resources remain vulnerable to certain modes of threat.

Still another method to enable communication between hosts is to tunnel that communication via a Virtual Private Network VPN such as open VPN or through Secure Shell SSH . There are also shortcomings of each of these approaches. First VPN servers or tunneling SSH sessions are difficult to setup for the typical computer user. Second additional work and expertise is required to maintain the VPN or SSH server. And the user must manually re establish the VPN or SSH tunnel prior to accessing resources on the target computer or setup programs such as autossh to re establish the connection automatically. Further not all application programs are able to fully function within either a VPN or SSH tunnel.

The present invention includes system embodiments as well as methods for providing an enhanced personal firewall system having an inter firewall connection listener which binds to a specified communications port and listens for inbound and or outbound connection requests and an inter firewall controller which establishes a trusted communications through a local firewall and a remote firewall by exchanging public keys a signed trusted computer firewall request and using the keys to determine if a local key storage indicates previous authorization to trusted communications. If not then a user of the targeted resource is notified and prompted to authorize the access. If so then the firewall rules protecting the targeted resource are modified even if temporarily to allow the requesting firewall to have trusted access.

The inventors of the present invention have recognized problems unaddressed in the art regarding firewall protection of mobile computing devices in a dynamic computing environment.

The present invention provides methods to enhance and improve client firewall software to enable a computer to securely access the resources of another computer in a dynamic computing environment. For the purpose of this disclosure a dynamic computing environment refers to a computing environment in which at least one client computer such as a PC has one or more of the following attributes a non static IP address b moves between subnets or c accesses computing resources from a VPN. Secure access is enforced by using private public keypairs for computer authentication and authorization.

The present invention allows operators using mobile computing devices to access resources from multiple locations without relaxing security measures where known products require users to either disable the client firewall or trust a larger percentage of the network than is necessary which results in compromised computer security.

As will be evident from the following paragraphs the present invention brings together several security techniques in a non obvious manner to facilitate secure network communication in a dynamic computing environment. The elements combined are personal firewall software public private secure keypairs Transmission Control Protocol Internet Protocol TCP IP communication network clients and binding servers. To demonstrate that it is presently unknown and unsuggested by those skilled in the art to create a system to allow for secure network communications in a dynamic computing environment according to the present invention the following patents are considered. The following issued patents and published patent applications address similar problems but none have either recognized the source of the threats recognized by the inventors solved the vulnerabilities solved by the present invention or both.

For example U.S. Published Patent Application 2003 0167405 to Freund et al. and U.S. Published Patent Applications 2003 0097590 to Syvanne are both firewalls which employ the use of sets of firewall rules. These firewalls are described as determining which particular set of rules to activate based on the physical location or the network profile. One disadvantage of these firewalls is that any given set of rules is static and predetermined. Therefore if a target computer with which a source wished to communicate was not designated as a trusted computer in the target computer s currently activated rule set then a communication would be denied by the Freund or Syvanne firewalls. As will be evident from the following paragraphs the present invention allows more granular communication decisions to be made as the method described allows the two computers to configure their firewall rules at the level of individual source and target computers by making use of their authenticated identities.

Still another example is U.S. Pat. No. 6 609 154 to Fuh et al. Fuh s firewall or boundary device intercepts traffic between a client and the network resource and only allows the client to reach the network resource after the client passes an authentication challenge. Fuh s approach involves Hypter Text Transfer Protocol HTTP communication between the client and the network resources and would be exemplified in scenarios such as when client computers are accessing web servers that are protected by a firewall that requires the client user to type in a user name and password in an HTML dialog box before access can be granted. As will be seen in the following paragraphs Fuh s principles of operation are considerably different from those of the present invention wherein the present invention involves authenticated communication between two peer computers across firewalls.

Yet another example is U.S. Pat. No. 6 804 783 to Wesinger Jr. et al. Wesinger s approach is similar to password based access of network resources as that used by Fuh involving a access key that is communicated to the user via a pager phone or fax. According to their patent upon receiving the key Wesinger s system requires the user to enter the said key into the system before a connection can be established. However this method is considerably inconvenient. As will be seen in the following paragraphs the present invention utilizes a more automated and secure public private key method for authentication than that of Wesinger s system.

Another published U.S. Patent Application 20030055962 to Freund et al. uses an approach in which a router periodically checks if the client computers are connected to it are authorized to access the outside world. As will be seen in the following paragraphs the present invention is substantially different from Freund s second system by utilizing authenticated communication between two peer computers across firewalls.

U.S. Pat. No. 7 136 645 to Hanson et al. U.S. Pat. No. 7 088 727 Short et al. and Ferreria et al. describe intermediary devices which intercept network packets and modify them so that a mobile device can maintain communication with various disparate networks without reconfiguration. These systems and others like them are considerably different from the present invention in that they do not utilize authenticated communication between two peer computers across multiple firewalls.

Turning to in which components are arranged and provided according to the invention a conventional personal firewall user interface and a conventional network protocol stack are provided with new components including an Inter Firewall controller an Inter Firewall Connection Listener and a Trusted Host Public Keystore as shown.

The firewall user interface component of enhanced firewall interacts with the user allowing the user to modify the settings and operation of the firewall software. Additionally preferably similar to other firewalls the firewall user interface displays the status of the firewall along with information and warning messages. However according to the present invention the user interface component is modified to support prompting the user to add a host to its list of trusted hosts.

The network stack is the component of the firewall software that interrogates outgoing and incoming network packets and applies firewall rules against them to either allow or deny the packet access to or from the host. According to the present invention and in one available embodiment a conventional network protocol stack is modified and enhanced to allow the new Inter Firewall Connection Listener component to bind to a specified port and to accept incoming transmissions from other host firewalls.

The Inter Firewall Connection Listener component is designed to bind to a specified port to listen for incoming firewall trust requests. Once a connection has been detected control is passed to the Inter Firewall Controller.

According to one embodiment of the invention the Inter Firewall Controller component contains the program logic to determine if an incoming trust request should be honored as described in more detail in the following paragraphs.

Finally a trusted host public keystore component comprises a nonvolatile datastore that allows multiple entries to be stored indexed and searched. Additionally the datastore allows information to be associated with entries.

The content and interpretation of each of these steps are described further in the following paragraphs concerning the logical processes of the invention.

Turning to a logical process according to the invention for handling an inbound connection request is shown 

Step In this step it is determined if the user presently or in the past indicated that this host identified by its public key store can be a trusted computing resource. If yes processing proceeds to step otherwise step is invoked.

It will be apparent to those skilled in the art that the invention is not limited to the exact example logical processes described in the foregoing paragraphs and that there are many variations which fall within the spirit and the scope of the invention. For example the invention can alternatively utilize a central server system for authentication and authorization to trusted resources of another host. In such an embodiment the central server system would maintain a user defined list of trusted hosts. When a mobile computer changes IP addresses it would update the central server system with its host ID public key and new IP address. The firewall logic would additionally check the central server system either periodically or on new incoming connections to determine which IPs are trusted.

In another embodiment the trusted remote host IP addresses may be restricted to communication with only a specified subset of ports on the host. Alternatively the trusted remote host IP addresses may only be trusted for only a specified period of time after authorization.

Still another embodiment variation provides that the computer which permitted a trusted relationship to be established may periodically or on demand request re authorization of the client and remove any clients that do not re authorize as a trusted host.

In yet another variation embodiment the logic of the invention may be implemented as software which is developed as a program external to conventional firewall software such that it interacts and cooperates with the conventional firewall software execution on the machine via application programming interface API calls or automated cursor and keyboard control.

The principles of the invention may also be applied to non personal firewalls such as corporate network or sub net firewalls as well.

In one embodiment of the invention the functionality of the enhanced firewall including the previously described logical processes are performed in part or wholly by software executed by a computer such as personal computers web servers web browsers or even an appropriately capable portable computing platform such as personal digital assistant PDA web enabled wireless telephone or other type of personal information management PIM device. In alternate embodiments some or all of the functionality of the invention are realized in other logical forms such as circuitry.

Therefore it is useful to review a generalized architecture of a computing platform which may span the range of implementation from a high end web or enterprise server platform to a personal computer to a portable PDA or web enabled wireless phone.

Turning to a generalized architecture is presented including a central processing unit CPU which is typically comprised of a microprocessor associated with random access memory RAM and read only memory ROM . Often the CPU is also provided with cache memory and programmable FlashROM . The interface between the microprocessor and the various types of CPU memory is often referred to as a local bus but also may be a more generic or industry standard bus.

Many computing platforms are also provided with one or more storage drives such as hard disk drives HDD floppy disk drives compact disc drives CD CD R CD RW DVD DVD R etc. and proprietary disk and tape drives e.g. Iomega Zip and Jaz Addonics SuperDisk etc. . Additionally some storage drives may be accessible over a computer network.

Many computing platforms are provided with one or more communication interfaces according to the function intended of the computing platform. For example a personal computer is often provided with a high speed serial port RS 232 RS 422 etc. an enhanced parallel port EPP and one or more universal serial bus USB ports. The computing platform may also be provided with a local area network LAN interface such as an Ethernet card and other high speed interfaces such as the High Performance Serial Bus IEEE 1394.

Computing platforms such as wireless telephones and wireless networked PDA s may also be provided with a radio frequency RF interface with antenna as well. In some cases the computing platform may be provided with an infrared data arrangement IrDA interface too.

Computing platforms are often equipped with one or more internal expansion slots such as Industry Standard Architecture ISA Enhanced Industry Standard Architecture EISA Peripheral Component Interconnect PCI or proprietary interface slots for the addition of other hardware such as sound cards memory boards and graphics accelerators.

Additionally many units such as laptop computers and PDA s are provided with one or more external expansion slots allowing the user the ability to easily install and remove hardware expansion devices such as PCMCIA cards SmartMedia cards and various proprietary modules such as removable hard drives CD drives and floppy drives.

Often the storage drives communication interfaces internal expansion slots and external expansion slots are interconnected with the CPU via a standard or industry open bus architecture such as ISA EISA or PCI. In many cases the bus may be of a proprietary design.

A computing platform is usually provided with one or more user input devices such as a keyboard or a keypad and mouse or pointer device and or a touch screen display . In the case of a personal computer a full size keyboard is often provided along with a mouse or pointer device such as a track ball or TrackPoint . In the case of a web enabled wireless telephone a simple keypad may be provided with one or more function specific keys. In the case of a PDA a touch screen is usually provided often with handwriting recognition capabilities.

Additionally a microphone such as the microphone of a web enabled wireless telephone or the microphone of a personal computer is supplied with the computing platform. This microphone may be used for simply reporting audio and voice signals and it may also be used for entering user choices such as voice navigation of web sites or auto dialing telephone numbers using voice recognition capabilities.

Many computing platforms are also equipped with a camera device such as a still digital camera or full motion video digital camera.

One or more user output devices such as a display are also provided with most computing platforms. The display may take many forms including a Cathode Ray Tube CRT a Thin Flat Transistor TFT array or a simple set of light emitting diodes LED or liquid crystal display LCD indicators.

One or more speakers and or annunciators are often associated with computing platforms too. The speakers may be used to reproduce audio and music such as the speaker of a wireless telephone or the speakers of a personal computer. Annunciators may take the form of simple beep emitters or buzzers commonly found on certain devices such as PDAs and PIMs.

These user input and output devices may be directly interconnected to the CPU via a proprietary bus structure and or interfaces or they may be interconnected through one or more industry open buses such as ISA EISA PCI etc.

The computing platform is also provided with one or more software and firmware programs to implement the desired functionality of the computing platforms.

Turning to now more detail is given of a generalized organization of software and firmware on this range of computing platforms. One or more operating system OS native application programs may be provided on the computing platform such as word processors spreadsheets contact management utilities address book calendar email client presentation financial and bookkeeping programs.

Additionally one or more portable or device independent programs may be provided which must be interpreted by an OS native platform specific interpreter such as Java scripts and programs.

Often computing platforms are also provided with a form of web browser or micro browser which may also include one or more extensions to the browser such as browser plug ins .

The computing device is often provided with an operating system such as Microsoft Windows UNIX IBM OS 2 IBM AIX open source LINUX Apple s MAC OS or other platform specific operating systems. Smaller devices such as PDA s and wireless telephones may be equipped with other forms of operating systems such as real time operating systems RTOS or Palm Computing s PalmOS .

A set of basic input and output functions BIOS and hardware device drivers are often provided to allow the operating system and programs to interface to and control the specific hardware functions provided with the computing platform.

Additionally one or more embedded firmware programs are commonly provided with many computing platforms which are executed by onboard or embedded microprocessors as part of the peripheral device such as a micro controller or a hard drive a communication processor network interface card or sound or graphics card.

As such and describe in a general sense the various hardware components software and firmware programs of a wide variety of computing platforms including but not limited to personal computers PDAs PIMs web enabled telephones and other appliances such as WebTV units. As such we now turn our attention to disclosure of the present invention relative to the processes and methods preferably implemented as software and firmware on such a computing platform. It will be readily recognized by those skilled in the art that the following methods and processes may be alternatively realized as hardware functions in part or in whole without departing from the spirit and scope of the invention.

Alternative embodiments of the present invention include some or all of the foregoing logical processes and functions of the invention being provided by configuring software deploying software downloading software distributing software or remotely serving clients in an on demand environment.

According to one embodiment of the invention the methods and processes of the invention are distributed or deployed as a service by a service provider to a client s computing system s .

Turning to the deployment process begins by determining if there are any programs that will reside on a server or servers when the process software is executed. If this is the case then the servers that will contain the executables are identified . The process software for the server or servers is transferred directly to the servers storage via FTP or some other protocol or by copying through the use of a shared files system . The process software is then installed on the servers .

Next a determination is made on whether the process software is to be deployed by having users access the process software on a server or servers . If the users are to access the process software on servers then the server addresses that will store the process software are identified .

In step a determination is made whether the process software is to be developed by sending the process software to users via e mail. The set of users where the process software will be deployed are identified together with the addresses of the user client computers . The process software is sent via e mail to each of the user s client computers. The users then receive the e mail and then detach the process software from the e mail to a directory on their client computers . The user executes the program that installs the process software on his client computer then exits the process .

A determination is made if a proxy server is to be built to store the process software. A proxy server is a server that sits between a client application such as a Web browser and a real server. It intercepts all requests to the real server to see if it can fulfill the requests itself. If not it forwards the request to the real server. The two primary benefits of a proxy server are to improve performance and to filter requests. If a proxy server is required then the proxy server is installed . The process software is sent to the servers either via a protocol such as FTP or it is copied directly from the source files to the server files via file sharing . Another embodiment would be to send a transaction to the servers that contained the process software and have the server process the transaction then receive and copy the process software to the server s file system. Once the process software is stored at the servers the users via their client computers then access the process software on the servers and copy to their client computers file systems . Another embodiment is to have the servers automatically copy the process software to each client and then run the installation program for the process software at each client computer. The user executes the program that installs the process software on his client computer then exits the process .

Lastly a determination is made on whether the process software will be sent directly to user directories on their client computers . If so the user directories are identified . The process software is transferred directly to the user s client computer directory . This can be done in several ways such as but not limited to sharing of the file system directories and then copying from the sender s file system to the recipient user s file system or alternatively using a transfer protocol such as File Transfer Protocol FTP . The users access the directories on their client file systems in preparation for installing the process software . The user executes the program that installs the process software on his client computer then exits the process .

According to another embodiment of the present invention software embodying the methods and processes disclosed herein are integrated as a service by a service provider to other software applications applets or computing systems.

Integration of the invention generally includes providing for the process software to coexist with applications operating systems and network operating systems software and then installing the process software on the clients and servers in the environment where the process software will function.

Generally speaking the first task is to identify any software on the clients and servers including the network operating system where the process software will be deployed that are required by the process software or that work in conjunction with the process software. This includes the network operating system that is software that enhances a basic operating system by adding networking features. Next the software applications and version numbers will be identified and compared to the list of software applications and version numbers that have been tested to work with the process software. Those software applications that are missing or that do not match the correct version will be upgraded with the correct version numbers. Program instructions that pass parameters from the process software to the software applications will be checked to ensure the parameter lists matches the parameter lists required by the process software. Conversely parameters passed by the software applications to the process software will be checked to ensure the parameters match the parameters required by the process software. The client and server operating systems including the network operating systems will be identified and compared to the list of operating systems version numbers and network software that have been tested to work with the process software. Those operating systems version numbers and network software that do not match the list of tested operating systems and version numbers will be upgraded on the clients and servers to the required level.

After ensuring that the software where the process software is to be deployed is at the correct version level that has been tested to work with the process software the integration is completed by installing the process software on the clients and servers.

Turning to details of the integration process according to the invention are shown. Integrating begins by determining if there are any process software programs that will execute on a server or servers . If this is not the case then integration proceeds to . If this is the case then the server addresses are identified . The servers are checked to see if they contain software that includes the operating system OS applications and network operating systems NOS together with their version numbers that have been tested with the process software . The servers are also checked to determine if there is any missing software that is required by the process software .

A determination is made if the version numbers match the version numbers of OS applications and NOS that have been tested with the process software . If all of the versions match then processing continues . Otherwise if one or more of the version numbers do not match then the unmatched versions are updated on the server or servers with the correct versions . Additionally if there is missing required software then it is updated on the server or servers . The server integration is completed by installing the process software .

Step which follows either or determines if there are any programs of the process software that will execute on the clients. If no process software programs execute on the clients the integration proceeds to and exits. If this is not the case then the client addresses are identified .

The clients are checked to see if they contain software that includes the operating system OS applications and network operating systems NOS together with their version numbers that have been tested with the process software . The clients are also checked to determine if there is any missing software that is required by the process software .

A determination is made if the version numbers match the version numbers of OS applications and NOS that have been tested with the process software . If all of the versions match and there is no missing required software then the integration proceeds to and exits.

If one or more of the version numbers do not match then the unmatched versions are updated on the clients with the correct versions . In addition if there is missing required software then it is updated on the clients . The client integration is completed by installing the process software on the clients . The integration proceeds to and exits.

In another embodiment the invention may be realized as a service or functionality available to other systems and devices via an Application Programming Interface API . One such embodiment is to provide the service to a client system from a server system as a web service.

According to another aspect of the present invention the processes and methods disclosed herein are provided through an on demand computing architecture to render service to a client by a service provider.

Turning to generally speaking the process software embodying the methods disclosed herein is shared simultaneously serving multiple customers in a flexible automated fashion. It is standardized requiring little customization and it is scaleable providing capacity on demand in a pay as you go model.

The process software can be stored on a shared file system accessible from one or more servers. The process software is executed via transactions that contain data and server processing requests that use CPU units on the accessed server. CPU units are units of time such as minutes seconds hours on the central processor of the server. Additionally the assessed server may make requests of other servers that require CPU units. CPU units are an example that represents but one measurement of use. Other measurements of use include but are not limited to network bandwidth memory usage storage usage packet transfers complete transactions etc.

When multiple customers use the same process software application their transactions are differentiated by the parameters included in the transactions that identify the unique customer and the type of service for that customer. All of the CPU units and other measurements of use that are used for the services for each customer are recorded. When the number of transactions to any one server reaches a number that begins to effect the performance of that server other servers are accessed to increase the capacity and to share the workload. Likewise when other measurements of use such as network bandwidth memory usage storage usage etc. approach a capacity so as to effect performance additional network bandwidth memory usage storage etc. are added to share the workload.

The measurements of use used for each service and customer are sent to a collecting server that sums the measurements of use for each customer for each service that was processed anywhere in the network of servers that provide the shared execution of the process software. The summed measurements of use units are periodically multiplied by unit costs and the resulting total process software application service costs are alternatively sent to the customer and or indicated on a web site accessed by the computer which then remits payment to the service provider.

In another embodiment the service provider requests payment directly from a customer account at a banking or financial institution.

In another embodiment if the service provider is also a customer of the customer that uses the process software application the payment owed to the service provider is reconciled to the payment owed by the service provider to minimize the transfer of payments.

The server central processing unit CPU capacities in the On Demand environment are queried . The CPU requirement of the transaction is estimated then the servers available CPU capacity in the On Demand environment are compared to the transaction CPU requirement to see if there is sufficient CPU available capacity in any server to process the transaction . If there is not sufficient server CPU available capacity then additional server CPU capacity is allocated to process the transaction . If there was already sufficient available CPU capacity then the transaction is sent to a selected server .

Before executing the transaction a check is made of the remaining On Demand environment to determine if the environment has sufficient available capacity for processing the transaction. This environment capacity consists of such things as but not limited to network bandwidth processor memory storage etc. . If there is not sufficient available capacity then capacity will be added to the On Demand environment . Next the required software to process the transaction is accessed loaded into memory then the transaction is executed .

The usage measurements are recorded . The usage measurements consists of the portions of those functions in the On Demand environment that are used to process the transaction. The usage of such functions as but not limited to network bandwidth processor memory storage and CPU cycles are what is recorded. The usage measurements are summed multiplied by unit costs and then recorded as a charge to the requesting customer .

If the customer has requested that the On Demand costs be posted to a web site then they are posted . If the customer has requested that the On Demand costs be sent via e mail to a customer address then they are sent . If the customer has requested that the On Demand costs be paid directly from a customer account then payment is received directly from the customer account . The last step is to exit the On Demand process.

According to another embodiment of the present invention multiple computers are used to simultaneously process individual audio tracks individual audio snippets or a combination of both to yield output with less delay. Such a parallel computing approach may be realized using multiple discrete systems e.g. a plurality of servers clients or both or may be realized as an internal multiprocessing task e.g. a single system with parallel processing capabilities .

According to another aspect of the present invention the methods and processes described herein may be embodied in part or in entirety in software which can be deployed to third parties as part of a service wherein a third party VPN service is offered as a secure deployment vehicle or wherein a VPN is build on demand as required for a specific deployment.

A virtual private network VPN is any combination of technologies that can be used to secure a connection through an otherwise unsecured or untrusted network. VPNs improve security and reduce operational costs. The VPN makes use of a public network usually the Internet to connect remote sites or users together. Instead of using a dedicated real world connection such as leased line the VPN uses virtual connections routed through the Internet from the company s private network to the remote site or employee. Access to the software via a VPN can be provided as a service by specifically constructing the VPN for purposes of delivery or execution of the process software i.e. the software resides elsewhere wherein the lifetime of the VPN is limited to a given period of time or a given number of deployments based on an amount paid.

The process software may be deployed accessed and executed through either a remote access or a site to site VPN. When using the remote access VPNs the process software is deployed accessed and executed via the secure encrypted connections between a company s private network and remote users through a third party service provider. The enterprise service provider ESP sets a network access server NAS and provides the remote users with desktop client software for their computers. The telecommuters can then dial a toll free number to attach directly via a cable or DSL modem to reach the NAS and use their VPN client software to access the corporate network and to access download and execute the process software.

When using the site to site VPN the process software is deployed accessed and executed through the use of dedicated equipment and large scale encryption that are used to connect a company s multiple fixed sites over a public network such as the Internet.

The process software is transported over the VPN via tunneling which is the process of placing an entire packet within another packet and sending it over the network. The protocol of the outer packet is understood by the network and both points called tunnel interfaces where the packet enters and exits the network.

Turning to VPN deployment process starts by determining if a VPN for remote access is required . If it is not required then proceed to . If it is required then determine if the remote access VPN exits .

If a VPN does exist then the VPN deployment process proceeds to identify a third party provider that will provide the secure encrypted connections between the company s private network and the company s remote users . The company s remote users are identified . The third party provider then sets up a network access server NAS that allows the remote users to dial a toll free number or attach directly via a broadband modem to access download and install the desktop client software for the remote access VPN .

After the remote access VPN has been built or if it has been previously installed the remote users can access the process software by dialing into the NAS or attaching directly via a cable or DSL modem into the NAS . This allows entry into the corporate network where the process software is accessed . The process software is transported to the remote user s desktop over the network via tunneling. That is the process software is divided into packets and each packet including the data and protocol is placed within another packet . When the process software arrives at the remote user s desktop it is removed from the packets reconstituted and then is executed on the remote users desktop .

A determination is made to see if a VPN for site to site access is required . If it is not required then proceed to exit the process . Otherwise determine if the site to site VPN exists . If it does exist then proceed to . Otherwise install the dedicated equipment required to establish a site to site VPN . Then build the large scale encryption into the VPN .

After the site to site VPN has been built or if it had been previously established the users access the process software via the VPN . The process software is transported to the site users over the network via tunneling. That is the process software is divided into packets and each packet including the data and protocol is placed within another packet . When the process software arrives at the remote user s desktop it is removed from the packets reconstituted and is executed on the site users desktop . Proceed to exit the process .

In another embodiment of the invention logical processes according to the invention and described herein are encoded on or in one or more computer readable media. Some computer readable media are read only e.g. they must be initially programmed using a different device than that which is ultimately used to read the data from the media some are write only e.g. from the data encoders perspective they can only be encoded but not read simultaneously or read write. Still some other media are write once read many times.

Some media are relatively fixed in their mounting mechanisms while others are removable or even transmittable. All computer readable media form two types of systems when encoded with data and or computer software a when removed from a drive or reading mechanism they are memory devices which generate useful data driven outputs when stimulated with appropriate electromagnetic electronic and or optical signals and b when installed in a drive or reading device they form a data repository system accessible by a computer.

Similarly another form of computer readable media is a flexible removable floppy disk which is inserted into a drive which houses an access head. The floppy disk typically includes a flexible magnetically encodable disk which is accessible by the drive head through a window in a sliding cover .

A Compact Disk CD is usually a plastic disk which is encoded using an optical and or magneto optical process and then is read using generally an optical process. Some CD s are read only CD ROM and are mass produced prior to distribution and use by reading types of drives. Other CD s are writable e.g. CD RW CD R either once or many time. Digital Versatile Disks DVD are advanced versions of CD s which often include double sided encoding of data and even multiple layer encoding of data. Like a floppy disk a CD or DVD is a removable media.

Another common type of removable media are several types of removable circuit based e.g. solid state memory devices such as Compact Flash CF Secure Data SD Sony s MemoryStick Universal Serial Bus USB FlashDrives and Thumbdrives and others. These devices are typically plastic housings which incorporate a digital memory chip such as a battery backed random access chip RAM or a Flash Read Only Memory FlashROM . Available to the external portion of the media is one or more electronic connectors for engaging a connector such as a CF drive slot or a USB slot. Devices such as a USB FlashDrive are accessed using a serial data methodology where other devices such as the CF are accessed using a parallel methodology. These devices often offer faster access times than disk based media as well as increased reliability and decreased susceptibility to mechanical shock and vibration. Often they provide less storage capability than comparably priced disk based media.

Yet another type of computer readable media device is a memory module often referred to as a SIMM or DIMM. Similar to the CF SD and FlashDrives these modules incorporate one or more memory devices such as Dynamic RAM DRAM mounted on a circuit board having one or more electronic connectors for engaging and interfacing to another circuit such as a Personal Computer motherboard. These types of memory modules are not usually encased in an outer housing as they are intended for installation by trained technicians and are generally protected by a larger outer housing such as a Personal Computer chassis.

Turning now to another embodiment option of the present invention is shown in which a computer readable signal is encoded with software data or both which implement logical processes according to the invention. is generalized to represent the functionality of wireless wired electro optical and optical signaling systems. For example the system shown in can be realized in a manner suitable for wireless transmission over Radio Frequencies RF as well as over optical signals such as InfraRed Data Arrangement IrDA . The system of may also be realized in another manner to serve as a data transmitter data receiver or data transceiver for a USB system such as a drive to read the aforementioned USB FlashDrive or to access the serially stored data on a disk such as a CD or hard drive platter.

In general a microprocessor or microcontroller reads writes or both data to from storage for data program or both . A data interface optionally including a digital to analog converter cooperates with an optional protocol stack to send receive or transceive data between the system front end and the microprocessor . The protocol stack is adapted to the signal type being sent received or transceived. For example in a Local Area Network LAN embodiment the protocol stack may implement Transmission Control Protocol Internet Protocol TCP IP . In a computer to computer or computer to periperal embodiment the protocol stack may implement all or portions of USB FireWire RS 232 Point to Point Protocol PPP etc.

The system s front end or analog front end is adapted to the signal type being modulated demodulate or transcoded. For example in an RF based system the analog front end comprises various local oscillators modulators demodulators etc. which implement signaling formats such as Frequency Modulation FM Amplitude Modulation AM Phase Modulation PM Pulse Code Modulation PCM etc. Such an RF based embodiment typically includes an antenna for transmitting receiving or transceiving electro magnetic signals via open air water earth or via RF wave guides and coaxial cable. Some common open air transmission standards are BlueTooth Global Services for Mobile Communications GSM Time Division Multiple Access TDMA Advanced Mobile Phone Service AMPS and Wireless Fidelity Wi Fi .

In another example embodiment the analog front end may be adapted to sending receiving or transceiving signals via an optical interface such as laser based optical interfaces e.g. Wavelength Division Multiplexed SONET etc. or Infra Red Data Arrangement IrDA interfaces . Similarly the analog front end may be adapted to sending receiving or transceiving signals via cable using a cable interface which also includes embodiments such as USB Ethernet LAN twisted pair coax Plain old Telephone Service POTS etc.

Signals transmitted received or transceived as well as data encoded on disks or in memory devices may be encoded to protect it from unauthorized decoding and use. Other types of encoding may be employed to allow for error detection and in some cases correction such as by addition of parity bits or Cyclic Redundancy Codes CRC . Still other types of encoding may be employed to allow directing or routing of data to the correct destination such as packet and frame based protocols.

Parallel data can be represented as the flow of data signals aligned in time such that parallel data unit byte word d word etc. is transmitted with each bit D Dbeing on a bus or signal carrier simultaneously where the width of the data unit is n 1. In some systems Dis used to represent the least significant bit LSB and in other systems it represents the most significant bit MSB . Data is serialized by sending one bit at a time such that each data unit is sent in serial fashion one after another typically according to a protocol.

As such the parallel data stored in computer memory is often accessed by a microprocessor or Parallel to Serial Converter via a parallel bus and exchanged e.g. transmitted received or transceived via a serial bus . Received serial data is converted back into parallel data before storing it in computer memory usually. The serial bus generalized in may be a wired bus such as USB or Firewire or a wireless communications medium such as an RF or optical channel as previously discussed.

In these manners various embodiments of the invention may be realized by encoding software data or both according to the logical processes of the invention into one or more computer readable mediums thereby yielding a product of manufacture and a system which when properly read received or decoded yields useful programming instructions data or both including but not limited to the computer readable media types described in the foregoing paragraphs.

While certain examples and details of a preferred embodiment have been disclosed it will be recognized by those skilled in the art that variations in implementation such as use of different programming methodologies computing platforms and processing technologies may be adopted without departing from the spirit and scope of the present invention. Therefore the scope of the invention should be determined by the following claims.

