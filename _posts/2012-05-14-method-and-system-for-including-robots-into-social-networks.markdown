---

title: Method and system for including robots into social networks
abstract: Examples disclose a method and system for including robots into social networks. The method may be executable to receiving information associated with a first party, wherein the first party is connected to a second party by a social-network. Based on the received information, the method may be executable to query a behavioral database to obtain a behavioral expectation associated with the first party and to compare the behavioral expectation associated with the first party to a stored behavioral expectation associated with the second party. Based on the comparing, the method may be executable to modify the stored behavioral expectation associated with the second party based on the behavioral expectation associated with the first party and provide instructions, which are executable to perform an action associated with the modified behavioral expectation, to a device associated with the second party.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08321364&OS=08321364&RS=08321364
owner: Google Inc.
number: 08321364
owner_city: Mountain View
owner_country: US
publication_date: 20120514
---
This patent application claims priority to U.S. Patent Application No. 61 596 608 filed on Feb. 8 2012 the contents of which are entirely incorporated herein by reference as if fully set forth in this application.

Cloud computing refers to provision of computational resources via a computer network. In a traditional model of computing both data and software are fully contained on a user s computer. In cloud computing however the user s computer may contain relatively little software or data perhaps a minimal operating system and web browser for example and may serve as a display terminal for processes occurring on a network of computers. A common shorthand provided for a cloud computing service or even an aggregation of existing cloud services is the cloud .

Cloud computing has been referred to as client server computing however there may be distinctions between general cloud computing and client server computing. For example client server computing may include a distributed application structure that partitions tasks or workloads between providers of a resource or service e.g. servers and service requesters e.g. clients . Client server computing generally involves a one to one relationship between the server and the client whereas cloud computing includes generic services that can be accessed by generic clients e.g. a one to one relationship or connection may not be required . Thus cloud computing generally includes client server computing and additional services and functionality.

Cloud computing may free users from certain hardware and software installation and maintenance tasks through use of simpler hardware on the user s computer that accesses a vast network of computing resources e.g. processors hard drives etc. . Sharing of resources may reduce cost to individuals. Thus any computer connected to the cloud may be connected to the same pool of computing power applications and files. Users can store and access personal files such as music pictures videos and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium such as a DVD or thumb drive.

In one example a user may open a browser and connect to a host of web servers that run user interface software for collecting commands from the user and interpreting the commands into commands on the servers. The servers may handle the computing and can either store or retrieve information from database servers or file servers and display an updated page to the user. Through cloud computing data across multiple servers can be synchronized around the world allowing for collaborative work on one file or project by multiple users around the world for example.

Any of the methods described herein may be provided in a form of instructions stored on a non transitory computer readable medium that when executed by a computing device cause the computing device to perform functions of the method. Further examples may also include articles of manufacture including tangible computer readable media that have computer readable instructions encoded thereon and the instructions may comprise instructions to perform functions of the methods described herein.

The computer readable medium may include non transitory computer readable medium for example such as computer readable media that stores data for short periods of time like register memory processor cache and Random Access Memory RAM . The computer readable medium may also include non transitory media such as secondary or persistent long term storage like read only memory ROM optical or magnetic disks compact disc read only memory CD ROM for example. The computer readable media may also be any other volatile or non volatile storage systems. The computer readable medium may be considered a computer readable storage medium for example or a tangible storage medium.

In addition circuitry may be provided that is wired to perform logical functions in any processes or methods described herein.

In still further examples many types of devices may be used or configured to perform logical functions in any of the processes or methods described herein.

In yet further examples many types of devices may be used or configured as means for performing functions of any of the methods described herein or any portions of the methods described herein .

For example a method may be performed by a computing system having a processor and memory. The method may be executable to receive information associated with a first party wherein the first party is connected to a second party by a social network wherein the social network comprises a network of parties including the first party and the second party that are related via one or more relationships the one or more relationships indicating a type of connection between the first party and the second party. Based on the received information the method may be executable to query a behavioral database to obtain a behavioral expectation associated with the first party wherein the behavioral expectation indicates an action associated with the first party. The method may be further executable to compare the behavioral expectation associated with the first party to a stored behavioral expectation associated with the second party to determine if the behavioral expectation associated with the first party differs from the stored behavioral expectation associated with the second party. Based on the comparison the method may be executable to modify the stored behavioral expectation associated with the second party based on the behavioral expectation associated with the first party and to provide instructions which are executable to perform an action associated with the modified behavioral expectation to a device associated with the second party.

In another example a system may include a first party device wherein the first party device includes a robotic device having a mechanical actuator. The system may further include a computing system including a computer readable memory and program instructions stored on the computer readable memory and executable by at least one processor to cause the computing system to perform a number of functions. For example a function may include determining if the first party device is associated with a second party device by a social network wherein the social network comprises a network of parties including a first party associated with the first party device and a second party associated with the second party device wherein the first party and the second party are related via one or more relationships the one or more relationships indicating a type of connection between the first party and the second party. Moreover based on the received information a function may include querying a behavioral database to obtain a behavioral expectation associated with the second party wherein the behavioral expectation indicates an action associated with the second party. A function may further include a comparison of the behavioral expectation associated with the second party to a stored behavioral expectation associated with the first party. In response to the comparison a function may include modifying the stored behavioral expectation associated with the first party based on the behavioral expectation associated with the second party.

In yet another example a computer readable memory may have stored thereon instructions executable by a computing device having at least one processor to cause the computing device to perform a number of functions. A function may include receiving information associated with a first party wherein the first party is connected to a second party by a social network wherein the social network comprises a network of parties including the first party and the second party that are related via one or more relationships the one or more relationships indicating a type of connection between the first party and the second party. Based on the received information a function may query a behavioral database to obtain a behavioral expectation associated with the first party wherein the behavioral expectation indicates an action associated with the first party. A function may compare the behavioral expectation associated with the first party to a stored behavioral expectation associated with the second party. Responsive to the comparing a function may modify the stored behavioral expectation associated with the second party based on the behavioral expectation associated with the first party and providing instructions which are executable to perform an action associated with the modified behavioral expectation to a device associated with the second party.

The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the figures and the following detailed description.

In the following detailed description reference is made to the accompanying figures. In the figures similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description figures and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the figures can be arranged substituted combined separated and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

Cloud computing may generally refer to the provision of computational resources via a computer network and in particular may refer to networked computer architectures in which application execution and storage may be divided to some extent between client and server devices. A common shorthand provided for a cloud computing service or even an aggregation of existing cloud services is the cloud .

General cloud computing may be distinct from client server computing. For example client server computing may include a distributed application structure that partitions tasks or workloads between providers of a resource or service e.g. servers and service requesters e.g. clients . Client server computing may generally involve a one to one relationship between the server and the client whereas cloud computing may include generic services that can be accessed by generic clients e.g. a one to one relationship or connection may not be required . Thus cloud computing generally includes client server computing and additional services and functionality.

Cloud computing may free users from certain hardware and software installation and maintenance tasks through use of simpler hardware on the user s computer that accesses a vast network of computing resources e.g. processors hard drives etc. . Sharing of resources may reduce cost to individuals. Thus any computer connected to the cloud may be connected to the same pool of computing power applications and files. Users can store and access personal files such as music pictures videos and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium such as a DVD or thumb drive.

In one example a user may open a browser and connect to a host of web servers that run user interface software that collect commands from the user and interpret the commands into commands on the servers. The servers may handle the computing and can either store or retrieve information from database servers or file servers and display an updated page to the user. Through cloud computing data across multiple servers can be synchronized around the world allowing for collaborative work on one file or project from multiple users around the world for example.

Within examples cloud based computing may be used to allow a robot to communicate with another robot or computing device. A robot may be any device that has a computing ability and interacts with its surroundings with an actuation capability e.g. electromechanical capabilities . A client device may be configured as a robot including various sensors and devices in the forms of modules and different modules may be added or removed from robot depending on requirements. In some examples a robot may be configured to receive a second device such as a mobile phone that may be configured to function as an accessory or a brain of the robot.

Referring now to the figures is an example system for cloud based computing. Cloud based computing generally refers to networked computer architectures in which application execution and storage may be divided to some extent between client and server devices. A cloud may refer to a service or a group of services accessible over a network e.g. Internet by client and server devices for example.

In one example any computer connected to the cloud may be connected to the same pool of computing power applications and files. Thus cloud computing enables a shared pool of configurable computing resources e.g. networks servers storage applications and services that can be provisioned and released with minimal management effort or service provider interaction. Users can store and access personal files such as music pictures videos and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium.

As an example in contrast to a predominately client based or server based application a cloud based application may store copies of data and or executable program logic at remote server devices while allowing client devices to download at least some of this data and program logic as needed for execution at the client devices. In some examples downloaded data and program logic can be tailored to capabilities of specific client devices e.g. a personal computer tablet or mobile phone or robot accessing the cloud based application. In addition dividing application execution and storage between the client and server devices allows more processing to be performed by the server devices taking advantage of server devices processing power and capability for example.

Cloud based computing can also refer to distributed computing architectures in which data and program logic for a cloud based application are shared between one or more client devices and or server devices on a near real time basis. Parts of this data and program logic may be dynamically delivered as needed or otherwise to various clients accessing the cloud based application. Details of the architecture may be transparent to users of client devices. Thus a PC user or robot client device accessing a cloud based application may not be aware that the PC or robot downloads program logic and or data from the server devices or that the PC or robot offloads processing or storage functions to the server devices for example.

In a cloud includes a cloud service a cloud platform a cloud infrastructure and a database . The cloud may include more of fewer components and each of the cloud service the cloud platform the cloud infrastructure and the database may comprise multiple elements as well. Thus one or more of the described functions of the system may be divided up into additional functional or physical components or combined into fewer functional or physical components. In some further examples additional functional and or physical components may be added to the examples illustrated by . Delivery of cloud computing may involve multiple cloud components communicating with each other over application programming interfaces such as web services and three tier architectures for example.

The cloud may represent a networked computer architecture and in one example the cloud service represents a queue for handling requests from client devices. The cloud platform may include a frontend of the cloud and may be coupled to the cloud service to perform functions to interact with client devices. The cloud platform may include applications used to access the cloud via a user interface such as a web browser. The cloud infrastructure may include service application of billing components of the cloud and thus may interact with the cloud service . The database may represent storage capabilities by the cloud and thus may be accessed by any of the cloud service the cloud platform and or the infrastructure .

The system may include a number of client devices coupled to or configured to be capable of communicating with components of the cloud . For example a computer a mobile device a host and a robot client are shown coupled to the cloud . Of course more or fewer client devices may be coupled to the cloud . In addition different types of client devices may be coupled to the cloud . For example any of the client devices may generally comprise a display system memory and a processor.

The computer may be any type of computing device e.g. PC laptop computer etc. and the mobile device may be any type of mobile computing device e.g. laptop mobile telephone cellular telephone etc. .

The host may be any type of computing device or transmitter including a laptop computer a mobile telephone etc. that is configured to transmit data to the cloud .

The robot client may comprise any computing device that has connection abilities to the cloud and that has an actuation capability e.g. electromechanical capabilities . A robot may further be a combination of computing devices. In some examples the robot may collect data and upload the data to the cloud . The cloud may be configured to perform calculations or analysis on the data and return processed data to the robot client . In some examples as shown in the cloud may include a computer that is not co located with the robot client . In other examples the robot client may send data to a second client e.g. computer for processing.

Any of the client devices may include additional components. For example the robot client may include one or more sensors such as a gyroscope or an accelerometer to measure movement of the robot client . Other sensors may further include any of Global Positioning System GPS receivers infrared sensors optical sensors biosensors Radio Frequency identification RFID systems wireless sensors and or compasses among others for example.

In addition any of the client devices may include an integrated user interface UI that allows a user to interact with the device. For example the robot client may include various buttons and or a touchscreen interface that allow a user to provide input. As another example the robot client device may include a microphone configured to receive voice commands from a user. Furthermore the robot client may include one or more interfaces that allow various types of user interface devices to be connected to the robot client .

In communication links between client devices and the cloud may include wired connections such as a serial or parallel bus. Communication links may also be wireless links such as link which may include Bluetooth IEEE 802.11 IEEE 802.11 may refer to IEEE 802.11 2007 IEEE 802.11n 2009 or any other IEEE 802.11 revision or other wireless based communication links.

In other examples the system may include access points through which the client devices may communicate with the cloud . Access points may take various forms for example an access point may take the form of a wireless access point WAP or wireless router. As another example if a client device connects using a cellular air interface protocol such as a CDMA or GSM protocol an access point may be a base station in a cellular network that provides Internet connectivity via the cellular network.

As such the client devices may include a wired or wireless network interface through which the client devices can connect to the cloud or access points . As an example the client devices may be configured to use one or more protocols such as 802.11 802.16 WiMAX LTE GSM GPRS CDMA EV DO and or HSPDA among others. Furthermore the client devices may be configured to use multiple wired and or wireless protocols such as 3G or 4G data connectivity using a cellular communication protocol e.g. CDMA GSM or WiMAX as well as for WiFi connectivity using 802.11 . Other examples are also possible.

In one example the storage may be used for compiling data from various sensors of the robot and storing program instructions. The processor may be coupled to the storage and may be configured to control the robot based on the program instructions. The processor may also be able to interpret data from the various sensors on the robot. Example sensors may include smoke sensors light sensors radio sensors infrared sensors microphones speakers gyroscopes accelerometer a camera radar capacitive sensors and touch sensors etc.

The client device may also have components or devices that allow the client device to interact with its environment. For example the client device may have mechanical actuators such as motors wheels movable arms etc. that enable the client device to move or interact with the environment.

In some examples various sensors and devices on the client device may be modules. Different modules may be added or removed from a client device depending on requirements. For example in a low power situation a robot may have fewer modules to reduce power usages. However additional sensors may be added as needed. To increase an amount of data a robot may be able to collect additional sensors may be added for example.

In some example the client device may be configured to receive a device such as device that includes the processor the storage and the sensors . For example the client device may be a robot that have a number of mechanical actuators e.g. a movable base and the robot may be configured to receive a mobile telephone to function as the brains or control components of the robot. The device may be considered a module of the robot. The device may be physically attached to the robot. For example a mobile phone may sit on a robot s chest and form an interactive display. The device may provide a robot with sensors a wireless link and processing capabilities for example. The device may allow a user to download new routines for his or her robot from the cloud. For example a laundry folding routine may be stored on the cloud and a user may be able to select this routine using a mobile phone to download the routine from the cloud and when the mobile phone is placed into or coupled to the robot the robot would be able to perform the downloaded action.

In some examples the client device may be coupled to a mobile or cellular telephone to provide additional sensing capabilities. The cellular phone may not be physically attached to the robot but may be coupled to the robot wirelessly. For example a low cost robot may omit a direct connection to the internet. This robot may be able to connect to a user s cellular phone via a wireless technology e.g. Bluetooth to be able to access the internet. The robot may be able to access various sensors and communication means of the cellular phone. The robot may not need as many sensors to be physically provided on the robot however the robot may be able to keep the same or similar functionality.

Thus the client device may include mechanical robot features and may be configured to receive the device e.g. a mobile phone which can provide additional peripheral components to the device such as any of an accelerometer gyroscope compass GPS camera WiFi connection a touch screen etc. that are included within the device .

In one example the robot may be a toy with only limited mechanical functionality and by connecting device to the robot the toy robot may now be capable of performing a number of functions with the aid of the device and or the cloud. In this manner the robot or components of a robot can be attached to a mobile phone to transform the mobile phone into a robot e.g. with legs arms that is connected to a server to cause operation functions of the robot.

The mountable device may further be configured to maximize runtime usage of the robot e.g. if the robot could learn what happens to cause the user to turn the toy off or set the toy down the device may be configured to perform functions to counteract such occurrences .

Any of the robots illustrated in may be configured to operate according to a robot operating system e.g. an operating system designed for specific functions of the robot . A robot operating system may provide libraries and tools e.g. hardware abstraction device drivers visualizers message passing package management etc. to enable robot applications. Examples of robot operating systems include open source software such as ROS robot operating system DROS or ARCOS advanced robotics control operating system proprietary software such as the robotic development platform ESRP from Evolution Robotics and MRDS Microsoft Robotics Developer Studio and other examples also include ROSJAVA. A robot operating system may include publish and subscribe functionality and may also include functionality to control components of the robot such as head tracking base movement e.g. velocity control navigation framework etc.

As shown any of the modules may be interconnected and or may communicate to receive data or instructions from each other so as to provide a specific output or functionality for the robot.

In one example the robot may send data to a cloud for data processing and in another example the robot may receive data from the cloud. The data received from the cloud may be in many different forms. The received data may be a processed form of data the robot sent to the cloud. The received data may also come from sources other than the robot. For example the cloud may have access to other sensors other robots and the internet.

The cloud may receive input from several robots. Data from each robot may be complied into a larger data set. For example the robot may take a picture of an object and upload the picture to the cloud . An object recognition program on the cloud may be configured to identify the object in the picture and provide data to all the robots connected to the cloud about the recognized object as well as possibly about other characteristics e.g. metadata of the recognized object such as a location size weight color etc. Thus every robot may be able to know attributes of an object in a photo uploaded by the robot .

In one example the cloud may include store or provide access to a database of information related to objects and the database may be accessible by all the robots and . The database may include information identifying objects and details of the objects e.g. mass properties shape instructions for use etc. any detail that may be associated with the object that can be accessed by the robots to perform object recognition. As an example information regarding use of an object can include e.g. such as for a phone how to pick up a handset how to answer the phone location of buttons how to dial etc.

In addition the database may include information about objects that can be used to distinguish objects. For example the database may include general information regarding an object e.g. such as a computer and additionally information regarding a specific computer e.g. a model number details or technical specifications of a specific model etc. . Each object may include information in the database including an object name object details object distinguishing characteristics etc. or a tuple space for objects that can be accessed. Each object may further include information in the database in an ordered list for example. In further examples the database may include a global unique identifier GUID for objects identified in the database e.g. to enable distinguishing between specific objects and the GUID may be associated with any characteristics or information describing the object. Thus a robot may be configured to access the database to receive information generally distinguishing objects e.g. a baseball vs. a computer and to receive information that may distinguish between specific objects e.g. two different computers .

The database may be accessible by all robots through the cloud or alternatively directly accessible by all robots without communication through the cloud . The database may thus be a shared knowledge base stored in the cloud . Within examples the robots may share information through the cloud and may access the database . In some examples the shared database may include information shared across social networks.

Social networking technology may be used as a convenient way to connect and foster relationships with friends family and business colleagues. In practice a typical social networking service may have many members or nodes and may store profile data for each member including data that defines connections or interrelationships between the member and various other members of the service. In particular the connection data may define for each member one or more social network groups each including one or more other members with whom the member is connected. The social networking service may then allow members to share information data content and the like with other members of their social network group s in a computer implemented virtual environment. For instance through interaction with the social networking service a member may conveniently receive social network updates posted by other members with whom the member is connected and may view profile information such as connections of those other members.

Once an account is established with a social networking service one or more social network groups may be created by adding connections to other accounts and organizations. The manner in which these connections are added however may vary from social networking service to social networking service. For instance some social networking services operate in a symmetric manner in which a member may submit a request to friend or add to the member s social network group a connection with a specified party and the social networking service may then invite that party to become a connection in the member s social network group and adds the requested connection if the party accepts the invitation. In other examples other social networking services operate in an asymmetric manner in which a member may submit a request to follow a specified party and the social networking service may then add to the member s social network group a connection with that party without formally inviting and receiving an acceptance from the party.

As shown in the example first party device includes a communication interface a user interface a processor and data storage all of which may be communicatively linked together by a system bus network or other connection mechanism .

Communication interface may function to allow the first party device to communicate with access networks and or transport networks so as to facilitate calling social network interaction and implementation of example methods described herein. For instance the communication interface may include a chipset and antenna arranged for wireless communication with a radio access network such as a radio access network RAN that may provide connectivity with one or more other entities such as to facilitate calling and or social network interaction. Alternatively or additionally the communication interface may include a telephone or Ethernet interface arranged to couple with a landline or wireless connection that provides connectivity with one or more transports to similarly facilitate calling and or social network interaction.

User interface may function to allow the first party device to interact with a first party such as to receive input from the first party and to provide output to the first party. As such the user interface may include input components such as a keypad or keyboard a touch sensitive panel a microphone and a video camera and the user interface may include output components such as a display screen and a sound speaker.

Processor may comprise one or more general purpose processors e.g. microprocessors and or one or more special purpose processors e.g. digital signal processors or application specific integrated circuits . Data storage may include one or more volatile and or non volatile storage components such as magnetic optical flash or organic storage and may be integrated in whole or in part with processor .

As shown the data storage of the example first party device includes program logic and reference data .

Program logic may take the form of machine language instructions or other logic executable or interpretable by the processor to carry out various first party device functions described herein. By way of example as shown the program logic may include an operating system and one or more application programs installed on the operating system. Distributed among the operating system and or application programs may then be program logic for providing calling functionality social network interaction functionality and functions specific to example methods described herein.

As shown for instance the application programs may include one or more social networking applications each arranged to interwork with a respective social networking service. Operating system may include logic specific to the methods described herein. Alternatively these functions may be distributed in different ways.

Reference data may include social network connection data communication activity data and a personal address book data . Connection data may be maintained and managed by the social networking applications and for each social networking application corresponding with a social networking service may specify the connections in each of one or more social network groups defined for the first party in that social networking service. Each social network connection may be specified by connection data and may include respective identifying information such as a social networking username or the like to identify the party with whom the first party is connected in the social network.

Communication activity data may be maintained and managed e.g. by a server or server module to provide a record of individual communications such as any current communications and any past communications involving the first party. This communication activity data may take the form of a typical communication log listing sent communications received communications communication type communication content a time and or date of the communication etc. Each time the first party device engages in or is the subject of a communication or communications attempt the operating system may update this communication activity data to indicate the additional communication activity. By reference to this communication activity data it may thus be possible to determine an extent to which the first party has engaged in communication activity with the second party so as to trigger the additional features of example methods described herein.

Personal address book data may take the form of an address book that lists various contacts such as people or organizations that the first party might chose to contact. The personal address book may include for each contact a set of contact data such as name address phone numbers e mail addresses and the like and the operating system may make the personal address book accessible via user interface to enable the first party to look up contact information when desired.

In some cases the personal address book data may contain some of the first party s social network connection data. For instance data may be added to a contact in the personal address book data an indication of whether the contact is a member of the first party s social network group for each of one or more social networking services. Thus it may be possible to refer to the first party s personal address book as a way to refer to the first party s social network connection data. However social network connection data may be distinct from mere contact data as the social network connection may relate to connections provided and managed by a social networking service.

As shown in the example social networking server includes a network communication interface a processor and data storage all of which may be communicatively linked together by a system bus network or other connection mechanism .

Network communication interface may function to allow the social networking server to communicate with various other network entities and end user devices such as social network members through one or more connections. For example the network communication interface may comprise an Ethernet network connection module.

Processor may comprise one or more general purpose processors e.g. microprocessors and or one or more special purpose processors e.g. digital signal processors or application specific integrated circuits . And data storage may include one or more volatile and or non volatile storage components such as magnetic optical flash or organic storage and may be integrated in whole or in part with processor . As shown data storage may include program logic and reference data .

Program logic may take the form of machine language instructions or other logic executable or interpretable by the processor to carry out various social networking server functions described herein. For instance the program logic may be executable to carry out general social networking server functions including maintaining and managing member connections and interactions for instance. Further the program logic may include logic specific to implementation of example methods described herein. Reference data may then include profile data for each member of the social network including for each member definitions of one or more social network groups and for each social network group connection data specifying social network connections defined for the member.

In addition for the method and other processes and methods disclosed herein the flowchart shows functionality and operation of one possible implementation of present embodiments. In this regard each block may represent a module a segment or a portion of program code which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process. The program code may be stored on any type of computer readable medium for example such as a storage device including a disk or hard drive. The computer readable medium may include a non transitory computer readable medium for example such as computer readable media that stores data for short periods of time like register memory processor cache and Random Access Memory RAM . The computer readable medium may also include non transitory media such as secondary or persistent long term storage like read only memory ROM optical or magnetic disks compact disc read only memory CD ROM for example. The computer readable media may also be any other volatile or non volatile storage systems. The computer readable medium may be considered a computer readable storage medium for example or a tangible storage device.

At block the method includes determine if a first party and a second party are connected. The first party and or the second party may be robotic devices individual users business entities etc. The first party and second party may be connected via a social network or other network structure that may facilitate communication between the first party and the second party.

In some examples the first party and or the second party may be connected to the social network via a first party device and or a second party device e.g. when the first party or second party is a user business entity etc. . In such examples the first party or second party may interact with or otherwise be associated with a first party device or a second party device that may facilitate the respective first party or second party in being able to connect to the social network. Example first party devices and or second party devices may include a robotic device or other computing device such as a cellular telephone smartphone personal computer personal digital assistant etc. The first party device and or the second party device may include one or more of the components in . In examples where the first party or the second party may be a robotic device or computing device the first party may act as the first party device and or the second party may act as the second party device.

Within the social network the first party may be connected to the second party. The process of determining if the first party is connected to the second party may be performed by analyzing each social network that the first party and or the second party is part of independently or by grouping one or more of the social networks together and analyzing the grouped social networks. Each social network may include social network data that is associated with a party e.g. the first party and or the second party . This social network data may be stored at the party associated with the social network data on a social networking server or on any number of other servers for example.

Social work data may be represented by a sociogram or other data construct that may be used to visually or programmatically represent connections or interrelationships between one or more parties. The connections or interrelationships between the parties may be symmetric or asymmetric. A symmetric connection may generally represent a connection where both the first party and the second party have mutually agreed to connect to one another. This may be the result of the first party requesting to connect to the second party and the second party granting the request for example. On the other hand an asymmetric connection may represent a connection that is formed when a single party requests a connection. For example an asymmetric connection may occur when the first party requests to connect to the second party and no confirmation reciprocal request or grant from the second party is required to effectuate the connection. The determination of whether the connections or interrelationships within a social network are symmetric or asymmetric may depend on the respective social network for example.

Sociograms and the data associated therewith may be used to represent one or more relationships between the first party and the second party. In embodiments these relationships may be specific to or centered around the first party and or the second party. For example the relationships may include friends family colleagues followers of the first party and or the second party etc. Thus as an example a friend relationship may indicate that the connected parties and or the connected party s robots are friends with one another. However in some embodiments the relationships may not be specific to the party but rather focus on common interests opinions business fields travel locations etc. that may be shared by one or more parties. For example the relationship connecting the first party and the second party may be that both the first party and the second party work in the technology industry. Similarly the relationship may be that both the first party and the second party belong to the same political party receive the same newsfeed and tend to read articles from the same websites for example.

In some embodiments the process of determining if the first party and the second party are connected may be performed by the first party device performing a look up in a database having social network connection data to determine if a connection between the first party and the second party exists. Moreover in some embodiments the determination process may include the first party device sending a query to a server having connection data and the server performing a look up to determine if a connection between the first party and the second party exists. An example server may include the social networking server having social network connection data stored in a database. In some embodiments the database used to perform the look up may include additional data associated with the connections including if the connection is a symmetric or asymmetric connection the type of relationship if any between the first party and the second party a duration of the connection a history of changes that have occurred with the connection including additions modifications deletions etc.

If the first party and the second party are not connected to one another via a social network then at block the method may include restrict access. In embodiments the access restriction may include restricting all access to any data associated with the first party and or the second party. Optionally the access restriction may include restricting access to that data that the first party and or the second party has requested e.g. via privacy settings . In further examples data that falls under one or more of the social network s default privacy settings may be restricted.

The process of restricting access may be performed by a server such as a social networking server . The server may include program logic e.g. program logic which may receive data that the first party is not connected to the second party. The program logic may also receive data from the server indicating what if any data associated with the first party may be shared with or restricted from one or more second parties groups etc. The program logic may use the received data to restrict or otherwise limit the second party from accessing data associated with the first party.

At block the method may include send connection query. In an example the connection query may be initiated by the second party and sent to a server e.g. social networking server . The server may then send the query to the first party which may respond to the query by accepting or denying the connection. In embodiments the connection query may include a request by the second party e.g. via the second party device to connect to the first party. However in embodiments the request may be from the first party e.g. via the first party device to connect to the second party.

The first party e.g. via the first party device or second party e.g. via the second party device may accept the request to form a symmetric connection or relationship. Optionally the request may automatically be granted to form an asymmetric connection. In some embodiments the social network and or first party may have rules that define what requirements if any the second party should meet prior to allowing an asymmetric connection to be formed. If a connection query is not accepted e.g. a symmetric or asymmetric connection is not formed then the method may end without connecting the first party and the second party.

If the connection query is accepted and or if the first party and the second party are already connected to one another then at block the method includes determine access level. In embodiments the access level may be associated with a party group etc. and may indicate the amount and or type of access the party has to data associated with the first party. For example the access level may indicate parties within a group have access to a first subset of the data associated with the first party but not to a second subset of data associated with the first party. The access level may also be used as a mechanism for the first party to limit the amount and or type of data that may be available to the second party. Moreover the access level may limit the second party s ability to add delete and or revise data associated with the first party.

In some embodiments the first party may set or otherwise define the access level. This access level data may be stored in a database and associated with the first party the second party the social network as a whole etc. In further embodiments the access level may be set or otherwise defined based on the relationship between the first party and the second party. This relationship may be defined by the sociogram and may be used to restrict access based on one or more groups that the first party and or the second party may be part of the degree of association or separation between the first party and the second party the similarity and or overlap in interests between the first party and the second party etc.

In an example the access level may be based on a degree of separation between the first party and the second party. The degree may be defined by the sociogram. For example a first degree may indicate a first party s symmetric connection. A second degree may indicate one or more parties connected to the first party s symmetric connections but not symmetrically connected to the first party for example. Similarly a third degree may indicate one or more parties connected to the second degree connection but not to the first party s symmetric connection. The more tenuous the connection the more limited the access level may be. In some embodiments there may be a maximum degree of connection or an indication that no connection exists between two or more parties for example. While symmetric connections have been used for illustration purposes asymmetric connections or a combination of asymmetric and or symmetric connections may be used to define the degree of separation between a plurality of parties.

In some examples the access level may be used to restrict the second party s ability to i read data associated with the first party ii write data to an account page display etc. associated with the first party iii modify data associated with the first party iv delete data associated with the first party v read write modify and or delete data associated with any of the first party s connections. In embodiments an account may be representative of an account the first party may have with one or more social networks. A page may be a unique area that may be associated with one or more social networks and may also be associated with the first party for example. Thus a page may include an area within the social network or a social network website. A display may broadly include information that may be shown to one or more parties via an output device for example.

In some examples a second party may be limited to what first party content the second party can view or read. The content may be limited based on the type of connection e.g. symmetric or asymmetric the degree of separation the group the second party is associated with e.g. friends family colleagues etc.

The data that is read written modified deleted etc. may be part of the first party s profile second party s profile a combination of the first party s profile and the second party s profile etc.

In embodiments the data may include data that is specific to the first party or to the second party. For example the data may include data that the first party e.g. via a first party device has written or otherwise added or associated with the first party s account page display etc. The data may also include data that the first party has written or otherwise added to a second party s account page display etc. For example the data may include a post a video a link a quote a picture of a finished project a recipe a set of instructions etc. that the first party added to the first party s account. The data may also include reminders dates notes etc. which may be readable only by the first party for example. The data may be stored in a database and associated with the first party and or the second party for example. The database may be located on a cloud server first party device second party device etc.

In embodiments the data may also or alternatively include data that may be associated with the second party such as a post a video a link e.g. a hyperlink a quote a picture or image of a finished project a recipe a set of instructions etc. that the second party added or otherwise associated with the first party s account. This may include a message or a picture that the second party sent to the first party. The data may also include a command that the second party sent to the first party and or data that the second party added wrote modified deleted etc. to the second party s account. In embodiments the data may be further described as primary data e.g. data originating from the first party and or secondary data e.g. data originating from the second party. 

As an example the first party may be a robot that has its own page in a social network. The robot may perform a task in the real world such as cleaning a room and take a picture of the completed task e.g. using a camera sensor . The robot may post e.g. via a server the picture of the completed task to the robot s page and may also post the instructions that the robot used to complete the task to the page. A second party such as a second robot with its own page may view e.g. read the picture and or instructions and comment e.g. write data to the page on the picture and or instructions. Depending on the access level the first party and or a third party may read the second party s comment add a comment in response to the second party s comment modify the second party s comment and or delete the second party s comment for example.

The ability of any party to read write or otherwise modify data may vary based on a number of factors including the amount of read write or modify control the first party social network etc. gives to the second party. For example in some embodiments the ability of the second party to write data may be associated with the second party s ability to control content associated with the first party wherein the content may be text images audio video executable instructions etc. For example if the first party is a human user and the second party is a robot the robot s write control may be limited based on whether the robot is owned and or operated by the human user owned by a friend or family member of the human user owned by a connection of the human user is a connection of the human user etc. In some examples the ownership of a robot may be represented in the social network by designating the robot as a subpage e.g. a unique area in a social network that may be associated with a page identified link or relationship etc. The relationship between human users and robots may be modeled using any cardinality such as one to one one to many many to one or many to many for example.

In some embodiments the ability of a party to read write modify delete etc. data may depend on the frequency at which the data is written how many parties are writing data the time of day the location of the first party and or the first party s user the location of the second party and or the second party s user the group or type of connection between the first party and the second party first and or second party preferences social network rules and or regulations etc. In an example the first party or the social network may set permissions that always allow one or more second parties to write data or never allow one or more second parties to write data. Optionally the access may be limited based on the time of day. Thus for example the second party may be restricted from writing data late at night or early in the morning when the first party or a user associated with the first party may be asleep.

Similarly access may be limited based on the date. For example a second party may be restricted from reading writing modifying and or deleting data to a first party account when the first party is unavailable to monitor the data associated with the first party s account. Thus for example access may be restricted when the robot first party is being repaired or upgraded and the robot first party is unable to monitor the account. Further when a relationship exists between the robot first party and the robot first party s owner then the restrictions of the owner may be imputed to the robot first party.

Access may also or alternatively be restricted based on a location of the first party and or the second party. The location may include public or private locations and may vary based on additional factors such as a context associated with the location. For example data obtained by the first party while in a location designated as private e.g. a bedroom or a bathroom or designated as having confidential information may be restricted from being accessed by the second party. Moreover in embodiments the first party may be restricted from writing or otherwise adding data associated with a location to the first party s account.

Context may be used in conjunction with or independently from other factors to determine access levels. Example contexts may be based on a tone of a conversation e.g. if a party is arguing key words in a conversation e.g. if a party is discussing finances a surprise party etc. parties located nearby or involved in the conversation e.g. if a party is meeting in secret etc. Contexts may be defined by the first party the second party the social network etc.

In an example a public location may be a shopping mall. Typically the robot first party may take pictures of purchased objects while at the mall and post the pictures to a webpage for second parties to comment or review. However in some contexts such as when the robot first party is with an owner shopping for a birthday present the robot first party may refrain from taking and posting pictures or may restrict the intended recipients access to the pictures. The restriction may be permanent temporary indefinite pending an event e.g. the owner giving the recipient the present etc.

In further embodiments access may be restricted based on the group or type of connection between the first party and or the second party. For example an owner may take pictures of a night out with friends. The owner may instruct the robot to upload the pictures to the owner s account and or to the robot first party s account and limit access to the pictures based on the group of friends that are in the pictures. Thus the party may restrict access to the pictures based on whether the party is in the group. In further examples the owner may place a restriction on the picture such that copies or subsequent versions of the pictures may only be viewed or otherwise accessed by the parties in the group.

Referring back to at block the method includes analyze party data. The amount of data available for analysis may be correlated with the access level. The data may be analyzed by a cloud server social network first party device second party device etc.

As an example a server may analyze data associated with the first party and or second party. This may allow the server to learn characteristics of the first party and or the second party likes and or dislikes of the first party and or the second party preferred activities of the first party and or the second party what groups the first party and or the second party is associated with what connections the first party and or the second party has what interactions the first party has had with the second party and or the third party what interactions the second party has had with the third party etc. In embodiments this learning may be performed using any number of machine learning taxonomies including supervised learning unsupervised learning semi supervised learning reinforcement learning etc. for example.

At block the method includes determine first party behavioral expectation. A behavioral expectation may be associated with a social norm. Thus a behavioral expectation may be based on a pattern of behavior expected within in given situation and or within a particular group degree of connection etc. The pattern of behavior may broadly include implicit or explicit rules that a group may use for appropriate and or inappropriate values beliefs attitudes behaviors etc. The rules may define an action for example.

The process of determining a first party behavioral expectation may be performed by a processor located at a server cloud first party device etc. The determination may include for example the server sending a query to a behavioral expectation database which may include information associated with one or more behavioral expectations of the first party second party etc. In response to the query an analysis may be performed of the behavioral expectation data associated with the first party and a determination may be made of the first party s behavioral expectation. The determined first party behavioral expectation may be sent to the sending device e.g. the server cloud first party device etc. 

The determination of the first party s behavioral expectation may be based in whole or in part on the party data analyzed at block . Similar to the analysis of block any number of machine learning taxonomies including supervised learning unsupervised learning semi supervised learning reinforcement learning etc. may be used when determining or otherwise analyzing the first party s behavioral expectation. The frequency at which the first party s behavioral expectation is determined may vary based on a predetermined or random amount of time the happening of an event etc.

In an example the server may determine or otherwise analyze data associated with the first party. The data may include pictures of a spaghetti dinner that the robot first party made at a certain time on Thursday night for example. The data may also include the recipe used to make the spaghetti dinner. The secondary data may include comments from one or more second parties such as if the second party likes or dislikes the recipe suggested changes to the spaghetti sauce videos on how to make garlic bread to accompany the spaghetti commands instructing the robot first party to say bon appetit or take a bow etc.

The server may determine a behavioral expectation by analyzing data associated with the first party. Based on the analysis the server may determine that the first party has dinner at the same time every night makes a spaghetti dinner a certain percentage of the days in a week or month is most likely to make spaghetti on Thursdays frequently uses the posted recipe etc. for example. The server may also determine that a certain percentage of symmetric connections and or asymmetric connections like the garlic bread video and or posted variations of the recipe for the robot first party to make for the human owner.

The server may use the data determinations made from the analysis of the data etc. to determine a behavioral expectation associated with the first party. This behavioral expectation may be for example that the first party will make a spaghetti dinner because it is a Thursday evening. The behavioral expectation may also be that the first party will consider or give weight to the recommendations of second parties within a certain group while giving little or no weight to the recommendations of second parties within other groups. In some examples the weight may vary based on a number of factors including the group or degree of connection of the second party if the second party is a symmetric or asymmetric connection a degree of similarity between the first party and the second party e.g. as measured by the overlap in each party s likes and or dislikes etc.

In some embodiments the server may determine a behavioral expectation based on data obtained from the first party or first party device. This data may be indicative of a preferred behavioral expectation associated with the first party. The preferred behavioral expectation may be a specific or relative preference that the first party or the owner of the first party has over one or more other behavioral expectations. An example of a specific preference may include the first party indicating that that the first party likes dinner served promptly at a specific time. An example of a relative preference may include the first party indicating that the first party prefers a first thing or action over a second thing or action. Thus a relative preference may indicate that the first party prefers pasta over rice cleaning the table right after dinner instead of 20 minutes after dinner etc.

In further embodiments behavioral expectations may be added deleted confirmed modified etc. by the first party and or by the owner of the first party. For example a robot first party may determine that the behavioral expectation is for the robot to make a spaghetti dinner on Thursday evenings. However the owner of the robot first party i.e. the one eating the dinner may determine that the owner does not want a spaghetti dinner every Thursday. Thus the owner may indicate the owner s dislike of the robot first party s behavior. Moreover the owner may indicate a favorable approval of the time that the dinner was ready but correct the robot first party s table place setting based on the number of people at dinner. The added deleted confirmed modified etc. behavioral expectations may be communicated via an oral command to the robot by a user interface that may facilitate communication between the owner and the robot by making a comment on the owner s or the robot first party s page by adjusting the robot first party s page or profile by adjusting the owner s page or profile etc. In embodiments comments changes or the like that are made to the owners page and or profile may be shared with the owner s robot and or a page associated with the robot for example. Further the robot first party may adjust or otherwise change the robot first party s behavioral expectation to reflect the owner s preference.

The server may determine the preferred behavioral expectation associated with the first party and identify at least one of i an action ii a spoken word iii a written word and iv a vocalization based on the preferred behavioral expectation. The identified action spoken word written word and or vocalization may occur in response to the determined or received behavioral expectation. Thus for example the server may identify that the behavior expectation is for the robot first party to clean the table after dinner to ask the robot first party s owner if an after dinner coffee or tea is desired textually or pictorially display drink options prepare a drink according to a selection received from the owner and make a beeping sound when the drink is complete.

At block the method includes determine second party behavioral expectation. The determination of the second party s behavioral expectation may be based in whole or in part on the party data analyzed at block . Similar to the analysis of block any number of machine learning taxonomies including supervised learning unsupervised learning semi supervised learning reinforcement learning etc. may be used when determining the second party behavioral expectation for example. The frequency at which the second party behavioral expectation is determined or otherwise analyzed may vary based on a predetermined or random amount of time the happening of an event etc.

In embodiments the process of determining a second party behavioral expectation may be similar to the process of determining a first party behavioral expectation. Thus for example the process may performed by a processor located at a server cloud second party device etc. which may send a query to a behavioral expectation database. The behavioral expectation database may be the same or different database that stores behavioral data associated with the first party. In response to the query an analysis may be performed of the behavioral expectation data associated with the second party and a determination may be made of the second party s behavioral expectation. The determined second party behavioral expectation may be sent to the sending device e.g. the server cloud first party device etc. 

In an example the server may analyze data associated with the second party. Data associated with the second party may include a video that the second party posted on the second party s page showing how a robot can make a pasta casserole and garlic bread. The data may also include a post e.g. a message on the first party s page suggesting the first party try the casserole. Secondary data associated with the second party may include comments from the robot first party the owner of the robot first party third parties etc. indicating that the pasta casserole looks very good asking for instructions e.g. robot executable instructions to make the recipe suggesting changes to the recipe etc.

The server may use the data determinations made from the analysis of the data etc. to determine a behavioral expectation associated with the second party. For example the server may determine that the behavioral expectation is for the second party to try new recipes and suggest recipes to the second party s symmetric connections. The server may also determine that the behavioral expectation is that a certain percentage of parties that try the second party s recipes like the recipe. However the server may also determine that the behavioral expectation is not to use the second party s robot implementable instructions but rather to use a set of robot implementable instructions posted on the second party s page by a third party for example.

In some embodiments the second party and or the owner of the second party may add delete confirm modify etc. the behavioral expectation in a manner similar to that discussed above in reference to the first party.

At block the method includes compare first party and second party behavioral expectations. In particular the server cloud social network first party device second party device etc. may compare one or more of the behavioral expectations associated with the first party to one or more of the behavioral expectations associated with the second party. In embodiments the comparison may be used to rank or otherwise determine what behavioral expectation is most acceptable frequently followed liked etc. The ranking may be performed based on the first party s and or the second party s group symmetric connections asymmetric connections social network etc. In embodiments the ranking may be indicative of the behavioral expectation that is most popular or widely accepted within the group symmetric connections asymmetric connections social network etc.

The comparison of the behavioral expectations may be further utilized to cause the server cloud etc. to recommend a behavioral expectation to the first party. For example the server may compare the behavioral expectation of making garlic bread to accompany the spaghetti dinner with the first party s behavioral expectation of not preparing garlic bread and suggest and or query the user about preparing the garlic bread.

At block the method includes modify behavioral expectation. The modification may be performed by a server or the first party device for example. In embodiments the modification may include modifying the behavioral expectation associated with the first party to match the behavioral expectation associated with the second party. Optionally the modification may include modifying the behavioral expectation to match a preferred behavioral expectation that may be received from the first party the owner of the first party device tec. Moreover the modification may include modifying the behavioral expectation associated with the second party or a third party based on the behavioral expectation of the first party for example. In embodiments the behavioral expectation of the social network groups within the social network symmetric connections asymmetric connections etc. may be used for purposes of modifying the behavioral expectation of one or more parties. The modification may be performed by a server cloud first party device second party device etc.

The modification process may utilize the data analyzed at blocks and . Furthermore the modification process may utilize data obtained from comparing the first party s behavioral expectation to the second party s behavioral expectation. In embodiments the server may notify the first party about the modification behavioral expectation before or after the modification is performed and may also allow the first party to respond to the modification e.g. via the first party device . Thus the server may notify the first party that garlic bread will be served with the spaghetti dinner. The first party may respond with feedback to affirm the modification cancel the modification enter a new or alternative modification etc. In embodiments the server may learn from the feedback and use the feedback when analyzing the first party s behavioral expectation second party s behavioral expectation etc.

The social network page of may be associated with a robot first party. The robot first party social network page may be an independent or stand alone page that is not affiliated with or controlled by another party. Optionally the robot first party social network page may be a subpage of one or more owner pages or robot pages. The subpage may optionally inherit data behavioral expectations privacy settings etc. from the owner or other robot. In an example multiple parties may own and or have control over the robot first party and therefore have control of all or part of the robot first party s social network page .

The social network page of includes a variety of data including groups a news data feed second party posts first party posts instructions pictures video etc. All or part of the data in may be logged or otherwise stored in a database e.g. activity data database and associated with the first party. The logged data may be maintained indefinitely deleted after a predetermined time has elapsed deleted upon the happening of an event etc. Example events may include a certain amount of data logged a predetermined number of posts the first party terminating an account etc. In some embodiments the log may be unique to the first party and or shared amongst a plurality of parties e.g. when the parties are associated with the same owner . All or part of the logs may be restricted based on access level the social network s privacy policy user preference etc.

The robot first party may have a number of symmetric and or asymmetric connections. Each connection may belong to one or more groups such as a family group friend group colleague group etc. The groups may be created by the robot first party the second party social network owner other robots etc. In some examples the robot first party may add new connections to or delete connections from one or more groups .

The process of adding and or deleting connections from one or more groups may include an initial determination of the connection s access level. If a connection does not exist has timed out from inactivity has had the connection terminated by the first party and or the connected party etc. then the robot first party may delete the connection. If the robot first party and the second party are connected the server cloud etc. may analyze the robot first party s data the second party s data a third party s data etc. to identify what group the second party should belong. The analyzed data may be used to determine a behavioral expectation as to what group the second party is associated. The determination may be compared to the group that the second party is currently associated with and if needed may be used to modify the group that the second party is associated with for example.

As an example the first party may include the second party in the family group. The first party may analyze the second party s groups and determine that the second party includes the first party in the friends group instead of the family group. The first party may also or alternatively compare other connections in the first party s family group to connections in the second party s family group to determine if the first party and the second party are family. The analysis may indicate that the owner of the first party is a family member of the second party however the robot first party is not itself a family member of the second party. Accordingly the first party robot may determine if the behavioral expectation is to include the owner s family in the family group or to include the owner s family in the friends group. In some embodiments the robot first party may make this determination by analyzing groups associated with other connections e.g. the third party and determine the behavioral expectation of those connections. The server may compare the robot first party s behavioral expectation of including the owner s family in the robot first party s group to the second party s behavioral expectation of including the owner s family in a friends group. Based on this comparison the server may modify the behavioral expectation of the robot first party such that the owner s family is associated with the friends group. This modification may include the robot first party server cloud social network etc. deleting the second party from the family group and adding the second party to the friends group. Optionally this modification may include the robot first party modifying permissions of the group associated with the second party.

The robot first party social network page may also include a news data feed . The data in the news data feed may be added by the robot first party the owner of the robot first party the second party the social network etc. The type of data included in the news data feed may be based on the behavioral expectations of the first party connections of the first party e.g. the second party the social network etc. For example the social network may indicate that the behavioral expectation is to include birthdays of connections in the news data feed . However an analysis of one or more of the connections may indicate that if there is a surprise birthday party then the behavioral expectation is to keep the surprise birthday party and or anything surrounding the surprise birthday party secret from the owner of the first party. Likewise if a friend of the owner is planning the surprise birthday party and that friend has a number of the same friends as the owner then the server robot first party etc. may determine that the behavioral expectation is to notify the owner s friends of the upcoming party but not the owner s work colleagues.

Robots and or human users e.g. owners may add delete modify etc. data associated with the robot first party s social network page . The data may include any number of actions and or comments including second party posts first party posts instructions pictures video etc.

As an example it may be the robot first party s owner Adam may be celebrating a birthday and the robot first party Robot X may be planning a birthday party for Adam. The robot first party may allow all of Adam s friends and or the robot first party s friends to see the details of the birthday party. One of Adam s friends may have a robot Robot Y that notices that it is Adam s birthday that Adam is a good friend of Robot Y s owner and that Robot Y s owner has a behavioral expectation of baking a cake for birthday parties. Based on this data Robot Y may post a comment or suggestion that the robot first party bake a cake for Adam.

The robot first party may receive the second party post and determine if the behavioral expectation associated with the robot first party is for the robot first party to bake a cake for Adam s birthday. In making this determination the robot first party may analyze and or otherwise interpret data associated with the owner the owner s actions etc. The data may be based on information obtained via one or more social networks based on real world objects and or events etc. Thus for example the robot first party may identify the real world existence of chocolate sprinkles on Adam s table a mixer on Adam s kitchen counter etc. The robot first party may also analyze social network data associated with the number and or origin of likes the second party post received from connections in the social network. The robot and or social network may combine this social network information with the real world information to determine that the behavioral expectation is to bake a cake for Adam s birthday party.

In embodiments the robot first party connected parties social network etc. may rank comments and or instructions that are posted to the robot first party s social network page . The rank may be indicative of the level of acceptance associated with a behavioral expectation. Moreover in examples the rank may influence or cause the robot first party to modify the robot first party s behavioral expectation. Thus if the rank associated with chocolate cake is more favorable than the rank associated with red velvet cake then the robot first party may determine that the behavioral expectation is to bake Adam a chocolate cake with chocolate sprinkles for his birthday.

The robot first party may make a first party post indicating that the robot first party is searching for a chocolate cake recipe. One or more parties may comment on the first party post and offer instructions indicate a like or dislike for the choice of chocolate cake etc. The robot first party may reply to and or delete one or more of the comments and or instructions. Moreover in embodiments the robot first party server cloud social network etc. may reconsider the behavioral expectation e.g. based on the comments and or instructions received from the parties and cause the behavioral expectation to be modified based on the reconsideration.

The robot first party social network page may also include instructions . The instructions may be added by the second party or other connection the robot first party s owner the social network etc. The instructions may include instructions that are executable by the robot first party or may include a link to stored instructions that may be executable by the robot first party. In embodiments the robot first party may accept or decline to perform one or more instructions on the social network page .

In an example the second party may be a human user Betty who notices that it is Adam s birthday and instructs the robot first party to sing happy birthday to Adam. The robot first party may execute the instruction automatically or may analyze the instruction to determine if the behavioral expectation is for the first party to execute the instruction for example.

The analysis of the instruction may be performed by determining a behavioral expectation associated with the instruction . In some embodiments the analysis may be performed by querying log data associated with the robot first party the robot first party s owner connections in the first party s sociogram connections in the owner s sociogram etc. to determine if and to what extent the instruction has been performed if the owner liked or disliked the executed instruction issues that may have occurred during execution of the instruction etc.

As an example the server may analyze the robot first party s robot connections to determine if any of the connections have executed the instruction of singing happy birthday and the circumstances surrounding the execution of the instruction . This analysis may include how frequently the instruction was executed the lag time in executing the instruction when to execute the instruction etc. Based on the analysis the server may determine that the behavioral expectation is to execute the instruction up to a certain number of times per day when the robot first party s owner is not otherwise predisposed e.g. watching a movie talking on the telephone sleeping etc. . Thereafter the server may send instructions to the robot first party that may be executable by the robot to perform the action of singing happy birthday.

In yet further embodiments the robot first party may post pictures and or video of a completed or ongoing instruction. The pictures and or video may be available in real time. For example the robot first party may have found a chocolate cake recipe and executed instructions for baking a chocolate cake. The robot first party may have created a video while executing the instructions and posted the video on the robot first party s social network page for others to view and comment on. Parties connected to the robot first party may view the video in real time or upon completion of the executed instructions. In examples parties viewing the video in real time may add instructions and or comments to the robot first party social network page such as to add frosting to the chocolate cake. The robot first party may determine the behavioral expectation associated with the instructions and or comments and act accordingly. Thus for example if it is determined that the behavioral expectation is to add frosting to cakes upon completion then the server may search for instructions for making frosting and or frosting a cake and send the instructions to the robot first party along with an indication that the frosting instructions should be executed after the cake is baked but before adding the chocolate sprinkles.

The robot first party the owner of the robot first party connections of the robot first party etc. may add pictures to the first party during or upon completion of the instructions. Thus for example the robot first party may add pictures of the final baked cake and or pictures of the robot first party making the cake. The robot first party s connections may comment and or add instructions based on the pictures such as to add candles to the cake for example.

In embodiments the actions executed by the robot first party may be included on the robot first party s social network page by posting a video of the actions posting pictures of the actions being performed posting step by step descriptions of the actions posting a summary of the actions etc. For example the robot first party may post a video of the robot first party playing a chess game against the robot first party s owner . Optionally or additionally the robot first party may post each move as the move occurs or a series of moves after the moves have occurred. In embodiments a second party may view the posted actions and comment and or instruct the robot first party to take a responsive action for example. The robot first party may receive the instruction and analyze behavioral expectations associated with the action. Based on the analysis the robot first party may execute instructions for performing the action.

As an example the robot first party may begin playing the chess game against the robot first party s owner . To determine what chess move should be made first the server may analyze opening chess moves that have been performed in the past by the robot first party robot first party s owner a connection of the robot first party or robot first party s owner etc. The server may also determine a behavioral expectation associated with the opening chess moves. This behavioral expectation may be to begin by moving a chess piece to a specific location. The robot first party s owner may respond in turn by moving a chess piece. In examples the server may analyze the robot first party s move and the robot first party s owner s move by comparing the sequence of moves to a log of prior moves performed in prior games between the robot first party and robot first party s owner moves performed in games with a second party etc. Based on the analysis the server may determine that the next move or action the robot first party should make is to move another or alternative chess piece. The server may send the robot first party instructions to implement the move.

In yet another example the second party may view the actions between the robot first party and the robot first party s owner and instruct the robot first party to make a move and or refrain from making a move. The second party may optionally instruct the robot first party to make a different move. The server may cause the robot first party to pause while the server analyzes the behavioral expectation associated with the proposed move. In embodiments the server may reconsider the behavioral expectation in light of the second party instruction and or a third party instruction and if the behavioral expectation has changed the server may modify the behavioral expectation associated with the robot first party and instruct the robot first party to perform the action that is associated with the modified behavioral expectation for example.

In some embodiments one or more weights may be associated with behavioral expectations. The weights may be indicative of an amount of influence the party has in determining the behavioral expectation associated with the first party and or any other party. For example when the second party suggesting that the robot first party perform a move associated with a chess grandmaster the server may associate a higher relative weight to the party s instruction than to an instruction received from a different party who may have a logged history of losing chess games.

In further embodiments the robot first party robot first party s owner server cloud social network etc. may restrict one or more parties from providing commands and or otherwise controlling the robot first party . The restriction may be based on the group that the party is associated with the type of action the party is requesting a log of multiple dislikes associated with the party s actions a permission level associated with the party etc.

It should be understood that arrangements described herein are for purposes of example only. As such those skilled in the art will appreciate that other arrangements and other elements e.g. machines interfaces functions orders and groupings of functions etc. can be used instead and some elements may be omitted altogether according to the desired results. Further many of the elements that are described are functional entities that may be implemented as discrete or distributed components or in conjunction with other components in any suitable combination and location.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope being indicated by the following claims along with the full scope of equivalents to which such claims are entitled. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

Since many modifications variations and changes in detail can be made to the described example it is intended that all matters in the preceding description and shown in the accompanying figures be interpreted as illustrative and not in a limiting sense.

