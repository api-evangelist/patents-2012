---

title: Enhanced copy and paste between applications
abstract: Enhanced copying and pasting between applications includes capturing information about open applications including a screenshot of each of the open applications shown in a viewable area of the open applications; in response to receiving a copy command while the user is interacting with a first application, presenting the screenshots of the other open applications to the user for selection; in response to the user selecting one of the screenshots corresponding to a second application, displaying visual content segments from the second application; in response to receiving a user selection of two or more of the visual content segments, copying the selected visual content segments; and inserting the selected visual content segments into the first application such that original spatial relations between the visual content segments from the second application are maintained when the visual content segments are inserted into the first application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08949729&OS=08949729&RS=08949729
owner: International Business Machines Corporation
number: 08949729
owner_city: Armonk
owner_country: US
publication_date: 20120613
---
In computer parlance the phrases copy and paste typically refer to commands that enable a user to transfer material such as text data files or objects from a source such as a page of a document to a destination such as another page of the document. The user first selects the material and then activates the copy command to create a duplicate instance of the material. The copied material is then temporally saved in a clipboard. The user places a cursor in a different position and then activates the paste command to transfer the material from the clipboard to the position where the paste command is issued. This operation is typically used with a graphical user interface that uses pointing devices such as a computer mouse or by a drag and drop interaction for example.

The copy and paste commands may also be used to transfer material from one application to another application. However copying and pasting between applications can be cumbersome for the user. To illustrate consider the example where a computer user has opened a document editor a browser an e mail application and that the document editor is currently in focus. If the user desires to transfer data from the e mail application to the browser the user must first change context from the document editor to the e mail application copy the data from the e mail application and then return back to the document editor to paste the copied data.

With conventional cut and paste commands the user may linearly select a first second and third elements from the source but when this data is pasted to the destination application the elements may be inserted into the destination application either in a top down or left right layout. Consequently the user must then edit the pasted data into a form that fits the destination s purpose. For example the user might have to move the pasted elements to the right location and or within certain elements or delete content such as a header or footer for instance. The context switching between applications coordinating and editing of the inserted data requires steps which lead to extra work to produce a quality product.

Accordingly a need exists for an improved method and system for copying and pasting between applications.

Exemplary embodiments disclose a method and system for enhanced copying and pasting between applications. Aspects of the exemplary embodiment include capturing information about open applications including a screenshot of each of the open applications shown in a viewable area of the open applications in response to receiving a copy command while the user is interacting with a first application presenting the screenshots of the other open applications to the user for selection in response to the user selecting one of the screenshots corresponding to a second application displaying visual content segments from the second application in response to receiving a user selection of two or more of the visual content segments copying the selected visual content segments and inserting the selected visual content segments into the first application such that original spatial relations between the visual content segments from the second application are maintained when the visual content segments are inserted into the first application.

The present invention relates to methods and systems for enhanced copying and pasting between applications. The following description is presented to enable one of ordinary skill in the art to make and use the invention and is provided in the context of a patent application and its requirements. Various modifications to the preferred embodiments and the generic principles and features described herein will be readily apparent to those skilled in the art. Thus the present invention is not intended to be limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features described herein.

The exemplary embodiments provide methods and systems for enhanced copying and pasting between applications. The exemplary embodiments provide a software module executing on a computer that coordinates capturing segmenting and inserting visual context from one application into another application. Advantages include an improved user experience and reduced user context switching between multiple applications. In addition the exemplary embodiments enable developers and users to selectively capture content segments when copying and pasting into an application while reducing the need to edit the content once the content is inserted into the other application.

During operation opening and running the software applications App 1 through App N may display objects such as text video images and icons in a window view or page on a display screen . Example types of applications may include a web browser a word processor or document editor a spreadsheet a presentation application and the like. The application that a user of the computer is currently interacting with is said to be the active application or the application that is in focus. Periodically a user may wish to copy material from one application to another.

According to an exemplary embodiment an enhanced capture and insert ECI module is provided that enables the user to copy and paste material between applications in a more efficient manner. The ECI module is configured to insert into a first application visual content copied from a second application with minimal need for the user to switch context between the applications . In one embodiment the ECI module may either interact with or bypass traditional clipboards that are used to implement conventional cut and paste commands.

In one embodiment the ECI module may be implemented as a standalone application or as a plug in for the application . In one embodiment the ECI module includes a graphical user interface GUI and a variety of templates . In one embodiment the GUI includes a copy and paste toolbar that may be displayed within at least one of the applications to enable the user to invoke enhanced copy and paste commands. The ECI module utilizes the templates for aiding in segmenting material to be copied from the other application into visual context as explained further below. In response user input that invokes an enhanced copy command from the toolbar the GUI may display a user interface element such as a flipbook that shows a screenshot taken for each of the open applications . The flipbook allows the user to select one or more of the visual context for automatic pasting into the application from which enhanced copy command was invoked.

Although ECI module is shown as a single component the functionality provided by the ECI module may be implemented as more than one module or may be incorporated into an application or the operating system .

The computer may exist in various forms including a personal computer PC e.g. desktop laptop or notebook a tablet smart phone a set top box a game system and the like. The computer may include modules of typical computing devices including input output I O devices . Examples of typical input devices may include keyboard pointing device microphone for voice commands buttons touch screen etc. and an example of an output device is a display screen . The computer may further include computer readable medium e.g. memory and storage devices e.g. flash memory hard drive optical disk drive magnetic disk drive and the like containing computer instructions that implement the application and an embodiment of ECI module when executed by a processor.

A data processing system suitable for storing and or executing program code includes at least one processor coupled directly or indirectly to when one or more memory elements through a system bus. The memory can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

The I O devices can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

As an alternative embodiment the system may be implemented as a client server model where a website or application offers the enhanced copy and insert capability as part of a web solution e.g. a web editor.

The process may begin by the ECI module capturing information about open applications including a screenshot of each of the open applications shown in a viewable area of the open applications block . Upon startup the ECI module may query the operating system to capture contextual data i.e. a list of titles and a screenshot of open applications that record visible items displayed on the display screen . In one embodiment the ECI module may obtain the screenshots from the operating system or other screen capture software. Further the process of capturing the visual context data may occur upon a context change in each application and or on demand of the user.

In response to receiving a copy command while the user is interacting with a first one of the applications the ECI module present the screenshots of the other open applications to the user for selection block . The presentation may be initiated in response to the user clicking on a user interface mechanism such as a button or toolbar that the GUI of ECI module displays within one or more of the open applications . While interacting with the application the user may click on the toolbar to begin the enhanced copy and paste process.

According to one aspect of the exemplary embodiment in response to the user clicking on the insert button the ECI module may present the visual context data from the other open applications such as the title and screenshots by displaying the visual context data in a user interface element. The interface element is displayed for user selection and copying of the visual context data from one of the other applications . In one embodiment the ECI module may place the most recently accessed applications in front of the user interface element to present the most likely candidates for copying. In addition the ECI module may capture the content of open tabs in the applications.

In the exemplary embodiment the user interface element is implemented as an electronic flipbook having at least one page showing the visual context data of the open applications. Another implementation for the user interface element may include a selection list with a preview panel. In this embodiment the flipbook may be displayed as a window having a series of pages that the user may cause to turn or flip where the title and screenshot for each application is shown on a separate page of the flipbook . In another embodiment the flipbook may be implemented such that the titles and screenshots of multiple open applications are shown on a page of the flipbook .

Referring again to in response to the user selecting one of the screenshots of a second application the ECI module displays visual content segments from the selected screenshot block .

In one embodiment the ECI module captures the visual context including borders of elements comprising visual content from the applications in the flipbook by finding one of the templates that best defines a layout for each of the applications . The templates may be a defined layout or style that identifies logical blocks shapes or segments which define the borders of the visual content. If a template is found that matches a layout of the application within a predefined threshold ECI module applies a template style to the layout of the screenshot whereby the segments are defined. The ECI module may store and retrieve layouts associated with a particular application so as to not repeat the finding of the correct layout.

If a matching template cannot be found then the ECI module searches for edge boundaries in the screenshot. In one embodiment the ECI module may use CSS and HTML style artifacts in order to determine edge boundaries. If the edge boundaries can be found then ECI module describes the edge boundaries to the layout of the application or browser. The ECI module manipulates the visual style of the application in order to artificially generate a series of visual borders. This would be done out of sight of the user and the system may present the discovered segments or most logical segment or layout to the user. The borders may be found using image scanning or computer vision algorithms. Further the system may scan the underlying markup for key identifiers such as an ID of a footer or header or table which are typically in the markup of the HTML and may be presented in various degrees of resolution. If the ECI module is unable to find edge boundaries then the ECI module may present the user with predefined layout segments or wireframes which may be selected and applied to the screenshot of the selected application . The ECI module then displays the segments edge boundaries or wireframes for user selection as shown in . In an alternative embodiment the process of capturing the visual context comprising visual content from the applications may be performed as part of step .

Referring again to in response to receiving a user selection of two or more of the visual content segments the ECI module copies the selected visual content segments block . In one embodiment the user may select the content segments within the window in which he is interested by clicking on the content segments with a mouse. Alternatively rather than clicking on the content segments the user may also select the content segments freehand e.g. a range or lasso selection and the user may select more than one segment. In a further embodiment the ECI module may further breakdown the segments from an image of the application window to generate sub segments in response to a user input such as a double click. Further any generated layout may be shared with any third party.

This is ECI module may be configured to use any template style automation or both to break down and make the selection easy for the user application. Geometric based determination of segments is a visual determination that may be ideal for legacy applications. Object based determination of segments may be ideal for layouts that correspond to a set of nodes or OLE objects which are not part of the host application. Also a visual breakdown of the segments may further be used.

In a further embodiment the ECI module may be configured with rules or policies that restrict copying of specified content segments or sections of the application. For example predefined rules may include omitting a segment restricting a segment to include an attribution such as a watermark and or allowing the copying of all segments. Finally the ECI module may be configured to highlight sections of the application can be copied. The highlighting may be implemented using style manipulation overlays or coloring of the rich client application.

In response to the user selecting one or more segments ECI module may breakdown the segments by taking the geographic representation of the segment or if the user specifies the ECI module and take a text representation of the segment using optical character recognition OCR to convert the image to text rather than using the image.

Referring again to the ECI module inserts the selected visual content segments into the first application such that original spatial relations between the visual content segments from the second application are maintained when the visual content segments are inserted into the first application block .

The ECI module may be configured to use the templates to map the objects in the clipboard to where they should go in the destination document. The paste command occurs through a mixing of objects and automation APIs which may call the native clipboard or application which originates the copy paste action and inserts the corresponding elements in place. These techniques are well known in OpenOffice.org APIs Microsoft Office APIs and other technologies and need not be described in detail here.

A system and method for enhanced copying and pasting between applications has been disclosed. As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention have been described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The present invention has been described in accordance with the embodiments shown and one of ordinary skill in the art will readily recognize that there could be variations to the embodiments and any variations would be within the spirit and scope of the present invention. Accordingly many modifications may be made by one of ordinary skill in the art without departing from the spirit and scope of the appended claims.

