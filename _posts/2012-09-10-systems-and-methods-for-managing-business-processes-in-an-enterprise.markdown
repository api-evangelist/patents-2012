---

title: Systems and methods for managing business processes in an enterprise
abstract: A method for managing a business process in an enterprise includes executing a business process model, wherein executing the business process model comprises generating a plurality of business level messages associated with business level tasks, generating one or more system level messages associated with system level tasks to be performed by one or more enterprise subsystems, wherein the one or more system level messages are in a common format that is accessible by the one or more enterprise subsystems, and broadcasting the one or more system level messages over a communication channel communicably coupling the plurality of enterprise subsystems. A system includes a communication channel carrying system level messages in a generic format, a plurality of business subsystems communicably coupled to the communication channel, adapters operable to translate messages from the generic format into associated business subsystem specific formats and vice versa.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08560362&OS=08560362&RS=08560362
owner: Level 3 Communications, LLC
number: 08560362
owner_city: Broomfield
owner_country: US
publication_date: 20120910
---
The present application is a continuation application claiming priority under 35 U.S.C. 120 to utility application Ser. No. 11 760 628 titled SYSTEMS AND METHODS FOR MANAGING BUSINESS PROCESSES IN AN ENTERPRISE filed on Jun. 8 2007 which is hereby incorporated by reference herein.

Embodiments of the present invention generally relate to systems and methods for managing business processes within an enterprise. More specifically embodiments relate to a common platform enabling coordinated communication among multiple subsystems in the enterprise engaged in carrying out a business process.

Large projects involving many people and or groups who facilitate different aspects of the project are preferably managed and organized so that the project yields the requested results as efficiently and inexpensively as possible. For example in the field of network telecommunications when a client orders network service from a network service provider delivering the network infrastructure and service is typically a very involved and complex process over the life of the project. Prior systems for managing large projects such as network service provisioning often have drawbacks related to inefficiency and redundancy.

Large projects can span many months or even years and can involve many different tasks and groups. In such large projects it can be very difficult for upper level management to obtain a view of the status of the entire project at any given point in time. Some companies use work flow engines to manage projects. Work flow engines typically automate the flow of paperwork from person to person involved in the project task management via documents and so on. Although work flow engines have been fairly effective in facilitating the project tasks these systems have historically required a great deal of software and the deep involvement of the information technology group within the organization. For example specialized code would need to be developed to track the various steps in the workflow. When the workflow changed the code would need to be changed. In industries where time is critical the need to update code when any change to work flow arises is a great burden.

In implementing long term projects companies need to be able to respond quickly to changing circumstances. For example when a network service provider implements a new private line network to a business client changes may occur at various times in the project that impact various departments of the network service provider. In this example the changes may occur due to changes in client requirements or changes in assumptions such as component availability or worksite geography or zoning. Some of these changes could dictate that previously done work must be redone or previously made preparations must be reassessed. For example new types of components may need to be ordered or the network may need to be rerouted. Such changes may affect many aspects of the project such as order entry billing inventory management or engineering. At a minimum the network service provider must be able to quickly determine whether the changes can be made at all e.g. it may be too late in the process to reroute the network. If the changes can be made the company should be able to quickly determine new costs if any tasks to be reworked possible changes to downstream requirements and so on.

It is with respect to the foregoing and other problems that embodiments of the present invention have been created.

Embodiments of the present invention relate to systems and methods for managing a business process of an enterprise. More specifically embodiments provide a common communication and management platform including a communication channel communicably coupling multiple business subsystems a business process management system BPMS and a communication channel management system. In these embodiments a common language is used across the communication channel. The BPMS transmits messages over the communication channel. Business subsystems may subscribe to messages of a specified type or relating to specified subjects.

An embodiment of a method for managing a business process in an enterprise includes executing a business process model wherein executing the business process model comprises generating a plurality of business level messages associated with business level tasks. In response to receiving a business level message one or more system level messages are generated that are associated with system level tasks to be performed by one or more enterprise subsystems wherein the one or more system level messages are in a common format that is accessible by the one or more enterprise subsystems. The method may further include broadcasting the one or more system level messages over a communication channel communicably coupling the plurality of enterprise subsystems.

The communication channel may be part of an Enterprise Service Bus ESB . The method may further include accepting subscriptions from the plurality of subsystems to subscribe to system level messages related to selected subjects. Still further the method may include translating the one or more system level messages from the common format into a format that is specific to one of the plurality of subsystems. The method may further include editing the business process model based on performance or nonperformance of tasks specified by the one or more system level messages. The method may further include designing the business process model by specifying a plurality of rules and at. least one workflow. The common format may be a canonical format.

Still further the plurality of business level messages may be generated by a business process model system BPMS and wherein generating the one or more system level messages is performed by an enterprise service bus ESB . The method may further include translating one or more system level messages from associated subsystem specific formats into the common format and transmitting the one or more system level messages in the common format from the subsystems onto the communication channel. Further still the method may involve monitoring the communication channel for system level messages from the subsystems to analyze the business process.

An embodiment of a system includes a communication channel carrying system level messages in a generic format a plurality of business subsystems communicably coupled to the communication channel wherein each business subsystem generates system level messages in a business subsystem specific format and a plurality of adapters wherein each adapter is associated with one of the plurality of business subsystems and wherein each adapter is operable to translate messages from the generic format into the associated business subsystem specific format and vice versa. The system further includes a business process management subsystem communicably coupled to the communication channel and operable to execute a business process model to manage the plurality of business subsystems.

The communication channel may include one or more of an Ethernet IEEE 802.3 network and a Wi Fi IEEE 802.11 network. The system may further include a communication channel management subsystem configured to manage communications over the communication channel. The communication channel and the communication channel management subsystem may form an Enterprise Service Bus ESB . In one embodiment the communication channel management subsystem maintains subscriptions associated with the business subsystems. The communication channel management subsystem may receive business level messages from the business process management subsystem and responsively broadcast one or more system level messages onto the communication channel in the generic format whereby subscribing subsystems can receive the one or more system level messages related to subjects to which the subsystems subscribe.

Still further each of the plurality of adapter modules may be selected from a group consisting of an appliance a server computer and a gateway. Messages in the generic format may be in a canonical format. The canonical format may include a subject field specifying the subject associated with the message a sender field specifying the sender of the message a verb field specifying an action to be taken with respect to the subject and a plurality of attribute fields related to the subject and the verb. The plurality of business subsystems comprise one or more of a human resources subsystem an accounting subsystem an engineering subsystem a customer relations management subsystem an inventory management subsystem and a billing subsystem.

While the invention is amenable to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and are described in detail below. The intention however is not to limit the invention to the particular embodiments described.

Embodiments of the present invention relate to systems and methods for managing a business process of an enterprise. More specifically embodiments provide a common communication and management platform including a communication channel communicably coupling multiple business subsystems a business process management system BPMS and a communication channel management system. In these embodiments a common language is used across the communication channel. The BPMS transmits messages over the communication channel. Business subsystems may subscribe to messages of a specified type or relating to specified subjects.

In some embodiments the BPMS executes a business process model representative of the business process. In executing the business process model business level messages may be broadcast over the communication channel. As such the BPMS does not need to perform a point to point process of managing various subsystems. The BPMS can broadcast messages to all subsystems and wait for appropriate responses from the relevant subsystems. Typically the BPMS logs the time of responses from the subsystems. A response from a subsystem typically triggers the next step in the process. The times of responses can be used in generating reports. For example the BPMS may mark the time each reply is received for tracking process metrics. In some embodiments the BPMS simply ignores the payload of the messages from subsystems. In some embodiments the message payload may or may not be included in reports.

In various embodiments business process responsibilities are split between a BPMS and a common communication platform such as an ESB. In these embodiments higher level business messages are generated by the BPMS while system level messages are generated by the ESB. For example the BPMS may issue one or more business level messages and a server that manages the ESB may issue one or more system level messages in response to each business level message from the BPMS. The ESB management server typically includes a model that indicates tasks to be performed by subsystems in order to carry out a particular business level task. The system level messages may relate to one or more of the subsystems indicating what task s should be performed by the subsystems. The system level messages are transmitted over the ESB and may be received by one or more subsystems.

In some embodiments adapters are logically positioned between the business subsystems and the communication channel. The adapters translate messages from the common format to a subsystem specific format and vice versa. One or more adapters may be associated with each subsystem. In one embodiment the common message format is Extensible Markup Language XML . In addition each adapter is operable to communicate with the application programming interface API of the business application of the particular business subsystem which the adapter is associated with.

Some business process management systems use only BPMS or ESB but not both. These systems are often not ideal because BPMS and ESB are each adapted to different aspects of a business process. BPMS is typically suited for implementing and managing high level business processes whereas ESB is typically more suited for managing lower level system implementation and communication between subsystems over a bus. Some embodiments described herein employ a BPMS for managing high level business processes and a communication channel manager e.g. ESB for managing or coordinating lower level subsystem operation. In this way the BPMS does not need to be mired in details of each enterprise subsystem. Rather the ESB is operable to generate subsystem level tasks that are necessary in carrying out a business level task identified by the BPMS. Furthermore adapters associated with the subsystems provide for another layer of abstraction so that the BPMS and the ESB do not need to have the ability to communicate with each subsystem in the subsystem s native language.

Some known systems utilize a centralized broker for translating subsystem messages. These systems may be referred to as Enterprise Application Integration. In such systems enterprise subsystem messages are directed to the broker which determines which language the message should be translated into performs the translation and then sends the translated message on to the destination subsystem. The broker therefore must be capable of translating from each subsystem s language to every other subsystem s language. If another subsystem is added to the enterprise a new translation capability must be added to the broker for every subsystem in the enterprise. Thus the addition of another subsystem requires an n fold increase in the number of translation functions that need to be performed. The broker must be capable of translating from every existing subsystem language to the new subsystem language and vice versa.

In embodiments described here there is no n fold increase problem when a new subsystem is added. Because each subsystem has its own adapter the adapter is configured to translate from one common format to the subsystem s specific format and vice versa. Each adapter is capable of reading the messages in the common format from the bus regardless of which subsystem generated the messages. The common format for the system messages on the bus enables each subsystem to choose which messages it wants to read. Any message is accessible by the adapters. Messages can be read by enterprise subsystems in a general fashion or in an ad hoc fashion.

Prior to describing one or more preferred embodiments of the present invention definitions of some terms used throughout the description are presented.

If something relates to the business level it relates to a business process to be carried out by functional business groups in one or more enterprises. For example a business level message may correspond to a high level task or operation that needs to be performed in order to accomplish a step in a business process model. Business level messages may pertain to humans e.g. employees or systems in the enterprise.

The term system level relates to lower level tasks that are to be performed by enterprise subsystems in order to accomplish at least in part a higher level business task. One or more system level tasks may be performed for each business level task. For example a business level task may involve implementing a system which may require system level tasks of for example ordering of parts billing a client and or updating accounting information.

An enterprise is an organization engaged in some process. The organization may be for profit such as corporation or nonprofit such as a government entity.

A subsystem or business subsystem of an enterprise is a logical functional entity engaged in a business process of the enterprise. A subsystem may be for example a group a department or a business site.

A business process is a process carried out by an enterprise for some purpose. The business process may or may not be commercial or industrial.

A module is a self contained functional component. A module may be implemented in hardware software firmware or any combination thereof.

The terms connected or coupled and related terms are used in an operational sense and are not necessarily limited to a direct connection or coupling.

The phrases in one embodiment according to one embodiment and the like generally mean the particular feature structure or characteristic following the phrase is included in at least one embodiment of the present invention and may be included in more than one embodiment of the present invention. Importantly such phases do not necessarily refer to the same embodiment.

If the specification states a component or feature may can could or might be included or have a characteristic that particular component or feature is not required to be included or have the characteristic.

The term computer readable media is media that is accessible by a Computer and can include without limitation computer storage media and communications media. Computer storage media generally refers to any type of computer readable memory such as but not limited to volatile non volatile removable or non removable memory. Communication media refers to a modulated signal carrying computer readable data such as without limitation program modules instructions or data structures.

Exemplary subsystems include but are not limited to an accounting subsystem a billing subsystem a sales and or order entry subsystem customer relations management CRM system a network inventory management subsystem and a human resources subsystem . The subsystems may be geographically distributed at multiple physical locations or sites or the subsystems may be commonly located at one physical site. For example a large enterprise may have human resources subsystem located in one state or country and one or more of the other subsystems located in another state or country. As such the network and the communication channel may or may not be geographically distributed among multiple locations.

The subsystems include multiple employees or contractors and computing systems or devices for carrying out tasks associated with the subsystems . The computing systems typically include applications and data related to the tasks and activities of the associated subsystem. For example the accounting subsystem may include a number of accountants and staff along with computers executing accounting software to manage the accounts of the enterprise throughout a business process. The types of computing devices in a subsystem can include for example server computers desktop computers terminals laptop computers handheld computers cell phones or any combination thereof.

With further regard to application programs that may be used by the subsystems as just one example the accounting subsystem may use Financial Applications from Oracle . As another example the billing subsystem may use Kenan from CSG Systems . The sales and or order entry subsystem may use for example Siebel from Oracle . The network inventory management subsystem may use Granite from Telcordia . The human resources subsystem may use JD Edwards Enterprise One from Oracle or GSA s Comprehensive Human Resources Integrated System CHRIS . Of course other business applications may be used in any of the subsystems . In addition the enterprise may include other subsystems than are shown in which may employ their own application specific programs.

As mentioned above the various computing devices within a given subsystem communicate with each other using a language specific to the given subsystem . The language refers to the protocol message format message structure and vocabulary that are used by the applications systems and devices within the subsystem. The language used within one subsystem may be different from the language used by another subsystem. For example a Granite inventory management application use by the inventory management subsystem will use a different language than the language used by a Financial Application used in the accounting subsystem

The illustrated embodiment enables communication between different subsystems by providing adapters that support a common communication platform for the different subsystems. Each adapter is logically located between the communication channel and a subsystem . Each subsystem may have one or more adapters associated with it. The adaptors perform translation operations to translate messages from a subsystem specific format to a common language format and vice versa. In one embodiment the adapters transmit and receive messages over the communication channel in the common format. Each adapter is operable to communicate with an application programming interface API that is specific to the business application used by the subsystem associated with that adapter. For example for inventory subsystem that uses the Granite inventory management application the corresponding adapter communicates with the Granite API. In this manner the specific API command signatures parameters and protocols of each subsystem are transparent to the other subsystems .

The translation and API interfacing capabilities of the adapters are discussed in further detail below. Adapters may be implemented with for example and without limitation network appliances server computers or gateways. In some embodiments adapters are configured to receive specified messages according to subscriptions. As such a given adapter may receive some or all of the messages transmitted over the communication channel .

The enterprise network and the communication channel can be composed of for example any combination of an Ethernet IEEE 802.3 network or a Wi Fi IEEE 802.11 network. It should be understood that the invention is not limited to Ethernet or Wi Fi. In some embodiments the data communicated over the communication channel is in the form of messages that are formed from packets or datagrams. Any given message can be sent to a particular address or to a broadcast address whereby all subsystems can receive the message. Broadcasting messages can be particularly useful in managing business processes of the enterprise. Typically although not necessarily the interactions between the subsystems are event driven. For example a subsystem may take certain actions in response to an event.

A communication channel management subsystem monitors and manages the communication channel . The communication channel management subsystem typically enforces a selected message exchange pattern MEP enforces a security model on the communication channel and can route and or transform messages. In this regard the communication channel management subsystem may be configured with a subsystem model. This model enables the communication channel management subsystem to associate business level messages from a BPMS discussed further below with system level messages for the enterprise subsystems. Thus for example when the communication channel management subsystem receives a business level message from the BPMS the communication channel management subsystem can determine what system level messages need to be sent over the channel in response to the business level message. In this fashion subsystem level details do not necessarily need to be known to the BPMS but can be transparent to the BPMS .

In addition the communication channel management subsystem receives and manages one or more subscriptions associated with the subsystems . The subsystems each may subscribe to messages on the communication channel of particular types or pertaining to particular subjects. To illustrate the inventory management subsystem may subscribe to messages that relate to inventory. The communication channel management subsystem ensures that any messages related to inventory are routed to the inventory management subsystem

In accordance with various embodiments broadcast communication and point to point communication can be used. Broadcast communication typically involves one sender sending a message to many recipients or ad hoc recipients. Point to point communication generally involves one sender sending a message to one recipient in a pro forma fashion. The broadcast approach serves as the basis for asynchronous communications which directly enables system scalability. The point to point approach is the basis for synchronous deterministic communication.

In one embodiment the communication channel and the communication channel management system form an enterprise service bus ESB . One example of a commercially available ESB is Tibco s BusinessWorks however the invention is not limited to this particular ESB.

With further regard to adapters the adapters enforce a common language on the communication channel . As mentioned above each adapter is operable to translate messages from the format specific to the adapter s associated subsystem into a common format that is recognized by all adapters . Similarly each adapter is operable to translate messages received from the communication channel from the common format into the format that is specific to the adapter s associated subsystem . Thus for example the adapter can translate from the common format into a message format used by an order entry application in the order entry subsystem . An exemplary embodiment is illustrated in .

In an adapter includes a subsystem interface a translator and a channel interface . The subsystem interface and the channel interface may both include application programming interfaces for enabling application programs operating on other computers to communicate with the adapter . The subsystem interface receives and sends messages in subsystem specific format from and to an associated subsystem in the enterprise respectively. The subsystem interface is adapted to use the API or APIs that may be specific to one or more business applications executed by the associated subsystem. Subsystem specific formatted messages sent to the subsystem may be sent to an identified server in the subsystem. The channel interface receives and sends messages in the common format from and to the communication channel respectively. In one embodiment the channel interface sends the common formatted messages by broadcasting them over the communication channel . Using the channel interface the adapter monitors the communication channel for messages that pertain to specified subjects that are relevant to the associated subsystem or subscribed to by the associated subsystem.

The translator of the adapter translates messages from the subsystem specific format into the common format and vice versa. In one embodiment the translator receives the subsystem specific message from the subsystem interface and converts the message into another message formatted according to the common language used on the communication channel. The common language format may be a generic format readable by all adapters . Similarly the translator receives the common formatted message from the channel interface and converts the common formatted message into another message formatted according to the subsystem specific language used within the subsystem associated with the adapter . In one embodiment the translator translates sub system specific formatted messages into an Extensible Markup Language XML format. Table 1 below illustrates an exemplary common format that may be used for order entry messages 

The common format shown in Table 1 is accessible to any of the enterprise subsystems . Adapters associated with the subsystems make it possible for any of the subsystems to read messages from the bus even if the messages were not generated specifically for them. For example the inventory management subsystem could read an order entry message like that shown in Table 1 even though the inventory management subsystem uses the Granite subsystem. For example the adapter of the inventory management subsystem may be configured to read messages off the communication channel that relate to billing as indicated by shown in the common format of Table 1 above. Of course adapters can be configured to read messages related to any subject or only a selected subset of subjects.

In one embodiment the common language of the communication channel uses enterprise data objects EDOs . An exemplary embodiment of an EDO is illustrated in . The EDO is one example of a common message format. As such for example the information of the common format shown in Table could be included in an EDO. In this embodiment the EDO is an XML object that includes a number of fields.

In another embodiment and more generally the EDO fields include a subject field a verb field a sender field and one or more attribute fields . The subject field includes a brief description of the subject of the EDO . An exemplary subject may be Inventory . The verb field indicates an action performed with respect to the subject . An exemplary verb may be Reserve Cisco Router Model 7500 . The sender field indicates the sending party typically one of the subsystems of the enterprise. The attributes may further clarify the message. By way of example but not limitation attributes may include parameters provide alternatives indicate a time deadline for response or indicate a manner of response. For example continuing with the present example an alternative may be Reserve Cisco Router Model 7200. 

In one embodiment the format of EDOs corresponds to TMF Telemanagement Forum standards. In this embodiment the TMF defines or sets forth guidelines for a canonical format for EDOs that are sent over the bus. Translating messages to and from the canonical format can be logically divided into two categories syntactic translation and semantic translation. Of course the adapter interacts with subsystem specific applications through the vendor specific APIs to facilitate the communication of translated messages to the subsystem.

A business process management system BPMS manages the business process of the enterprise in an automated way. In general the BPMS executes a business process model. During execution of the business process model the BPMS generates business level messages which may or may not correspond or result in system level tasks to be carried out by one or more of the subsystems . One particular embodiment of a BPMS is Savvion s BusinessManager 7.0 . The BPMS uses business process models that represent the business processes of the enterprise. The BPMS includes one or more interface applications for use in creating and editing business process models and then executing the business process models . In the embodiment illustrated the BPMS includes a model editor and a business process management server . The model editor includes a user interface whereby users in the enterprise can create and edit the business process models . As is discussed further below a business process model may be created or edited through a model editor .

In some embodiments users with little or no special software knowledge are able to use the model editor such that there is no need to rely on the Information Technology group of the enterprise whenever a change needs to be made to the model . In general the business process model captures the manner in which a business process should be performed. For example tasks can be assigned to subsystems and deadlines can be specified for associated benchmarks. The business process model may be specified before a business process is started and then updated as more is learned about the business process while it is being performed or things change. For example a rule discussed further below may change regarding how information must be securely stored. In such a case management can use the model editor to change the rule to satisfy the new requirement.

In some embodiments of a BPMS the model editor includes a graphical user interface GUI through which users can create the business process model . The user can create or edit a graphical model that can be compiled and executed. For example through the GUI a user can drag and drop icons in a graph to create or update the business process model . The BPMS can then execute the business process model .

A business process model includes for example business rules or rulesets and workflows . Business rules set forth definitions or constraints related to the enterprise. For example a business rule may be that an upper level manager must authorize purchases over 5000. Another business rule may be that contract workers cannot be hired for a particular task or in a particular subsystem. Yet another exemplary business rule may specify a certain engineering protocol must be carried out when implementing a private line network in accordance with Occupational Safety and Health Administration OSHA regulations. As yet another example a rule may be that particular financial information be stored separate from other information and or stored in a secure manner such that only authorized employees can access the information.

A workflow specifies the flow of tasks and documents through a work process. The workflow may specify the order in which tasks are performed and the subsystem that is to carry out each task. The workflow may specify that a particular document e.g. a purchase order or invoice or an electronic copy of the document be transmitted from one subsystem to another subsystem. For example an order for a component may be created by an engineering subsystem and sent to the inventory management subsystem.

After the business process model is created it is compiled and executed. Execution of the business process model will involve communication between the BPMS and other subsystems in the enterprise and in particular the communication channel management subsystem . The BPMS server application provides ah interface for communicating with subsystems and or the communication channel management subsystem over the communication channel during the execution of the model . Among other functions the BPMS can track the business process and trigger events or tasks in the process. The BPMS can also gather business process statistics and generate reports. Such reports may be particularly useful to upper level management trying to understand the business process. When transmitting messages BPMS server can broadcast messages onto the communication channel . In the broadcast mode the subsystems monitor for messages that concern them. For example the subsystems may use only those messages having a specified subject.

With further regard to the BPMS in some embodiments the BPMS sends and receives business level messages through an adapter . In these embodiments the BPM server application sends messages to the adapter in a format specific to the BPMS . The adapter translates the messages into a common format for broadcast over the communication channel . The common format may be a canonical format. When the adapter of the BPMS receives messages from the communication channel it translates the messages into the BPMS specific format. Generally the adapter of the BPMS will receive all messages off the communication channel .

Referring more specifically to the adapters in some embodiments the functionality of the adapters is implemented through software that is developed by personnel associated with the corresponding subsystem. The use of adapters can be appealing in some cases because the adapters can be configured and implemented into the enterprise infrastructure without change or with very little change being made to the existing subsystem infrastructure. In other words the adapters can make a transition to a common communication platform transparent to the subsystems. However in other embodiments the translating operations described as being performed by the adapters may rather be performed by a server computer router or other component that is part of an existing subsystem.

When a new subsystem is added to the enterprise it may have its own specific language and message format. As such an adapter for the new subsystem is communicably coupled to the communication channel . Typically as part of an initialization process the new subsystem will get permission from the communication channel management subsystem to communicate on the communication channel . In addition the new subsystem will register itself e.g. identify itself with the BPMS so that the new subsystem can be included in the business process models .

In another embodiment that is not shown business processes can be managed in an Internet wide fashion. To illustrate one or more functional business groups and or subsystems may reside outside the enterprise but be in communication with the enterprise via the Internet. Using EDOs or another canonical message format subsystems outside the enterprise can communicate with other subsystems. Furthermore by using a secured transmission protocol such as Secured Sockets Layer SSL the various subsystems can communicate with each other even if firewalls exist at the subsystems. In other words a canonical message format and SSL enable both inter enterprise subsystem and intra enterprise subsystem communication.

In a designing operation a business process model is designed. In one embodiment the business process model is designed by a user using a business process model editor. The model editor may be a graphical user interface through which the user can specify business rules workflows or other characteristics of the business process. In a simulating operation the business model is simulated. The simulating operation typically occurs on a stand alone computer where messages are contained to the computer so that the user can observe Performance of the model and edit the model as necessary. In a deploying operation the business process model is deployed. Deploying the business process model typically involves loading the model onto a BPMS or similar system that is in operable communication with the relevant enterprise subsystems.

In an executing operation the business model is compiled and executed. An embodiment of the executing operation is illustrated in and is discussed in detail below. Briefly the executing operation processes the steps specified in the business process model and performs the appropriate operations associated with those steps. A monitoring operation monitors the business process to determine whether steps are occurring according to the model or if variations are observed. The monitoring operation may involve monitoring the timing of responses from subsystems in the enterprise. Sometimes subsystems perform tasks in a timely fashion and other times subsystems may not perform the tasks in a timely fashion or at all. Performance or nonperformance of tasks could indicate problems with the business model a systemic problem within the enterprise or something else. The monitoring operation can document variations and or discrepancies relative to the business process model.

In an optimization operation the business process model is further optimized based on results of the monitoring operation . For example suppose the business process model had allocated 5 days for a task step involved in ordering a business service. If during execution the task step consistently takes 3 days to complete over the course of for example several months the monitoring operation records the difference in time. The optimizing operation may then edit the business process model to allocate 3 days for the task step. The optimizing operation then deploys any changes to the business process model and the algorithm continues at executing operation .

In one embodiment the issuing operation is performed by a communication channel management subsystem such as an ESB server system e.g. communication channel management subsystem . In these embodiments the communication channel management subsystem generally Identifies tasks assigned to enterprise subsystems. Examples of tasks that may be embodied in system level messages or business level messages may be for example sign off on purchase order implement Cisco routers test throughput of private line network perform accounting on month s receivables respond with order status and so forth.

In the issuing operations or the business level messages and system level messages are transmitted in either a broadcast mode or to a specifically addressed subsystem over a communication channel. In one embodiment an adapter coupled to the communication channel management subsystem uses an API of the communication channel management subsystem to obtain the task messages from the communication channel management subsystem. The adapter then reformats or translates the messages into a common format readable by other adapters on the communication channel. The messages are then transmitted over the communication channel. One or more applications of one or more subsystems receive the messages and may or may not act in response to the messages. Generally some sort of response is appropriate.

In a waiting operation the communication channel management subsystem waits for response s from the enterprise subsystems. A receiving operation receives any responses that are sent. In the receiving operation the response message s are received in the common format used by the communication channel. The message s are then translated into a subsystem specific format associated with the communication channel management subsystem by the adapter module. The adapter module then sends the message s to the communication channel management subsystem application through the API of the communication channel management subsystem application.

A logging operation logs the time of receipt of the message s for metric tracking purposes. The logging operation may involve the communication channel management subsystem notifying the BPMS that the messages have or have not been received. A generating operation which may occur at any point in the process generates one or more reports using the logged message receipt times or other information. The generating operation may occur automatically or on demand or both. Typically the generating operation is performed by a BPMS. When a response or set of responses is received from another subsystem the next step in the business process model is typically triggered. As such the algorithm returns to the issuing operation where more messages are issued as appropriate to carry out the business process model.

According to the present example the computing device includes a bus at least one processor at least one communication port a main memory a removable storage media a read only memory and a mass storage . Processor s can be any know processor such as but not limited to an Intel Itanium or Itanium 2 processor s AMD Opteron or Athlon MP processor s or Motorola lines of processors. Communication port s can be any of an RS 232 port for use with a modem based dialup connection a 10 100 Ethernet port a Gigabit port using copper or fiber or a USB port. Communication port s may be chosen depending on a network such a Local Area Network LAN Wide Area Network WAN or any network to which the computing device connects. The computing device may be in communication with peripheral devices not shown such as but not limited to printers speakers cameras microphones or scanners.

Main memory can be Random Access Memory RAM or any other dynamic storage device s commonly known in the art. Read only memory can be any static storage device s such as Programmable Read Only Memory PROM chips for storing static information such as instructions for processor . Mass storage can be used to store information and instructions. For example hard disks such as the Adaptec family of SCSI drives an optical disc an array of disks such as RAID such as the Adaptec family of RAID drives or any other mass storage devices may be used.

Bus communicatively couples processor s with the other memory storage and communication blocks. Bus can be a PCI PCI X SCSI or USB based system bus or other depending on the storage devices used. Removable storage media can be any kind of external hard drives floppy drives IOMEGA Zip Drives Compact Disc Read Only Memory CD ROM Compact Disc Re Writable CD RW Digital Video Disk Read Only Memory DVD ROM .

Embodiments of the present invention include various steps which will be described in this specification. The steps may be performed by hardware components or may be embodied in machine executable instructions which may be used to cause a general purpose or special purpose processor programmed with the instructions to perform the steps. Alternatively the steps may be performed by a combination of hardware software and or firmware.

Embodiments of the present invention may be provided as a computer program product which may include a machine readable medium having stored thereon instructions which may be used to program a computer or other electronic devices to perform a process. The machine readable medium may include but is not limited to floppy diskettes optical disks compact disc read only memories CD ROMs and magneto optical disks ROMs random access memories RAMs erasable programmable read only memories EPROMs electrically erasable programmable read only memories EEPROMs magnetic or optical cards flash memory or other type of media machine readable medium suitable for storing electronic instructions. Moreover embodiments of the present invention may also be downloaded as a computer program product wherein the program may be transferred from a remote computer to a requesting computer by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

Various modifications and additions can be made to the exemplary embodiments discussed without departing from the scope of the present invention. For example while the embodiments described above refer to particular features the scope of this invention also includes embodiments having different combinations of features and embodiments that do not include all of the described features. Accordingly the scope of the present invention is intended to embrace all such alternatives modifications and variations together with all equivalents thereof.

Contained herein is material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction of the patent disclosure by any person as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all rights to the copyright whatsoever. Copyright 2007 Level 3 Communications LLC.

