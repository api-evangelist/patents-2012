---

title: Virtual consolidated appliance
abstract: Techniques for managing network traffic in a virtual consolidated appliance so as to avoid interruptions in existing network connections during reconfiguration of the virtual consolidated appliance are provided. In one aspect, a method for operating a virtual consolidated appliance having a plurality of servers is provided. The method includes the following steps. An assignment for load balancing is computed based on a status of the virtual consolidated appliance. A reconfiguration of the virtual consolidated appliance is discovered. A new assignment is computed for load balancing based on a new status of the virtual consolidated appliance based on the reconfiguration of the virtual consolidated appliance. Existing network connections are redirected according to the assignment during the reconfiguration of the virtual consolidated appliance. New network connections are served according to the new assignment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09331891&OS=09331891&RS=09331891
owner: International Business Machines Corporation
number: 09331891
owner_city: Armonk
owner_country: US
publication_date: 20121011
---
The present invention relates to virtual consolidated appliances and more particularly to techniques for managing network traffic in a virtual consolidated appliance so as to avoid interruptions in existing network connections during reconfiguration of the virtual consolidated appliance.

A virtual consolidated appliance is a cluster of appliances that work as a single virtual appliance. An appliance can be a server blade a rack mounted server etc. To distribute workload into the virtual appliance a current solution is to have a load balancing switch in front of the cluster of appliances to distribute load across them. However with an L L load balancing switch when the administrator tries to add an additional appliance s e.g. to increase processing capacity or shut down for maintenance etc. existing network connections TCP UDP IP may reset due to the change in the load distribution to the appliances. A similar problem occurs when trying to remove appliances or disable appliances e.g. for maintenance power saving etc. .

A load balancing switch with L L context can potentially prevent this problem but adds complexity to the switching logic. Hence switching speed might suffer. Also this load balancing switch does not work well with redundant switch configuration active and hot swap since the context in active switch may not be present when it is replaced by a stand by.

Thus techniques which permit existing connections to still be served when a reconfiguration of the virtual consolidated appliance occurs would be desirable.

The present invention relates to techniques for managing network traffic in a virtual consolidated appliance so as to avoid interruptions in existing network connections during reconfiguration of the virtual consolidated appliance. In one aspect of the invention a method for operating a virtual consolidated appliance having a plurality of servers is provided. The method includes the following steps. An assignment for load balancing is computed based on a status of the virtual consolidated appliance. A reconfiguration of the virtual consolidated appliance is discovered. A new assignment is computed for load balancing based on a new status of the virtual consolidated appliance based on the reconfiguration of the virtual consolidated appliance. Existing network connections are redirected according to the assignment during the reconfiguration of the virtual consolidated appliance. New network connections are served according to the new assignment.

In another aspect of the invention a virtual consolidated appliance is provided. The virtual consolidated appliance includes a plurality of servers each of the servers comprising i a first module configured to compute an assignment for load balancing based on a status of the virtual consolidated appliance ii a second module configured to discover a reconfiguration of the virtual consolidated appliance and whereby the first module is configured to compute a new assignment for load balancing based on a new status of the virtual consolidated appliance based on the reconfiguration of the virtual consolidated appliance and iii a third module configured to redirect existing network connections according to the assignment during the reconfiguration of the virtual consolidated appliance and a load balancing switch for directing network connections to the servers configured to serve new network connections according to the new assignment.

A more complete understanding of the present invention as well as further features and advantages of the present invention will be obtained by reference to the following detailed description and drawings.

As provided above with a virtual consolidated appliance when an administrator needs to power down one machine and or add a new machine to the cluster this creates a hot swap. The problem with conventional set ups is that any ongoing sessions will be impacted. Advantageously the present techniques provide a mechanism to avoid impacting ongoing sessions and maintain existing connections during the hot swap.

The present techniques are generally applicable to any cluster of machines e.g. a cluster of servers blades appliances etc. operating as a virtual consolidated appliance. Running a cluster of machines such as multiple servers can be used to increase capacity and will appear to users as a single e.g. server with large capacity.

Load balancers may be employed to depress the workload to the multiple machines so that the workload is balanced between the machines. Using the example of multiple servers being operated as a cluster when a client tries to access the servers one possible load balancing scheme is to splay the workload based on client IP addresses. For instance client IP addresses ending in a .1 are assigned to a 1bucket client IP addresses ending in a .2 are assigned to a 2bucket etc. The buckets are then assigned to a particular port in a round robin manner. For example the 1bucket is assigned to port the 2bucket is assigned to port the 3bucket is assigned to port the 4bucket is assigned to port the 5bucket is assigned to port and so on. The ports correspond to the servers. Thus in this example three servers server server and server are present in the cluster and the ports and correspond to server server and server respectively.

See for example which illustrates this exemplary load balancing scheme. Namely as shown in multiple clients are accessing a cluster of servers. In this example three servers labeled Blade Blade and Blade are present in the cluster. The clients are identified by their IP addresses i.e. client IP addresses ending in . . .1 . . .2 . . .3 . . .4 . . . . . .252 . . .253 etc. An Ethernet switch such as the iFlow switch employed in the BLADE Network Technologies BNT available from International Business Machines Corporation uses a hash function to make bucket assignments. For instance the clients with IP address ending in . . .1 are assigned to Bucket those with an IP address ending in . . .2 are assigned to Bucket and so on. It is notable that a hash bucket assignment process is being used as an example in the description merely to illustrate the present techniques. It is to be understood that any load balancing assignment process can be used and the present techniques should not be construed as being limited to any one load balancing assignment process in particular.

The buckets are then assigned to a particular port in a round robin manner. The ports correspond to the servers. Thus those clients with a bucket assignment to port are served by server those clients with a bucket assignment to port are served by server and so on. In this case since there are 3 servers the bucket assignments proceed sequentially with every 4bucket assignment starting back with port a round robin manner . See where the bucket assignment for client . . .4 is to port .

When for instance another server is added to the cluster without turning off the appliance conventional techniques would require creating a new port e.g. adding a server to the cluster would require creating a new port . Using the above round robin assignment example the clients assigned to the 4bucket will now be directed to the new port . Prior to the addition of the new server the clients assigned to the 4bucket were assigned to port server . With regard to these clients the network connection resets since there is no existing connection. This presents a problem. However with the present techniques existing connections in this example the connections to server will be reassigned from the new server in this case new server to the previous assignment in this example server so that the connection is maintained.

Namely the situation is first examined where a server is added to the cluster also referred to herein as a scaling up scenario. As shown in this scenario begins with for simplicity two clients client in University Heights and client in Hastings accessing a server in Dobbs Ferry . Initially only server is online and all clients are hashed to buckets assigned to server . As shown in a load balancing switch maintains a table with the client IP address the hash bucket assignment and the media access control MAC of the server assignment which in this initial scenario is server Dobbs Ferry .

A second server server in Ardsley is then added to the cluster. See . As described above this addition of a new server will trigger a bucket reassignment. In the exemplary scenario illustrated in client gets reassigned to the new server Ardsley . See the updated load balancing table wherein the client is now hashed to a bucket assigned to server . shows that without the present reassignment techniques existing connections will be reset RST by server because server does not have the connection status.

As shown in however according to the present techniques any existing connections reassigned to the new server server are forwarded back to server . Thus in this scenario server Dobbs Ferry will continue to serve these existing connections and will respond to the client . As shown in any new connections labeled new from client will then be handled by the new server server . According to this integration scheme no connections are reset when a new server is added to the cluster.

Next the situation is examined where a server is removed from the cluster also referred to herein as a scaling down scenario. A server may be removed from the cluster for example for maintenance purposes. As shown in this exemplary scenario begins with the two clients used above client in University Heights and client in Hastings and two servers server in Dobbs Ferry and server in Ardsley . Client is hashed to a bucket assigned to server and client is hashed to a bucket assigned to server . See table shown next to the load balancing switch. In this exemplary scenario server is planned to go offline for maintenance.

With server offline a new hash bucket assignment is applied leaving only server in the buckets. See . As shown in without the present connection preserving techniques existing connections to server are lost TCP RST when they are sent to server because server does not have the connection status. The present techniques however employ a time out period where the administrator first announces that a server in this case server is going to go offline for maintenance for power savings the server will be allocated to another appliance group etc. Following that announcement all new connections will be handled by server . See where the updated load balancing table shows that the client is now hashed to a bucket assigned to server . However as shown in in order to ensure that no connections are reset RST when server is removed from the cluster the existing connections to server will be forwarded back to server by server . Server will only go offline when all existing connections are closed which can be detected by a traffic manager TM see description of below .

In either a scaling up or a scaling down scenario see above the present techniques beneficially enable dynamic reconfiguration for any type of virtual consolidated appliance thus minimizing or preventing existing network connection disruptions during reconfiguration thus providing seamless uninterrupted performance from the clients perspective i.e. as described above the virtual consolidated appliance appears as one single appliance to the clients to the outside world . Further implementation of the present techniques does not require any changes to existing high speed L load balancers e.g. the L load balancers do not need to maintain the flow information .

The traffic manager TM module monitors the state in its machine server and in other servers in the group. Namely the traffic manager module monitors TCP session states and as shown in shares coordinates that information with the other traffic manager modules in the group.

Based on the appliance status the traffic manager module computes hash bucket assignments for load balancing. See description of hash bucket assignments above. As shown in the traffic manager module configures the load balancing LB switch see below with the latest hash bucket assignments. The traffic manager module also configures the IPD for L forwarding to prevent TCP connection resets during reconfiguration. The methods for forwarding existing connections back to their original servers when a server is added or removed from the cluster group was described in detail above.

The IPD module determines which flow needs to be redirected L forwarding . Namely the IPD module performs L forwarding in addition to IPD s L filtering and forwarding. The IPD module provides application programming interfaces APIs for forwarding the traffic between end hosts and to virtual machines VMs . APIs permit the application traffic to be forwarded from one blade to another blade efficiently.

As shown in the virtual consolidated appliance also includes a load balancing LB switch. As provided above the traffic manager modules compute the hash bucket assignments for the load balancing switch based on the appliance status. Accordingly the load balancing switch in this embodiment uses supervised hash bucket assignment rather than automatic iFlow mode.

As described in conjunction with the description of above in one exemplary embodiment this step of computing the hash bucket assignment for load balancing is performed by the traffic manager TM module. The traffic manager module is also responsible for configuring the load balancing switch with the current hash bucket assignments see above .

Next in step a reconfiguration of the virtual consolidated appliance is discovered. As described above the reconfiguration of the virtual consolidated appliance can involve the addition of a server s to the virtual consolidated appliance see scaling up scenario and or the removal of a server s from the virtual consolidated appliance see scaling down scenario .

As described in conjunction with the description of above in one exemplary embodiment reconfiguration of the virtual consolidated appliance can be discovered by way of the appliance manager module. As provided above the appliance manager module provides a single control point for reconfiguration of the virtual consolidated appliance.

In step based on the discovery of a reconfiguration of the virtual consolidated appliance as per step a new hash bucket assignment is computed for load balancing based on the new status configuration of the virtual consolidated appliance. As provided above the new status of the virtual consolidated appliance might be that a server s has have been added to the group and or that a server s has have been removed from the group.

Again this hash bucket assignment may be performed by the traffic manager module. Step may be performed whenever a change in status of the virtual consolidated appliance is detected e.g. by the traffic manager module. Further as provided above the traffic manager is responsible for configuring the load balancing switch with the new hash bucket assignment. Thus in step the load balancing switch is configured with the new hash bucket assignment.

By way of the new hash bucket assignment in step existing network connections are redirected to the previous assigned servers during the reconfiguration in order to avoid connection reset. This concept was described in detail above in the context of a scaling up scenario and in the context of a scaling down scenario . As provided above this redirecting forwarding of existing connections may be performed by the IPD module.

With the existing network connections being taken care of so as to avoid connection reset in step new network connections are served according to the new hash bucket assignment. Again this concept was described in detail above in the context of a scaling up scenario and in the context of a scaling down scenario . As provided above in the context of the exemplary scaling down scenario provided the existing connections are redirected back to the original server i.e. the server specified in the hash bucket assignment of step and this server will only go offline once the existing connections to it are completed. In that case it is necessary to monitor the existing connections. As described above this function of monitoring the existing network connections may be performed by the appliance manager module.

Turning now to a block diagram is shown of an apparatus for implementing one or more of the methodologies presented herein. By way of example only apparatus can be configured to implement one or more of the steps of methodology of for operating a virtual consolidated appliance having a plurality of servers such as the virtual consolidated appliance of .

Apparatus comprises a computer system and removable media . Computer system comprises a processor device a network interface a memory a media interface and an optional display . Network interface allows computer system to connect to a network while media interface allows computer system to interact with media such as a hard drive or removable media .

As is known in the art the methods and apparatus discussed herein may be distributed as an article of manufacture that itself comprises a machine readable medium containing one or more programs which when executed implement embodiments of the present invention. For instance the machine readable medium may contain a program configured to compute an assignment for load balancing based on a status of the virtual consolidated appliance discover a reconfiguration of the virtual consolidated appliance compute a new assignment for load balancing based on a new status of the virtual consolidated appliance based on the reconfiguration of the virtual consolidated appliance redirect existing network connections according to the assignment during the reconfiguration of the virtual consolidated appliance and serve new network connections according to the new assignment.

The machine readable medium may be a recordable medium e.g. floppy disks hard drive optical disks such as removable media or memory cards or may be a transmission medium e.g. a network comprising fiber optics the world wide web cables or a wireless channel using time division multiple access code division multiple access or other radio frequency channel . Any medium known or developed that can store information suitable for use with a computer system may be used.

Processor device can be configured to implement the methods steps and functions disclosed herein. The memory could be distributed or local and the processor device could be distributed or singular. The memory could be implemented as an electrical magnetic or optical memory or any combination of these or other types of storage devices. Moreover the term memory should be construed broadly enough to encompass any information able to be read from or written to an address in the addressable space accessed by processor device . With this definition information on a network accessible through network interface is still within memory because the processor device can retrieve the information from the network. It should be noted that each distributed processor that makes up processor device generally contains its own addressable memory space. It should also be noted that some or all of computer system can be incorporated into an application specific or general use integrated circuit.

Optional display is any type of display suitable for interacting with a human user of apparatus . Generally display is a computer monitor or other similar display.

Although illustrative embodiments of the present invention have been described herein it is to be understood that the invention is not limited to those precise embodiments and that various other changes and modifications may be made by one skilled in the art without departing from the scope of the invention.

