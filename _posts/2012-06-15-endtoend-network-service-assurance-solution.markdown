---

title: End-to-end network service assurance solution
abstract: Disclosed herein are representative embodiments of tools and techniques for providing network service assurance. One exemplary embodiment includes a framework for network service assurance that includes a presentation layer, a service management layer, a network-infrastructure management layer, and a unified network-access layer. The unified-network-access layer is configured to receive a network request in a standard abstracted format, the network request being associated with at least one network element. The unified network-access layer also being configured to select a vendor adaptor from a plurality of vendor adaptors based on an element type of the at least one network element. The unified network-access layer further being configured to generate a vendor-formatted network request using the vendor adapter, and configured to send the vendor-formatted network request to the at least one network element.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09059939&OS=09059939&RS=09059939
owner: Infosys Limited
number: 09059939
owner_city: Bangalore
owner_country: IN
publication_date: 20120615
---
The field relates to network service assurance and in particular to an integrated end to end framework for network service assurance.

As the number of available telecommunication services have grown in today s world telecommunication service providers have expanded communications networks with more technologies to provide more services. The complexity of these communications networks can escalate as services and technologies are added. Although traditional network technologies can be used to monitor aspects of communications networks traditional technologies are limited.

In summary among other innovations techniques and tools are described herein for network service assurance. According to one aspect of the tools and techniques described herein an integrated end to end framework for network service assurance includes a presentation layer a service management layer a network infrastructure management layer and a unified network access layer. The unified network access layer is configured to receive a network request in a standard abstracted format and the network request being associated with at least one network element. The unified network access layer also being configured to select a vendor adaptor from a plurality of vendor adaptors based at least on information about the at least one network element. The unified network access layer further being configured to generate a vendor formatted network request using the vendor adapter and also configured to send the vendor formatted network request to the at least one network element.

The foregoing and other objects features and advantages of the invention will become more apparent from the following detailed description which proceeds with reference to the accompanying figures.

The framework can be an integrated end to end framework for network service assurance that has the capability to cover many aspects e.g. one more than one or all aspects of network service assurance in a reactive mode and or proactive mode for voice video and or data technologies provided by communications service providers. The framework can be end to end flexible and open and provide network service assurance using proactive and reactive network fault detection across hybrid networks and services. In some implementations the hybrid networks include wire line networks such as next generation wire line complex networks. In some implementations communications service providers can include retail broadband service providers wholesale broadband service providers local access providers carrier Ethernet service providers voice service providers and television service providers. In some implementations wire line network services can include Ethernet services broadband services virtual private network VPN services and other wire line services. The framework can perform automatic network fault detection network fault co relation and or trend based performance analysis for network fault localization to provide solutions to problems on voice data and video services provided by a network. The framework can include and provide an extensible platform for integration with open source commercial off the shelf networking tools and packages rules engines legacy systems and or other like network systems. The framework can include a presentation layer a service management layer a network infrastructure management layer and a unified network access layer . The unified network access layer can integrate with a hybrid heterogeneous network such as a next generation wire line heterogeneous network and the unified network access layer can provide capabilities for performing real time diagnostics managing proactive network events and integration with customer premises equipment CPE devices and third party systems. The service management layer can determine root causes of network service failures the impact of a network failure on network services and or recommendations for correcting or repairing the root cause of network service failures. The service management layer can perform actions by using a knowledge based service analytics engine that can recommend resolutions based in part on the type and or complexity of the network problem or network service failure. For example if a repair correction or resolution of a network service failure can be achieved automatically through configuration on a network device the service management layer can have a network request that requests the performance of a repair operation sent from the network infrastructure management layer to the unified network access layer . The unified network access layer can then transform the network request to send a vendor formatted network request to have the appropriate configuration performed on the appropriate network device. In some implementations if a resolution correction or repair can be done manually the service management layer creates one or more tickets in one or more trouble ticketing and or work flow management systems to initiate a manual repair or correction. Network infrastructure management layer can provide network event correlation network capacity analytics and repair procedures for repairing or network failures or faults. Presentation layer can provide a user interface to access the services exposed by a network such as the services of the service management layer the network infrastructure management layer the unified network access layer and or other communications network services.

The integration layer can be used to integrate the unified network access layer with upstream services such as one or more OSS systems built on one or more software platforms and or a service management layer a network infrastructure management layer and a presentation layer. The integration layer includes an integration module and an integrated extensible markup language XML based interface such as integrated XML based interface . The integrated XML based interface can be compliant with the MTOSI standard. For example the integrated XML based interface can be a web service that is MTOSI compliant and or an integration web service module. In some implementations the integration layer can communicate or be accessed synchronously or asynchronously using web services and or message oriented middlewares such as Java Message Service and the like. The integrated XML based interface can invoke an application programming interface API of the integration module . For example the integrated XML based interface can receive a network request from an OSS system or a service management layer requesting the performance of an on demand diagnostics of one or more network elements or systems and the integrated XML based interface can invoke an operation of the API of the integration module to have the requested diagnostics performed.

The integration module is an API based integration module that exposes an API to execute one or more operations that allow for operational support system OSS integration. In one example the operations that can be executed using the API exposed by the integration module can include a monitor operation a notify operation a collect statistics operation and an execute operation.

The monitor operation of the integration module in some implementations allows the unified network access layer to monitor a network and capture alarms and or traps from network and or OSS tools components and or devices. In some implementations the monitor operation allows the unified network access layer to generate a notification based on a captured alarm and or trap and the notification includes enriched data with abstracted values. In some implementations the monitor operation can be used to monitor for and or collect network performance statistics. In one implementation the monitor operation is invoked using parameters that can include entity information properties information OSS inventory information or one or more monitor rules. In one implementation the monitor operation once invoked provides an output that indicates that the outcome of the monitor operation as invoked was successful or unsuccessful.

The notify operation of the integration module in some implementations is a push operation that allows the unified network access layer to send a notification to one or more OSS systems. In one implementation the notification sent by the notify operation can be based on the processing of captured and or monitored alarms and or traps from one or more network components e.g. a device and or probe and or one or more OSS components. In one implementation the processing of captured and or monitored alarms and or traps can be done using one or more monitor rules. In some implementations the monitor operation once invoked provides output that can include entity information properties information property values information or OSS inventory information.

The collect statistics operation of the integration module in some implementations is a push operation that sends enriched abstracted performance statistics to one or more OSS systems after capturing performance data from one or more network components and or one or more OSS components using one or more monitor rules. In some implementations the collect statistics operation once invoked provides output that can include entity information properties information property values information or OSS inventory information.

The execute operation of the integration module in some implementations causes the execution e.g. a real time execution of a functionality of one or more network elements. For example the execute operation can be used to run a diagnostic test on a device and or test head. Also for example the execution operation can be used to set a property value or configuration value on a network element. In one implementation the execute operation is invoked using parameters that can include entity information properties information property value information OSS inventory information or an operation type information. In some implementations the operation type information detects the choice of functionality to be executed for a network element.

The data modeling layer of the unified network access layer can include a request handler a vendor adaptor one or more data dictionaries vendor selection module a push data handler and or a configuration module . In some implementations the data modeling layer transforms OSS data e.g. entities information properties information values information and or other OSS data in a standard abstracted format into data that is in a vendor format that can be accepted and processed by a network element that is compliant with the vendor format. Also in some implementations the data modeling layer transforms data received from a network element that is formatted in a vendor format into a standard abstracted format. In some implementations the data modeling layer uses the one or more data dictionaries to perform the transformation of data from a standard abstracted format to a vendor format or from a vendor format to the standard abstracted format. In some implementations a data dictionary of the one or more data dictionaries is used for mapping data values of the standard abstracted format to corresponding values of one or more vendor formats. In some implementations OSS inventory information can be created by the data modeling layer using a standard abstracted format for representing captured network inventory information so that OSS inventory information in the standard abstracted format can be understood by OSS systems when received. In some implementations of a data modeling layer one or more mapping rules can be used to transform OSS inventory data to vendor inventory data or vendor inventory data to OSS inventory data.

Tables 1 3 show exemplary data dictionaries that can be used by a data modeling layer. These exemplary data dictionaries are provided for explanation and other data dictionaries can also be used by a unified network access layer.

The data modeling layer includes one or more vendor adaptors . A vendor adaptor of the one or more vendor adaptors can be selected and invoked for use based on a selected network vendor and a network device that is to be communicated with using the selected vendor adaptor. For example if a network device is a modem from a vendor the vendor adaptor that is invoked can be a vendor adaptor that is configured to generate vendor formatted network requests that can communicate or interface with the modem device from the vendor. In some implementations a vendor adapter can map an identified device with a device interface standard compliant with the device and generate a vendor formatted network request so that it is compliant with the device interface standard. Respective vendor adaptors of the one or more vendor adaptors can include vendor request templates and vendor data processing modules. The vendor request templates can be used to generate or build vendor formatted network requests. In some implementations the vendor formatted network requests can be generated using the vendor request templates entity information and or operation type information. In some implementations vendor adaptors can be configured to communicate with devices from vendors that are compliant with one or more versions of the MTOSI standard and or the TR 069 standard.

The network adaptation layer of the unified network access layer can include one or more vendor request handlers and or one or more vendor watch modules . The network adaptation layer can operate reactively in a reactive mode or proactively in proactive mode. For example in the reactive mode the request handlers extract on demand data from network elements or systems. Also for example in the proactive mode the vendor watch modules subscribe to alarm and performance parameters related information from network elements or systems and collect the performance parameters related information periodically.

The network element adaptors layer of the unified network access layer includes one or more element adaptors that are used to communicate with one or more network elements e.g. devices EMS NMS probes and or test heads and or one or more custom adaptors that are used to communicate with OSS network facing components or systems such as components that are part of commercial off the shelf products provided by vendors or other network facing components. For example a custom adaptor can be used to connect or plug in OSS components that already exist on a network so that the OSS components can communicate with the unified network access layer connected to the network. The element adaptors and custom adaptors can support and communicate with network elements and OSS network facing components using one or more transport mechanisms. In some implementations an element adaptors layer can use a standard element adaptor or a custom adaptor to interface or communicate with a network element or OSS network facing component using one or more transport mechanisms compliant with the network element or OSS network facing component such as an XML based interface or a conventional remote procedure call RPC based interface. In some implementations an XML based interface can include a SOAP REST web service HTTP over XML JMS using a message provider or other XML based interfaces. In some implementations an RPC based interface can include telnet SSH Corba SNMP ICMP or other RPC based interfaces. In some implementations an element adaptors layer can use a standard element adaptor or a custom adaptor to interface or communicate with a network element or OSS network facing component by converting XML to eBXML. For example when services of a local operator s network are exposed over a business to business B2B gateway adaptors can convert from XML to eBXML which can be transported over the gateway.

The correlation engine can include rules that can determine root cause events based on one or more received network events and can correlate the information to determine an impact to the network. In some implementations the correlation engine determines an impact across one or more domains of the network using a topology model. For example if a network cable that connects two network devices fails the generated alarms for the ports of the devices and an alarm for the cable failure can be collected and sent to the correlation engine and the correlation engine can then determine from the three alarms that the root cause of the alarms is the cable failure and that the alarms for the ports were caused by the cable failure. In some implementations the correlation engine can be used to reduce the number of alarms that are forwarded to other systems of the network. For example using the information from the correlation engine alarms and network events that are collected and determined not to be indicative of root causes of network problems or failures can be filtered out and not sent to other systems or used for further analysis by other layers. In some implementations root cause information network impact information determined and or information about network events is sent from the correlation engine to the service management layer which can determine and initiate the performance of a repair action.

The capacity analytics module of the network infrastructure management layer can provide information to other network systems and layers about network capacity usage reactive feeds from network elements and or proactive feeds from network elements. In some implementations based on the information provided by the capacity analytics module the fault fix engine can provide guided actions for configuration. In some implementations the capacity analytics module can provide information regarding bandwidth capacity. For example the fault fix engine can avoid bandwidth related issues to the end user through configurations like VP VC moves using information provided by the capacity analytics module. The unified topology module can include a topology model of the network. In some implementations the topology model is logically constructed based on discovery of various network devices components and systems on the network. In one implementation the logic of the network infrastructure management layer can be implemented using rules and a rules engine.

The forecasting and trend analytics module can perform network failure or fault localization in part by determining one or more root causes and location of the one or more root causes of a network failure or fault using forecasting and or trend analytics. In one implementation fault localization can be performed in part by collecting network feeds e.g. alarms traps and or network element diagnostic information user reported problems with a network service and or other network information to be used with forecasting and trend analytics logic to determine one or more root causes of a network failure or fault. In some implementations the fault localization is performed in part by localizing the service failure through associating the network service failure with one or more identified network devices components configurations and or systems experiencing problems that are causing the network service failure. In some implementations the forecasting and trend analytics module can perform fault localization and generate fault information that includes information about one or more causes of a service failure which can include an identifier and or location on the network of a device component or service that is experiencing a problem that is causing a network service failure.

The knowledge based service analytics engine in some implementations can perform service impact analysis. For example information about a network failure or fault e.g. fault information can be received and the knowledge based service analytics engine can perform service impact analysis in part by associating the information about the network failure or fault with a service inventory of the network to determine how the network failure or fault will impact one or more network services and how the localized network failure is to be corrected or repaired. In some implementations of service impact analysis the knowledge based service analytics engine uses logic to determine if collected information such as requested network diagnostic information network feeds e.g. alarms traps and or other network feeds user reported network service problems and or fault information from a forecasting and trend analytics module indicate that there is a network failure that will impact network services. In some implementations an artificial intelligence uses network information such as fault histories fault resolutions and network behavior patterns to aid the knowledge based service analytics engine to diagnose and localize network faults. If the knowledge based service analytics engine determines that a failure can adversely impact network services the knowledge based service analytics engine can determine the manner in which the failure is to be corrected. For example the knowledge based service analytics engine can create a trouble ticket and or initiate a manual or automatic correction of the network fault. That is to say the knowledge based service analytics engine can determine a route as to how the service impacting network failure is to be corrected or repaired. In some implementations after the service impact analysis is performed the knowledge based service analytics engine can create a ticket indicating a fault e.g. a network failure in one or more trouble ticketing systems for the network and the creation of the ticket can cause the performance of an automatic or manual correction of the fault. For example information about a network service failure or fault can be sent from the knowledge based service analytics engine to a fault fix engine of a network infrastructure management layer as part of an automatic correction of a network fault or failure. In some implementations the knowledge based service analytics engine can use a unified network access layer to retrieve on demand diagnostic information from network elements and systems and in some implementations the on demand diagnostic information can be used to perform service impact analysis.

The KCI KPI based SLA management module can provide service level agreement management based on key performance indicators and or key control indicators. For example key performance indicators can be monitored and provided to inform service level agreement management. The MIS based reporting engine provides reports based on parameters and in some implementations the parameters can be configured by an end user. The service management layer can include one or more customized software adapters to interface with one or more trouble ticketing systems that can be different trouble ticketing systems with different interfaces. In some implementations the service management layer can also include customized software adapters to integrate with one or more third party systems across various domains one or more billing systems one or more workflow management systems and or other like network systems. For example the service management layer can interact with one or more billing systems using a customized software adaptor and the interaction can effect or update billing systems based on the service impact analysis of the knowledge based service analytics engine . In some implementations a service inventory module can provide information about a service inventory to the service management layer . The service management layer can include workflows and rules that can be integrated into one or more business rules engines.

The logic used by the service management layer in some implementations can be implemented using a rules engine. For example the rules engine can be configured with one or more rules such as service rules for one or more services. In some implementations the performance of the service rules are influenced by factors that can include a market type a service offering a class of service technology limitations noises in and or out of an exchange e.g. crosstalk REIN and or SHINE and other like service factors. In some implementations the rules of the rules engine can be influenced by service factors such as fault domain areas for a service pattern analysis of reactive and proactive tickets service usage tends service drop trends of an end user and or information provide from an infrastructure layer. By using the service rules influenced by service factors of the rules engine the service management layer can provide a service based diagnostics for a communications network. In one implementation the rules engine is a context based engine receiving and processing data from various network systems and initiating associated rule actions. In some implementations the rules engine can include one or more rules one or more rule sets one or more actions and one or more workflows. In one implementation a rule is applied to make a decision based on information collected and or generated by the service management layer or a network infrastructure management layer and the decision can cause a rule action to be performed. In one implementation a rule set is a collection of rules which collectively implement a decision process. A rule action in one implementation can be an event that alters the state of a process when executed. A workflow in one implementation determines control logic to derive an end result that can be achieved using rules and rule sets. In some implementations rules workflows and rule actions can be included in extensible markup language XML files that include syntax that can be dynamically loaded at run time using various features in underlying technologies. For example if Java is being used JRebel can be used to dynamically load syntax from XML files at run time. In some implementations a rules engine has an associated user interface layer that can be used to determine business rules for the rules engine. For example using the user interface layer a user can input business rules to be used by the rules engine. In some implementations the user interface layer can be used to alter a workflow to cause an on demand end result.

At fault fixing analysis is performed based at least on the fault information. For example fault information can be received at a fault fix engine from a knowledge based service analytics engine and then the fault fix engine can extract the necessary data from the fault information to perform fault analysis. In some implementations of fault analysis the fault fix engine is configured with decision making rules and diagnostic tools that are used to decide what repair procedure is to be used to correct and or repair a fault on the network. For example the fault fix engine can select and or use one or more self repair configurations to determine a repair procedure to decide what repair procedure is to be used to correct and or repair a fault on the network. At based on a repair procedure for correcting the one or more faults the one or more faults are automatically corrected at least by generating a network request in the standard abstracted format and sending the network request in the standard abstracted format to the unified network access layer. For example a repair operation of a selected repair procedure can be initiated at least by generating a network request according to a standard abstracted format that can cause the repair operation to be performed at one or more network elements and the generated network request can be sent to the unified network access layer to be processed and transformed into a vendor formatted network request that is transmitted to one or more network elements that can perform the repair operation.

With reference to the computing environment includes at least one central processing unit and memory . In this basic configuration is included within a dashed line. The central processing unit executes computer executable instructions. In a multi processing system multiple processing units execute computer executable instructions to increase processing power and as such multiple processors can be running simultaneously. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software that can for example implement one or more of the technologies described herein. A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus a controller or a network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs CD RWs DVDs or any other tangible storage medium which can be used to store information and which can be accessed within the computing environment . The storage stores computer executable instructions for the software which can implement technologies described herein.

The input device s may be a touch input device such as a keyboard keypad mouse touch screen controller pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio the input device s may be a sound card or similar device that accepts audio input in analog or digital form or a CD ROM reader that provides audio samples to the computing environment . The output device s may be a display printer speaker CD writer DVD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium e.g. a connecting network to another computing entity. The communication medium conveys information such as computer executable instructions compressed graphics information compressed or uncompressed video information or other data in a modulated data signal.

Any of the disclosed methods can be implemented using computer executable instructions stored on one or more computer readable media tangible computer readable storage media such as one or more optical media discs volatile memory components such as DRAM or SRAM or nonvolatile memory components such as hard drives and executed on a computing device e.g. any commercially available computer including smart phones or other mobile devices that include computing hardware . By way of example computer readable media include memory and or storage . As should be readily understood the term computer readable media does not include communication connections e.g. such as modulated data signals.

Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable media. The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to a particular type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computing device to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

In view of the many possible embodiments to which the principles of the disclosed invention may be applied it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather the scope of the invention is defined by the following claims and their equivalents. We therefore claim as our invention all that comes within the scope of these claims and their equivalents.

