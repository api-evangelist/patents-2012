---

title: System, method and computer program product for managing tabulated metadata
abstract: Embodiments disclosed herein provide systems and methods for managing metadata, including scalar, text, drop-down, type ahead, and tabular metadata related to digital assets. Restrictions may be set at the metadata field level to allow users of different user groups to view fields based on restriction classes. A metadata management tool may allow an administrator to restrict one or more metadata fields associated with a digital asset in a network with a restriction class. The restricted fields may be associated with one or more user groups in the network. Only users in the user groups associated with the restriction class can view the restricted fields, in addition to the digital asset and any unrestricted fields associated therewith. When searching tabular metadata, a ‘row oriented’ search function may retrieve only assets where the search criteria are matched by a single row.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08959113&OS=08959113&RS=08959113
owner: Open Text S.A.
number: 08959113
owner_city: Luxembourg
owner_country: LU
publication_date: 20120327
---
This is a conversion of and claims a benefit of priority from U.S. Provisional Application No. 61 469 508 filed Mar. 30 2011 entitled SYSTEM METHOD AND COMPUTER PROGRAM PRODUCT FOR MANAGING TABULATED METADATA which is fully incorporated by reference herein.

This disclosure relates generally to digital asset management. More particularly embodiments disclosed herein relate to a system method and computer program product for managing metadata including tabulated metadata for digital asset management systems.

Digital asset management DAM generally refers to a business process or a software tool for organizing the creation management distribution and archiving of digital assets. Specifically digital asset management may involve the creation of an archive the development of an infrastructure to preserve and manage digital assets and a search functionality that allows end users to identify locate and retrieve digital assets.

At its simplest a digital asset management system may simply involve a set of database records. Each of such database record may represent a digital asset and may contain information about that digital asset. As an example a database record may contain the name and format of an image file the date the image file was created the name of the person who created the image file and so on. In some cases the database record may include additional information such as the content of the image file.

While digital media management technologies were once used exclusively by publishing and media companies they are increasingly being incorporated into content management systems to manage other digital assets such as photos music videos animations podcasts and other multimedia content. These technological advances continue to bring challenges to business operations management. Consequently there is always room for innovations and improvements.

With the growing use of media it is increasingly important for an entity to have the ability to manage their digital assets efficiently and effectively. Within the context of this disclosure an asset may refer to a media management object having both editorial content and a description of the content properties. An asset may also be referred to as a Unit of Information UOI .

Embodiments disclosed herein provide a system method and computer program product for managing metadata associated with digital assets including tabulated metadata. In some embodiments metadata management functions disclosed herein can be implemented as part of a digital asset management system a content management system a media management system or the like.

A system may include one or more computing devices and at least one non transitory computer readable medium storing instructions translatable by the one or more computing devices to perform media management functions. At least one of the media management functions may be a metadata editor. The metadata editor may have a first component configured to provide a user with access to configure one or more metadata fields stored on the one or more computing devices a second component configured to provide security to one or more selected metadata fields and a third component configured to define access rights associated with the one or more selected metadata fields for one or more user groups. The second component may be configured to receive an instruction to apply a restriction to the one or more fields and associate the one or more fields with the restriction. The third component may be configured to receive an instruction to allow one or more user groups to the selected one or more metadata fields and associate the one or more user groups with predetermined access rights.

At least one of the media management functions may be a search function configured to search one or more types of metadata. The search function may be a keyword search function wherein searching one or more types of metadata comprises searching the one or more metadata fields to identify at least one metadata field having a keyword and returning a set of the one or more metadata fields based on access rights associated with one of the one or more user groups. The search function may be a field search function wherein searching one or more types of metadata comprises selecting one or more metadata fields based on access rights associated with one of the one or more user groups and searching the selected one or more metadata fields. The media management functions may further comprise a lookup domain function configured to provide a user with a selected list associated with at least one of the one or more fields.

A system implementing metadata management functions disclosed herein may comprise a media server and a database. The media server may be configured to store a set of digital assets and the database may be configured to store metadata records associated with a digital asset in the set of digital assets each metadata record including a set of fields. At least one of the set of fields may be configured by an authorized user or a system administrator as restrictable. A restricted field may be applicable to a particular group or groups of users in a network environment based for instance on their role or roles. A restricted field may still be searchable and a digital asset having one or more non restricted fields matching a search request may still be viewable. However the restricted field will not be viewable to the particular group or groups of users.

In some embodiments the search function may be integrated with an application programming interface and or a search engine. For example in response to a search request from a user at a client device an application programming interface may operate to filter out restricted fields that the user is not permitted to view and allow the user to view non restricted fields and any restricted field that the user is permitted to view. The user may be associated with a first group of users from which viewing of a certain restricted field or set of restricted fields is not permitted. As another example a search engine may identify from an index a plurality of metadata records containing information matching at least one search parameter in a search query. In one embodiment suppose the user is in a first group only fields that are not restricted from viewing by the first group are searched and a subset of those unrestricted fields found to contain information matching the at least one search parameter is presented to the user. In one embodiment all of the fields of plurality of metadata records are searched to find a global list of fields containing information matching the at least one search parameter. From the global list of fields only those fields that are not restricted from being viewed by the user are presented to the user.

In some embodiments the search function may implement a row oriented approach when searching against multiple fields from the same tabular metadata table that are part of an asset s metadata. Instances found by a text search engine are indexed with field instance numbers and processed to determine potential matches utilizing the field instance numbers. In this way the search function retrieves only assets where the search criteria are matched by a single row. This can be performed in real time and can provide results that are much more relevant to each particular search query.

These and other aspects of the disclosure will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. It should be understood however that the following description while indicating various embodiments of the disclosure and numerous specific details thereof is given by way of illustration and not of limitation. Many substitutions modifications additions and or rearrangements may be made within the scope of the disclosure without departing from the spirit thereof and the disclosure includes all such substitutions modifications additions and or rearrangements.

The disclosure and various features and advantageous details thereof are explained more fully with reference to the exemplary and therefore non limiting embodiments illustrated in the accompanying drawings and detailed in the following description. It should be understood however that the detailed description and the specific examples while indicating the preferred embodiments are given by way of illustration only and not by way of limitation. Descriptions of known programming techniques computer software hardware operating platforms and protocols may be omitted so as not to unnecessarily obscure the disclosure in detail. Various substitutions modifications additions and or rearrangements within the spirit and or scope of the underlying inventive concept will become apparent to those skilled in the art from this disclosure.

Software implementing embodiments disclosed herein may be implemented in suitable computer executable instructions that may reside on a computer readable storage medium. Within this disclosure the term computer readable storage medium encompasses all types of data storage medium that can be read by a processor. Examples of computer readable storage media can include but are not limited to volatile and non volatile computer memories and storage devices such as random access memories read only memories hard drives data cartridges direct access storage device arrays magnetic tapes floppy diskettes flash memory drives optical data storage devices compact disc read only memories and other appropriate computer memories and data storage devices.

Before discussing embodiments of the invention a hardware architecture where embodiments disclosed herein can be implemented is described with reference to . In network may represent a private network a public network or a virtual private network VPN . A company s intranet might be an example of a private network and the Internet might be an example of a public network. A VPN uses primarily public telecommunication infrastructure such as the Internet to provide remote users with a way to access an internal network of an organization or entity. Network might be an example of an internal network of a business entity. Various types of networks are known to those skilled in the art and thus are not further describe Network can be bi directionally coupled to a variety of networked systems devices repositories etc.

In the example shown in network comprises a plurality of computers and or machines A F. Computers A F may comprise at least a server machine and a client machine. Virtually any piece of hardware or electronic device capable of running client software and communicating with a server can be considered a client machine. As an example each of computers A F may include a central processing unit CPU at least one read only memory ROM at least one random access memory RAM at least one hard drive HD and one or more input output I O device s . The hardware configuration of computer A can be representative to other devices and computers alike in network e.g. desktop computers laptop computers personal digital assistants handheld computers cellular phones and any electronic devices capable of storing and processing information and network communication . Computer A may be a workstation. In some embodiments computer A may be configured to run Internet Explorer Safari Firefox Flash 10 or other Web browsing application s .

In some embodiments computer A may communicate with one or more server computers B F. Computers B F may implement an embodiment of a system disclosed herein and may connect to computer A in network . In some embodiments computer A may send a request to one or more computers B F. In response computers B F may send requested information to computer A and computer A may operate to cause a response to be displayed on computer A. As an example a digital asset management DAM system may be implemented on one or more computers B F for managing digital assets in network . A user at computer A may be permitted to access certain digital assets managed by the DAM system.

As discussed above there is an increasing need to manage digital assets such as photos music videos animations podcasts and other multimedia content for businesses and corporations alike. Traditionally a digital asset management system may employ database records each containing information about a particular digital asset. The term metadata generally refers to data that describes other data and can be used to summarize basic information about a file to make finding and working with particular instances of that file easier. This type of metadata may be referred to as file metadata. Author date created and date modified and file size are examples of basic file metadata. Having the ability to filter through that metadata can make it much easier to locate a specific file.

Metadata can be created manually also referred to as custom metadata or by automated information processing also referred to as system metadata . Manual creation tends to be more accurate allowing the user to input any information they feel is relevant or needed to help describe the file. Automated metadata creation may be more elementary usually only displaying information such as file size file extension when the file was created and who created the file.

Embodiments disclosed herein may be particularly useful for managing metadata associated with digital assets also referred to as asset metadata . The asset metadata including system defined metadata and custom metadata can be highly structured and can be projected into rows and columns. In some embodiments a media management system database stores properties associated with assets including content specific attributes these attributes describe most of the asset types such as text documents XML documents images layouts videos and generic multimedia objects generic attributes these properties fields include generic columns of Character Date and Numeric data types associated with each asset and predefined associations these include assignments of vocabulary control terms rights and permissions links etc. .

Referring to in some embodiments a media server may communicate with a workstation or other client computer A to provide digital assets for example audio and video content. In some embodiments computer B may function as a media server for providing streaming or downloading of audio or video content to users in or outside of network . In some embodiments computer B may operate Adobe Flash Media Server FMS Microsoft Internet Information Server IIS or Apache application to allow audio or visual content to be streamed or downloaded to computer A.

In some embodiments a media management server may communicate with media server B or workstation A to allow a user to upload modify review delete or otherwise manipulate media. In some embodiments computer C may implement a media management server. In some embodiments the media management server may operate Open Text Media Management v7.0.0 Open Text LLDS Search JBoss 4.2.2 from RedHat or Java Development Kit JDK 5.0 which may be stand alone or bundled with other applications and programs.

In some embodiments computer D may implement an Enterprise Process Server EPS and may communicate with a workstation and a database server. In some embodiments computer D may implement a User Management Server UMS . In some embodiments an EPS or UMS computer may contain a plurality of software modules or components implementing a variety of functions as well as tools. For example an EPS or UMS computer may be configured with Java Development Kit JDK 5.0 for writing applets and applications Tomcat v5.5 from Apache Software Foundation for rendering Web pages JBoss v.4.2.2 from RedHat for developing and deploying enterprise applications Microsoft Management Console v.3.0 for creating saving or opening collections of administrative tools Microsoft .NET 3.0 for programming developing and building Web services and other distributed systems Microsoft Internet Information Server IIS for building and administering Web sites search engine s and providing support for writing Web based applications that can access databases and so on.

In some embodiments a transcode server may communicate with an enterprise process server to transcode audio and video content. In some embodiments computer E may implement a transcode server for transcoding interpreting reformatting or otherwise adapting digital files so that content can be accessed or viewed on different types of playback devices. Transcoding may be performed on audio or visual files. In some embodiments computer E may include Rhozet Carbon Coder Server.

In some embodiments a database server may communicate with a media management server or an enterprise process server to store information. A database server may store information in tabulated form. In some embodiments computer F may implement a database server.

As one skilled in the art can appreciate the exemplary architecture shown and described herein with respect to is meant to be illustrative and not limiting. Further embodiments disclosed herein may comprise suitable software including computer executable instructions. As one skilled in the art can appreciate a computer program product implementing an embodiment disclosed herein may comprise one or more non transitory computer readable storage media storing computer instructions translatable by one or more processors in network computing environment . In an illustrative embodiment some or all of the software components may reside on a single computer or on any combination of separate computers.

With that in mind turning now to metadata management functions for managing tabulated metadata for digital assets in a network environment. Within the context of this disclosure tabulated metadata refers to tabular data about a digital asset in a media management system digital asset management or the like. For tabular or tabulated metadata more than one database record can be associated with a given data element of the metadata see e.g. . This allows a list of similar data items to be stored. Tabular data therefore can be useful when there is a one to many relationship between an asset and the metadata field values. For example a table of metadata titled Actors might have fields for an actor s first name last name contract number and agency. Any number of actors may be associated with the media content and the tabular or tabulated metadata would contain each field associated with each actor. Any one of the fields can be set as required for the metadata record while others can be set as being optional. In the example of Actors the first name last name and contract number may all be required fields but the agency name may be optional.

In some embodiments a media management tool may include a sophisticated search function that can ensure data found by a search engine exist in the same row or otherwise corresponds to the same record. For example suppose a table has two columns first name and last name and two rows of data. The first row may have George for a first name and Washington as a last name the second row may have Abe as a first name and Lincoln as a second name. If the user searches for First Name George AND Last Name Lincoln the user does not expect that the asset that records these names George Washington and Abe Lincoln will be returned. However text search engines will simply return all instances containing either search parameter and thus in this example will return both records. To address this issue the media management tool implements a row oriented approach to searching tabular metadata fields.

In some embodiments tabular metadata indicates that there are multiple rows in a relational database management system RDBMS table that are part of an asset s metadata. When indexing tabular metadata in a text search engine each column of the table is indexed in a separate multi valued search field. For example an asset may have tabular metadata with the columns FIRST NAME MIDDLE NAME and LAST NAME that look like this 

The desired behavior when searching against multiple fields from the same tabular metadata table is to only retrieve assets where the search criteria are matched by a single row. This row oriented approach may comprise indexing for each field instance an instance number adding an operator to merge the results from the first name search and the last name search and checking to see if the occurrences have any potential matches based on the field instance number. Thus when searching for first name William AND last name Bush against the above example tabular metadata the search function performing this row oriented searching should not retrieve this asset even though there is an occurrence of William in the first name field and an occurrence of Bush in the last name field. Since these results do not occur in the same row the asset is not retrieved. The search function can be configured to perform this row oriented searching in real time and provide results that are much more relevant to each particular search query.

In some embodiments metadata management functions may include a lookup domain function. A lookup domain provides a set of lookup values for a field that may be shared among fields for example a list of roles may be created in order to associate a role with each member of a movie production e.g. videographer director producer grip etc. . The roles are limited to a specific set forcing the user to use only the list of options provided and also gaining efficiency since the user does not have to key in the value to be specified. A lookup domain may include common lookups like Yes No defined once and shared among fields or a lookup domain may come from an external source or be programmatically determined by defining a custom plug in. A lookup domain may be cached on a domain by domain basis.

In some cases it may be desirable to have an ability to allow lookup domain values expire over time. For example a commercial product may be distributed via warehouses located in U.S. Cities e.g. New York Tuscaloosa Omaha Chicago and Denver . As the business evolves additional warehouses may be added but also some distribution warehouses may be closed. In this case an entry in the list of options must be expired. By expiring a list entry that value can no longer be associated with a product yet it can continue to be stored in a data record associated with the product asset. Thus in some embodiments the domain lookup function may be configured to allow a user to specify the life cycle of lookup domain values.

UI may be implemented as part of a media management tool. This media management tool may be configured to perform a plurality of metadata management functions including a Metadata Editor. The Metadata Editor may comprise a set of functional features that can allow an authorized user or system administrator to configure model and otherwise manage metadata in various ways. For example an administrator may define limitations including temporal limitations for metadata field values. As another example an administrator may specify that an ad campaign may be distributed to certain markets.

The Metadata Editor may allow authorized users such as an administrator to create modify and import metadata configurations for use within a media management system. In one embodiment the Metadata Editor may use a sandbox approach that is metadata configurations can be created and modified in a staged working area without impacting the current system s configuration. Administrators can make changes to the new metadata configuration save it and come back to it at a later time still without affecting the configuration currently active in the database. When the metadata editor is running it will display informational text denoting whether the configuration that is currently being edited was loaded from the database LIVE IN DATABASE or from the staged working area WORK IN PROGRESS . Changes made to the configuration are not saved to the working area until a user clicks selects the Save button. Administrators can also run a verification command to identify all errors in the new configuration. Then during an appropriately planned off hours period the administrator can initiate the process of updating the active system with the metadata configuration. This process may log all users off the system prevent new logins and complete all tasks associated with activating a metadata configuration. In the case of trying to apply a new configuration with errors in it the system may automatically revert back to the previous active configuration allowing the administrator the capability to correct any errors in the new configuration. In the case of any unintended or unexpected results not errors the system may have the capability to revert back to the previous active configuration and allow changes to the new configuration before applying it again. The applied configuration may be archived and the copy may be removed from the staged working area. The next time the metadata editor is loaded it may load the database version of the configuration.

As illustrated in a custom metadata field e.g. field can be created using Metadata Editor . Metadata Field may include configuration parameters such as ID Name Table Column Lookup Domain Restriction Groups and so on. Some of the configuration parameters may be automatically populated. For example in one embodiment Column will automatically be populated with a list of available columns for the table chosen in Table . Some of the configuration parameters may be optional. For example if Metadata Field is associated with an external data source it may be optional to select a column to store this field s value. Some of the configuration parameters may be selectable. For example an administrator may select a lookup domain for Metadata Field from a list of lookup domains perhaps defined via Lookup Domains editing function . The selected lookup domain is viewable via Lookup Domain . In one embodiment Lookup Domains editing function may implement Lookup Domain UI described above.

An authorized user or administrator may specify additional details or properties in pane . For example an administrator may indicate that Metadata Field is Enabled Editable Sortable Displayable Searchable Keyword Searchable but not Required i.e. this field does not require that a value be specified when saving new metadata for this field .

In some embodiments the system may allow an authorized user or administrator to configure a subset of the total set of metadata fields that can be searched across when a Keyword search is performed. As shown in this can be configured in the Metadata Editor through the Is Keyword Searchable property.

Some embodiments may integrate with a text search engine in which a search field may be created for each metadata field defined in the Metadata Editor. As an example the text search engine may support the creation of macros to reference a variable number of search fields using a single name. Some embodiments may leverage this feature to create a macro named SC01 for the subset of the search fields that are defined with the Is Keyword Searchable property.

In the absence of any Restricted Field definitions when a Keyword search is performed user entered search criteria are searched for in any of the fields configured as keyword searchable leveraging the SC01 macro created. For example an end user entered keyword search for the phrase white house would generate a search for 

When performing a Keyword search assets should not be retrieved based on occurrences found in fields that are restricted for the user. To accomplish this before generating the query some embodiments retrieve a list of all the fields that are restricted for the end user who is performing the search. The text search engine supports a negative field restriction where a list of fields is provided to indicate what field s should not be searched when performing a search. The text search engine also supports nested field restrictions where multiple field restrictions either positive or negative can be applied to query terms and the intersection of those restrictions is applied. Using these features some embodiments may generate a query for 

In the example of Restriction may be configured to allow an authorized user or administrator to select a restriction class to apply to Metadata Field . In one embodiment restriction classes are defined in a table one example of which is shown in . Groups may be configured to allow the administrator to apply the particular restriction class to one or more defined user groups.

For example as depicted in the administrator may select Restricted Class 1 Restricted Class 2 or Restricted Class 3 from a drop down menu for Restriction for Metadata Field . Restriction classes may be role based. For example a manager may have a different set of restrictions than an employee.

This allows security to be selectively applied at the field level. Field level security refers to a scheme for allowing private data to be part of a metadata model of a generally available digital asset without compromising privacy or security. In this context Metadata Field can be seen as an example of a restricted field.

Restricted fields are fields that have been restricted to being viewed by specified user groups. For example a digital asset may be associated with a Salary field which all user groups are restricted from viewing the Salary field except for the Human Resources HR User Group. Note the digital asset and non restricted fields associated therewith may still be viewable by various user groups subject to applicable restriction classes.

In this way a digital asset can have certain metadata fields restricted from viewing by end users who do not have the proper privilege or access rights while the content of the digital asset and other metadata associated therewith may not be restricted. This function allows an administrator to tailor what particular information fields on a digital asset a user can view and or search. In some embodiments a metadata field can be tagged as unrestricted or restricted. In some embodiments different restriction classes may be defined and a field that is tagged as restricted may be associated with a certain restriction class. This allows different access rights to fields be imposed on different user groups. For example if Metadata Field is identified as in Restriction Class A a user group cannot see that field unless the user group is given access to Restriction Class A fields. A user group that does not have the right to access this restricted field may still be able to view the content and other unrestricted fields but not able to view nor search on the metadata fields that are restricted.

A search function in an embodiment of a digital asset management system disclosed herein may filter metadata based on one or more restrictions. In some embodiments a query is performed at start up or login of the DAM system to identify all the fields to which a user has access. In some embodiments the system waits until a user requests access to a field before verifying whether the user can access the field. In some embodiments the one or more restrictions can be applied at the group level. For example when a user search query contains a search parameter pertaining to a restricted field or a keyword thereof the system can check to see what group or groups does the user belong and what field restrictions are applicable to the user s group s . A user may belong to one or more groups and all field restrictions applicable to those user groups would be applicable to the user.

In some embodiments field restrictions are stored in a database with the metadata but in a separate table. diagrammatically illustrates example relationships between a plurality of tables storing user groups field restrictions mappings between user groups and field restrictions and metadata fields .

In one embodiment the Field Restrictions table defines the restriction classes used by the media management tool to restrict fields and user groups. In one embodiment table may contain the three example restriction classes of Restricted Class 1 Restricted Class 2 and Restricted Class 3. An administrator can use an embodiment of the media management tool to edit add or delete these classes to suit. In one embodiment the Field Restrictions table contains the following columns of which only the first two may be required 

In some embodiments a check is performed on a digital asset to see if the digital asset has any associated restrictions on its metadata. If no restriction is specified the digital asset may be unrestricted and retrieval of a field does not require any check for a user. In some embodiments a default field restriction can be applied or provided when no field restriction value is selected.

In some embodiments metadata related Application Programming Interfaces APIs can take into account an identifier associated with a user and filter the restricted fields at the API level. For example an API may be configured to check whether a particular user belonging to a certain group searching for a restricted field is allowed to view that field and either block or allow the user to view the restricted field. In some embodiments a metadata editor can be configured to allow an authorized user or administrator to set field restrictions utilizing various metadata models.

Embodiments disclosed herein may provide ways of searching restricted and unrestricted fields. Searching may be field or keyword based. In field searching a user selects a field to be searched. Keyword searching may be performed across assets. In some embodiments if a user requests a keyword search that is present in unrestricted fields and also in a restricted field the system can return to the user the asset and the unrestricted fields but without the restricted field s . In some embodiments if a keyword is present only in a restricted field for an asset the user might not be able to see the asset.

In keyword searching a search may be executed across both restricted and unrestricted fields. Implementation may be performed by creating an index across all metadata fields. These metadata fields may contain various types of metadata. Example types of metadata may include scalar metadata drop down metadata type ahead metadata and tabular metadata etc. As part of the index each occurrence of a word may be indexed along with a field associated with each occurrence. As an example for a keyword search a global list can first be created of all the fields that are configured as searchable through a keyword search. The search can be qualified through a set of restricted fields. If there are any restricted fields for a given user these fields can be filtered out from the global list. In accessing the digital asset the user may view non restricted fields as well as any restricted field that the user is permitted to view but the user may not be aware of any restricted fields that the user is not permitted to view.

In some embodiments when a user initiates a keyword search the system first looks at a user identifier to determine a restriction level a restricted class in which the user resides or otherwise identifies a subset of the global list that includes only those fields searchable by the user is returned. The user is able to conduct a search and the system is able to search only non restricted fields or may search the global list and only return results for the subset. Access to the digital asset by the user may be unaffected.

As depicted in media management tool may include several components including Metadata Editor for modifying a metadata configuration. An administrator may select Field Group from Field Groups . In response Metadata Editor may display ID and name input boxes and automatically populate Available Fields and Available Tabular Field Groups with appropriate choices. The administrator may drag and drop items from Available Fields and Available Tabular Field Groups to Associated Fields and Groups or drag them back to remove items from Associated Fields and Groups as desired.

As depicted in Metadata Editor of media management tool may further include Tabular Field Groups function from which Tabular Field Group may be selected. In response Metadata Editor may display ID and name input boxes and operate to present built in entry form . Items may be added to be associated with Tabular Field Group and fields within this Tabular Field Group may be moved up or down as desired using for example toggle button .

Although the invention has been described with respect to specific embodiments thereof these embodiments are merely illustrative and not restrictive of the invention. The description herein of illustrated embodiments of the invention including the description in the Abstract and Summary is not intended to be exhaustive or to limit the invention to the precise forms disclosed herein and in particular the inclusion of any particular embodiment feature or function within the Abstract or Summary is not intended to limit the scope of the invention to such embodiment feature or function . Rather the description is intended to describe illustrative embodiments features and functions in order to provide a person of ordinary skill in the art context to understand the invention without limiting the invention to any particularly described embodiment feature or function including any such embodiment feature or function described in the Abstract or Summary. While specific embodiments of and examples for the invention are described herein for illustrative purposes only various equivalent modifications are possible within the spirit and scope of the invention as those skilled in the relevant art will recognize and appreciate. As indicated these modifications may be made to the invention in light of the foregoing description of illustrated embodiments of the invention and are to be included within the spirit and scope of the invention. Thus while the invention has been described herein with reference to particular embodiments thereof a latitude of modification various changes and substitutions are intended in the foregoing disclosures and it will be appreciated that in some instances some features of embodiments of the invention will be employed without a corresponding use of other features without departing from the scope and spirit of the invention as set forth. Therefore many modifications may be made to adapt a particular situation or material to the essential scope and spirit of the invention.

Reference throughout this specification to one embodiment an embodiment or a specific embodiment or similar terminology means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment and may not necessarily be present in all embodiments. Thus respective appearances of the phrases in one embodiment in an embodiment or in a specific embodiment or similar terminology in various places throughout this specification are not necessarily referring to the same embodiment. Furthermore the particular features structures or characteristics of any particular embodiment may be combined in any suitable manner with one or more other embodiments. It is to be understood that other variations and modifications of the embodiments described and illustrated herein are possible in light of the teachings herein and are to be considered as part of the spirit and scope of the invention.

In the description herein numerous specific details are provided such as examples of components and or methods to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that an embodiment may be able to be practiced without one or more of the specific details or with other apparatus systems assemblies methods components materials parts and or the like. In other instances well known structures components systems materials or operations are not specifically shown or described in detail to avoid obscuring aspects of embodiments of the invention. While the invention may be illustrated by using a particular embodiment this is not and does not limit the invention to any particular embodiment and a person of ordinary skill in the art will recognize that additional embodiments are readily understandable and are a part of this invention.

Embodiments discussed herein can be implemented in a computer communicatively coupled to a network for example the Internet another computer or in a standalone computer. As is known to those skilled in the art the computer can include a central processing unit CPU at least one read only memory ROM at least one random access memory RAM at least one hard drive HD and one or more input output I O device s . The I O devices can include a keyboard monitor printer electronic pointing device for example mouse trackball stylus etc. or the like. In embodiments of the invention the computer has access to at least one database over the network.

ROM RAM and HD are computer memories for storing computer executable instructions executable by the CPU or capable of being compiled or interpreted to be executable by the CPU. Suitable computer executable instructions may reside on a computer readable medium e.g. ROM RAM and or HD hardware circuitry or the like or any combination thereof. Within this disclosure the term computer readable medium is not limited to ROM RAM and HD and can include any type of data storage medium that can be read by a processor. For example a computer readable medium may refer to a data cartridge a data backup magnetic tape a floppy diskette a flash memory drive an optical data storage drive a CD ROM ROM RAM HD or the like. The processes described herein may be implemented in suitable computer executable instructions that may reside on a computer readable medium for example a disk CD ROM a memory etc. . Alternatively the computer executable instructions may be stored as software code components on a DASD array magnetic tape floppy diskette optical storage device or other appropriate computer readable medium or storage device.

Any suitable programming language can be used to implement the routines methods or programs of embodiments of the invention described herein including C C Java JavaScript HTML or any other programming or scripting code etc. Other software hardware network architectures may be used. For example the functions of the disclosed embodiments may be implemented on one computer or shared distributed among two or more computers in or across a network. Communications between computers implementing embodiments can be accomplished using any electronic optical radio frequency signals or other suitable methods and tools of communication in compliance with known network protocols.

Different programming techniques can be employed such as procedural or object oriented. Any particular routine can execute on a single computer processing device or multiple computer processing devices a single computer processor or multiple computer processors. Data may be stored in a single storage medium or distributed through multiple storage mediums and may reside in a single database or multiple databases or other data storage techniques . Although the steps operations or computations may be presented in a specific order this order may be changed in different embodiments. In some embodiments to the extent multiple steps are shown as sequential in this specification some combination of such steps in alternative embodiments may be performed at the same time. The sequence of operations described herein can be interrupted suspended or otherwise controlled by another process such as an operating system kernel etc. The routines can operate in an operating system environment or as stand alone routines. Functions routines methods steps and operations described herein can be performed in hardware software firmware or any combination thereof.

Embodiments described herein can be implemented in the form of control logic in software or hardware or a combination of both. The control logic may be stored in an information storage medium such as a computer readable medium as a plurality of instructions adapted to direct an information processing device to perform a set of steps disclosed in the various embodiments. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the invention.

It is also within the spirit and scope of the invention to implement in software programming or code an of the steps operations methods routines or portions thereof described herein where such software programming or code can be stored in a computer readable medium and can be operated on by a processor to permit a computer to perform any of the steps operations methods routines or portions thereof described herein. The invention may be implemented by using software programming or code in one or more general purpose digital computers by using application specific integrated circuits programmable logic devices field programmable gate arrays optical chemical biological quantum or nanoengineered systems components and mechanisms may be used. In general the functions of the invention can be achieved by any means as is known in the art. For example distributed or networked systems components and circuits can be used. In another example communication or transfer or otherwise moving from one place to another of data may be wired wireless or by any other means.

A computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus system or device. The computer readable medium can be by way of example only but not by limitation an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus system device propagation medium or computer memory. Such computer readable medium shall generally be machine readable and include software programming or code that can be human readable e.g. source code or machine readable e.g. object code . Examples of non transitory computer readable media can include random access memories read only memories hard drives data cartridges magnetic tapes floppy diskettes flash memory drives optical data storage devices compact disc read only memories and other appropriate computer memories and data storage devices. In an illustrative embodiment some or all of the software components may reside on a single server computer or on any combination of separate server computers. As one skilled in the art can appreciate a computer program product implementing an embodiment disclosed herein may comprise one or more non transitory computer readable media storing computer instructions translatable by one or more processors in a computing environment.

A processor includes any hardware system mechanism or component that processes data signals or other information. A processor can include a system with a general purpose central processing unit multiple processing units dedicated circuitry for achieving functionality or other systems. Processing need not be limited to a geographic location or have temporal limitations. For example a processor can perform its functions in real time offline in a batch mode etc. Portions of processing can be performed at different times and at different locations by different or the same processing systems.

It will also be appreciated that one or more of the elements depicted in the drawings figures can also be implemented in a more separated or integrated manner or even removed or rendered as inoperable in certain cases as is useful in accordance with a particular application. Additionally any signal arrows in the drawings figures should be considered only as exemplary and not limiting unless otherwise specifically noted.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process product article or apparatus that comprises a list of elements is not necessarily limited only those elements but may include other elements not expressly listed or inherent to such process product article or apparatus.

Furthermore the term or as used herein is generally intended to mean and or unless otherwise indicated. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present . As used herein including the claims that follow a term preceded by a or an and the when antecedent basis is a or an includes both singular and plural of such term unless clearly indicated within the claim otherwise i.e. that the reference a or an clearly indicates only the singular or only the plural . Also as used in the description herein and throughout the claims that follow the meaning of in includes in and on unless the context clearly dictates otherwise. The scope of the present disclosure should be determined by the following claims and their legal equivalents.

