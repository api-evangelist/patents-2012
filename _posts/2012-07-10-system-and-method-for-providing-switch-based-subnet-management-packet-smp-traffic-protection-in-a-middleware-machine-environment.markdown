---

title: System and method for providing switch based subnet management packet (SMP) traffic protection in a middleware machine environment
abstract: A system and method can provide switch based subnet management packet (SMP) traffic protection in a middleware machine environment. The middleware machine environment includes a network switch that operates to receive at least one SMP destined for a subnet management agent (SMA). The network switch can check whether the at least one SMP includes a correct management key, and prevent the at least one SMP from being forwarded to the destined SMA when at least one SMP does not include the correct management key. Furthermore, the network switch can specify a different management key for each external port and can enforce separate restrictions on ingress and egress SMP traffic at a particular external port.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09332005&OS=09332005&RS=09332005
owner: ORACLE INTERNATIONAL CORPORATION
number: 09332005
owner_city: Redwood Shores
owner_country: US
publication_date: 20120710
---
This application claims priority to U.S. Provisional Patent Application No. 61 506 557 entitled SYSTEM AND METHOD FOR USING UNICAST AND MULTICAST FLOODING MECHANISMS TO PROVIDE EoIB GATEWAY vNICs filed Jul. 11 2011 and U.S. Provisional Patent Application No. 61 645 517 entitled SYSTEM AND METHOD FOR PROVIDING SECRET MANAGEMENT KEY IN A MIDDLEWARE MACHINE ENVIRONMENT filed May 10 2012 which applications are herein incorporated by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

This application is related to the following patent application which is hereby incorporated by reference in its entirety 

U.S. patent application Ser. No. 13 545 796 entitled SYSTEM AND METHOD FOR SUPPORTING SUBNET MANAGEMENT PACKET SMP FIREWALL RESTRICTIONS IN A MIDDLEWARE MACHINE ENVIRONMENT inventors Bjorn Dag Johnsen Roy Arntsen and Lars Paul Huse filed Jul. 10 2012.

The present invention is generally related to computer systems and software such as middleware and is particularly related to supporting a middleware machine environment.

The interconnection network plays a beneficial role in the next generation of super computers clusters and data centers. High performance network technology such as the InfiniBand IB technology is replacing proprietary or low performance solutions in the high performance computing domain where high bandwidth and low latency are the key requirements. For example IB installations are used in supercomputers such as Los Alamos National Laboratory s Roadrunner Tex. Advanced Computing Center s Ranger and Forschungszcntrum Juelich s JuRoPa.

IB was first standardized in October 2000 as a merge of two older technologies called Future I O and Next Generation I O. Due to its low latency high bandwidth and efficient utilization of host side processing resources it has been gaining acceptance within the High Performance Computing HPC community as a solution to build large and scalable computer clusters. The de facto system software for IB is OpenFabrics Enterprise Distribution OFED which is developed by dedicated professionals and maintained by the OpenFabrics Alliance. OFED is open source and is available for both GNU Linux and Microsoft Windows.

Described herein are systems and methods for providing switch based subnet management packet SMP traffic protection in a middleware machine environment. The middleware machine environment includes a network switch that operates to receive at least one SMP destined for a subnet management agent SMA components. The network switch can check whether the at least one SMP includes a correct management key and prevent the at least one SMP from being forwarded to the destined SMA when at least one SMP does not include the correct management key. Furthermore the network switch can specify a different management key for each external port and can enforce separate restrictions on ingress and egress SMP traffics at a particular external port.

Described herein is a system and method for providing a middleware machine or similar platform. In accordance with an embodiment of the invention the system comprises a combination of high performance hardware e.g. 64 bit processor technology high performance large memory and redundant InfiniBand and Ethernet networking together with an application server or middleware environment such as WebLogic Suite to provide a complete Java EE application server complex which includes a massively parallel in memory grid that can be provisioned quickly and can scale on demand. In accordance with an embodiment the system can be deployed as a full half or quarter rack or other configuration that provides an application server grid storage area network and InfiniBand IB network. The middleware machine software can provide application server middleware and other functionality such as for example WebLogic Server JRockit or Hotspot JVM Oracle Linux or Solaris and Oracle VM. In accordance with an embodiment the system can include a plurality of compute nodes IB switch gateway and storage nodes or units communicating with one another via an IB network. When implemented as a rack configuration unused portions of the rack can be left empty or occupied by fillers.

In accordance with an embodiment of the invention referred to herein as Sun Oracle Exalogic or Exalogic the system is an easy to deploy solution for hosting middleware or application server software such as the Oracle Middleware SW suite or Weblogic. As described herein in accordance with an embodiment the system is a grid in a box that comprises one or more servers storage units an IB fabric for storage networking and all the other components required to host a middleware application. Significant performance can be delivered for all types of middleware applications by leveraging a massively parallel grid architecture using e.g. Real Application Clusters and Exalogic Open storage. The system delivers improved performance with linear I O scalability is simple to use and manage and delivers mission critical availability and reliability.

In the IB fabric a secure HCA firmware implementation in HCA can keep the type and identity of various fabric nodes well defined. Each of the HCA can implement a subnet management agent SMA components each of which can be associated with an M Key . Furthermore the connected switches A B can be controlled by the fabric administrator . Thus any rogue SMA implementation may not compromise the fabric administrator defined M Key values that are used in the IB subnet fabric .

Additional descriptions of various embodiments of using secure HCA firmware implementation in a middleware machine platform are provided in U.S. patent application Ser. No. 13 487 973 entitled SYSTEM AND METHOD FOR PROVIDING SECURE SUBNET MANAGEMENT AGENT SMA IN AN INFINIBAND IB NETWORK filed Jun. 4 2012 which application is herein incorporated by reference.

Furthermore the fabric administrator can ensure that new M Key values for the IB subnet fabric are installed out of band on switches as well as for the relevant subnet manager instances . Additionally the fabric administrator can ensure that there is infinite M Key lease time on the switches . Thus the host based software e.g. a host based subnet manager on different hosts including an operating system can not hijack the control of any switch in the IB subnet fabric .

In accordance with an embodiment of the invention a single M Key value or a single set of M Key values can be used for various nodes in the in the IB subnet fabric based on the IB specification defined access restrictions. The correct value for a current M Key may need to be specified before either reading or updating the M Key since the secure HCA firmware can ensure that the read protected M Key assigned to the local HCA is not exposed to local host based software.

Additionally local software on different hosts may be able to hi jack the HCA port by setting up its own M Key value in the case when the current M Key value for HCA ports is defined at run time. Also the host local software may make the HCA port unmanageable for the designated subnet manager e.g. before the designated subnet manager sets up any M Key for the HCA .

In accordance with an embodiment of the invention a designated subnet manager can ignore any HCA ports with un known M Key value and leave the corresponding link not initialized. The only impact of a hijacked HCA port M Key can be that the HCA port may not be operational and the designated subnet manager can prevent host based software from communicating via this HCA port using normal communication i.e. non SMP VL15 based communication.

Furthermore when host software compromises the local HCA M Key value the offending host software may be able to bring the HCA port to an operational state with activated local identifiers LIDs and partition membership. In such a case if the switch port on a switch that connects to the HCA is controlled by a different M Key value that is not known to the host software that has compromised the local HCA M Key value then the offending host software may not be able to bring the link to a full operational state that allows normal data traffic.

In accordance with an embodiment of the invention the IB fabric can prevent direct route SMPs between the various hosts in order to avoid various potentially threatening scenarios. In one scenario a host e.g. host can use the direct route SMPs to hijack the M Key of the HCA port on a remote host e.g. after the remote host and or the remote HCA are reset. This can cause the remote HCA port to become inaccessible from the SM and thereby prevent the remote host from participating in normal IB communication i.e. a denial of service DoS attack. In another scenario when two hosts e.g. host and host are compromised by hackers the cooperating administration in the IB fabric that depends on direct route SMPs may allow the two compromised hosts to exchange information using direct route SMPs.

The IB fabric can support the cooperating administration for exchanging information between different hosts without depending on direct route SMPs. For example the administrators for the hosts can access a shared web page on the Internet instead of relying on direct route SMPs in the IB fabric . From a fabric security perspective leaving direct route SMPs as a security hole on the IB fabric may be considered a worse situation than allowing both host administrators to access a shared web page on the Internet.

In accordance with an embodiment of the invention the HCA ports may be set up with finite lease time on M Keys e.g. due to a high availability concern with the subnet manager s that maintains the M Key lease period. Thus the M Keys can expire without the associated link going down. Consequently the state of the HCA e.g. the partition membership may be updated while links are still in active mode and the LID routes for the involved port are still operational. Then the IB fabric without M Key protection may mistakenly allow normal IB traffic between a hi jacked host and the hosts in other partitions.

Furthermore if the M Keys expire before the links going down both the local HCA e.g. HCA and any remote HCA e.g. HCA may be hi jacked and the partition membership may be modified. If the associated switch ports e.g. on switches are not set up to perform partition enforcement then the traffic with non solicited partition membership can reach any other node in the fabric.

Additionally a subnet manager within the IB fabric can depend on a designated virtual lane VL e.g. the VL15 buffering in order to correctly monitor and control the IB fabric and negotiate with other subnet managers in the IB fabric . Since the VL15 buffering within the IB fabric is a shared resource the uncontrolled use of SMPs from any host can represent a DoS attack. This can affect subnet manager operations since the M Key protection within the IB fabric may prevent the hosts from changing any SMA state on any node. Thus there is a need to provide SMP traffic protection in the IB fabric .

In accordance with an embodiment of the invention the M Key can be created and managed by fabric administrators and stored in secured memory on switches A B and or HCAs . A microprocessor on a switch A B or a HCA can access the memory for reading out the M Key or writing the M Key into the memory.

In accordance with an embodiment of the invention M Key checking of SMPs can be performed in intermediate switch nodes in an IB fabric to ensure that the local switch M Key setting can protect remote HCA ports that do not have an M Key set up.

A subnet management agent SMA component which is implemented in firmware on the HCA can communicate with other nodes in the IB fabric via the switch port . Also the designated subnet manager in the IB fabric can use a particular switch port e.g. port for both sending direct route SMP requests to any SMA and receiving direct route SMP responses from the SMA .

The switch can prevent un intended SMP traffic occurring in the IB fabric without depending on requiring all HCAs to have trusted firmware with SMP control. For example the switch can filter direct route SMP traffic that is not consistent with a fabric policy for the IB fabric .

The switch can use a filtering scheme to prevent a remote HCA port from being hijacked by an intruder. The filtering scheme can be based on identifying any direct route SMP request that targets setting an SMA attribute. Additionally the filtering scheme can perform the same M Key check for all direct route SMP requests independently of the destination and may require that the direct route SMP requests include the correct M Key for the local switch independently of which destination the SMP is targeting.

A single M Key can be used in an IB fabric which includes the switch and the HCA ports that directly connects to the switch . If the host stack software is able to compromise the M Key that protects the local HCA then the host stack software may also compromise the M Key protecting the local switch since all SMP traffic in the IB fabric includes the local switch M Key .

In accordance with an embodiment of the invention the switch implementation can specify an optional M Key value for each external port e.g. M Keys for external ports . Additionally the switch implementation can ensure that any SMP sent out from a switch port e.g. switch port and any SMP received from this port all have an M Key value that matches the M Key specified for the switch port . Furthermore the network switch can enforce separate restrictions on SMPs sending from an external port and SMPs receiving at the external port .

Using this mechanism a legitimate subnet manager can ensure that all potentially untrusted remote HCA ports or other potentially untrusted remote ports may only be allowed to send out SMPs when the correct local M Key associated with a switch port is specified. Also attempts to access a remote port may need to have the subnet manager defined M Key for that port independently of whether the remote port M Key has been hi jacked or not. Additionally this mechanism can also specify an SMP rate that defines how fast the remote port can generate SMP in order to prevent or reduce the chance of SMP based DoS attacks from an untrusted port in the fabric.

Additional descriptions of various embodiments of using SMP filtering in a middleware machine platform are provided in U.S. Pat. No. 7 398 394 entitled SYSTEM AND METHOD FOR AUTHENTICATING NODES IN A COMMUNICATION NETWORK filed Jun. 2 2004 and issued Jul. 8 2008 which application is herein incorporated by reference.

In accordance with an embodiment of the invention a filtering scheme can prevent illegal host host based direct route SMP traffic based on declaring the switch ports as either trusted or not trusted. The determination of whether a switch port or the entity connecting to the switch port is trusted or not can be based on either explicit policy input to the local switch or automatic authentication of the remote port.

As shown in the switch ports and are trusted switch ports while the switch ports and are not trusted. The filtering scheme may only allow SMP requests to be sent from the trusted ports egress from the switch and SMP responses to be received by the trusted ports ingress to the switch . Additionally only SMA requests which have entered the subnet from a trusted port in the first place may be allowed for egress to un trusted ports. Thus the filtering scheme can be made independent of any current M Key setting and can also be used together with the above M Key based filtering scheme.

In accordance with an embodiment of the invention the ability to use a single M Key or a single set of M Keys throughout an IB subnet fabric depends on whether all nodes in the IB fabric are trusted and do not expose the M Key in use to any entity that does not have the required privileges. A pre requisite for a subnet manager to include the current M Key in a request is that the subnet manager can be assured that the target and any intermediate agent may not compromise the integrity of the M Key. In one example such trustfulness can be established prior to including the current M Key in any SMP. Thus the fabric configurations may require all nodes in the IB fabric including the HCAs to be authenticated or declared as trusted before any M Key based communication can takes place instead of assuming that all SMA instances are trustful a priori.

In accordance with an embodiment of the invention a mechanism for sending and receiving vendor based SMPs via the switch management interface can be provided. Such a mechanism enables a switch embedded authentication mechanism to operate as part of the switch local software and thereby operate in concert with embedded subnet managers and the embedded switch driver and SMA stack.

The present invention may be conveniently implemented using one or more conventional general purpose or specialized digital computer computing device machine or microprocessor including one or more processors memory and or computer readable storage media programmed according to the teachings of the present disclosure. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure as will be apparent to those skilled in the software art.

In some embodiments the present invention includes a computer program product which is a storage medium or computer readable medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the present invention. The storage medium can include but is not limited to any type of disk including floppy disks optical discs DVD CD ROMs microdrive and magneto optical disks ROMs RAMs EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs or any type of media or device suitable for storing instructions and or data.

The foregoing description of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalence.

