---

title: Cloud-assisted method and service for application security verification
abstract: A method, device, and system for browser-based application security verification is disclosed. A client device requests a browser-based application from a web server. An application security module of the client device intervenes and transmits an application verification request to a cloud service system. The cloud service system retrieves data regarding the security of the application and source from cloud resources and a local database of the cloud server. The cloud service system then uses the data to authenticate the source and verify the security of the browser-based application. The cloud service system provides the client device with a recommendation regarding the security of the browser-based application and updates its local database. The client device may then consider the recommendation in determining whether to download or execute the browser-based application and provide feedback to the cloud service system. The client device may also perform a local security analysis after receiving the cloud service system's recommendation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430640&OS=09430640&RS=09430640
owner: Intel Corporation
number: 09430640
owner_city: Santa Clara
owner_country: US
publication_date: 20120928
---
The arrival of the HTML5 programming platform to the web community has enabled a fast paced and dynamic experience for the interacting user. The programming platform combines application programming interfaces API s with dynamic content generation and presentation thus enabling developers to incorporate increased features and capabilities into browser based applications. For example HTML5 allows developers to integrate active code into a webpage that is able to execute inside the browser of the client device.

Unfortunately the dynamic nature of HTML5 has also introduced a number of security risks to the user. Because the programming platform allows developers to incorporate active code into a webpage oftentimes the code may execute without the user s knowledge about the code. Some existing solutions allow the client device to validate the authenticity of the application. For example some developers may use digital signatures to sign their developed software to allow the client device may validate the code upon downloading it. However those solutions only provide authenticity verification of software delivered by particular developers or publishers in a single source and one time fashion. Furthermore such solutions do not provide dynamic verification of web service applications e.g. HTML 5 based dynamic content creation and browser plug ins that are independent of the specific software vendor or service provider. As such there are limited options available to users to ensure that a browser based application is secure prior to downloading or executing the application.

While the concepts of the present disclosure are susceptible to various modifications and alternative forms specific embodiments thereof have been shown by way of example in the drawings and will be described herein in detail. It should be understood however that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives consistent with the present disclosure and the appended claims.

References in the specification to one embodiment an embodiment an illustrative embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may or may not necessarily include that particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

The disclosed embodiments may be implemented in some cases in hardware firmware software or any combination thereof. The disclosed embodiments may also be implemented as instructions carried by or stored on a transitory or non transitory machine readable e.g. computer readable storage medium which may be read and executed by one or more processors. A machine readable storage medium may be embodied as any storage device mechanism or other physical structure for storing or transmitting information in a form readable by a machine e.g. a volatile or non volatile memory a media disc or other media device .

In the drawings some structural or method features may be shown in specific arrangements and or orderings. However it should be appreciated that such specific arrangements and or orderings may not be required. Rather in some embodiments such features may be arranged in a different manner and or order than shown in the illustrative figures. Additionally the inclusion of a structural or method feature in a particular figure is not meant to imply that such feature is required in all embodiments and in some embodiments may not be included or may be combined with other features.

Referring now to a system for cloud assisted browser based application security verification includes a client computing device network a web server a cloud service system and cloud resources which may be internal or external to the cloud service system . In use as discussed in more detail below the client computing device may securely launch a browser based application see requested from the web server in response to a positive recommendation of the cloud service system regarding the security of the browser based application . Although only one client computing device one network one web server one cloud service system and one cloud resources are illustratively shown in the system may include any number of client computing devices networks web servers cloud service systems and cloud resources in other embodiments. For example in some embodiments one cloud service system may communicate with several client computing devices over several networks to verify the security of multiple browser based applications requested from multiple web servers .

The client computing device may be embodied as any type of computing device capable of performing the functions described herein. For example the client computing device may be embodied as an enterprise level server a desktop computer a laptop computer a mobile internet device a handheld computer a smart phone a personal digital assistant a telephony device or other computing device. In the illustrative embodiment of the client computing device includes a processor an I O subsystem a memory communication circuitry a data storage device and one or more peripheral devices . In some embodiments several of the foregoing components may be incorporated on a motherboard of the client computing device while other components may be communicatively coupled to the motherboard via for example a peripheral port. Furthermore it should be appreciated that the client computing device may include other components sub components and devices commonly found in a computer and or computing device which are not illustrated in for clarity of the description.

The processor of the client computing device may be embodied as any type of processor capable of executing software firmware such as a microprocessor digital signal processor microcontroller or the like. In some embodiments the processor may be a single core processor having a processor core. However in other embodiments the processor may be embodied as a multi core processor having multiple processor cores. Additionally the client computing device may include additional processors having one or more processor cores.

The I O subsystem of the client computing device may be embodied as circuitry and or components to facilitate input output operations with the processor and or other components of the client computing device . In some embodiments the I O subsystem may be embodied as a memory controller hub MCH or northbridge an input output controller hub ICH or southbridge and a firmware device. In such embodiments the firmware device of the I O subsystem may be embodied as a memory device for storing Basic Input Output System BIOS data and or instructions and or other information e.g. a BIOS driver used during booting of the client computing device . However in other embodiments I O subsystems having other configurations may be used. For example in some embodiments the I O subsystem may be embodied as a platform controller hub PCH . In such embodiments the memory controller hub MCH may be incorporated in or otherwise associated with the processor and the processor may communicate directly with the memory as shown by the hashed line in . Additionally in other embodiments the I O subsystem may form a portion of a system on a chip SoC and be incorporated along with the processor and other components of client computing device on a single integrated circuit chip.

The processor is communicatively coupled to the I O subsystem via a number of signal paths. These signal paths and other signal paths illustrated in may be embodied as any type of signal paths capable of facilitating communication between the components of the client computing device . For example the signal paths may be embodied as any number of wires cables light guides printed circuit board traces via bus intervening devices and or the like.

The memory of the client computing device may be embodied as or otherwise include one or more memory devices or data storage locations including for example dynamic random access memory devices DRAM synchronous dynamic random access memory devices SDRAM double data rate synchronous dynamic random access memory device DDR SDRAM mask read only memory ROM devices erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM devices flash memory devices and or other volatile and or non volatile memory devices. The memory is communicatively coupled to the I O subsystem via a number of signal paths. Although only a single memory device is illustrated in the client computing device may include additional memory devices in other embodiments. Various data and software may be stored in the memory device . For example one or more operating systems applications programs libraries and drivers that make up the software stack executed by the processor may reside in memory during execution. Furthermore software and data stored in memory may be swapped between the memory and the data storage as part of memory management operations.

The communication circuitry of the client computing device may be embodied as any number of devices and circuitry for enabling communications between the client computing device and remote computing devices e.g. the web server and the cloud service system over the network . The network may be embodied as any number of various wired and or wireless communication networks. For example the network may be embodied as or otherwise include a local area network LAN a wide area network WAN or a publicly accessible global network such as the Internet. Additionally the network may include any number of additional devices to facilitate communication between the client computing device the web server and the cloud service system . The client computing device the web server and the cloud service system may use any suitable communication protocol to communicate with one another over the network s depending on for example the particular type of network s . In the illustrative embodiment of the cloud service system may also communicate with the cloud resources over the network s . In some embodiments the cloud resources are accessible by the cloud service system but are inaccessible by the client computing device and or the web server .

The data storage device s may be embodied as any type of device or devices configured for the short term or long term storage of data such as for example memory devices and circuits memory cards hard disk drives solid state drives or other data storage devices. For example as discussed in more detail below a portion of the browser based application i.e. executable code may be stored in a secure location of the data storage device s in some embodiments to be accessed by a local code analysis module see .

The peripheral devices of the client computing device may include any number of peripheral or interface devices. For example the peripheral devices may include a display a keyboard a mouse external speakers and or other peripheral devices. The particular devices included in the peripheral devices may depend upon for example the intended use of the client computing device . The peripheral devices are communicatively coupled to the I O subsystem via a number of signal paths thereby allowing the I O subsystem and or processor to receive inputs from and send outputs to the peripheral devices .

The web server may be embodied as any type of data server s or other computing device s capable of performing the functions described herein. For example the web server in the illustrative embodiment of is capable of generating and transmitting the browser based application to the client computing device over the network . In some embodiments the web server may include components similar to the components of the client computing device as discussed above. It should be appreciated that the web server may include other components sub components and devices commonly found in a server and or computing device which are not illustrated in for clarity of the description. Additionally although the web server is illustrated in as a single individual web server the web server may be embodied as a collection of web servers and or similar devices capable of generating and transmitting the browser based application as discussed above.

In the illustrative embodiment of the cloud service system is embodied as a cloud service server including a processor an I O subsystem a memory a communication circuitry a data storage device a local database and one or more peripheral devices . In some embodiments several of the foregoing components may be incorporated on a motherboard of the cloud service system while other components may be communicatively coupled to the motherboard via for example a peripheral port. Furthermore it should be appreciated that the cloud service system may include other components sub components and devices commonly found in a server and or computing device which are not illustrated in for clarity of the description. Additionally although the cloud service system is illustrated in and discussed below as a single individual cloud service server the cloud service system may be embodied as a collection of cloud servers and or similar devices that cooperate to provide one or more cloud services as discussed below.

The processor the I O subsystem the memory the communication circuitry the data storage device and the one or more peripheral devices of the cloud service system may be similar to the corresponding components of the client computing device as described above. As such the description of such similar components of the client computing device is equally applicable to the similar components of the cloud service system and are not repeated herein for clarity of the description. Additionally the local database of the cloud service system may be embodied as any electronic arrangement or structure suitable for storing data directed to the security of the browser based application s and sources of the browser based application s .

In the illustrative embodiment of the cloud resources include data and other electronic resources that may be used by the cloud service system to authenticate the source of the browser based application and or verify the integrity of the browser based application . In some embodiments the cloud resources may include other servers and or computing devices belonging to the same cloud computing environment as the cloud service system . In other embodiments the cloud resources may include one or more databases or other data structures for storing browser based application verification data and or source authentication data.

In use as shown in the cloud service system may establish an environment for generating a security recommendation for the browser based application on the cloud service system . In the illustrative embodiment the environment includes a source authentication module an application verification module a recommendation engine and a communication module each of which may be embodied as software firmware hardware or a combination thereof.

The source authentication module is configured to authenticate the source of the browser based application e.g. the website from which the browser based application was downloaded . To do so the source authentication module may retrieve source authentication data from the local database of the cloud service system and or the cloud resources . The source authentication data may be embodied as any type of data usable by the source authentication module to determine a trustworthiness of the source of the browser based application . For example the source authentication data may be embodied as or otherwise include information identifying known trusted and or malicious browser based application distributors or hosts e.g. websites .

The source authentication module may also receive application source data which identifies the particular source of the browser based application from the client computing device or the web server . In such embodiments the source authentication module may authenticate the source of the browser based application by comparing the application source data to the source authentication data to determine whether the identified source of the browser based application is a secure and trusted host or entity.

The application verification module is configured to verify the security of the browser based application itself. To do so in some embodiments the application verification module may retrieve application validation data from the local database of the cloud service system and or retrieve the application validation data from the cloud resources . The application validation data may be embodied as trusted source code that the application verification module may compare with the browser based application code. In such embodiments the application verification module may compare the trusted source code to the code of the browser based application to verify the security of the browser based application . Additionally or alternatively the application validation data may include known virus signatures or patterns usable by the application verification module to analyze the code of the browser based application . That is the application verification module may perform a code analysis of the browser based application to determine whether the browser based application contains malicious code or is otherwise fraudulent. Additionally in some embodiments the application verification module may determine the identity of the developer publisher of the browser based application . For example similar to the source authentication data the application validation data may include information regarding known trusted and malicious browser based application developers and publishers that may be used by the application verification module in verifying the security of the browser based application .

The recommendation engine is configured to provide a recommendation to the client computing device regarding the security of the browser based application based on the analysis performed by the source authentication module and or the application verification module . As discussed above the source authentication module analyzes the source of the browser based application and the application verification module analyzes the browser based application itself. In some embodiments the recommendation engine may correlate the analyses of the source authentication module and the application verification module to determine whether the browser based application is secure and make a recommendation to the client computing device . The security recommendation of the recommendation engine may be of many different forms. For example in some embodiments the recommendation engine may recommend that the client computing device execute the browser based application only if the source authentication module determined that the source of the browser based application is a trusted source and or the application verification module determined that the browser based application was developed or published by a trusted party. In other embodiments the recommendation engine may provide the client computing device with a percent likelihood that the browser based application is secure or otherwise based the recommendation on some threshold. Of course other forms of recommendations may be used in other embodiments. The recommendation engine may transmit the recommendation to the client using the communication module which handles communication between the cloud service system and other devices of the system .

Referring now to in use the client computing device may establish an environment for verifying the security of the browser based application requested by the client computing device . The environment in the illustrative embodiment includes a browser the browser based application an application security module a local code analysis module and a communication module each of which may be embodied as software hardware firmware and or a combination thereof.

The browser of the client computing device may be used to request and interpret the browser based application from the web server . In some embodiments the browser based application may be embodied as a Hypertext Markup Language 5 HTML5 application. In other embodiments the browser based application may be embodied as any software application capable of being executed and or interpreted by the browser of the client computing device .

The application security module is configured to perform the security verification of the browser based application on the client computing device . The application security module may be embodied as an independent module or in some embodiments may be embodied as a browser plug in. As discussed below if the browser has requested the browser based application the application security module may request the cloud service system to verify the security of the requested browser based application using the communication module which receives the results of the verification from the could service system . In some embodiments the application security module may forward the request to the cloud service system for analysis before permitting the browser to execute the browser based application or download any portion of the browser based application . Additionally in some embodiments the results of the verification by the could service system may include instructions or directions to be performed by the client computing device . In such embodiments the application security module is configured to perform such additional instructions or actions which may include any type of security action such as for example to delete or quarantine the browser based application .

In some embodiments the client computing device may also include the local code analysis module . In such embodiments the local code analysis module may be configured to determine whether the browser based application contains malicious code or is otherwise fraudulent similar to the application verification module of the cloud service system . For example in some embodiments the local code analysis module may further analyze the browser based application after receiving a recommendation from the cloud service system and or perform additional security measures with regard to the browser based application .

Referring now to an illustrative embodiment of a method for generating a security recommendation regarding the browser based application which may be performed by the cloud service system begins with block . In block the cloud service system determines whether an application verification request to verify the security of the browser based application has been received from the client computing device . If so the cloud service system receives the browser based application or a portion of the code of the browser based application in block . In some embodiments the cloud service system may receive in block metadata from the client computing device indicating the location of the browser based application and download the browser based application from the web server at the specified location. For example the client computing device may provide the cloud service system with the uniform resource locator URL of the browser based application . The cloud service system may use the location information provided by the client computing device to retrieve the browser based application for analysis.

In block the cloud service system authenticates the source of the browser based application . To do so the cloud service system may additionally receive application source data from the client computing device in block . As discussed above the application source data may be embodied as any type of data that identifies the source of the browser based application . For example the application source data may identify the top level domain sub domain or internet protocol IP address associated with the browser based application . Alternatively in embodiments in which the application source data is not specifically identified the cloud service system may use the location data provided by the client computing device in block to determine the source of the browser based application . In some embodiments the cloud service system may download the browser based application and or the application source data from a remote server other than the client computing device or web server .

In some embodiments the source authentication module of the cloud service system may also retrieve source authentication data from the local database of the cloud service system and or from the cloud resources in block . As discussed above the source authentication data may be embodied as or otherwise include any type of data usable by the cloud service system to determine the trustworthiness of the source of the browser based application . For example the source authentication data may include data that identifies known hosts of malicious browser based applications . In other embodiments the source authentication data may include data that identifies trusted hosts of browser based applications . In still other embodiments the source authentication data may include a combination of the previously described information and or other information directed to the trustworthiness of the source of the browser based application . As such in some embodiments the cloud service system may authentication the source of the browser based application in block by comparing the identified application source data to the retrieved source authentication module to determine the trustworthiness or lack thereof of the identified source.

In block the cloud service system verifies the security of the browser based application itself. To do so the cloud service system may retrieve application validation data in block . Similar to the source authentication data retrieved in block the cloud service system may retrieve the application validation data from the local database of the cloud service system and or from the cloud resources in block . The application validation data may be embodied as any type of data usable by the cloud service system to verify the security e.g. trustworthiness maliciousness etc. of the browser based application . For example as discussed above the application validation data may be embodied as known trusted source code. Additionally or alternatively the application validation data may be embodied as or otherwise include signatures and patterns of known viruses and other malware. Further the application validation data may include information regarding the trustworthiness of known browser based application developer and publishers.

The cloud service system may verify the security and integrity of the browser based application in block by comparing the browser based application retrieved in block to the application validation data retrieved in block . For example the cloud service system may perform a code analysis of the browser based application and compare the browser based application to malware signatures to determine whether the browser based application contains malicious code or is otherwise fraudulent. Additionally or alternatively the cloud service system may analyze the code of the browser based application to verify that the code is stable and safely operable on the client computing device . In such embodiments the recommendation engine may notify the client computing device of a location of the most stable current release of the browser based application .

It should be appreciated that blocks and of the method may occur in any order or may occur concurrently. Furthermore in some embodiments if either of the blocks and provides an indication that the browser based application or its source is unsecure the cloud service system may or may not execute the other block. Rather the cloud service system may simply recommend that the client computing device refrain from downloading or executing the browser based application as discussed below.

In block the cloud service system may generate a security recommendation for the client computing device as a function of the source authentication of block and the browser based application verification of block . As discussed above the security recommendation provides some indication to the client computing device regarding whether the browser based application is secure. For example the cloud service system may recommend that the client computing device execute the browser based application if both the source and the browser based application have been determined to be secure. Otherwise the cloud service system may recommend that the client computing device refrain from downloading or executing the browser based application and delete any downloaded portions of the browser based application code. In other embodiments the cloud service system may generate a likelihood e.g. expressed as a percentage or other numerical representation that the browser based application is secure and the client computing device may utilize such likelihood to determine whether to execute the browser based application . That is the cloud service system may identify a level of trust of the browser based application . For example the browser based application may be identified as secure if both the browser based application and its source have been determined to be secure as possibly unsecure if only one of the browser based application and its source have been determined to be secure and as unsecure if neither the browser based application nor its source have been determined to be secure. In block the cloud service system may update the local database with its recommendation and or security information received from the cloud resources .

In block the cloud service system may transmit the security recommendation generated in block to the client computing device . Thereafter the cloud service system may receive feedback from the client computing device in block . In some embodiments the feedback may include the security action taken by the client computing device in response to the security recommendation. For example the feedback may indicate whether the client computing device executed the browser based application . Additionally the feedback may indicate that the client computing device for example notified the user of the security recommendation deleted or refrained from downloading the browser based application or quarantined the browser based application . In embodiments in which the client computing device performs a local security analysis of the browser based application see block of the feedback may also include the results of the local security analysis. In block the cloud service system may update the local database with the feedback from the client computing device .

Referring now to an illustrative embodiment of a method for verifying the security of the browser based application which may be executed by the client computing device begins with block . In block the client computing device determines whether the browser based application has been requested. For example in some embodiments the security module of the client computing device may monitor the browser to determine when a user of the client computing device executes a hyperlink directed to the browser based application . If the client computing device determines that the browser based application has been requested the client computing device transmits a request to the cloud service system to verify the security of the browser based application in block . As discussed above in doing so the client computing device may transmit the browser based application or any downloaded portions of the browser based application or its source code to the cloud service system in block . Alternatively the client computing device may transmit data identifying the location at which the browser based application is available to the cloud service system in block . For example the client computing device may transmit the URL of the browser based application to the cloud service system . In the illustrative embodiment of the client computing device does not execute the browser based application until the cloud service system verifies the security of the browser based application as indicated by the double tilde symbol in .

In block client computing device receives the security recommendation from the cloud service system . As discussed above the security recommendation may indicate for example whether the browser based application is secure and or a level of security of the browser based application . In some embodiments similar to verifying the security of the browser based application on the cloud service system in block the client computing device may download and perform a local security analysis of the browser based application . The local code analysis module of the client computing device may compare the browser based application to virus or malware signatures and patterns to determine whether the browser based application contains malicious code. In other embodiments the client computing device may perform additional or alternative code analysis to locally verify the security of the browser based application . Additionally in some embodiments the local security analysis performed in block may be performed prior to the client computing device transmitting the browser based application to the cloud service system . In such embodiments if the client computing device locally determines that the browser based application has security risks e.g. includes malware the client computing device may simply discard the browser based application at that time without sending it on to the cloud service system . In other embodiments the client computing device may transmit the browser based application to the could service system regardless of the outcome of the local security analysis.

In block the client computing device may perform a security action based on the security recommendation received from the cloud server in block . In some embodiments the client computing device may notify the user of the security recommendation e.g. if the security recommendation is to not download execute the browser based application . For example in block the user of the client computing device may be notified through the browser or another graphical user interface. In other embodiments the client computing device may delete the source code of the browser based application or any portion downloaded thereof from the memory of the client computing device in block . In embodiments in which the client computing device has not downloaded any portion of the browser based application the client computing device may prevent the user from downloading the browser based application . In other embodiments the client computing device may quarantine the browser based application or any downloaded portions thereof in a secure location of the memory of the client computing device in block . If the cloud service system determined that the browser based application is secure however the client computing device may download and execute the browser based application . In embodiments in which the client computing device performs the local security analysis in block the client computing device may additionally consider the local security analysis in addition to the cloud service system security recommendation.

In block the client computing device may transmit feedback to the cloud service system . As discussed above the feedback may include the security action taken by the client computing device in response to the security recommendation. Additionally the feedback may include the result of any local security analysis performed on the browser based application by the client computing device . The cloud service system may use the feedback to update the local database of the cloud service system with relevant browser based application security information.

Illustrative examples of the devices systems and methods disclosed herein are provided below. An embodiment of the devices systems and methods may include any one or more and any combination of the examples described below.

Example 1 includes a cloud service system for generating a security recommendation for a browser based application. The cloud server includes a communication module to receive an application verification request from a client computing device a source authentication module to i receive application source data that identifies a source of the browser based application ii retrieve source authentication data and iii authenticate the source as a function of the application source data and the source authentication data an application verification module to i retrieve application validation data and ii verify the browser based application as a function of the application validation data and a recommendation engine to generate a security recommendation in response to the authentication of the source authentication module and the verification of the application verification module wherein the communication module further to transmit the security recommendation to the client computing device.

Example 2 includes the subject matter of Example 1 and wherein the source authentication module is to i receive location data identifying a location of the browser based application and ii download the browser based application from a web server located at the identified location.

Example 3 includes the subject matter of any of Examples 1 and 2 and wherein the location data includes a uniform resource locator of the browser based application.

Example 4 includes the subject matter of any of Example 1 3 and wherein the source authentication module is to retrieve the application source data from a remote location other than the client computing device and the application verification module is to retrieve the browser based application from the remote location.

Example 5 includes the subject matter of any of Examples 1 4 and wherein the security recommendation identifies a level of trust of the browser based application.

Example 6 includes the subject matter of any of Examples 1 5 and wherein the recommendation engine is to receive feedback from the client computing device in response to the security recommendation.

Example 7 includes the subject matter of any of Examples 1 6 and wherein the feedback indicates a security action taken by the client computing device.

Example 8 includes the subject matter of any of Examples 1 7 and wherein the recommendation engine is to update a local database of the cloud server in response to receiving feedback from the client computing device.

Example 9 includes the subject matter of any of Examples 1 8 and wherein the application source data identifies a host of the browser based application.

Example 10 includes the subject matter of any of Examples 1 9 and wherein the application source data indicates an internet protocol address at which the browser based application is available.

Example 11 includes the subject matter of any of Examples 1 10 and wherein the source authentication module is to retrieve the source authentication data from a local database of the cloud server and the application verification module is to retrieve the application validation data from the local database.

Example 12 includes the subject matter of any of Examples 1 11 and wherein the source authentication module is to retrieve the source authentication data from cloud resources accessible to the cloud server and the application verification module is to retrieve the application validation data from the cloud resources.

Example 13 includes the subject matter of any of Examples 1 12 and wherein the source authentication module is to authenticate the source by comparing the application source data to the source authentication data wherein the source authentication data includes a list of known malicious browser based application hosts.

Example 14 includes the subject matter of any of Examples 1 13 and wherein the application verification module is to verify the security of the browser based application by comparing the browser based application to a trusted source code of the browser based application.

Example 15 includes the subject matter of any of Examples 1 14 and wherein the application verification module is to verify the security of the browser based application by comparing the browser based application to the application validation data wherein the application validation data includes known malware signatures.

Example 16 includes the subject matter of any of Examples 1 15 and wherein the application verification module is to retrieve the application validation data from cloud resources accessible to the cloud server.

Example 17 includes the subject matter of any of Examples 1 16 and wherein the application verification module is to retrieve the application validation data from a local database of the cloud server.

Example 18 includes the subject matter of any of Examples 1 17 and wherein the security recommendation indicates whether the browser based application is secure.

Example 19 includes the subject matter of any of Examples 1 18 and wherein the recommendation engine is to update a local database of the cloud server in response to generating the security recommendation.

Example 20 includes the subject matter of any of Examples 1 19 and wherein the browser based application is a Hypertext Markup Language 5 application or other web application.

Example 21 includes a client computing device for verifying the security of a browser based application. The client computing device includes an application security module to i determine whether the client computing device has requested the browser based application and ii in response to determining that the browser based application has been requested transmit an application verification request to a cloud service system to verify the security of the browser based application and a communication module to receive a security recommendation from the cloud service system wherein the application security module further to perform a security action in response to the security recommendation.

Example 22 includes the subject matter of Example 21 and wherein the browser based application is a Hypertext Markup Language 5 application or other web application.

Example 23 includes the subject matter of any of Examples 21 and 22 and wherein the application security module determining whether the client computing device has requested the browser based application comprises determining whether the client computing device has executed a hyperlink directed to the browser based application.

Example 24 includes the subject matter of any of Examples 21 23 and wherein the application security module transmitting the application verification request comprises transmitting at least a portion of the source code of the browser based application to the cloud service system.

Example 25 includes the subject matter of any of Examples 21 24 and wherein the application security module transmitting the application verification request comprises transmitting location data indicating a location at which the browser based application is available.

Example 26 includes the subject matter of any of Examples 21 25 and wherein the location data comprises a uniform resource locator of the browser based application.

Example 27 includes the subject matter of any of Examples 21 26 and wherein the security action comprises notifying a user of the client computing device of the security recommendation.

Example 28 includes the subject matter of any of Examples 21 27 and wherein the security action comprises deleting the source code of the browser based application from the client computing device.

Example 29 includes the subject matter of any of Examples 21 28 and wherein the security action comprises preventing downloading of the browser based application to a memory of the client computing device.

Example 30 includes the subject matter of any of Examples 21 29 and wherein the security action comprises quarantining the browser based application in a secure location of a memory of the client computing device.

Example 31 includes the subject matter of any of Examples 21 30 and wherein the application security module is to transmit feedback to the cloud service system.

Example 32 includes the subject matter of any of Examples 21 31 and further includes the feedback indicates the security action performed by the client computing device.

Example 33 includes the subject matter of any of Examples 21 32 and further includes a local code analysis module to perform a local security analysis of the browser based application on the client computing device.

Example 34 includes the subject matter of any of Examples 21 33 and wherein the local security analysis comprises comparing the browser based application to virus signatures.

Example 35 includes a method for generating a security recommendation for a browser based application on a cloud service system. The method includes receiving the browser based application and application source data that identifies a source of the browser based application retrieving source authentication data and application validation data authenticating the source as a function of the application source data and the source authentication data verifying the security of the browser based application as a function of the application validation data generating a security recommendation as a function of authenticating the source and verifying the browser based application and transmitting the security recommendation to a client computing device.

Example 36 includes the subject matter of Example 35 and wherein receiving the browser based application comprises i receiving location data identifying a location of the browser based application and ii downloading the browser based application from a web server located at the identified location.

Example 37 includes the subject matter of any of Examples 35 and 36 and wherein receiving location data identifying a location of the browser based application comprises receiving a uniform resource locator of the browser based application.

Example 38 includes the subject matter of any of Examples 35 37 and further includes receiving a request from the client computing device to generate a security recommendation regarding the browser based application.

Example 39 includes the subject matter of any of Examples 35 38 and wherein receiving the browser based application and application source data from a remote location other than the client computing device.

Example 40 includes the subject matter of any of Examples 35 39 and wherein generating a security recommendation comprises identifying a level of trust of the browser based application.

Example 41 includes the subject matter of any of Examples 35 40 and further includes receiving feedback from the client computing device in response to the security recommendation.

Example 42 includes the subject matter of any of Examples 35 41 and wherein receiving feedback comprises receiving feedback indicating an action taken by the client computing device.

Example 43 includes the subject matter of any of Examples 35 42 and further includes updating a local database of the cloud service system in response to receiving feedback from the client computing device.

Example 44 includes the subject matter of any of Examples 35 43 and wherein receiving application source data comprises receiving source data that identifies a host of the browser based application.

Example 45 includes the subject matter of any of Examples 35 44 and wherein receiving the source data comprises receiving an internet protocol address at which the browser based application is available.

Example 46 includes the subject matter of any of Examples 35 45 and wherein retrieving source authentication data and application validation data comprises retrieving source authentication data and application validation data from a local database of the cloud service system.

Example 47 includes the subject matter of any of Examples 35 46 and wherein retrieving source authentication data and application validation data comprises retrieving source authentication data and application validation data from cloud resources accessible to the cloud service system.

Example 48 includes the subject matter of any of Examples 35 47 and wherein authenticating the source comprises comparing the application source data to the source authentication data wherein the source authentication data includes a list of known malicious browser based application hosts.

Example 49 includes the subject matter of any of Examples 35 48 and wherein verifying the security of the browser based application comprises comparing the browser based application to a trusted source code of the browser based application.

Example 50 includes the subject matter of any of Examples 35 49 and wherein verifying the security of the browser based application comprises comparing the browser based application to the application validation data wherein the application validation data includes known malware signatures.

Example 51 includes the subject matter of any of Examples 35 50 and wherein retrieving application validation data comprises retrieving application validation data from cloud resources accessible to the cloud service system.

Example 52 includes the subject matter of any of Examples 35 51 and wherein retrieving application validation data comprises retrieving application validation from a local database of the cloud service system.

Example 53 includes the subject matter of any of Examples 35 52 and wherein generating a security recommendation comprises indicating whether the browser based application is secure.

Example 54 includes the subject matter of any of Examples 35 53 and further includes updating a local database of the cloud service system in response to generating the security recommendation.

Example 55 includes the subject matter of any of Examples 35 54 and wherein the browser based application is a Hypertext Markup Language 5 application or other web application.

Example 56 includes a computing device having a processor and a memory having stored therein a plurality of instructions that when executed by the processor cause the computing device to perform the method of any of Examples 35 55.

Example 57 includes one or more machine readable storage media comprising a plurality of instructions stored thereon that in response to being executed result in a computing device performing the method of any of Examples 35 55.

Example 58 includes a method for verifying the security of a browser based application. The method includes determining using the client computing device whether the client computing device has requested the browser based application in response to determining that the browser based application has been requested transmitting an application verification request to a cloud service system to verify the security of the browser based application receiving with the client computing device a security recommendation from the cloud service system in response to transmitting the application verification request and performing on the client computing device a security action in response to the security recommendation received from the cloud service system.

Example 59 includes subject matter of Example 58 and wherein the browser based application is a Hypertext Markup Language 5 application or other web application.

Example 60 includes subject matter of any of Examples 58 and 59 and wherein determining whether the client computing device has requested the browser based application comprises determining whether the client computing device has executed a hyperlink directed to the browser based application.

Example 61 includes subject matter of any of Examples 58 60 and wherein transmitting the application verification request comprises transmitting at least a portion of the source code of the browser based application to the cloud service system.

Example 62 includes subject matter of any of Examples 58 61 and wherein transmitting the application verification request comprises transmitting location data indicating a location at which the browser based application is available.

Example 63 includes subject matter of any of Examples 58 62 and wherein transmitting the location data comprises transmitting a uniform resource locator of the browser based application.

Example 64 includes subject matter of any of Examples 58 63 and wherein performing the security action comprises notifying a user of the client computing device of the security recommendation.

Example 65 includes subject matter of any of Examples 58 64 and wherein performing the security action comprises deleting the source code of the browser based application from the client computing device.

Example 66 includes subject matter of any of Examples 58 65 and wherein performing the security action comprises preventing downloading of the browser based application to a memory of the client computing device.

Example 67 includes subject matter of any of Examples 58 66 and wherein performing the security action comprises quarantining the browser based application in a secure location of a memory of the client computing device.

Example 68 includes subject matter of any of Examples 58 67 and further includes transmitting feedback to the cloud service system.

Example 69 includes subject matter of any of Examples 58 68 and wherein transmitting feedback to the cloud service system comprises transmitting feedback indicating the security action performed by the client computing device.

Example 70 includes subject matter of any of Examples 58 69 and further includes performing a local security analysis of the browser based application on the client computing device.

Example 71 includes subject matter of any of Examples 58 70 and wherein performing the local security analysis of the browser based application comprises comparing the browser based application to virus signatures.

Example 72 includes a computing device having a processor and a memory having stored therein a plurality of instructions that when executed by the processor cause the computing device to perform the method of any of Examples 58 71.

Example 73 includes one or more machine readable storage media comprising a plurality of instructions stored thereon that in response to being executed result in a computing device performing the method of any of Examples 58 71.

