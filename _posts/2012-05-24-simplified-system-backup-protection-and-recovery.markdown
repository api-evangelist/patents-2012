---

title: Simplified system backup protection and recovery
abstract: A system, method, and medium for automatically identifying, protecting, and recovering the critical services and components of a server. A backup application detects a request to perform a backup operation. In response, the backup application performs a discovery process to identify the critical services and components of a server. The backup application includes a user interface to display the critical services and components to an administrator. The critical services and components are then backed up to a backup storage device. The collection of critical services and components can then be recovered to a target server when a recovery operation is needed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122711&OS=09122711&RS=09122711
owner: Symantec Corporation
number: 09122711
owner_city: Mountain View
owner_country: US
publication_date: 20120524
---
The present invention relates generally to computer systems and in particular to a method and system for protecting and recovering operating systems of computing devices.

Various software tools exist for performing backups of computing devices and restoring the backed up versions of the data. Such tools allow for graceful recovery from user error hardware failure power outage unexpected errors disasters or any other loss of data. Many of these tools require an administrator to separate the components and devices into those that are critical and those that are not. Unfortunately this type of manual determination of what constitutes critical and non critical devices is fraught with error. It is possible for an administrator to supervise a backup that the administrator believes is capable of restoring the system at some future point. However unbeknownst to the administrator the backup may be incapable of successfully restoring the operating system because some critical components were unintentionally left out. Unfortunately the administrator may not realize the error until the restore operation fails at which point it is too late to correct.

For example a system may include a server hosting various applications. The administrator may have correctly identified and selected the critical devices in the original server configuration but the critical services and components of the server may have changed over time and the administrator may not have updated the selection of critical devices to match these changes. Therefore the backup will not include all of the critical devices that are required to restore the operating system of the server.

Performing backup and restore operations may therefore require substantial human intervention to complete. The need for such intervention makes such tasks error prone tedious and time consuming. Improved approaches for handling the backup and restoration of critical system devices and components are therefore desired.

Various embodiments of methods and mechanisms for automating server backup and restore operations are disclosed. In one embodiment a software application may be utilized for automating the backup and restore operations. The software application may include a user interface and a list of all of the components of the server may be presented to an administrator through the user interface. This allows the administrator to select which components of the server to backup.

During the backup process a discovery and interrogation process may determine the critical components of the server. The discovered critical components may be compared to the administrator s backup selections. If any critical components have been left out of the administrator s selections then a message may be generated within the user interface to notify the administrator of these excluded critical components. In addition the excluded critical components may be automatically included within the backup in spite of not being selected by the administrator.

When a new critical component or service is added to the server this new component may be automatically included as part of the backup even though the administrator may have chosen to exclude it. The addition of the new critical component may be logged and feedback may be provided to the administrator informing them of this new addition.

The actual backup may be stored as separate sets of data but metadata may be stored to link together the separate sets of data. The metadata may include information about the sets and may describe how the sets are associated. The metadata describes all of the critical components that should be in the backup and the metadata may be considered a critical component.

The logic for the determination as to whether or not a particular service or component is critical may be encoded within the backup application. In one embodiment the identification of which services and components are critical vs. non critical may be based on a configuration file that is loaded by the backup application. The configuration file may be specific to the type of operating system being utilized by the server.

In one embodiment a discovery and interrogation process may be performed as part of a backup to determine which server components are critical to the operating system OS . In one embodiment the server may run a Microsoft Windows OS and the discovery and interrogation process may leverage a plurality of application programming interfaces APIs . To perform the discovery and interrogation process the system volume and the boot volume may be detected. API calls may be invoked as part of the discovery and interrogation process and the API calls may utilize one or more win32 APIs file system APIs Volume Shadow Copy Service VSS defined APIs and other APIs.

Also the service control manager may be queried as part of the discovery and interrogation process. The auto start services for the OS may be determined from the service control manager. Also the user auto start services for the OS may be determined such as SQL Exchange and others. In addition the location of the required executables may be determined from the service control manager. Furthermore the backup application may look at the service control manager to find out where all the other critical applications are that must start with the OS so that there is not a failure.

In one embodiment the user interface window generated for restore operations may split up the display of the system components into a first section of the critical components and a second section of the non critical components. The non critical components may include applications application data and user data. The display may show the administrator the required components and may show the additional components separately. This may allow the administrator to more easily determine which components are the critical components that should be included in a restore operation.

These and other features and advantages will become apparent to those of ordinary skill in the art in view of the following detailed descriptions of the approaches presented herein.

In the following description numerous specific details are set forth to provide a thorough understanding of the methods and mechanisms presented herein. However one having ordinary skill in the art should recognize that the various embodiments may be practiced without these specific details. In some instances well known structures components signals computer program instructions and techniques have not been shown in detail to avoid obscuring the approaches described herein. It will be appreciated that for simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements.

This specification includes references to one embodiment . The appearance of the phrase in one embodiment in different contexts does not necessarily refer to the same embodiment. Particular features structures or characteristics may be combined in any suitable manner consistent with this disclosure. Furthermore as used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

Terminology. The following paragraphs provide definitions and or context for terms found in this disclosure including the appended claims 

 Comprising. This term is open ended. As used in the appended claims this term does not foreclose additional structure or steps. Consider a claim that recites A system comprising a server . . . . Such a claim does not foreclose the system from including additional components e.g. a storage device a storage controller .

 Configured To. Various units circuits or other components may be described or claimed as configured to perform a task or tasks. In such contexts configured to is used to connote structure by indicating that the units circuits components include structure e.g. circuitry that performs the task or tasks during operation. As such the unit circuit component can be said to be configured to perform the task even when the specified unit circuit component is not currently operational e.g. is not on . The units circuits components used with the configured to language include hardware for example circuits memory storing program instructions executable to implement the operation etc. Reciting that a unit circuit component is configured to perform one or more tasks is expressly intended not to invoke 35 U.S.C. 112 sixth paragraph for that unit circuit component. Additionally configured to can include generic structure e.g. generic circuitry that is manipulated by software and or firmware e.g. an FPGA or a general purpose processor executing software to operate in a manner that is capable of performing the task s at issue. Configured to may also include adapting a manufacturing process e.g. a semiconductor fabrication facility to fabricate devices e.g. integrated circuits that are adapted to implement or perform one or more tasks.

 Based On. As used herein this term is used to describe one or more factors that affect a determination. This term does not foreclose additional factors that may affect a determination. That is a determination may be solely based on those factors or based at least in part on those factors. Consider the phrase determine A based on B. While B may be a factor that affects the determination of A such a phrase does not foreclose the determination of A from also being based on C. In other instances A may be determined based solely on B.

Referring now to a block diagram of one embodiment of a network environment . The network environment includes servers A B and C and clients A B and C. One or more of servers A C may also be referred to as application servers or media servers. In various embodiments servers A C may be located at any number of locations. In one embodiment two or more of servers A C may be at a common location. Clients A C are representative of any number of stationary or mobile computers such as servers desktop personal computers PCs laptops handheld computers smartphones tablet PCs electronic reading devices or other computing devices.

In network environment servers A C may execute a variety of applications to provide various types of services to clients A C. For example the servers A C may execute front end applications for internet web servers back end applications in support of various front end applications file backup and recovery applications voice communications applications video communications applications email applications instant messaging applications database server applications data processing applications or other applications or combinations thereof.

Servers A C may be coupled to network and may be accessible to clients A C through network . Network may comprise a variety of network connections including combinations of local area networks LANs such as Ethernet networks and Fibre Channel FC networks and wireless local area networks WLANs based on the Institute of Electrical and Electronics Engineers IEEE 802.11 standards Wi Fi and wide area networks WANs such as the Internet cellular data networks and other data communication networks such as a virtual private network VPN implemented over a public network e.g. the Internet . Other network connections and architectures are possible and contemplated.

Servers A C may also be coupled through network to backup server . Backup server may be coupled to storage device and backup server may execute backup application for backing up data to and from servers A C and storage device . Alternatively backup server may access storage device via network . Storage device is representative of any number of storage devices and may comprise any of a variety of types of storage media such as a hard disk drive disk volume server blade flash drive optical drive tape drive tape volume robotic tape library or other storage medium.

Backup application may also be configured to restore data from storage device to servers A C. In some embodiments backup application may also be configured to backup data for clients A C and restore data to clients A C. An administrator or other user may configure backup application to provide backup protection for the various servers A C in network environment . Backup application may include a user interface that allows an administrator to specify when server components and data should be backed up.

In various embodiments backup software running on the servers A C may be used to create and maintain backups of critical components. The term critical components may refer to components that are required for the operating system to start up and execute without failure. The term components may refer to devices services applications drivers volumes drives folders files or other elements that are utilized by an operating system. In one embodiment backup application may load a configuration file with information on what types of components are critical for the specific operating system of a given server. The configuration file may also include information on how to locate the critical components for the specific operating system of the given server. Based on the information in the configuration file backup application may perform a discovery and interrogation process to identify and locate the critical components of servers A C.

The information gathered in the discovery and interrogation process may be provided to backup server by tools installed on the various computing devices of the distributed system. The gathering may be carried out by agents scripts daemons or other tools running on servers A C. Alternatively or in addition the monitoring and gathering of information may be performed by software running from a centralized location such as backup server . These various tools may automatically seek and gather information relevant to the recovery of the operating system. The data collected during the discovery and interrogation process may be stored in backup server in storage device or in another location.

In some embodiments a combination of software executing on backup server and servers A C may perform backup and restore operations. For example in one embodiment servers A C may be configured to receive requests to perform backups and restores from agents or clients such as backup application and in response to manage the backups and restores by scheduling and otherwise controlling performance of the backups and restores.

To assist in recovery operations that may be needed in the event of a disaster or other failure event the servers A C may be monitored by a simplified system protection tool. In one embodiment the simplified system protection tool may be part of backup application . Alternatively the simplified system protection tool may be implemented on one or more of the servers A C. The simplified system protection tool may be configured to automatically backup and recover the critical components for each server in network environment without user intervention.

Servers A C clients A C and backup server may include various hardware and software components. The hardware components may include one or more processors memory devices and input output I O devices connected together via a bus architecture. The software components may include an operating system stored in a memory device. The operating system may be any of various types of operating systems such as Microsoft Windows Linux Unix Solaris Apple Mac OS or iOS Android or others. The operating system may be operable to provide various services to the user and may support the execution of various programs such as backup applications restore applications server applications virtualization applications deduplication engines software agents or any of a variety of other applications.

In other embodiments the number and type of clients servers backup servers networks and storage devices is not limited to those shown in . Also in other embodiments other types of devices and computing resources may be included throughout the network environment. Any number and combination of servers backup servers mobile clients and other computing devices may be interconnected in network architectures via various combinations of modem banks direct LAN connections wireless connections WAN links etc. Also at various times one or more clients and servers may operate offline.

Turning now to a block diagram of one embodiment of components interrogated in a discovery process is shown. Backup server may be coupled to server B via network and backup application executing on backup server may be configured to perform a backup of the critical operating system components of server B. Backup application may also be configured to conditionally include non critical components in the backup. Server B may execute software that assists backup application with the backup process. In another embodiment a backup application may execute on server B and this backup application may perform backups independently of backup server . While backup application is described as performing or being configured to perform certain steps or tasks it is to be understood that other software applications or agents may be configured to perform these tasks independently or in combination with backup application in other embodiments.

Backup application may perform a discovery process of server B as part of a backup job. In one embodiment the discovery process may be the initial step in the backup job. The discovery process may involve interrogating server B to determine the current devices. Once the current devices have been determined backup application may identify which devices are critical and which devices are non critical. In one embodiment backup application may access configuration file which details what types of critical devices to search for and how to search for them based on the specific type of operating system used by the server being backed up. Configuration file may include profile and configuration data that corresponds to a specific operating system. In one embodiment configuration file may be supplied by a vendor of the operation system. For example in server B may run a Microsoft Windows operating system and so backup application may load configuration file which is specific to Windows. In other embodiments other configuration files may be loaded for other operating systems e.g. Unix Linux Solaris which may be utilized by server B.

In one embodiment a determination may be made as to whether a server is a candidate for participation in a simplified disaster recovery backup being performed by backup application based on its operating system platform. It may be the case that some servers may be excluded from simplified disaster recovery backups. For example servers running Windows OS may be able to participate in simplified disaster recovery backups while virtual clustered Windows OS servers may be excluded from participation. In some embodiments various types of servers such as servers that are clustered servers clustered application servers and distributed application servers may not be candidates for the simplified disaster recovery backups.

In the example shown in the discovery process may involve querying system volume boot volume and service control manager of server B to determine the critical devices. System volume may include the master boot record MBR and the BIOS. The auto start services for the operating system may be determined from service control manager . Service types 0 2 may be considered critical while service types 3 and higher may be considered non critical. The location of the required executables may be determined from service control manager . Also the user auto start services for the operating system may also be determined such as Structure Query Language SQL Server Exchange etc. Windows API calls may be invoked as part of the discovery process to obtain the critical device information. Also VSS may be used to determine the operating system components. Applications are representative of any non critical applications or programs and non critical data of server B and applications and associated data may be identified as non critical components during the discovery process.

A discovery process may be performed each time backup application performs a backup job. It is possible that new critical devices have been added or critical devices have been removed since the last backup job was performed and so the discovery process may be performed each time a backup is performed. If any new critical devices are discovered they may be automatically added to the backup without any user intervention. In some embodiments the discovery process may be performed separately from a backup job and data may be stored based on the results of the discovery process. Then when the next backup job is performed the stored results may be utilized to identify and backup the critical components.

Turning now to one embodiment of a backup application user interface is shown. The example of user interface shown in is illustrative of a user interface for a backup application operating in a Windows operating system environment. However it is to be understood that other types of backup application user interfaces may be utilized with other operating system environments.

In one embodiment window of user interface may list a plurality of servers which may be part of an overall system or data center. In the example shown in the plurality of servers listed in window includes servers A C of network environment of . A server may be selected in window by an administrator and then a second window window may be generated with specific information for the chosen server. As shown in server A has been selected in window and as a result window is displayed for server A. Window may be generated from window to show the backup selection information for server A for a specific backup job.

As can be seen in window switch is on which selects the simplified disaster recovery setting. The terms simplified disaster recovery and simplified system protection tool may be used interchangeably throughout this disclosure. When switch is on this enables the automatic protection of the critical operating system components of the chosen server server A . In one embodiment switch may be set to on by default for all servers being protected by the backup application.

Window displays the specific backup selections for server A according to one example of backup selections which may be chosen by an administrator. As can be seen in window the C volume and system state have been selected by an administrator for protection as indicated by the checkmarks next to their entries in window . The C volume and System State are the components that have been identified as critical components for the operating system of server A. The E volume and SQL Server Instances are excluded as shown with the X in each of the boxes next to their names. The E volume and SQL Server Instances are the components that have been identified as non critical components. The examples of critical and non critical components shown in window are merely illustrative and in other embodiments other critical and non critical components may be identified for a given server.

In one embodiment if all of the entries of critical components have been selected then switch may be on . If one of the critical components were excluded from the backup then switch may toggle to off which would indicate that at least one critical component was excluded. In another embodiment if switch is on then all critical components may automatically be selected. The administrator may then have the option to select one or more non critical components to include in the backup.

Each server listed in window may be monitored by the backup application. The backup application may maintain a list of the critical and non critical components of each server and the backup application may display these components in a pop up window when the respective server is selected in window . In one embodiment the critical components may be displayed in a first section of window and the non critical components may be displayed in a second section of window . It is noted that other embodiments of user interface may utilize other numbers of windows and some of the information shown in windows may be organized within one or more windows in any suitable fashion.

Referring now to another illustration of a user interface for a backup application is shown. As shown in the user interface includes window which lists the components that have been discovered for server C. Window labeled Backup Selections shows that simplified disaster recovery is enabled which signifies that the critical operating system data for server C will be protected automatically during any backup jobs that are performed. The components that have been identified for server C are shown in the left pane of window and these include the C volume E volume Y volume SQL Server Instances Shadow Copy Components and System State.

The Shadow Copy Components category has been expanded in the left pane of window and this category includes user data such as the distributed file system replication. The Payroll selection has been highlighted and so the Payroll selection appears in the right pane of window . This is for illustrative purposes only and other components may be selected in the left pane and then featured in the right pane of window . In one embodiment the Shadow Copy Components listed in the left pane of window may be identified as non critical during the discovery process and may be excluded from the simplified disaster recovery backup jobs. Alternatively in another embodiment a portion or all of the Shadow Copy Components may be conditionally included in the simplified disaster recovery backup jobs. The administrator may choose to have some or all of the non critical components included with the critical components that are backed up.

The System State category has also been expanded in the left pane of window . The listed System State components include System Files Event Logs Registry Windows Internet Name Service Windows Management Instrumentation and COM Class Registration Database. These components may be identified as critical during the discovery process. In other embodiments other components may be included within the System State Components listed in window .

In other embodiments other critical services and components may be included. For example in one embodiment a server may have the following critical services and components System Devices Basic Input Output System BIOS Extensible Firmware Interface EFI Unified EFI UEFI and Utility Partition volumes Boot Device Executing Windows Operating System volumes System Services Devices Boot System and Auto Start Services volumes and System State devices such as Active Directory Background Intelligent Transfer Service BITS Certificate Services Cluster Quorum COM Class Registration Database Dynamic Host Configuration Protocol DHCP Event Logs File Server Resource Manager FSRM Internet Information Services MS Search Service Network Policy Server NPS Performance Counter Registry Remote Storage Removable Storage Manager RSM Shadow Copy Optimization System Files SYSVOL Task Scheduler Terminal Server Licensing TSL Terminal Services Gateway TSG VSS Express Writer Windows Deployment Services WDS Windows Internet Name Service WINS and Windows Management Instrumentation WMI . In other embodiments the critical services and components that may be part of an operating system for a given server may vary. The critical device information may be cached by the backup application and accessible for enumeration browsing protection and recovery operations. The remaining discovered operating system devices and application may be deemed as non critical devices. In one embodiment these remaining devices and application may include user defined volumes application volumes VSS User Data Writer Components and application agents.

On subsequent protection operations the critical device information may be compared to the most recent previous protection operation. If a new critical system device is introduced or removed subsequent to the previous protection operation an indication of this may be logged and presented to the administrator via the user interface. Also if an existing non critical device turns critical then it will be logged and automatically protected.

Turning now to one embodiment of a restore window in a user interface is shown. Window labeled Restore Window may be generated by the backup application user interface in response to an administrator initiating a restore operation. In one embodiment window may be generated to allow an administrator to restore a server executing a Microsoft Windows operating system for which all necessary components were backed up.

In window an administrator may select a specific backup job from a specific point in time with which to restore a server. Then after choosing a specific backup job window may display the components of the backup job at a high level. The components may be displayed in two different sections. The first section may display critical components which are labeled Components necessary for complete online restore in window . These critical components include System State and the C volume and each of these components is selected with a check mark. The critical components shown in window are illustrative of the critical components that may have been backed up for a server in one scenario. Other backup jobs may have other numbers and types of critical components. The second section of window may display non critical components which are labeled Application data or non system user data in window . The E volume is listed as the only non critical component in window . The administrator may have the option of including the non critical components in the restore operation by selecting them in window .

It is noted that other non critical components may be listed in window in other embodiments. Additionally in another embodiment a third section may be displayed in window for non critical devices that cannot be recovered until a subsequent recovery pass. For example if a Microsoft SQL Server or Microsoft Exchange Server is included in the simplified system protection backup but a non file based technology e.g. application proprietary streaming interface was used during the backup and if the corresponding application is not present and or not executing then these non critical components will not be able to be restored and may be listed in a third section of window . In contrast if a file based technology e.g. snapshot was used for the backup or if the corresponding application is present and executing then these non critical components may be listed in the second section of window .

During a recovery operation for a server the simplified disaster recovery tool may validate that all of the critical devices are being recovered. This is indicated in window by the check mark next to each of the critical components. All of the critical components may be recovered as a collection by the simplified disaster recovery tool. The simplified disaster recovery tool may also validate that the non critical devices can be recovered based on stored metadata and the interrogation of the current recovery environment via operating system and application proprietary interfaces. If a critical device cannot be recovered or is not available for recovery then the recovery operation will result in a failure. If a non critical device cannot be recovered the recovery may continue and the specific unrecoverable non critical device may be reported in the user interface.

Referring now to one embodiment of another restore window in a user interface is shown. Window may be generated for an administrator wishing to restore individual items from Active Directory or System State. This is an alternative to restoring the entire operating system and allows an administrator to restore individual components from previous backup jobs. As shown in window two separate point in time System State backups are displayed and the administrator has selected to restore the Registry from one of the backups. This selection is merely illustrative and the administrator may select other components in other embodiments. Also in other embodiments other components may be listed in window and available for restoration.

Turning now to one embodiment of a job log window within a user interface is shown. A backup of one of the servers in the overall system may be performed and as part of the backup a discovery process may be performed to identify the critical devices of the given server. In some embodiments the current discovery process may be compared to previous discovery processes that were performed for earlier backup jobs. The critical devices may have been identified in an earlier discovery process and the critical devices identified in the current discovery process may be compared to the critical devices identified in the most recent discovery process.

Job log window is shown in and job log window may be generated within the user interface in response to detecting a critical device in the discovery process that was excluded from the list of devices to be protected. This is reported in the following message within job log window Critical Resource Server A E was not included in the original selections list but has been included to ensure complete protection. This notifies the administrator that their manual selection of components did not include all of the critical components necessary for a full system restore. The missing critical component may be automatically selected by the backup application in spite of being excluded by the administrator. This prevents a backup from being performed that would be incapable of fully restoring the system if a recovery is needed at some future point.

Also job log window reports that a new critical system device E volume has been detected during the current discovery process. The warning appears with the following message Resource Server A E was not found in the previous instance of this job. It will be fully protected in this job. In general this warning may be generated to inform the administrator of any new critical devices which have not been previously backed up. Job log window may alert the administrator that a new critical device has been discovered on the server. As shown E is a volume that was identified as a critical device in the current discovery process and as indicated in window E was not found in the previous instance of this job. The E volume may have been added since the most recent backup which accounts for why it was not in the previous instance of the job. Alternatively the E volume may have been a non critical device on a previous backup job and may have become critical since the last backup job. As a result of being identified during the current discovery process the new critical device E volume may be automatically added to the set of critical devices that are backed up by the simplified disaster recovery tool and this may take place without any action from the administrator. Job log window may be a notification to the administrator that the new critical device E volume is being backed up with the other critical devices.

It is noted that other job log windows may be generated for other scenarios that may be encountered in a backup job. For example if a non critical component is included in a backup job full incremental or differential and then is excluded from the next backup job this may be reported in a job log window to inform the administrator. In general the exclusion of an existing device critical or non critical or the inclusion of new device critical or non critical in a backup job may result in a job log window being generated to notify the administrator.

Referring now to one embodiment of a method for protecting and restoring the operating system of a computing system is shown. In one embodiment method may be performed by a software application executing on one or more processors of a computing system. For purposes of discussion the steps in this embodiment are shown in sequential order. It should be noted that in various embodiments of the method described below one or more of the elements described may be performed concurrently in a different order than shown or may be omitted entirely. Other additional elements may also be performed as desired.

In one embodiment a request to perform a backup of the critical components of an operating system of a computing system may be generated block . In various embodiments the computing system may be a server e.g. applications server media server computer laptop smartphone tablet or other device. The request may be generated in a variety of ways. For example a user may initiate the backup of the critical components via a user interface of a backup application. Alternatively a backup application may initiate the backup according to a schedule e.g. daily weekly . In one embodiment the backup application may execute on a backup server that is connected to the computing system directly or over a network. The backup application may communicate with a software agent or application running on the computing system. Alternatively the backup application may execute on the computing system.

In response to the backup request being generated a discovery process may be performed to determine the critical components of the computing system block . The critical components are the components which are required for restoring the operating system to an operational state and the critical components may include fewer than all of the plurality of components of the operating system. The critical components enable the operating system to boot up properly and achieve a functional state. Once the operating system has reached the functional state subsequent recovery passes may restore non critical components application data and user data.

In one embodiment the operating system of the computing system may be a Microsoft Windows operating system though other operating systems are possible and are contemplated. In this embodiment the discovery process may include querying the system volume boot volume and service control manager. The system volume refers to the disk volume that contains the hardware specific files that are needed to start Windows. The boot volume refers to the disk volume that contains the Windows operating system files and the supporting files. The service control manager keeps track of all running software processes and maintains a database of installed services and driver services that allow the operating system to start successfully. API calls may be invoked to query the various volumes and components. In other embodiments other operating systems may be utilized and the components that are queried during the discovery process may vary depending on the operating system. In various embodiments the backup application may load a configuration file with detailed information for determining the critical components for the specific operating system being utilized by the computing system. The discovery process may be based on the information contained in the configuration file.

The critical components may be discovered during the discovery process. If a previous discovery process was performed for a previous backup then the discovered critical components in the current discovery process may be compared to the previous discovery process. If a new critical component is discovered in the current discovery process then the new critical component may be automatically included in the backup without user intervention. If the current backup is an incremental backup then the incremental backup may be converted to a full backup for the new critical component. All other data may still be backed up on an incremental basis but the backup of the new critical component may become a full backup. Also if the current backup is a differential backup then the differential backup may be converted to a full backup for the new critical component.

In one embodiment a user interface may be generated and the discovered critical components may be displayed in the user interface block . In some embodiments those components that were discovered and determined to be non critical components may be displayed in the user interface and these non critical components may be labeled as non critical to inform the administrator of their status. In one embodiment within the user interface the administrator may be able to select which components are included in a backup. If the user excludes one or more critical components from the selection of components to be backed up the excluded critical components may still be included in the next backup anyway. A log may be generated in the user interface to inform the administrator that they have excluded a critical component and that the critical component will be included in the backup in spite of its exclusion. The backup application may override the user decision and backup the excluded critical component with the other critical components.

It is noted that the administrator may make selections within the user interface at various stages during the overall backup process. For example the user interface may be accessed following a backup job and the user interface may display the components that were discovered and backed up during the last backup job. Then the administrator may select components within the user interface and these selected components may be backed up on the next backup job. When the next backup job is performed a new discovery process may be performed to re interrogate the system and determine if the system has changed. The administrator may access the user interface following this discovery process and the administrator may have the option of changing the selections that were previously made.

Next a backup of the critical components may be performed block . In one embodiment the discovery process and backup may be performed automatically without user intervention. In one embodiment any non critical components that were identified during the discovery process may be excluded from the backup. Alternatively one or more non critical components may be included in the backup if they were selected for inclusion by a user.

Metadata associated with the backup may also be generated and stored with the critical components in the backup block . The metadata may list the critical components that were discovered and backed up. In some embodiments the metadata may also list an order in which critical components should be restored in the event of a recovery of the backed up operating system.

In various embodiments the critical components may be backed up as a collection to facilitate a simple recovery process in the event of a disaster or system failure. For example in one embodiment the critical components may be backed up in an executable format to a bootable storage medium e.g. CD DVD USB flash drive . During a disaster recovery the bootable storage medium may be used to boot the system and get the operating system into an operational state. In another embodiment the critical components may be backed up to a specific location on a storage device in the disaster recovery path of the target computing system. The computing system could then boot from this specific location when recovering from a disaster. Other suitable backup scenarios to accommodate a simplified disaster recovery are possible and are contemplated.

At some later point shown in the same figure for ease of discussion which could be immediately after the just performed backup or could be many backups later a request may be received to perform a recovery of the operating system block . The request may be generated due to a disaster hardware or software failure or other event. In response to receiving the request to perform a recovery the backup application may retrieve the metadata from the backup and utilize the metadata to retrieve the stored critical components block . Then the critical components may be restored to the target computing system block . The target computing system may be the same computing system that was originally backed up or may be a different computing system. After block method may end.

It is noted that the above described embodiments may comprise software. In such an embodiment program instructions and or a database both of which may be referred to as instructions that represent the described systems and or methods may be stored on a non transitory computer readable storage medium. Generally speaking a computer readable storage medium may include any storage media accessible by a computer during use to provide instructions and or data to the computer. For example a computer readable storage medium may include storage media such as magnetic or optical media e.g. disk fixed or removable tape CD ROM DVD ROM CD R CD RW DVD R DVD RW or Blu Ray. Storage media may further include volatile or non volatile memory media such as RAM e.g. synchronous dynamic RAM SDRAM double data rate DDR DDR2 DDR3 etc. SDRAM low power DDR LPDDR2 etc. SDRAM Rambus DRAM RDRAM static RAM SRAM ROM non volatile memory e.g. Flash memory accessible via a peripheral interface such as the USB interface etc. Storage media may include micro electro mechanical systems MEMS as well as storage media accessible via a communication medium such as a network and or a wireless link.

In various embodiments one or more portions of the methods and mechanisms described herein may form part of a cloud computing environment. In such embodiments resources may be provided over the Internet as services according to one or more various models. Such models may include Infrastructure as a Service IaaS Platform as a Service PaaS and Software as a Service SaaS . In IaaS computer infrastructure is delivered as a service. In such a case the computing equipment is generally owned and operated by the service provider. In the PaaS model software tools and underlying equipment used by developers to develop software solutions may be provided as a service and hosted by the service provider. SaaS typically includes a service provider licensing software as a service on demand. The service provider may host the software or may deploy the software to a customer for a given period of time. Numerous combinations of the above models are possible and are contemplated.

Although several embodiments of approaches have been shown and described it will be apparent to those of ordinary skill in the art that a number of changes modifications or alterations to the approaches as described may be made. Changes modifications and alterations should therefore be seen as within the scope of the methods and mechanisms described herein. It should also be emphasized that the above described embodiments are only non limiting examples of implementations.

