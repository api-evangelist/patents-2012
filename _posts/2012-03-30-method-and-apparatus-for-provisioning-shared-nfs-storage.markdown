---

title: Method and apparatus for provisioning shared NFS storage
abstract: Methods and apparatus for provisioning shared NFS storage in a cloud storage environment having a storage layer, a compute layer, a network layer connecting the storage layer and the computer layer, and a management layer coupled to the compute layer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455883&OS=09455883&RS=09455883
owner: EMC Corporation
number: 09455883
owner_city: Hopkinton
owner_country: US
publication_date: 20120330
---
As is known in the art cloud computing systems contain large numbers of servers hardware devices servers storage systems networking devices software modules and components. When configuring a computer system host to communicate with a storage system array using a network based file system NFS provided over the IP protocol it is common to configure VLANs virtual local area networks and access control to the network attached storage volumes. A VLAN vlan represents a logical segmentation of a physical Ethernet network. Membership in the VLAN by a host or array is determined by physical connectivity to an intermediate network device switch to an Ethernet adaptor adaptor located on the host and array components which are identified by IP internet protocol address and MAC media access control address.

Sets of hosts switches and arrays assembled in close proximity make up a unit of cloud infrastructure sometimes referred to as a pod pod of devices. The pod components are physically connected via Ethernet networks. The logical configuration of pod components and networks creates a platform that is sold or leased as a service service from a menu of predefined configuration offerings offering for consumers of cloud computing. Offerings from vendors define the type and quantity of resources such as three servers with 16 GB of memory having four processors with 20 GB of disk space each and a shared storage volume of 200 GB. This allows for the consumer to use the host and storage resources in predetermined offerings within the pods making up the cloud.

In general method and apparatus of the present invention use an information model IM comprising hosts arrays network devices VLANs for service offerings in a cloud computing environment. With user input the system configurations for host adaptors and arrays can be computed to create the storage service from the storage service offering. A provisioning work flow executes changes to logical configurations of pods of infrastructure comprised of hosts network and array resources. Using this provisioning workflow the needed transformations to the configurations can be made. The provisioning workflow identifies the set of hosts and adaptors along with the network configurations and array configurations required to assemble an operational cluster of storage connected compute nodes within the pod infrastructure.

This set of changes can be applied to the element management systems of the infrastructure platform thereby providing infrastructure as a service for consumers of the pod architecture. The infrastructure service comprises network connected NFS storage shared between trusted compute nodes running an operating system such as VMWare ESX capable of sharing resources using the common NFS storage.

Using this information model in conjunction with a grading and classification system for physical resources the system can identify and create logical resources required to satisfy a set of constraints for logical configuration security and class of resource selection. Classes of resources can then be provisioned into infrastructure services using a single service offering definition into a pod infrastructure. Selecting and activating a predefined service offering can create this infrastructure service in accordance with user instruction.

In one aspect of the invention a method comprises in a cloud computing environment having a management layer a compute layer a network layer a storage layer and pods defining service offerings for a user comprising network configurations storage configurations and compute configurations receiving a user selection for a first one of the service offerings selecting a first one of the pods based upon the user selection including class of service creating using a computer processor a volume with configuration settings based upon the user selection and exposing the created volume using NFS using a determined IP address.

In another aspect of the invention an article comprises a computer readable medium comprising non transitory stored instructions that enable a machine to perform in a cloud computing environment having a management layer a compute layer a network layer a storage layer and pods defining service offerings for a user comprising network configurations storage configurations and compute configurations receiving a user selection for a first one of the service offerings selecting a first one of the pods based upon the user selection including class of service creating using a computer processor a volume with configuration settings based upon the user selection and exposing the created volume using NFS using a determined IP address.

In a further aspect of the invention a cloud computing system comprises a storage layer a compute layers a network layer connecting the storage layer and the computer layer a management layer coupled to the compute layer the management layer comprising a processor and stored instructions in memory to enable the system to define service offerings for a user comprising network configurations storage configurations and compute configurations receive a user selection for a first one of the service offerings select a first one of a plurality of pods based upon the user selection including class of service create using a computer processor a volume with configuration settings based upon the user selection and expose the created volume using NFS using a determined IP address.

The compute layer comprises components such as blade servers chassis and network interconnects that provide the computing power for the platform. The storage layer comprises the storage components for the platform. The network layer comprises the components that provide switching and routing between the compute and storage layers within and between platforms and to the client or customer network.

It is understood that a variety of other configurations having different interconnections and storage configuration can be provided to meet the needs of a particular application.

The management layer can include a number of applications to perform various functions for overall control configuration etc of the various platform components. For example management applications can include a virtualization function such as vSphere vCenter by VMware of Palo Alto Calif. A further management application can be provided as part of the Unified Computing System UCS by Cisco. It is understood that the blade chassis and fabric interconnection can be considered part of the UCS. Another management application can includes a management interface such as EMC Unisphere to provide a flexible integrated experience for managing existing storage systems such as CLARIION and CELERRA storage devices from EMC. A further management application includes a platform element manager such as unified infrastructure manager UIM by EMC for managing the configuration provisioning and compliance of the platform.

It is understood that various vendor specific terminology product name jargon etc. may be used herein. It is further understood that such vendor specific information is used to facilitate an understanding of embodiments of the invention and should not limit the invention in any way. Any specific vendor information should be construed mean a to generic product function or module.

The unified infrastructure manager further includes a change and configuration management module a policy based compliance and analysis module a unified infrastructure provisioning module a consolidation topology and event service module and an operational awareness module . The various modules interact with platform elements such as devices in compute network and storage layers and other management applications. The unified infrastructure manager performs platform deployment by abstracting the overall provisioning aspect of the platform s and offering granular access to platform components for trouble shooting and fault management.

APIs provide a native computer programming language binding that can be executed from the native computer programming language. Java is a widely used language in computer programming and many vendors provide java language libraries and examples to execute commands against the management interface of their devices.

Referring again to one or more hosts are associated with a service to fulfill the compute requirements of the service. One or more network adaptors are associated with a service to indicate the need for Ethernet connectivity to a network. A network profile is associated with each adaptor that indicates the VLAN and IP address required to fulfill the storage connectivity using the Ethernet. This network profile is associated to a storage profile to indicate that the host is to obtain storage from a network with this VLAN and IP network.

The service offering is used to hold the relationships and detailed description for the user to choose the offering from a menu of offerings. The storage profile is associated with the offering to indicate the class of storage and service settings for the storage to be configured such as features like de duplication write once read many auto extension maximum auto extensions thin provisioning etc. A volume profile is associated with the storage profile to indicate specific volume properties and characteristics such as size and quota limitations.

In step based on the offering chosen by the user a pod can be selected by the management layer using the service information model that defines the desired quality of service and class of service required. This information is described in the service information model storage profile and volume profile see . Using this information the system can determine the correct pod placement for the volume.

A POD is chosen by matching the class of service defined in the offering with the class of service provided by the POD. The Class of Service CoS is defined as a label that is relative to the service provided by the POD. For example as shown in a Gold class of service could be defined as having a dedicated LAN large storage dedicated ESX and a large server. Silver and Bronze offerings provide less in at least one area. In embodiment the Gold class of service provides de duplication. When selecting a POD for service placement the management layer selects an array that provides the de duplication feature for Gold services. The list of CoS for an array would be cross referenced with the list of CoS for a service offering to locate an acceptable pod and array on which to create the service.

In step once the volume characteristics and properties are known from the service information model the service layer can begin to create the volume by defining the configuration settings such as size protection levels and placement of the volume on a data mover in relationship to the VLANs connecting the host and array adaptors from the configuration model. The properties of the volume are used in conjunction with the CoS of the Storage Profile to create the configuration settings of the volumes in the service. The Service s network profile determines the VLAN upon which to establish the network connection to the network shared volume. In step it is determined whether the volume exists such as by using the management interface of the array the service layer to query the array s of the pod to see if there were already volumes created for that service If it is determined the service does not already contain a volume that meets the criteria of the offering the management layer executes commands through a mediation interface to the physical device management system to create the volume using the characteristics determined above in step .

Processing continues in step wherein the volume is exported. Using the network profile information contained in the service information model the service layer determines the network access restrictions consisting of the VLAN IP address and authentication credentials for the network attached volume.

In step a host interface is determined using the service information model network profile and the VLAN and IP address settings are determined for the host adaptor. In step the management layer determines cross connects. Using the VLAN the correct adaptor for the array can be determined by cross referencing the membership of the adaptor in a given VLAN. In step using the information determined above the array management interface is configured to expose the created volume using NFS protocol to the determined IP address.

Referring to a computer includes a processor a volatile memory an output device a non volatile memory e.g. hard disk and a graphical user interface GUI e.g. a mouse a keyboard a display for example . The non volatile memory stores computer instructions an operating system and data for example. In one example the computer instructions are executed by the processor out of volatile memory to perform all or part of the processing described above. An article can comprise a machine readable medium that stores executable instructions causing a machine to perform any portion of the processing described herein.

Processing is not limited to use with the hardware and software described herein and may find applicability in any computing or processing environment and with any type of machine or set of machines that is capable of running a computer program. Processing may be implemented in hardware software or a combination of the two. Processing may be implemented in computer programs executed on programmable computers machines that each includes a processor a storage medium or other article of manufacture that is readable by the processor including volatile and non volatile memory and or storage elements at least one input device and one or more output devices. Programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the programs may be implemented in assembly or machine language. The language may be a compiled or an interpreted language and it may be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program may be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network. A computer program may be stored on a storage medium or device e.g. CD ROM hard disk or magnetic diskette that is readable by a general or special purpose programmable computer for configuring and operating the computer when the storage medium or device is read by the computer to perform processing.

One skilled in the art will appreciate further features and advantages of the invention based on the above described embodiments. Accordingly the invention is not to be limited by what has been particularly shown and described except as indicated by the appended claims. All publications and references cited herein are expressly incorporated herein by reference in their entirety.

