---

title: Systems and methods for streaming media content
abstract: Disclosed are various embodiments for facilitating streaming of media content. Video content is retrieved over a network from one or more client devices capturing video content. Data items associated with the plurality of video content are also retrieved. A list order for the plurality of video content is determined according to at least a portion of the retrieved data items, and a user interface is encoded for display where the user interface contains a plurality of items corresponding to the plurality of video content, the items being positioned within the user interface according to the list order.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08931011&OS=08931011&RS=08931011
owner: Amazon Technologies, Inc.
number: 08931011
owner_city: Seattle
owner_country: US
publication_date: 20120313
---
As smartphones and other devices capable of capturing audio video content have become ubiquitous it is common for people to capture media content for others to later view via the Internet given the availability of network connectivity for computing devices. As such video content is widely available to be downloaded for viewing purposes. Users may for example select media titles by browsing an electronic publisher s network site. Conventional download systems allow users to select media content of interest after the media content has been captured and stored.

The present disclosure relates to systems and methods for allowing streaming of media content including for example location tagged video whereby users may consume the streaming media content in real time or substantially in real time. Users of the service provide media content by executing an application and utilizing their media capture device. The captured media content may then be consumed in any number of relevant contexts via a web browser or application thereby providing viewers with a means to view global events in real time.

Disclosed are various embodiments for facilitating streaming of media content. Video content and associated data items are retrieved over a network from one or more client devices capturing video content. A list order for the plurality of video content is determined according to at least a portion of the retrieved data items and a user interface is encoded for display where the user interface contains a plurality of items corresponding to the plurality of video content the items being positioned within the user interface according to the list order.

In accordance with some embodiments users may retrieve media content by navigating a user interface embodied as a map where viewers may zoom in to expand one or more regions of interest. Viewers may then select media content based on such criteria as event descriptions video quality location where the media content is being originated and so on. For some embodiments viewers may retrieve media content streams marked public as well as streams provided by their social networking connections e.g. friends family . Furthermore media content such as video streams of a particular event may be created from multiple vantage points thereby providing viewers with various viewing options. In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

With reference to shown is a networked environment according to various embodiments. The networked environment includes one or more computing devices in data communication with one or more clients by way of a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks.

The computing device may comprise for example a server computer or any other system providing computing capability. Alternatively a plurality of computing devices may be employed that are arranged for example in one or more server banks or computer banks or other arrangements. For example a plurality of computing devices together may comprise a cloud computing resource a grid computing resource and or any other distributed computing arrangement. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience the computing device is referred to herein in the singular. Even though the computing device is referred to in the singular it is understood that a plurality of computing devices may be employed in the various arrangements as described above.

Various applications and or other functionality may be executed in the computing device according to various embodiments. Also various data is stored in a data store that is accessible to the computing device . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing device include for example a networked storage system and a content delivery service that includes such platform level components as a media content aggregator and an analytics engine . The components executed in the computing device may further include a developer interface that includes such application level components as a network page server and a user interface application implemented in one or more customized applications . The computing device may include other applications services processes systems engines or functionality not discussed in detail herein.

The content delivery service is executed to facilitate the transmission of media content captured by one or more clients and to facilitate electronic communications with one or more viewing clients where such electronic communications may be generated and transmitted via the network . The media content aggregator in the content delivery service retrieves media content being captured in real time or substantially in real time by one or more clients and may temporarily buffer the uploaded media content in the data store before streaming the captured media content to a viewing client .

The analytics engine is executed to analyze data items uploaded in conjunction with media content from one or more clients and prioritize the uploaded media content according to one or more criteria which may be for example specified by the user of a viewing client . Based on the prioritized list of media content the user interface application encodes a user interface for display that allows a user of a viewing client to navigate and select media content for consumption. A user capturing media content may wish to limit viewing of the media content to certain individuals such as friends and family of the user. Thus for some embodiments the user interface application may also be executed to generate recommendations or invitations embodied as electronic communications for purposes of facilitating media content streaming to one or more viewing clients .

The developer interface is executed to provide third party as well as first person developers with a programming interface for developing applications for allowing viewing clients to access media content provided by the content delivery service . Third party developers and other entities may utilize the developer interface to facilitate access to media content by way of more of more application programming interfaces APIs provided by the developer interface . Through the development platform provided by the developer interface third party developers may provide customized applications for accessing and consuming captured media content by utilizing such features as those provided by the content delivery service .

In this regard third party developers associated with for example news outlets organizations video sharing entities social media outlets etc. may leverage features offered by the content delivery service and build customized applications for providing a branded experience relating to surfacing of media content to viewing clients . At the same time third party developers may utilize the developer interface to restrict access to the captured media content via for example a paywall or some other mechanism.

Developers interact with the developer interface executing in the computing device to develop applications that may generate for example user interfaces encoded for display on viewing clients for purposes of accessing captured media content . In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same. The developer interface may include a commercially available hypertext transfer protocol HTTP server such as for example Apache HTTP Server Apache Tomcat Microsoft Internet Information Services IIS and so on.

The network page server in an application within the developer interface is executed to facilitate the online streaming of media content over the network based on for example recommendations invitations transmitted to individuals. As an example the network page server may encode network pages or portions thereof that are rendered for display by one or more viewing clients . According to various embodiments the content delivery service is configured to generate user interfaces and or recommendations invitations for consuming media content via the network . Various mechanisms may be employed by the content delivery service to generate a listing of media content for consumption where viewers are provided an opportunity to sort and prioritize media content before making one or more selections.

The networked storage system is executed to maintain a file hierarchy of files and folders in networked or metadata based file systems for users. The networked storage system may be regarded as maintaining a file system for each of the users of the system. To this end the networked storage system may support various file related operations such as for example creating files deleting files modifying files setting permissions for files downloading files and or other operations. The networked storage system may be configured to maintain a record of file activity e.g. uploading of files downloading of files deletion of files previewing of files etc. The networked storage system may be configured to serve up data addressed by uniform resource locator URL via hypertext transfer protocol HTTP .

In some embodiments the networked storage system may correspond to a virtual file system where the actual data objects of the files are stored in a separate data storage system. A metadata service may be used to associate metadata with the files thereby facilitating searches of the files using the metadata. By storing files in such a networked storage system users may access the files from any client with connectivity to the network .

A metadata service may be executed in association with or as part of the networked storage system to maintain metadata items in association with files. To this end such a metadata service may support various operations such as for example creating metadata items deleting metadata items retrieving metadata items searching on metadata items and or other operations. The metadata service may also implement one or more searchable indices of the metadata items. It is noted that the networked file system associated with each user storage account in the networked storage system may be a metadata based file system such as that described by U.S. patent application Ser. No. 13 036 539 entitled METADATA BASED FILE SYSTEM which was filed on Feb. 28 2011 and is incorporated herein by reference in its entirety.

The data stored in the data store may include one or more user accounts . Associated with each user account for example is various data associated with a respective user such as user profile data and social networking data . The data store may also include captured media content uploaded to the computing device from one or more clients one or more data items associated with the media content among other types of data associated with a respective user.

The one or more data items may include for example extrinsic data items that are not obtained directly from video content features of the media content . In other words the extrinsic data items may be obtained from an external source. This is in contrast to intrinsic data which may be obtained from the video or audio of video content features. Non limiting examples of the extrinsic data items may include names or descriptions of individuals in the captured media content . The extrinsic data items may include curated data that is professionally managed verified or is otherwise trustworthy.

Stored with the extrinsic data items may be date time associations which are user generated associations between extrinsic data items and specific times in the capturing of a video content feature. For some embodiments the analytics engine in the computing device may be executed to extract intrinsic data from media content uploaded from a client where the intrinsic data may comprise such information as a number of faces detected within the media content .

The data store also includes social networking data that may comprise for example a listing of friends of the user currently capturing media content . Such friends may comprise individuals with whom the user shares an interpersonal connection such as friendship spousal relationships being related by blood relationship and other types of interpersonal connections. The social networking data may contain such information as demographic information occupation interests and so on.

The social networking data may further comprise profile data associated with one or more social networks that are frequented by users associated with the user accounts . Non limiting examples of social networks include Facebook Twitter MySpace and others. The friends include those individuals who may or may not hold their own user account with whom a given user has an interpersonal relationship. The friends may be identified by interfacing with a given social network such as Facebook Twitter MySpace and others.

Such social network sites may specify Applications Programming Interfaces APIs to which the content delivery service may send an API call to request information about the friends of a user on such social networks. Alternatively one or more user interfaces may be generated in the form of network pages or other content that facilitate a user specification of their friends by facilitating a search for such individuals in the user accounts .

Assuming a listing of friends is obtained from a third party social networking site the content delivery service may also employ various approaches to associating previously existing user accounts with the friends discovered for a given user. To this end a user account may be confirmed to belong to a friend of a given user by sending further API calls to the social networking site to verify that the user account correlates to a friend of the respective user on the social networking site. This may especially be necessary where a friend of an individual has a common name.

The user profile data may include information about users with which the file systems in the networked storage system are associated. The user profile data may also include information about user accounts with an electronic commerce system. Such information may comprise for example name shipping address payment instruments and other information. Account settings may be employed to specify and track various settings and other functionality with respect to a given account such as passwords security credentials file management permissions storage quotas and limitations authorized access applications billing information and or other data.

The client is representative of a plurality of client devices that may be coupled to the network . The client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The client may include a display where the display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc. The client may further comprise a global positioning system GPS device configured to determine a current location of the client . Such GPS location data may then be uploaded in conjunction with captured media content to the computing device .

The client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a client for example to access and render network pages such as web pages or other network content served up by the computing device and or other servers thereby rendering a network page on the display. The client may further comprise a media capture device such as a digital camera capable of capturing both digital images and video content where the media capture device also includes an integrated microphone for capturing audio content. As shown the client uploads captured media content and corresponding data items via the network to the computing device where the content delivery service then streams the media content to one or more viewing clients for consumption.

The viewing client is representative of a plurality of client devices that may be coupled to the network . The viewing client may comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. The viewing client may include a display where the display may comprise for example one or more devices such as cathode ray tubes CRTs liquid crystal display LCD screens gas plasma based flat panel displays LCD projectors or other types of display devices etc.

The viewing client may be configured to execute various applications such as a browser and or other applications. The browser may be executed in a viewing client for example to access and render network pages such as web pages or other network content served up by the computing device and or other servers thereby rendering a network page on the display . The network page may comprise for example user interfaces for navigating and selecting media content for consumption where items corresponding to media content uploaded by the client may be sorted or prioritized in the user interfaces. The viewing client may be configured to execute applications beyond the browser such as for example email applications instant message applications and or other applications.

Next a general description of the operation of the various components of the content delivery service is provided. To begin a developer creates an application configured to allow users of viewing clients to access and consume media content captured by one or more clients . The developer may transfer the application to the computing device by way of the developer interface where the application may incorporate platform level features provided by the content delivery service . For some embodiments the developer may provide one or more groupings by way of an application programming interface API various captured media content to the viewing clients where the one or more groupings may be displayed in a user interface embodied for example as a map. Additionally the developer may specify what sorting criteria is to be applied to the grouping. Alternatively the developer may allow the viewing clients to specify the sorting criteria. Various applications and or other functionality implemented by third party developers may be executed in the computing device according to various embodiments

One or more clients capture media content via media capture devices . Note that some clients may be co located where the corresponding users are attending a common event while other clients may be geographically dispersed and located in other locations. While the client captures media content data items corresponding to the media content may be generated where the data items may include for example GPS location data directional data e.g. a camera is pointed in a northerly direction video resolution audio quality a user identifier temporal data such as a time date stamp and so on or environmental data e.g. altitude temperature or humidity . The user identifier may be used for example for accessing a corresponding user account and retrieving user profile data from the data store in the computing device .

The media content aggregator retrieves the media content and one or more data items uploaded by the client and may temporarily buffer the media content and data items in the data store before streaming the media content to a viewing client via the network . For some embodiments the user interface application in the developer interface may be executed to generate a user interface embodied as a map that identifies the locations of clients currently uploading media content where items corresponding to captured media content are presented on the map according to location associated with the media content . Users of viewing clients may then navigate the map to zoom in to regions of interest. Users of the viewing clients may also specify criteria for purposes of sorting uploaded media content . For some embodiments the sorting criteria may be derived based on data items uploaded by one or more clients where the data items may comprise such information as location information video resolution of captured video audio quality a user identifier an event description and so on.

For scenarios where users of the viewing clients specify criteria for purposes of sorting uploaded media content the analytics engine analyzes the data item of other media content uploaded by other clients and sorts the uploaded content accordingly. For example where a user of a viewing client wishes to sort uploaded content according to video resolution the analytics engine may sort the media content such that high resolution video is prioritized.

In accordance with some embodiments a user of a client may wish to notify friends family members etc. that the user is currently capturing media content . The user may wish to invite others to view the captured media content in real time. For such embodiments the content delivery service may be executed to generate a recommendation or invitation to users of viewing clients to invite them to view the captured media content . For some embodiments the user of a client may wish to send an invitation to friends specified in the social networking data in the data store . The content delivery service may facilitate communication with an application programming interface provided by a third party system such as a social networking site e.g. Facebook Twitter MySpace Linkedin microblogging system or any other system or site in which social networking data of users is accessible by the computing device . The content delivery service may periodically retrieve social networking data from third party systems and store the retrieved data in the data store . The social networking data may include for example a listing of friends of the user. Such friends may comprise individuals with whom a user shares an interpersonal connection such as friendship spousal relationships being related by blood relationship and other types of interpersonal connections.

As shown the viewing client may transmit navigation commands to the computing device which may then forward the navigation commands to the client that is currently capturing media content to perform zooming and or panning operations. In some scenarios it is possible that users of different viewing clients may send conflicting navigation commands e.g. where one viewer wishes to zoom in while another viewer wishes to zoom out . In such scenarios the content delivery service may forward a navigation command s to the client based on the number of requests. For example the content delivery service may instruct the client to zoom in upon receiving a larger number of requests to zoom in.

When embedded in network pages the user interfaces provided to viewing clients may include such recommendation source data as hypertext markup language HTML extensible markup language XML extensible HTML XHTML mathematical markup language MathML scalable vector graphics SVG cascading style sheets CSS images audio video graphics text and or any other data that may be used in serving up or generating a list of media content for consumption.

Referring next to shown is a flowchart that provides one example of the operation of an application and the content delivery service according to various embodiments for facilitating streaming of media content . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of an application and the content delivery service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments. The content delivery service is executed in the computing device and interfaces with the client and viewing client over the network .

Beginning with box the media content aggregator in the content delivery service retrieves media content from a client capturing media content via a media capture device where the captured media content is retrieved via the network .

In box the media content aggregator retrieves one or more data items corresponding to the captured media content from the client where one of the data items may comprise location data in the form of GPS coordinates. Alternatively the location data may comprise a descriptor or tag generated by the user of the client e.g. skiing in Colorado .

In box the user interface application in an application encodes a user interface for display at a viewing client where the user interface may be embodied for example as a map. For some embodiments the map may include items corresponding to the captured media content where the items are presented on the map based on the location data associated with the media content . A user of a viewing client may navigate the map to identify a region of interest. In box the content delivery service retrieves a region selection from a user of a viewing client . In box the user interface application zooms into the map to surface additional items for the selected region.

In box a determination is made by the application on whether the user has selected an item corresponding to captured media content . If not the application returns to box and retrieves another region of interest. Based on this the user interface application zooms in to a new region or zooms in further into the current region thereby allowing the user to further navigate the map to identify media content to view. Returning to box if the user selects an item then in box the media content corresponding to the selected item is transmitted by the content delivery service over the network to the viewing client making the selection.

In the examples that follow the application provides various interfaces for selecting various media content streams for presentation to viewing clients . Shown in and are examples of a user interface encoded by an application developed by a third party e.g. a news outlet video sharing entity social media outlet the developer interface where the user interface is rendered for display by a viewing client in the networked environment for facilitating media consumption. Specifically and depict a rendered network page with a user interface that allows a user to select media content uploaded by a client . In the example shown in the user interface provides a map and prompts the user to select a region of interest to zoom in to for purposes of narrowing down a list of possible media content to view. In the example shown the highlighted region represents the region selected by the user of a viewing client using for example a mouse or other means e.g. a touchscreen interface .

Shown in is another example of a user interface encoded by an application developed by a third party via the developer interface where the user interface is rendered for display by a viewing client in the networked environment for facilitating media consumption. Specifically the user interface in may be embodied as a rendered network page that allows a user to select media content uploaded by a client . In this example the user interface provides multiple video streams that have been sorted according to one or more data items uploaded by a client .

For illustration purposes the user interface shows three video streams being displayed on viewing panes where the video streams have been sorted based on the users who are capturing the media content and based on their corresponding ratings. In some cases the ratings may have been assigned by past viewers of media content uploaded by the users. In the example shown User A has the highest rating four stars and is therefore listed first while User C has the lowest rating two stars and is listed last. The identity of the user in addition to the user s corresponding rating may be contained in the uploaded data items . Alternatively the ratings may be stored in the data store as part of the user profile data and retrieved by the content delivery service upon retrieving the identity of the user.

Shown in is yet another example of a user interface encoded by an application developed by a third party developer via the developer interface where the user interface is rendered for display by a viewing client in the networked environment for facilitating media consumption. Specifically depicts a rendered network page with a user interface that allows a user to select media content uploaded by a client . In this example the user interface again provides multiple video streams displayed in viewing panes where the video streams that have been sorted according to one or more data items uploaded by a client . For illustration purposes the user interface shows three video streams where the video streams have been sorted based on a particular vantage point of a common event. In some cases multiple users may be attending the same event e.g. a race car competition where the users may all be capturing live video of the event.

In accordance with some embodiments the user of a viewing client may elect to sort the captured media content according to a particular view. In the non limiting example three viewing angles View 1 View 2 View 3 are available for a viewer to select from. For some embodiments the viewer may specify that captured media content be sorted according to media content corresponding to View 1 followed by media content corresponding to View 2 followed by media content corresponding to View 3.

Shown in is yet another example of a user interface encoded by an application developed by a third party developer via the developer interface and rendered for display by a viewing client in the networked environment for facilitating media consumption. Specifically depicts a rendered network page with a user interface that allows a user to select media content uploaded by a client . In this example the user interface includes a series of toolbar components that allow viewers to control or influence how the media content is being captured by the client . For example viewers may utilize the toolbar components to request that the user of the client perform panning operations to the right as shown in viewing pane . Alternatively viewers may also request the user of the client to zoom in as shown in view pan .

The navigation requests generated by manipulation of the toolbar components may be embodied as navigation commands sent by a viewing client to the computing device which may collect navigation requests from other viewing clients . As discussed earlier in some scenarios it is possible that users of different viewing clients may send conflicting navigation commands e.g. where one viewer wishes to zoom in while another viewer wishes to zoom out . In such scenarios the content delivery service may forward a navigation command s to the client based on the number of requests. For example the content delivery service may instruct the client to zoom in upon receiving a larger number of requests to zoom in.

For some embodiments users of clients currently capturing media content may wish to limit those who are able to view the media content . For example a user may wish to allow only friends and family to view a video stream being uploaded by the user. For such embodiments the content delivery service may transmit a recommendation invitation embodied as an electronic communication to friends and family who may then view the captured media content at their respective viewing clients .

Shown in is an example of a recommendation invitation encoded by an application developed by a third party developer via the developer interface and rendered for display by a viewing client in the networked environment for facilitating media consumption. Specifically depicts an e mail that includes a message with a selection component for viewing the video and a thumbnail with a representative image from the respective captured media content . In the non limiting example shown the user of a client in this example John is inviting a friend Dan to view live video of the user taking part in an activity i.e. snowboarding in Colorado . Dan may elect to accept the invitation to view John s live video feed by clicking on the selection component shown. Note that the recommendation invitation may also be embodied in the form of one or more network pages or other electronic communication e.g. short message service SMS text messages . For example users may also provide a posting on a social networking website alerting friends that a live video feed is available. In this regard users of clients capturing media content may limit viewing to a community of individuals e.g. friends and family specified for example in the social networking data in the data store .

Shown in is a flowchart that provides another example of the operation of an application and the content delivery service according to various embodiments for facilitating streaming of media content. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of an application and the content delivery service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing device according to one or more embodiments. The content delivery service is executed in the computing device and interfaces with the client and viewing client over the network .

Beginning with box the media content aggregator retrieves media content from one or more client devices . In box the media content aggregator retrieves one or more data items associated with the retrieved media content . The one or more data items may comprise such information as location data video resolution audio quality a user identifier date time data an event description and so on. Note that the one or more data items may be automatically generated by the client and or manually generated by the user of the client .

In box the user interface application in the application encodes a user interface for display on a viewing client where the user interface provides a list of selectable media content .

In box the user of the viewing client may specify one or more sorting criteria for arranging the selectable media content for selection purposes where the sorting criteria may be derived by the analytics engine from the uploaded data items and presented to the viewer. The analytics engine retrieves the sorting criteria and in box the analytics engine determines a list order of the media content . In box the user interface application encodes an updated user interface that provides the selectable media content according to the list order derived by the analytics engine .

With reference to shown is a schematic block diagram of the computing device according to an embodiment of the present disclosure. The computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end the computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are the content delivery service the developer interface and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

With reference to shown is a schematic block diagram of the client device configured to capture media content according to an embodiment of the present disclosure. The client device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . The client device also includes a media capture device and a GPS device which are also coupled to the local interface . To this end the client device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor are a browser and potentially other applications. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in each of the memories and are executable by the respective processors as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java Javascript Perl PHP Visual Basic Python Ruby Delphi Flash or other programming languages.

A number of software components are stored in the respective memories and are executable by the processors . In this respect the term executable means a program file that is in a form that can ultimately be run by a respective processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of a memory and run by a processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of a memory and executed by a processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of one of the memories to be executed by a respective processor etc.

An executable program may be stored in any portion or component of a respective memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

Each of the memories is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus each memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components.

In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also each processor may represent multiple processors and each memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case each local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the multiple memories or between any two memories etc. Such a local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. Each processor may be of electrical or of some other available construction.

Although the applications including the content delivery service the developer interface and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware.

If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits having appropriate logic gates or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show an example of functionality of the content delivery service and applications within the developer interface . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the content delivery service and developer interface that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense each may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system.

In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs.

Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

