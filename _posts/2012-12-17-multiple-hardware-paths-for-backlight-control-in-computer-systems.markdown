---

title: Multiple hardware paths for backlight control in computer systems
abstract: The disclosed embodiments provide a system that drives a display from a computer system. The system includes a first hardware path for controlling a backlight of a display of the computer system. The system also includes a second hardware path for controlling the backlight. Finally, the system includes a backlight controller that enables use of the first and second hardware paths in controlling the backlight from the computer system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262992&OS=09262992&RS=09262992
owner: Apple Inc.
number: 09262992
owner_city: Cupertino
owner_country: US
publication_date: 20121217
---
This application hereby claims priority under 35 U.S.C. 119 to U.S. Provisional Application No. 61 707 519 entitled Multiple Hardware Paths for Backlight Control in Computer Systems by inventors Adrian E. Sun Craig H. Prouse Maciej Maciesowicz Meng Chi Lee and Siji Menokki Kandiyil filed 28 Sep. 2012.

The disclosed embodiments relate to techniques for driving displays from computer systems. More specifically the disclosed embodiments relate to techniques for providing multiple hardware paths for controlling a backlight of a display in a computer system.

Interactions between a user and a computer system may be facilitated by a display of the computer system. For example a liquid crystal display LCD panel of a laptop computer may allow the user of the laptop computer to view graphical user interfaces GUIs for an operating system and or one or more applications executing on the laptop computer. One or more attributes of the display may also be dynamically adjusted and or configured during use of the computer system. For example the operating system may adjust the brightness of the display by transmitting commands that modify the duty cycle and or frequency associated with pulse width modulation PWM of power to the display s backlight.

On the other hand native support for backlight control in the computer system may not be compatible with all operating systems on the computer system. For example the computer system may be a multi boot computer system with hardware that supports backlight control through a graphics processing unit GPU of the computer system. As a result a first operating system that is compatible with the hardware may issue backlight control commands to the GPU while a second operating system that uses Advanced Configuration and Power Interface ACPI for backlight control may be unable to interface with the GPU to control the backlight.

In addition conventional mechanisms for enabling backlight control for operating systems that are not natively supported by backlight control hardware may be intrusive and or associated with significant overhead. Continuing with the above example an ACPI command for backlight control from the second operating system may be trapped before the command is translated into a GPU compatible command that is then is transmitted to the GPU. Such trapping of the command may cause the operating system to freeze resulting in noticeable performance degradation during processing of long sequences of backlight control commands from the operating system and or the delayed processing of some backlight control commands from the sequences.

Hence what is needed is a mechanism for reducing overhead associated with providing backlight control to operating systems that are unable to use natively supported backlight control mechanisms in computer systems.

The disclosed embodiments provide a system that drives a display from a computer system. The system includes a first hardware path for controlling a backlight of a display of the computer system. The system also includes a second hardware path for controlling the backlight. Finally the system includes a backlight controller that enables use of the first and second hardware paths in controlling the backlight from the computer system.

In some embodiments enabling use of the first and second hardware paths in controlling the backlight involves receiving commands for the backlight over the first and second hardware paths and processing the commands based on a prioritization scheme associated with the first and second hardware paths. For example the commands may be buffered and sent to a command processor in the backlight controller according to a round robin prioritization scheme.

In some embodiments the commands are associated with a pulse width modulation of the backlight. For example the commands may change the frequency and or duty cycle associated with PWM of power to the backlight.

In some embodiments the commands are further received over a set of identical interfaces connected to the first and second hardware paths. For example the commands may be received over the first and second hardware paths by a set of IC ports with the same IC address on the backlight controller.

In some embodiments the first hardware path includes an auxiliary path from a graphics processing unit GPU to the backlight controller. For example the first hardware path may include a DisplayPort DP auxiliary path that connects the GPU to a timing controller TCON associated with the backlight controller.

In some embodiments the second hardware path includes a path from a motherboard to the backlight controller. For example the second hardware path may include an IC path that connects a Platform Controller Hub PCH on the motherboard with the backlight controller.

In some embodiments the first and second hardware paths are used by different operating systems on the computer system to control the backlight. For example the first hardware path may be used by an operating system with native support for transmitting backlight control commands to the GPU and the second hardware path may be used by a legacy operating system that lacks such native support.

In some embodiments the first and second hardware paths are accessed by the different operating systems using different application programming interfaces APIs .

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing code and or data now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore methods and processes described herein can be included in hardware modules or apparatus. These modules or apparatus may include but are not limited to an application specific integrated circuit ASIC chip a field programmable gate array FPGA a dedicated or shared processor that executes a particular software module or a piece of code at a particular time and or other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The disclosed embodiments provide a method and system for driving a display from a computer system. The computer system may correspond to a laptop computer personal computer workstation and or portable electronic device. The display may be a cathode ray tube CRT display liquid crystal display LCD plasma display organic light emitting diode OLED display surface conducting electron emitter display SED and or other type of electronic display.

As shown in a computer system includes a processor that is coupled to a Platform Controller Hub PCH and or other type of bridge chip and a memory subsystem containing semiconductor memory. In addition processor may communicate with a display e.g. an integrated display through a graphics processing unit GPU . For example processor may be connected to GPU through an interface such as Peripheral Component Interconnect Express PCIe . GPU may perform various graphical processing operations to produce video frames that are used to drive display .

Processor may also configure and or adjust a backlight not shown of display during driving of display by GPU . For example an operating system executing on processor may control the brightness of the backlight by issuing backlight control commands to GPU which transmits the commands over a hardware path to a backlight controller BLC that adjusts the frequency and or duty cycle associated with pulse width modulation PWM of the backlight based on the commands. In other words processor may use a set of natively supported backlight control mechanisms on computer system to adjust the backlight.

Conversely the operating system executing on processor may be unable to use the natively supported backlight control mechanisms. For example processor may use a driver for GPU to transmit backlight control commands to GPU . As a result an operating system executing on processor may be unable to control the backlight through GPU if the driver used by the operating system is not configured to transmit backlight control commands to GPU . To enable backlight control for the operating system a basic input output system BIOS on computer system may trap backlight control commands from the operating system so that the commands may be translated into commands that are compatible with GPU and or used to write to a Legacy Backlight Brightness LBB register for computer system .

However such trapping and processing of backlight control commands that are incompatible with GPU and or hardware path may be associated with significant overhead and or interference to the execution of the operating system. For example trapping of each backlight control command from the operating system may cause the operating system to freeze until the backlight control command is translated and or otherwise processed. Such freezing of the operating system may further result in noticeable performance degradation during processing of long sequences of backlight control commands from the operating system and or the delayed processing of some backlight control commands from the sequences.

In one or more embodiments computer system includes functionality to accommodate operating systems that utilize different backlight control mechanisms by providing multiple hardware paths for controlling the backlight. In particular computer system may include an additional hardware path to BLC from PCH and or another component on the motherboard of computer system that allows an operating system to control the backlight without communicating with GPU . For example hardware path may allow Advanced Configuration and Power Interface ACPI commands for backlight control from the operating system to PCH to be relayed from PCH to BLC . As a result hardware paths may allow operating systems on computer system to control the backlight through different application programming interfaces APIs . Hardware paths are discussed in further detail below with respect to .

BLC may additionally enable simultaneous use of both hardware paths in controlling the backlight. For example BLC may receive backlight control commands from both hardware paths and process the commands based on a prioritization scheme associated with hardware paths such as a round robin prioritization scheme. The operation of BLC is discussed in further detail below with respect to .

As shown in the commands may be received over a set of interfaces connected to hardware paths . In one or more embodiments interfaces are identical interfaces that accept commands with the same packet format from hardware paths . For example interfaces may be Inter Integrated Circuit IC interfaces that are provided by two IC slave ports with the same IC address e.g. 37 on the BLC. Because packets received over interfaces are transmitted over separate hardware paths that are accessed using different APIs the shared address may not present a conflict to the operating system s and or within the computer system.

After the commands are received the commands may be placed into buffers and processed according to a prioritization scheme . For example the BLC may parse the commands into Monitor Command Control Set MCCS packets and send valid MCCS packets to a command processor for the backlight using a round robin prioritization scheme. Alternatively the BLC may prioritize commands from one hardware path over those of the other hardware path by processing commands from the other hardware path only if no commands are received over the first hardware path.

Command processor may then use the commands to adjust the duty cycle frequency and or other attributes associated with PWM of the backlight. For example command processor may dim the backlight by gradually reducing the duty cycle of the backlight over a pre specified period e.g. a number of milliseconds . Values associated with the duty cycle frequency and or other attributes of the backlight may then be written into known memory locations and or used to generate interrupts that alert the operating system s and or other processes of changes to the attributes.

First an ACPI specification may be used to call a BCM method defined by ACPI for backlight control. Next BCM method may be used to construct a Display Data Channel DDC for controlling the brightness of the backlight.

DDC may then be used to send a command to a PCH IC block of a PCH. PCH IC may format the command as an IC packet and transmit the IC packet over an IC interface with a BLC for the backlight. For example the command may be transmitted between the PCH and BLC over hardware path of . Such use of well known APIs and or interfaces such as ACPI and or IC in controlling the backlight may allow the command to be generated transmitted and processed by BLC without trapping the command and or requiring extensive modification to the operating system and or BLC .

First MCCS is used to transmit a command to a GPU IC module on a GPU of the computer system. Next the command is sent from the GPU over a DisplayPort DP auxiliary path that operates as a sideband channel for display configuration and control to a timing controller TCON for the backlight and or display. For example the command may be formatted as an IC packet by the GPU before transmission of the command over DP auxiliary path to TCON . Finally the command is sent from TCON to a BLC for the backlight for processing by BLC . In other words use of the hardware path may involve generation transmission and processing of the command using GPU and or platform native interfaces and or APIs.

Initially a first hardware path and a second hardware path for controlling the backlight of a display in the computer system are provided operation . The first hardware path may include an auxiliary path from a GPU to a BLC in the display and the second hardware path may include a path from a motherboard to the BLC. As a result the first and second hardware paths may be used by different operating systems on the computer system e.g. a multi boot computer system to control the backlight. For example the first and second hardware paths may be accessed by the operating systems using different APIs e.g. ACPI MCCS etc. .

Next use of the first and second hardware paths in controlling the backlight from the computer system is enabled. In particular commands for the backlight are received over the first and second hardware paths operation . The commands may be received over a set of identical interfaces connected to the first and second hardware paths such as IC interfaces. In addition the commands may be associated with PWM of the backlight. For example the commands may change the frequency and or duty cycle associated with PWM of power to the backlight.

The commands are then processed based on a prioritization scheme associated with the first and second hardware paths operation . For example the commands may be buffered and sent to a command processor for the backlight according to a round robin prioritization scheme. Alternatively commands from one hardware path may be prioritized over commands from another hardware path.

The foregoing descriptions of various embodiments have been presented only for purposes of illustration and description. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention.

