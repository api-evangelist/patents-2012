---

title: System, method and computer program product for scanning portions of data
abstract: A scanning system, method and computer program product are provided. In use, portions of data are scanned. Further, access to a scanned portion of the data is allowed during scanning of another portion of the data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09106478&OS=09106478&RS=09106478
owner: MCAFEE, INC.
number: 09106478
owner_city: Santa Clara
owner_country: US
publication_date: 20120928
---
This patent application is a continuation and claims the benefit of priority under 35 U.S.C. 120 of U.S. application Ser. No. 11 612 969 filed Dec. 19 2006 entitled SYSTEM METHOD AND COMPUTER PROGRAM PRODUCT FOR SCANNING PORTIONS OF DATA. The disclosure of the prior application is considered part of and is incorporated by reference in the disclosure of this application.

Increasingly computer systems have needed to protect themselves against unwanted computer code. Such unwanted computer code has generally taken the form of viruses worms Trojan horses spyware adware and so forth. To combat the dissemination of unwanted computer code systems e.g. intrusion detection systems virus scanners etc. have been created for scanning data e.g. files etc. to identify whether such data incorporates unwanted computer code. However such systems often prevent access to data during scanning until the data is finished being scanned thus causing an extended delay in satisfying a request made with respect to the data.

A scanning system method and computer program product are provided. In use portions of data are scanned. Further access to a scanned portion of the data is allowed during scanning of another portion of the data.

Coupled to the networks are servers which are capable of communicating over the networks . Also coupled to the networks and the servers is a plurality of clients . Such servers and or clients may each include a desktop computer lap top computer hand held computer mobile phone personal digital assistant PDA peripheral e.g. printer etc. any component of a computer device and or any other type of logic for that mater. In order to facilitate communication among the networks at least one gateway is optionally coupled therebetween.

The workstation shown in includes a Random Access Memory RAM Read Only Memory ROM an I O adapter for connecting peripheral devices such as disk storage units to the bus a user interface adapter for connecting a keyboard a mouse a speaker a microphone and or other user interface devices such as a touch screen not shown to the bus communication adapter for connecting the workstation to a communication network e.g. a data processing network and a display adapter for connecting the bus to a display device .

The workstation may have resident thereon any desired operating system. It will be appreciated that an embodiment may also be implemented on platforms and operating systems other than those mentioned. One embodiment may be written using JAVA C and or C language or other programming languages along with an object oriented programming methodology. Object oriented programming OOP has become increasingly used to develop complex applications.

Of course the various embodiments set forth herein may be implemented utilizing hardware software or any desired combination thereof. For that matter any type of logic may be utilized which is capable of implementing the various functionality set forth herein.

As shown in operation portions of data are scanned. The data may include for example a file e.g. Microsoft Office document Zip file a database file etc. computer code e.g. application etc. etc. Of course in the context of the present description the data may also include any type of computer code and or any other data capable of being scanned.

In the context of the present description the portions of the data may include any parts of the data. In various embodiments the portions of the data may include a plurality of different types of data portions. Just by way of example the portions of the data may include a page of the data e.g. a page in an electronic document etc. formatting information associated with the data e.g. font spacing etc. content information associated with the data e.g. structure of the data index of information within the data etc. macros within the data etc.

In one optional embodiment the portions of the data may include an associated known or unknown clean status. For example an unknown clean status may indicate that an associated portion of the data has changed since a previous scan thereof where such previous scan identified the portion of the data as clean . As an option the aforementioned status may be used to queue requested data portions for scanning Different embodiments that employ status information in a similar manner will be described in more detail later with respect to .

Moreover in other possible embodiments the portions of the data may optionally be scanned based on a predetermined order. For example a first portion of the data may be scanned prior to a second portion of the data. One possible predefined order associated with a different embodiment will be described in more detail later with respect to . Of course in other embodiments the portions of the data may be scanned at least partially in parallel and or in any other desired manner.

In use the portions of the data may be scanned utilizing any desired system and or application capable of scanning data. In one embodiment the portions of the data may be scanned utilizing an anti virus scanner. Accordingly the portions of the data may be scanned for unwanted data e.g. malware etc. for example. In other various embodiments the portions of the data may be scanned on demand on access automatically etc. Further other embodiment are contemplated where the scanning is performed for intrusion detection purposes spyware adware identification general content scanning and or any other type of scanning for that matter.

Still yet access to a scanned portion of the data is allowed during scanning of another portion of the data as shown in operation . In the context of the present description the scanned portion of the data may include any portion of the data for which scanning has completed. In one optional embodiment the scanned portion of the data may optionally include a portion of the data which is identified as clean e.g. uninfected with unwanted data etc. based on the scanning.

Additionally in the context of the present description allowing access to the scanned portion of the data may include at least partially allowing any type of access to the scanned data portion. In various optional embodiments such request may be initiated by a request from an application a user etc. Also in one embodiment the request may include a file system request. Of course any type of access is contemplated.

In one exemplary embodiment allowing access may optionally include allowing a read operation to be performed on the scanned portion of the data. In another example allowing access may include allowing a write operation to be performed on the scanned portion of the data. In still yet another example allowing access may include allowing a seek operation to be performed on the scanned portion of the data.

Furthermore the aforementioned other portion of data being scanned may include any portion of the data for which scanning has not completed. For example in one embodiment the other portion of the data may be in the process of being scanned such that the other portion of the data is partially scanned. In another exemplary embodiment the other portion of the data may be pending scanning e.g. in a queue waiting to be scanned etc. such that scanning for such portion of the data has not yet commenced.

Thus access to one portion of the data that has been scanned may be allowed while another portion of the data is being scanned. In this way limiting access to data until all portions of the data are scanned may optionally be avoided in some embodiments. Moreover a delay in accessing the data may be at least partially limited by allowing access to portions of the data as such portions of the data are scanned.

More illustrative information will now be set forth regarding various optional architectures and features of different embodiments with which the foregoing method may or may not be implemented per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. Any of the following features may be optionally incorporated with or without the exclusion of other features described.

As shown an application issues an open request to a file system application programming interface API . The application may include any computer code e.g. software etc. capable of issuing a request. For example such open request may include a request to open data. Of course while an open request is shown it should be noted that any request to access data may be issued by the application e.g. read data write to data seek data etc. . Optionally the data may include a file.

Also the file system API may include any interface capable of receiving an open request from the application . In one embodiment the file system API may intercept requests issued to a file system. The file system may include any system capable of storing and or providing data in response to a request for the data. For example the file system API may intercept all requests made to a file system by applications users etc.

In addition the file system API notifies an on access scanner of the open request. The on access scanner may include any scanner capable of receiving notification of a request to open or otherwise access data. In one embodiment the on access scanner may include a scanner for scanning data e.g. anti virus scanner etc. . In another embodiment the on access scanner may include an interface that is separate from the scanner but which is in communication with such scanner .

Further the notification may include information associated with the open request. For example the notification may include a unique identifier that identifies the data which was requested to be opened. In one embodiment the unique identifier may include an inode number which identifies an inode of the data e.g. a data structure that stores information about the data with which it is associated etc. .

As another example the notification may include a location of the data which was requested to be opened. In still yet another example the notification may indicate the application that requested to open the data. Moreover the notification may optionally indicate the type of request made with respect to the data e.g. open read write seek etc. .

Moreover the on access scanner may determine whether the data requested to be opened is to be scanned. In one embodiment the on access scanner may identify a status of each of a plurality of portions of the data. The status may include a known clean status an unknown clean status etc. While identifying a status of each portion of the data is described herein it should be noted that in another embodiment a status of the data as a whole may also similarly be identified.

For example the status may be identified based on a comparison of a particular portion of the data and a previously scanned version of such portion of the data. Thus the status may be utilized for determining whether the portion of the data has even previously been scanned and or whether the portion of the data has changed since a previous scan of the portion of the data. In one embodiment a previously scanned version of the portion of the data may be stored e.g. in a cache etc. such that the previously scanned version may be accessed for being compared to a current version of the portion of the data. In another embodiment a checksum of the previously scanned version of the portion of the data may be stored for utilization in a comparison with a checksum of the current version of such portion of the data.

Accordingly the known clean status may indicate that the portion of the data has not changed since being previously scanned. Still yet the unknown clean status may indicate that the portion of the data has changed since the data was previously scanned or that the data has not been previously scanned. If the status of the portion of the data includes an unknown clean status the on access scanner may issue a scan request to the scanner . Thus for each portion of data it may be determined whether such portion is to be scanned based on a status thereof. Of course however in other embodiments the on access scanner may also automatically issue the scan request to the scanner without regard to a status of the portion of the data.

If a portion of the data is associated with a known clean status the portion of the data is allowed to be opened by the application without scanning such portion not shown . In another embodiment the scanner scans each portion of data associated with an unknown clean status. Different embodiments that employ status information in a similar manner will be described in more detail later with respect to .

The scanner may also optionally scan each portion of the data in a predetermined order. More information regarding a different embodiment employing a predetermined scanning order will be described in more detail with respect to .

Based on the scanning the scanner determines whether each portion of data is clean. As shown if it is determined that a first portion of the data is clean e.g. where the first portion of the data is determined to be clean during and or before scanning another portion of the data etc. the scanner issues an open function call to the file system API . Thus the scanner allows access to the data via the file system API .

To this end the scanner dynamically issues a return to the on access scanner indicating that such portion of the data is clean. Specifically the scanner may issue an unlock message to the on access scanner for indicating that the on access scanner is to allow the application to open the clean portion of the data. As shown the scanner may issue the return to the on access scanner while scanning additional portions of the data.

In response to receipt of the unlock message the on access scanner issues an allow message to the file system API such that the file system API may provide the open result to the application for fulfilling the open request. In this way access to scanned portions of data may be allowed by the application while the scanner scans other portions of the data. Accordingly the application and the scanner may process different portions of the data in parallel therefore decreasing latency as shown in time T in allowing access to the data by the application .

As further shown the application may also issue a seek request and or read request which may be processed as described above with respect to the open request.

As also shown the scanner may continuously scan portions of the data associated with all requests made by the application during additional requests made thereby. The scanner may unlock portions of the data upon completion of the scanning thereof and or upon a determination that such portions are clean. Thus the scanner may continuously allow access to portions of data by the application prior to the scanning of all of portions of the data being completed.

As shown in operation a scan request is identified. The scan request may be identified based on a request to access data. Thus in one embodiment the scan request may include an on access scan request whereby the request to scan data is issued upon a request to access the data.

In addition data to be scanned is identified as shown in operation . The data may be identified utilizing the scan request. For example the scan request may indicate the data to be scanned. In one exemplary embodiment the data may include a file requested to be accessed.

Further as shown in operation a scan order is determined based on information associated with the data. The scan order may indicate an order in which to scan various portions of the data. Moreover the information associated with the data on which the scan order is based may include a file type of the data an application requesting to access the data an access mode a context of the access e.g. a reason why the data is requested to be accessed etc. and or any other information capable of being associated with the data.

In one embodiment the scan order may include a predetermined order. Just by way of example the predetermined order may be based on a pattern in which an application accesses the portions of the data. In particular the predetermined order may be based on an order in which an application requesting to access the data may access the portions of the data. Thus the scan order may allow portions of the data to be scanned in the order in which they may be accessed by an application requesting to access the data.

In one embodiment a database of predetermined orders may be utilized for determining the scan order. Table 1 illustrates an exemplary database of predetermined scan orders. It should be noted that such database is set forth for illustrative purposes only and therefore should not be construed as limiting in any manner.

Still yet the portions of the data are ordered based on the determined scan order as shown in operation . In one embodiment the portions of the data may be ordered by storing the portions of the data in a queue according to such scan order. Of course however the portions of the data may be ordered based on the determined scan order in any desired manner.

Moreover as shown in operation the portions of the data are scanned in order. Thus once a first portion of the data in the order is scanned a second portion of the data in the order may be scanned and so forth. More information with respect to scanning the portions of the data in order will be described with respect to the description of below.

Accordingly portions of data associated with a scan request may be ordered for facilitating an ordered scanning thereof. In addition the order may allow portions of the data required to be accessed first by a requesting application to be provided to the application first. In this way it may be ensured that the requesting application may actually be capable of utilizing the portions of the data as they are made accessible thereto.

Just by way of example if an application requests a file portions of the file may be scanned in an order based on an access pattern utilized by the application to access the contents of the file. Thus if the application requires metadata that describes the structure of the file to be accessed first in order to utilize the remaining portions of the file the metadata may be scanned first. Accordingly it is ensured that the application does not have to wait for a complete scan of the entire file and or a scan of unscanned portions of the file before accessing the scanned portions of the data.

Optionally the operations described with respect to the present method may be performed by an on access scanner such as for example the on access scanner described above with respect to . As shown in operation data associated with an access request is identified. The access request may be issued by an application for example. In addition in one embodiment the data may include data requested to be accessed by the access request.

Further a results database is checked for identifying a status of each of a plurality of portions of the data as shown in operation . In one embodiment the results database may store scan results of previously scanned portions of the data. In another embodiment the results database may store a previously scanned version of each of the portions of the data.

Thus the results database may be checked for determining whether any portions of the data associated with the access request has changed since a previous scan of such portions of the data where such previous scan identified the portions as clean. If the results database indicates that a portion of the data has not changed the status of such portion may include a known clean status. If however the results database indicates that the portion of the data has changed or that the portion has not been previously scanned the status of the portion may include an unknown clean status.

Accordingly it may be determined whether the portions of the data are clean as shown in decision . For example if a portion of the data is associated with a known clean status the portion may be determined to be clean. Further if a portion of the data is determined to be clean access is allowed as shown in operation . Thus the access request may be at least partially satisfied by allowing access to portions of the data that are determined to be clean.

If a portion of the data is not determined to be clean in decision a scan request is added to an ordered list of scan requests as shown in operation . The scan request may include any request to scan such portion of the data. For example the scan request may indicate the portion of the data to be scanned. In addition the list of scan requests may be ordered based on a priority of such scan requests. For example the list of scan requests may include a priority queue of scan requests.

In one embodiment the priority may be based on an order in which the scan requests are made. In another embodiment the priority may be based on an access pattern associated with such portions. For example the scan requests may be ordered according to an order in which an entity e.g. application etc. that issued the access request may access such portions of the data.

As an option the ordered list of scan requests may be utilized by a scanner for scanning the portions of the data associated with such scan requests. More information regarding scanning the data according to the ordered list of scan requests will be described in more detail with respect to . The present technique then waits for results of the scanning of data portions that require scanning as shown in operation . For example the portions of the data may be reported as clean based on a scan of such portions. Once a portion of the data is reported as clean access to such portion is allowed as shown in operation .

Optionally if the portion of the data is reported as unclean an action may be taken in response thereto not shown . Such action may include for example blocking access to the portion of the data logging the unclean status of the portion of the data notifying the entity requesting to access the data of the unclean status of the portion of the data etc. Thus known clean portions of data associated with an access request may be automatically allowed to be accessed whereas unknown clean portions of data associated with an access request may be conditionally allowed to be accessed based on scanning thereof. Further such unknown clean portions of the data may be scanned such that as each portion is scanned and determined to be clean access thereto is allowed regardless of whether scanning additional portions of the data is in process and or pending.

Optionally the operations described with respect to the present method may be performed utilizing a scanner such as for example the scanner described above with respect to . As shown in operation a first portion of data in an order to be scanned is identified. The first portion of the data may be identified utilizing an ordered list of scan requests such as that described above with respect to see operation . Thus the first portion of the data may be identified via a first scan request in an order of scan requests.

In addition the identified portion of the data is scanned as shown in operation . Just by way of example the identified portion of the data may be scanned utilizing malware signatures heuristics etc. Thus the identified portion of the data may be scanned for unwanted data.

Accordingly it is determined whether the identified portion of the data is clean as shown in decision . If the identified portion of the data is determined to be clean such portion is reported as clean note operation . If however the identified portion of the data is determined to be unclean such portion is reported as unclean note operation .

In one embodiment the report may be issued to an on access scanner that requested the portion of data be scanned. In another embodiment the report may be issued to an interface e.g. the file system API described above with respect to etc. which is capable of allowing and or blocking access to the data by the entity that requested such access. Of course however the report may be issued to any desired component.

It is also determined whether there are more portions of data in the order to be scanned as shown in decision . If there are more portions a next portion of the data to be scanned is identified as in operation . Such next portion of the data is then scanned in the manner described above. Accordingly a plurality of portions of data to be scanned may be scanned according to an order associated therewith.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

