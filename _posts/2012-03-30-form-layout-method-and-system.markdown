---

title: Form layout method and system
abstract: A form layout system includes a form layout tool that provides a flexible way to lay out forms on a web page. The form layout tool configures a web configuration file with the location of form layout styles, and uses the form layout styles, a number of columns, a number of fields, and a “size” of each field to include in the component of a page layout to create a page layout for a target application. The form layout tool generates a revised application page with the created page layout by applying the form layout style to the created page layout.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09003279&OS=09003279&RS=09003279
owner: Accenture Global Services Limited
number: 09003279
owner_city: Dublin
owner_country: IE
publication_date: 20120330
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 61 470 439 filed Mar. 31 2011 which is also incorporated herein by reference in its entirety.

The present description relates generally to a system method and computer program product to lay out forms on a web page. More specifically the present description relates to a flexible form layout approach that greatly facilitates creation of tables used in as an example a new theme for a new web page.

A traditional page layout includes seven layers of nested HTML DIV tags DIVs and tables to create an area for the form. In some cases the form includes at least 5 layers of nested DIVs and tables 3 layers of DIVs and at least 2 levels of nested tables and requires at least 12 layers of nested HTML elements to create the form on the page.

Development of web pages using the traditional page layout is generally straightforward. However because of the traditional page layout architecture maintaining web pages can be a time consuming expensive and difficult effort. In particular a page layout with nested HTML tables is slow to render and difficult to maintain e.g. prone to maintenance errors because a maintainer needs to understand the nested table structure used on the page.

A need exists to solve this problem and others previously experienced with the nested table structure of HTML tables traditionally used for web forms.

The form layout system may be implemented in a computer system that includes a computer memory operable to store form layout tool instructions and a database operable to store a plurality of form layout styles. The form layout system includes a processor in communication with the memory and the database. The processor is operable to receive by executing the form layout tool instructions a target application identifier wherein the target application comprises a plurality of application pages that include components including sections comprising data fields located thereon. The form layout tool instructions configures a web configuration file with the location of the form layout styles and creates a page layout for the target application from the plurality of pages using a form layout style from the plurality of form layout styles and receiving a number of columns a number of fields and a size of each field to include in the component of the page layout. The form layout tool instructions generate a revised application page with the created page layout by applying the form layout style from the plurality of form layout styles as specified by the created page layout so that the target application may be executed with the created page layout.

Other systems methods features and advantages will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems methods features and advantages be included within this description be within the scope of the invention and be protected by the following claims.

In relation to the following description components shown in different drawings with the same reference numerals basically perform the same function. The principles described herein may be embodied in many different forms. Not all of the depicted components may be required however and some implementations may include additional components. Variations in the arrangement and type of the components may be made without departing from the spirit or scope of the claims as set forth herein. Additional different or fewer components may be provided.

The form layout system may be implemented in a computer system that includes a computer memory operable to store form layout tool instructions and a database operable to store a plurality of form layout styles. The form layout system includes a processor in communication with the memory and the database. The processor is operable to receive by executing the form layout tool instructions a target application identifier wherein the target application comprises a plurality of application pages that include components including sections comprising data fields located thereon. The form layout tool instructions configures a web configuration file with the location of the form layout styles and creates a page layout for the target application from the plurality of pages using a form layout style from the plurality of form layout styles and receiving a number of columns a number of fields and a size of each field to include in the component of the page layout. The form layout tool generates a revised application page with the created page layout by applying the form layout style from the plurality of form layout styles as specified by the created page layout so that the target application may be executed with the created page layout.

A division DIV is an html tag that is basically the binding rectangle for anything that goes on the page i.e. web page or application page and names for the classes. The styles relate to column A which is the left hand column column B which is the main site column C which is a third column on the page for a three column layout. The styles are very specific to the way the pages are constructed and within the style sheets the style sheets are very specific as to the styles that may be used on an application page. The form layout tool uses several different layouts. For example a user web site typically uses application specific styles but the developer decides that across the board to make all of column Bs for a particular theme purple rather than blue. Accordingly a specific set of styles related to column B exists that overwrite the images and any specific colors related to that style.

Other implementations with additional or fewer columns may are also possible. At the form level a style is included to indicate the number of columns needed in the form. The widths of the styles include small medium and large sizes and adjust depending on the number of columns needed in the form. Form Layout refers to the imposition or arrangement of fields and controls within a component or a section in a component. The visual layout of a form depends on a the number columns in the component and b the size of each field. For example one may consider how the page will render on a 1024 pixel horizontal resolution screen when determining which field sizes to use in a layout. Fields and controls can be laid out within a component in several formats. In the 3 column 33 33 33 form layout each column takes up roughly a third of the available space after subtraction of the margins . The form layout sets up a framework but the actual layout depends on the sizes of the fields which can be specified as Small Medium or Large. In autosize setting fields expand to fill available space. In a 3 column format one row may contain these combinations three Small fields one Medium and one Small field or one large field. Fields that do not fit on the same line with the preceding field are automatically pushed to the next line which can create an awkward display but in order to prevent illogical groupings there are overrides Fields can also be scaled manually Example Date and Fields may be kept together in a paired set example Currency . Note that in a larger 80 component the standard small medium and large fields are physically larger than on a normal 60 component. Middle column components may also accept a 2 column 50 50 field layout which can be useful when the data values are longer. Formats also exist for 4 and 5 column field layouts which may be available in the 80 and 100 panels.

The new Tableless Design includes 4 layers of nested DIVs to create the area for the form while the form consists of 2 levels of nested DIVs to layout the form and includes 6 layers of nested HTML elements to create a form on the page. The new Tableless Design requires half the number of levels of nested page elements. Tableless Web Design use CSS Cascading Style Sheets for page layout rather than nested HTML tables. The Advantages of new Tableless Design include reduced complexity of HTML coding patterns fewer HTML tags reduced page size allows layout changes for different devices supports theming and improved page maintainability. The Styles Project Organization provides platform and architecture independence supports multiple versions of styles supports multiple versions of Telerik styles. The Styles Configuration includes an ASW.Styles virtual directory of styles located in an addressable location. Developers may create an IIS virtual directory called ASW.Styles that points to the Styles distribution directory. In order to use the form layout web.config page themes are used to control the theme customize the application settings and add dynamic links to CSS. The path to the master set of ASW styles is configured in the web.config. References to CSS files are dynamically rendered style related clean up is performed and application specific CSS files or images are moved to the approved locations.

If changes are needed to the number of columns in the form the style used for the column count is changed. The form layout tool supports forms with 2 to 5 columns. The column count is configurable in the Page Designer tool. No development is needed to make the number of columns change. All form fields are inside a DIV of class of small medium or large. To make a field longer the DIV is changed to a larger size. Field widths are configurable in the tool. In the table layout the column and row where the field is placed are specified in the form layout technique the final assembly of the page is dynamic. The fields float into position and based on the number of columns in the form and the width of the fields the page automatically assembles. The automatic assembly of the form is helpful in building a page with visibility rules on the fields. If a field is not visible the styles allow the form to be assembled without gaps and without the need for a programmer to clean up the page layout.

Table 2 illustrates preparing an application to use application software ASW Styles where the style settings are added to the web.config file.

Table 8 illustrates logic to create a Claim Tree groupBox. A groupBox is added at the top of columnA and an actionTable is used to create the Claim Tree.

Table 9 illustrates logic of how to add a listTable in the columnB groupBox and create a three column table and set one of the rows to displays as a selected row.

Table 10 illustrates a RadGrid added in the columnB groupBox a titleColumn added below the table name the titleColumn RadGrid example . The data source for the RadGrid is an XML file pages xml basicGridData.xml .

An application uses a single application master CSS. The master CSS contains styles that apply across multiple pages. Located in a folder named styles that is a child of a root folder for the application e.g. styles . Images may be located in the myapp styles images folder. Multiple images may be combined into sprites. Every image includes an associated style. Pages use the style rather than reference an image directly. Page styles are applied to a single page. The page styles may be placed in the pageStyles asp Content section of the page.

Optionally inline styles may be avoided where possible although sometimes required. The developer may determine whether the style should remain inline become a page style or whether to add the style to the application master CSS. Using inline styles prevents the use of CSS styles due to style precedent rules. Example 2 package s . When an application includes items that change looks on a per theme basis there may be an application theme CSS for every theme e.g. ..css for Claims.BlueBerry.css . The theme CSS contains overrides for only those style elements that change on a per theme basis. An application theme CSS exists in each of the theme folders e.g. App Themes . Images may be located in the App Themes images folder.

Table 15 shows example Title Column Styles. Title Column Styles are used to group like controls in a form displays bold text with a grey background.

Table 16 illustrates an example listContainer List Type. The listContainer is the main list type used in the ASW styles. The complete status indicates that the task is complete the .selected status indicates the item was selected the .label identifies the list item is a label.

Table 17 illustrates an example List Types wizard. The List Types wizard uses nested unordered lists to create the wizard layout. The wizard layout styles exist for 2 to 6 steps in the wizard. The List Types wizard includes Step and Title. The Description is encouraged but not required.

Table 19 illustrates an HTML Tables style used to display information that needs to be organized in a multicolumn multiple row layout. Tables should not be used for page layout. Telerik RadGrid renders as an HTML table and is styled to match the look of the ASW listTable.

The Table.actionTable style is used on the Claim Tree and other locations where menus are needed. The actionTable and the shadedRow treatment change on roll over.

Table 22 illustrates an example implementation of the TABLE.plainTable style. The plainTable is used for a simple label value layout.

The form layout system includes four themes e.g. BlueBerry Cucumber Grape and Tomato . The default theme is set in the web.config file. Themes are changed dynamically by changing the Page.Theme setting. Custom themes may be placed under the App Themes folder.

Using cascading style sheets for web sites externalizes the style sheets so that style sheets can be shared across applications yet provides the mechanisms that allow theming and application level customizations. The method and system uses DIVs to layout the form. Each field is in its own DIV in the order the developer want the field to appear on the page. The fields stack themselves into rows depending on column type requested for the form. Developers no longer need to place fields into rows on the page. By specifying the field size and number of columns for the form the fields automatically arrange themselves into rows. The method and system simplifies the complexity of web form layout and saves significant development time. The method and system allows a user to use Styles to change the form layout due to client requirements to language text length needs. For example where a website is offered in English and German the form layout may be changed advantageously from 3 column in English to 2 column in German to accommodate the longer text length in the language. Anyone with access to a web site using this innovation would be able to view the style sheets CSS . Understanding the style sheets requires some training in the technology. These styles are closely tied to the HTML coding patterns needed to take advantage of the styles. It would be reasonably difficult to use the CSS to figure out the HTML coding patterns that must be followed for Multilayer Style Sheet Approach to work. The combination of the form layout styles and HTML coding patterns greatly simplifies the construction of web forms. Any web application or web site could use this innovation. It has been developed to be technology independent. The sites built using these innovations are supported on all current browsers. The requirement for a flexible style sheet driven approach to form layout came from the application teams.

A division DIV is an html convention that is basically the binding rectangle for anything that goes on the page and names for the classes. The styles relate to column A which is the left hand column column B which is the main site column C which is a third column on the page for a three column layout. The styles are very specific to the way the pages are constructed and within the style sheets the style sheets are very specific as to the styles that may be used on a page. The form layout tool uses several different layouts. For example a user web site typically uses application specific styles but the developer decides that across the board to make all of column Bs for a particular theme purple rather than blue. Accordingly a specific set of styles related to column B exists that overwrite the images and any specific colors related to that style.

The master styles are for the applications and include all standard style masters. An application may include some master styles that include a theme style and web configuration and the application master level includes styles for the header logo an application logo image application master style would overwrite that application logo image with the proper image for the application. The image files e.g. icons and buttons are not directly referenced so that the images related to icons in specific style sheets may be changed to appear more seamless with the rest of the applications. The form layout tool provides single column two column and three column layouts. A one column layout may use 20 and a three column layout includes 20 50 20 . Two column layouts include 20 on the left 80 on the right and another two column layout includes 30 and 70 . Dashboards use a three column layout where the columns may be evenly spaced. A user may use the application s master style sheet to implement a change across the board. The form layout tool may discourage users from implementing a layout that is inconsistent with the rest of the applications. A style guide indicates how a page needs to look e.g. the html coding patterns needed to implement the style . The form layout tool provides the coding patterns to allow developers to build the page quickly and accurately because the developer does not have to know anything about designing the table. Many developers try to lay out a page with a series of nested tables which really becomes a maintenance burden. Using divisions DIVs to lay out the page by changing the percentages of the widths of the divs causes the columns to be recalculated to fit within the specified area without a need for other code changes.

Application and client specific styles are put together with the different layers of customization. Most applications build a style sheet for the application. The form layout tool works across multiple platforms including ASP sites JSP fusion as long as the HTML and the styles may be used across the board. The styles and cutting patterns used with the form layout tool support a very broad range of web browsers. The standard problems that developers usually face are eliminated. For example because of the flexibility of the styles the costs incurred to implement a change across browsers do not get incurred on a per application basis.

A form layout division is used to control the form layout from two to five columns of information within the form. Form layout is one of the areas where developers traditionally have used nested tables to create the layout. Using nested tables to create the layout is very problematic and prone to errors and really tough to debug. Each of the controls on the page is placed inside of a division that is identified as a small medium or a large. A small division is for one column a medium division is for two columns and a large division is for three columns in width. By overriding the style specific to the number of columns how wide the small medium or large shows up is influenced. The styles are layered out in the page and depending on the widths of the fields the fields float into proper position on the page. For example if four smalls fields are intended for a three column layout then the result would be three on one row and a fourth on a second row.

Alternatively or in addition dedicated hardware implementations such as application specific integrated circuits programmable logic arrays and other hardware devices may be constructed to implement one or more of the methods described herein. Applications that may include the apparatus and systems of various embodiments may broadly include a variety of electronic and computer systems. One or more embodiments described herein may implement functions using two or more specific interconnected hardware modules or devices with related control and data signals that may be communicated between and through the modules or as portions of an application specific integrated circuit. Accordingly the present system may encompass software firmware and hardware implementations.

The methods described herein may be implemented by software programs executable by a computer system. Further implementations may include distributed processing component object distributed processing and parallel processing. Alternatively or in addition virtual computer system processing maybe constructed to implement one or more of the methods or functionality as described herein.

Although components and functions are described that may be implemented in particular embodiments with reference to particular standards and protocols the components and functions are not limited to such standards and protocols. For example standards for Internet and other packet switched network transmission e.g. TCP IP UDP IP HTML HTTP represent examples of the state of the art. Such standards are periodically superseded by faster or more efficient equivalents having essentially the same functions. Accordingly replacement standards and protocols having the same or similar functions as those disclosed herein are considered equivalents thereof. The system may operate using IIS version 7 Internet Explorer version 8 and Visual Studio 2008.

The illustrations described herein are intended to provide a general understanding of the structure of various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus processors and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Additionally the illustrations are merely representational and may not be drawn to scale. Certain proportions within the illustrations may be exaggerated while other proportions may be minimized. Accordingly the disclosure and the figures are to be regarded as illustrative rather than restrictive.

The above disclosed subject matter is to be considered illustrative and not restrictive and the appended claims are intended to cover all such modifications enhancements and other embodiments which fall within the true spirit and scope of the description. Thus to the maximum extent allowed by law the scope is to be determined by the broadest permissible interpretation of the following claims and their equivalents and shall not be restricted or limited by the foregoing detailed description.

