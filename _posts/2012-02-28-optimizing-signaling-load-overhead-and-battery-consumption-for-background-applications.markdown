---

title: Optimizing signaling load overhead and battery consumption for background applications
abstract: The disclosure relates to managing applications configured for execution on a mobile device. An embodiment of the disclosure receives one or more network access requests from one or more applications executing on the mobile device, determines that the mobile device is operating in a background mode, suppresses transmission to a network of the one or more network access requests to a network based on the determination, and transmits a subset of the one or more network access requests upon transition out of the background mode.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08897762&OS=08897762&RS=08897762
owner: QUALCOMM Incorporated
number: 08897762
owner_city: San Diego
owner_country: US
publication_date: 20120228
---
Embodiments of the invention relate to optimizing signaling load overhead and battery consumption for background applications.

Wireless communication systems have developed through various generations including a first generation analog wireless phone service 1G a second generation 2G digital wireless phone service including interim 2.5G and 2.75G networks and a third generation 3G high speed data Internet capable wireless service. There are presently many different types of wireless communication systems in use including Cellular and Personal Communications Service PCS systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System AMPS and digital cellular systems based on Code Division Multiple Access CDMA Frequency Division Multiple Access FDMA Time Division Multiple Access TDMA the Global System for Mobile access GSM variation of TDMA and newer hybrid digital communication systems using both TDMA and CDMA technologies.

The method for providing CDMA mobile communications was standardized in the United States by the Telecommunications Industry Association Electronic Industries Association in TIA EIA IS 95 A entitled Mobile Station Base Station Compatibility Standard for Dual Mode Wideband Spread Spectrum Cellular System referred to herein as IS 95. Combined AMPS CDMA systems are described in TIA EIA Standard IS 98. Other communications systems are described in the IMT 2000 UM or International Mobile Telecommunications System 2000 Universal Mobile Telecommunications System standards covering what are referred to as wideband CDMA W CDMA CDMA2000 such as CDMA2000 1xEV DO standards for example or TD SCDMA.

Mobile devices such as Smartphones tablets laptops etc. may have several applications apps running simultaneously that need to update dynamically e.g. Twitter Facebook Yahoo Finance etc. . Each application updates its content periodically based on its own implementation specific timing. These updates are performed even though the updated content may not be used by the user immediately. Further these updates are not coordinated across the applications leading to more frequent radio connections which results in increased signaling load and or battery consumption.

The disclosure relates to managing applications configured for execution on a mobile device. An embodiment of the disclosure receives one or more network access requests from one or more applications executing on the mobile device determines that the mobile device is operating in a background mode suppresses transmission to a network of the one or more network access requests to a network based on the determination and transmits a subset of the one or more network access requests upon transition out of the background mode.

Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally well known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.

The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise the term embodiments of the invention does not require that all embodiments of the invention include the discussed feature advantage or mode of operation.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of embodiments of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises comprising includes and or including when used herein specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both. Additionally these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus the various aspects of the invention may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform the described action. e.g. described in more detail below with respect to .

A High Data Rate HDR subscriber station referred to herein as user equipment UE may be mobile or stationary and may communicate with one or more access points APs which may be referred to as Node Bs. A UE transmits and receives data packets through one or more of the Node Bs to a Radio Network Controller RNC . The Node Bs and RNC are parts of a network called a radio access network RAN . A radio access network can transport voice and data packets between multiple access terminals.

The radio access network may be further connected to additional networks outside the radio access network such core network including specific carrier related servers and devices and connectivity to other networks such as a corporate intranet the Internet public switched telephone network PSTN a Serving General Packet Radio Services GPRS Support Node SGSN a Gateway GPRS Support Node GGSN and may transport voice and data packets between each UE and such networks. A UE that has established an active traffic channel connection with one or more Node Bs may be referred to as an active UE and can be referred to as being in a traffic state. A UE that is in the process of establishing an active traffic channel TCH connection with one or more Node Bs can be referred to as being in a connection setup state. A UE may be any data device that communicates through a wireless channel or through a wired channel. A UE may further be any of a number of types of devices including but not limited to PC card compact flash device external or internal modem or wireless or wireline phone. The communication link through which the UE sends signals to the Node B s is called an uplink channel e.g. a reverse traffic channel a control channel an access channel etc. . The communication link through which Node B s send signals to a UE is called a downlink channel e.g. a paging channel a control channel a broadcast channel a forward traffic channel etc. . As used herein the term traffic channel TCH can refer to either an uplink reverse or downlink forward traffic channel.

Referring back to the components of the wireless communications system and interrelation of the elements of the exemplary embodiments of the invention are not limited to the configuration illustrated. System is merely exemplary and can include any system that allows remote UEs such as wireless client computing devices to communicate over the air between and among each other and or between and among components connected via the air interface and RAN including without limitation core network the Internet PSTN SGSN GGSN and or other remote servers.

The RAN controls messages typically sent as data packets sent to a RNC . The RNC is responsible for signaling establishing and tearing down bearer channels i.e. data channels between a Serving General Packet Radio Services GPRS Support Node SGSN and the UEs . If link layer encryption is enabled the RNC also encrypts the content before forwarding it over the air interface . The function of the RNC is well known in the art and will not be discussed further for the sake of brevity. The core network may communicate with the RNC by a network the Internet and or a public switched telephone network PSTN . Alternatively the RNC may connect directly to the Internet or external network. Typically the network or Internet connection between the core network and the RNC transfers data and the PSTN transfers voice information. The RNC can be connected to multiple Node Bs . In a similar manner to the core network the RNC is typically connected to the Node Bs by a network the Internet and or PSTN for data transfer and or voice information. The Node Bs can broadcast data messages wirelessly to the UEs such as cellular telephone . The Node Bs RNC and other components may form the RAN as is known in the art. However alternate configurations may also be used and the invention is not limited to the configuration illustrated. For example in another embodiment the functionality of the RNC and one or more of the Node Bs may be collapsed into a single hybrid module having the functionality of both the RNC and the Node B s .

UEs and connect to the RAN at a portion served by a first packet data network end point e.g. which may correspond to SGSN GGSN PDSN a home agent HA a foreign agent FA etc. . The first packet data network end point in turn connects via the routing unit to the Internet and or to one or more of an authentication authorization and accounting AAA server a provisioning server an Internet Protocol IP Multimedia Subsystem IMS Session Initiation Protocol SIP Registration Server and or the application server . UEs and . . . N connect to the RAN at a portion served by a second packet data network end point e.g. which may correspond to SGSN GGSN PDSN FA HA etc. . Similar to the first packet data network end point the second packet data network end point in turn connects via the routing unit to the Internet and or to one or more of the AAA server a provisioning server an IMS SIP Registration Server and or the application server . UE connects directly to the Internet and through the Internet can then connect to any of the system components described above.

Referring to UEs and . . . N are illustrated as wireless cell phones UE is illustrated as a wireless tablet and or laptop PC However in other embodiments it will be appreciated that the wireless communication system can connect to any type of UE and the examples illustrated in are not intended to limit the types of UEs that may be implemented within the system.

Referring to a UE here a wireless device such as a cellular telephone has a platform that can receive and execute software applications data and or commands transmitted from the RAN that may ultimately come from the core network the Internet and or other remote servers and networks. The platform can include a transceiver operably coupled to an application specific integrated circuit ASIC or other processor microprocessor logic circuit or other data processing device. The ASIC or other processor executes the application programming interface API layer that interfaces with any resident programs in the memory of the wireless device. The memory can be comprised of read only or random access memory RAM and ROM EEPROM flash cards or any memory common to computer platforms. The platform also can include a local database that can hold applications not actively used in memory . The local database is typically a flash memory cell but can be any secondary storage device as known in the art such as magnetic media EEPROM optical media tape soft or hard disk or the like. The internal platform components can also be operably coupled to external devices such as antenna display push to talk button and keypad among other components as is known in the art.

Accordingly an embodiment of the invention can include a UE including the ability to perform the functions described herein. As will be appreciated by those skilled in the art the various logic elements can be embodied in discrete elements software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example ASIC memory API and local database may all be used cooperatively to load store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively the functionality could be incorporated into one discrete component. Therefore the features of the UE in FIG. are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.

The wireless communication between the UE or and the RAN can be based on different technologies such as code division multiple access CDMA W CDMA time division multiple access TDMA frequency division multiple access FDMA Orthogonal Frequency Division Multiplexing OFDM the Global System for Mobile Communications GSM 3GPP Long Term Evolution LTE or other protocols that may be used in a wireless communications network or a data communications network. Accordingly the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.

Referring to the communication device includes logic configured to receive and or transmit information . In an example if the communication device corresponds to a wireless communications device e.g. UE Node B etc. the logic configured to receive and or transmit information can include a wireless communications interface e.g. Bluetooth WiFi 2G 3G etc. such as a wireless transceiver and associated hardware e.g. an RF antenna a MODEM a modulator and or demodulator etc. . In another example the logic configured to receive and or transmit information can correspond to a wired communications interface e.g. a serial connection a USB or Firewire connection an Ethernet connection through which the Internet can be accessed etc. . Thus if the communication device corresponds to some type of network based server e.g. SGSN GGSN application server etc. the logic configured to receive and or transmit information can correspond to an Ethernet card in an example that connects the network based server to other communication entities via an Ethernet protocol. In a further example the logic configured to receive and or transmit information can include sensory or measurement hardware by which the communication device can monitor its local environment e.g. an accelerometer a temperature sensor a light sensor an antenna for monitoring local RF signals etc. . The logic configured to receive and or transmit information can also include software that when executed permits the associated hardware of the logic configured to receive and or transmit information to perform its reception and or transmission function s . However the logic configured to receive and or transmit information does not correspond to software alone and the logic configured to receive and or transmit information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to process information . In an example the logic configured to process information can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information includes but is not limited to performing determinations establishing connections making selections between different information options performing evaluations related to data interacting with sensors coupled to the communication device to perform measurement operations converting information from one format to another e.g. between different protocols such as .wmv to .avi etc. and so on. For example the processor included in the logic configured to process information can correspond to a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. The logic configured to process information can also include software that when executed permits the associated hardware of the logic configured to process information to perform its processing function s . However the logic configured to process information does not correspond to software alone and the logic configured to process information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to store information . In an example the logic configured to store information can include at least a non transitory memory and associated hardware e.g. a memory controller etc. . For example the non transitory memory included in the logic configured to store information can correspond to RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. The logic configured to store information can also include software that when executed permits the associated hardware of the logic configured to store information to perform its storage function s . However the logic configured to store information does not correspond to software alone and the logic configured to store information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to present information . In an example the logic configured to display information can include at least an output device and associated hardware. For example the output device can include a video output device e.g. a display screen a port that can carry video information such as USB HDMI etc. an audio output device e.g. speakers a port that can carry audio information such as a microphone jack USB HDMI etc. a vibration device and or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example if the communication device corresponds to UE as shown in the logic configured to present information can include the display . In a further example the logic configured to present information can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers etc. . The logic configured to present information can also include software that when executed permits the associated hardware of the logic configured to present information to perform its presentation function s . However the logic configured to present information does not correspond to software alone and the logic configured to present information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to receive local user input . In an example the logic configured to receive local user input can include at least a user input device and associated hardware. For example the user input device can include buttons a touch screen display a keyboard a camera an audio input device e.g. a microphone or a port that can carry audio information such as a microphone jack etc. and or any other device by which information can be received from a user or operator of the communication device . For example if the communication device corresponds to UE as shown in the logic configured to receive local user input can include the display if implemented a touch screen keypad etc. In a further example the logic configured to receive local user input can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers etc. . The logic configured to receive local user input can also include software that when executed permits the associated hardware of the logic configured to receive local user input to perform its input reception function s . However the logic configured to receive local user input does not correspond to software alone and the logic configured to receive local user input relies at least in part upon hardware to achieve its functionality.

Referring to while the configured logics of through are shown as separate or distinct blocks in it will be appreciated that the hardware and or software by which the respective configured logic performs its functionality can overlap in part. For example any software used to facilitate the functionality of the configured logics of through can be stored in the non transitory memory associated with the logic configured to store information such that the configured logics of through each performs their functionality i.e. in this case software execution based in part upon the operation of software stored by the logic configured to store information . Likewise hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example the processor of the logic configured to process information can format data into an appropriate format before being transmitted by the logic configured to receive and or transmit information such that the logic configured to receive and or transmit information performs its functionality i.e. in this case transmission of data based in part upon the operation of hardware i.e. the processor associated with the logic configured to process information .

It will be appreciated that the configured logic or logic configured to in the various blocks are not limited to specific logic gates or elements but generally refer to the ability to perform the functionality described herein either via hardware or a combination of hardware and software . Thus the configured logics or logic configured to as illustrated in the various blocks are not necessarily implemented as logic gates or logic elements despite sharing the word logic. Other interactions or cooperation between the logic in the various blocks will become clear to one of ordinary skill in the art from a review of the embodiments described below in more detail.

A mobile device may have three types of applications that require periodic updates. The first type of application uses application initiated update sessions i.e. pull services. Examples include Facebook Twitter Yahoo Finance etc. The second type of application has network initiated update sessions i.e. push services. An example would be an email service. The third type of application must update at periodic intervals because the network expects it to i.e. keep alive services. An example would be an instant messaging application. Standby time enhancements for the first type of application can be device based while enhancements for the other two types of applications may benefit from network assistance.

An embodiment of the invention defines a background mode and a non background mode for a mobile device and defines a new behavior for a mobile device operating in background mode that reduces signaling load overhead and battery consumption by synchronizing application updates.

A mobile device enters background mode when there has been no modem data activity for a predefined duration of time no user interaction e.g. no key presses the display is off the camera is off etc. for a predefined period of time and the mobile device is not in tethered mode i.e. not connected to an external device such as a laptop . The mobile device may determine that it may enter background mode by determining that there was no peripheral access e.g. from the keypad display accessories etc. and no data activity for a certain period of time. If the mobile device is not in background mode it is in foreground mode.

When the mobile device is in foreground mode there is no modification to application update requests. When in background mode however the mobile device may take steps to reduce signaling load overhead and battery consumption by synchronizing application updates. For example the mobile device may hold all socket creation requests until the next wakeup period. In another example the mobile device may block or drop any socket connections during a radio gate off period. In another example the mobile device s high level operating system HLOS may invoke registered applications when the device wakes up i.e. enters foreground mode permitting them to connect to the network. In another example the HLOS may provide registered applications with a given update rate requiring them to maintain their own update timer.

At the mobile device receives a request from an application to access the network such as an update request. For example the request may be a request to open a socket e.g. a Connect method as shown in . In another example the request may be a synchronization request after a socket has been created e.g. SYN packets as shown in . In yet another example the request may be a callback function registration as shown in .

At the mobile device determines whether or not it is in background mode. As discussed above when the mobile device determines that there has been no modem data activity for a predefined duration of time no user interaction with the device for a predefined period of time and the mobile device is not in tethered mode it enters background mode. Tethered mode is when an external device connects to the mobile device either through a wireline or a wireless connection to use the mobile device s connectivity to the cellular operator as the backhaul. As an example of how the mobile device may determine that it is in background mode the mobile device may set a wakeup timer when it enters background mode. When the wakeup timer expires the device switches to foreground mode as shown in . In that way the wakeup timer defines the period of time the mobile device will spend in background mode. If the mobile device wakes up before the expiration of the wakeup timer due to user input or network activity for example the mobile device may stop the timer then reset it when it returns to background mode. Thus in order to determine whether or not the mobile device is in background mode the mobile device may simply check whether or not the wakeup timer is still running. When the mobile device wakes up the mobile device processes the queued requests and forwards them to the network.

In another example the mobile device may additionally or alternatively define a radio gate on off period as shown in . The radio gate is on when the mobile device is in foreground mode and off when the mobile device is in background mode. The mobile device may define a particular period of time that the radio gate should be off. The mobile device can check whether the gate is on or off in order to determine whether the mobile device is in background mode. If the mobile device is not in background mode the mobile device permits the application to access the network at .

At if the mobile device is in background mode the mobile device synchronizes the application request with a predefined wakeup schedule. For example the mobile device may hold all socket open requests until the mobile device enters foreground mode at the beginning of a gate on period as shown in or the expiration of the wakeup timer. In another example the mobile device may block or drop all socket connections while the device is in background mode i.e. during a gate off period as shown in or until the expiration of the wakeup timer. In another example the mobile device may register the callback function received from the application as shown in . In this example the mobile device may register the callback function before or after determining that it is in background mode.

At the mobile device wakes up and enters foreground mode. The mobile device may wake up due to the expiration of the wakeup timer or due to user or network activity. Upon entering foreground mode the mobile device may stop the wakeup timer if not expired and or set the radio gate to on. 

At the mobile device permits any application to access the network. For example the mobile device may release the socket open requests it had been holding as shown in . In another example the mobile device may stop blocking or dropping socket connections as shown in . In another example the mobile device may invoke the applications that registered callback functions as shown in . The mobile device permits all network access requests during the foreground period. At the expiration of the foreground period or due to inactivity the mobile device reenters background mode and method may repeat.

In the CnE wrapper initially sets a gate off period the CnE wrapper may also or alternatively start a wakeup timer as discussed above . This gate off period corresponds to the mobile device being in background mode. During the gate off period the CnE wrapper intercepts all socket open requests e.g. Connect methods and holds them until the mobile device wakes up i.e. enters the foreground mode and transitions to a gate on period . The start of the gate on period may be due to the expiration of the wakeup timer or due to user or network initiated data. During the gate on period the CnE wrapper passes any socket open requests e.g. including the socket requests that it had been holding e.g. to the socket library and TCP IP stack. The TCP IP layer then transmits the requests now e.g. SYN requests and to the network without further involving the CnE driver .

The CnE wrapper may hold the socket open requests at by for example freezing the application threads. Then when the mobile device enters foreground mode i.e. the gate on period the CnE wrapper releases the application threads so that they may continue executing.

In the CnE driver initially sets a gate off period the CnE wrapper may also or alternatively start a wakeup timer as discussed above . This gate off period corresponds to the mobile device being in background mode. The CnE driver intercepts outgoing synchronization packets e.g. SYN requests from Connect and drops them but forwards any other type of packet leading to a radio connection being established . When the mobile device wakes up whether because the gate off period expired or it was interrupted by user or network initiated data the CnE driver transitions to a gate on period i.e. foreground mode. All packets received during the gate on period such as SYN request from Connect pass through CnE wrapper socket library TCP IP and are forwarded to the network . Any synchronization packets received during the gate off period however are not forwarded. The CnE driver sets another gate off period at .

As shown in the gate off period or wakeup timer in may be modified after every wakeup cycle to ensure the successful update over time of all applications. That is only a fraction of the application initiated updates will be successful during a given gate off period . For example with the 30 minute gate off period shown in application A fails to update but application B succeeds at the next wakeup. The result is the same for the 28 minute gate off period. However after the 26 minute gate off period application A successfully updates while application B fails to update. The mobile device can continue changing the gate off period until an optimal period is determined. Although shows decreasing gate off intervals it will be apparent that increasing intervals are also possible. The timing is chosen in such a way that over a large time period all the applications will be able to transmit the data. The choice of the gate on gate off period may be derived based on the timing periodicity registered by different applications.

Table 1 below shows four test cases run without using an embodiment of the invention in order to set a baseline. Test Case 1 ran the SMS blogging service application the social media application and the VoIP text messaging application. Test Case 2 ran the Test Case 1 applications plus the finance application and the weather application. Test Case 3 ran the Test Case 2 applications plus the news feed application. Test Case 4 ran the Test Case 2 applications plus the instant messaging application.

As discussed above embodiments of the invention time align the connections for background applications. For testing embodiments of the invention the relevant factors were the number of applications the percentage of time that the mobile device was actively used the relative power consumption of active device usage i.e. foreground mode versus updates to the same set of applications when in the background i.e. background mode and the time alignment of updates to applications in background mode.

Other tests of embodiments of the invention determined the foreground to background power consumption ratio. The assumption to be verified was that power consumption during foreground mode was not a strong function of the application used. Running the SMS blogging service application the social media application and the finance application in background mode the average current draw was 320 mA during data activity and approximately 0 mA when there was no data activity. Running a web browser application during foreground mode the average current draw was 780 mA during data activity and approximately 200 mA when there was no data activity. Thus the foreground mode to background mode power consumption ratio is approximately 2.5.

Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Further those of skill in the art will appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The methods sequences and or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor.

Accordingly an embodiment of the invention can include a computer readable media embodying a method for optimizing signaling load overhead and battery consumption for background applications. Accordingly the invention is not limited to illustrated examples and any means for performing the functionality described herein are included in embodiments of the invention.

While the foregoing disclosure shows illustrative embodiments of the invention it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions steps and or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore although elements of the invention may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

