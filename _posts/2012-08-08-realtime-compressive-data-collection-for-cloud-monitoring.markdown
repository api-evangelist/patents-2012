---

title: Real-time compressive data collection for cloud monitoring
abstract: Technologies are presented for implementing a compressive-sensing-based data collection system in a cloud environment. In some examples, high-dimensional sensor data may be compressed using sparsity transforms and compressive sampling. The resulting low-dimensional data messages may be steered through a switch network to a cloud service manager, which then reconstructs the compressed messages for subsequent analysis, reporting, and/or comparable actions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09032072&OS=09032072&RS=09032072
owner: Empire Technology Development LLC
number: 09032072
owner_city: Wilmington
owner_country: US
publication_date: 20120808
---
This Application is the National Stage filing under 35 US.C. 371 of PCT application Ser. No. PCT US12 49884 filed on Aug. 8 2012. The disclosure of the PCT Application is hereby incorporated by reference in its entirety.

Unless otherwise indicated herein the materials described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

Monitoring is one of the operational tasks in a cloud based environment for fault detection correction and system maintenance. For example utilization of servers and storage capacity may be regularly monitored. Monitoring of data may be useful for short term management as well as for long term capacity planning. Machine images run from the service catalog may also need to be monitored. Systems administrators may need to know which applications are used frequently. Monitoring may also include security monitoring such as monitoring user activity suspicious events authentication failures or repeated unauthorized access attempts and scanning of inbound and outbound network traffic.

End users may need to be able to monitor usage of cloud resources and receive alerts when additional resources are needed. These monitoring capabilities may include tools for monitoring CPU usage per computing resource ratios between systems activity and user activity and CPU usage from specific job tasks. Also users may need access to predictive cloud analytics that allow them to capture trending data on memory utilization and file system growth so that they can plan needed changes to computing resources before they encounter service availability issues. Not having these capabilities in place may prevent users from taking actions for optimizing cloud resources in use to meet changes in business demand.

Organizations deploying cloud computing services via third party providers may need technology tools in place to monitor the third party providers. As a part of their agreements with providers of public cloud services organizations may request guarantees for levels of performance that service providers are expected to deliver. However in order to ensure that these service levels are met organizations may need to have independent monitoring tools in place that allow them to monitor not just actual levels of performance as experienced by business users but also enable them to conduct root cause analysis of problems as they occur.

The present disclosure generally describes technologies for providing real time compressive data collection in cloud monitoring.

According to some example embodiments a method for real time compressive data collection in cloud monitoring may include receiving multi dimensional data associated with performance of a cloud infrastructure collected by multiple probes within the cloud infrastructure determining a sparsity feature of the received multi dimensional data and applying compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data.

According to other example embodiments a method for real time compressive data collection in cloud monitoring may include receiving multiple messages from multiple probes within a cloud infrastructure at aggregator switches of the cloud infrastructure generating multi dimensional data associated with performance of the cloud infrastructure from the received messages determining a sparsity feature of the multi dimensional data applying compressive sensing to compress the multi dimensional data into single dimensional messages using the sparsity feature steering the single dimensional messages to a service manager within the cloud infrastructure and reconstructing the single dimensional messages into multi dimensional data at the service manager.

According to further example embodiments a cloud based datacenter configured to provide real time compressive data collection in cloud monitoring may include multiple probes multiple aggregators and a cloud monitoring service. The multiple probes may be configured to collected data associated with performance of multiple nodes of a cloud infrastructure. The multiple aggregators may be configured to receive the collected data from the multiple probes generate multi dimensional data from the received data determine a sparsity feature of the multi dimensional data and apply compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data into single dimensional data using the sparsity feature. The cloud monitoring service may be configured to manage steering of the single dimensional data to a service manager.

According to yet other example embodiments a computer readable storage medium may have instructions stored thereon for real time compressive data collection in cloud monitoring. The instructions may include receiving multi dimensional data associated with performance of a cloud infrastructure collected by multiple probes within the cloud infrastructure determining a sparsity feature of the received multi dimensional data and applying compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data.

The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects embodiments and features described above further aspects embodiments and features will become apparent by reference to the drawings and the following detailed description.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the Figures can be arranged substituted combined separated and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

This disclosure is generally drawn inter alia to methods apparatus systems devices and or computer program products related to real time compressive data collection in cloud monitoring.

Briefly stated technologies are presented for compressive sensing based data collection in a cloud environment. In some examples high dimensional sensor data may be compressed using sparsity transforms and compressive sampling. The resulting low dimensional data messages may be steered through a switch network to a cloud service manager which then reconstructs the compressed messages for subsequent analysis reporting and or comparable actions.

In many cloud environments real time continuous cloud monitoring in which raw server status data are collected continuously centralized data mining and decision making may be desirable. Such a global cloud monitoring model may provide many benefits. For example frequent system level status reports may allow for better decision making by automated data center management systems and for maintaining geographically distributed container based data centers since more subsystems failures can occur as the total system scales up.

One approach for real time global cloud monitoring may involve retrieving abnormal server states instead of raw data in order to reduce the volume of in network data transmission. However implementing this approach may be difficult expensive and or undesirable because each server sensor may need to have a local processor and cache to detect the local anomalies and the sensors may have to be synchronized to report the states which may lead to large overheads for local processing.

Another approach is to perform data compression before transmission. One challenge associated with this second approach is to design a data compression scheme with a minimum runtime footprint i.e. easy to implement while simultaneously having reasonable reconstruction performance. Data compression techniques such as joint entropy coding or transform coding may be applied but these techniques may be computationally intensive and may involve a large amount of data exchanges resulting in significant overhead. In addition performance may vary with compression ratio and network topology.

As shown in a diagram a physical datacenter may include one or more physical servers and each of which may be configured to provide one or more virtual machines . For example the physical servers and may be configured to provide four virtual machines and two virtual machines respectively. In some embodiments one or more virtual machines may be combined into one or more virtual datacenters. For example the four virtual machines provided by the server may be combined into a virtual datacenter . The virtual machines and or the virtual datacenter may be configured to provide cloud related data computing services such as various applications data storage data processing or comparable ones to a group of customers such as individual users or enterprise customers via a cloud .

Continuous cloud monitoring systems for assisting in centralized information discovery and decision making continuously collect raw sensor status data route and transmit to a central database for global data analytics e.g. anomaly detection etc. . This is due to the fact that the modern cloud data analytics use data mining technologies to discover the relations among substantial amounts of data volume where the data needs to update itself as frequently as possible while keeping as much as raw information. On the contrary some centralized cloud monitoring systems exploit local detectors to filter the raw data and then transmit the detected data or event with reduced dimensions to the central monitoring applications.

The continuous monitoring approach using global or local detectors may not be desirable to new cloud monitoring frameworks. For example in increasingly complicated anomaly detection the new frameworks need data mining approaches to take advantage of the dependence or correlations among the raw status data enabling a more comprehensive understanding of the underlying data volume. The dependency or correlation may be the spatial relations among a cluster of nodes or the temporal relations with respect to one or a cluster of nodes. In such scenarios the full utilization of entire information and their correlations in spatial and or temporal domain may contribute to the success of anomaly detection. If individual local detectors are applied instead as in the conventional cloud monitoring architectures the detected events may be likely to lose their dependency information. As a result the conventional cloud monitoring lacks the capability of performing advanced global data analytics in real time to satisfy the growing complexity and need for cloud monitoring.

Some monitoring tools may allow for the monitoring of application response time service availability page load time and traffic during peak times. Therefore an efficient real time monitoring system may be a benefit to both a cloud service provider and a consumer. An efficient cloud monitoring system may offer several benefits.

For example such a tool may allow performance issues to be prevented and or resolved in a timely manner. Organizations that have visibility into resource utilization in the cloud may be more likely to make educated and timely decisions about resource allocation and therefore to prevent performance problems before they impact their business users.

In another example resources may be easily adjusted to reflect changes in business demand. Full visibility into the performance of cloud services may allow organizations to unlock the benefits of cloud computing especially when it comes to improved flexibility of IT management. Organizations that have end to end visibility into the performance of cloud services and their internal infrastructure may be able to make decisions about adding or subtracting resources to support changes in business demand which may allow them to ensure a high level of quality of end user experience at optimal cost.

In a further example monitoring may allow spending decisions to be optimized. Organizations deploying independent tools for monitoring performance service level agreement SLA achievements and usage of cloud services may be more likely to be able to make educated decisions about the return they are getting from their investment in cloud services.

The cloud monitoring system may be configured for infrastructure and or applications monitoring. For example the cloud monitoring system may track central processing unit CPU and memory utilization for adjusting resource allocation and or track disk input output operations to ensure sufficient throughput to meet service level agreements SLAs . The cloud monitoring system may also monitor application logs to look for adverse events or warnings of potential problems monitor jobs and workflows running in the cloud e.g. running time resources allocated and resource cost and or monitor context information to provide Quality of Context QoC for cloud context awareness services.

As shown in a diagram the system level architecture of a cloud monitoring system may include a datacenter similar to the datacenter described above in . The datacenter may interface with a service layer which in turn may communicate with an application layer via a network . The datacenter may include one or more servers similar to the servers or described above in some of which may be organized into server racks of one or more servers. Each server rack may be connected to a top of rack TOR switch . Each of the TOR switches may connect to one or more aggregation switches each of which in turn may connect to one or more core switches . The core switches may connect to a service manager in the service layer . The datacenter may also include one or more sensors . In some embodiments each of the servers may be associated with one or more of the sensors . The sensors may be configured to probe the status of an associated server in real time. For example the sensors may measure server states that include server temperature CPU usage memory usage network usage and or any other suitable server parameter. The server data and parameters measured by the sensors may be aggregated and transmitted through the hierarchy of switches i.e. the TOR switches the aggregation switches and the core switches until reaching the service manager in the service layer .

The service manager may then transmit the received sensor data to a data analysis service module for analysis. In some embodiments a database which may be an expert knowledge system or may store historical sensor data may provide support to the data analysis service module for anomaly detection and decision support. The service manager may then generate status reports for the system based on the analysis. Subsequently one or more users residing in the application layer may request one or more applications e.g. real time monitoring service and analytic tools to obtain the status reports from the service manager using cloud based service interfaces and via the network . For example a web graphic user interface GUI may be available for the users to monitor the status of the servers via a cloud based web service.

In some embodiments the sensor data received by the service manager may be encoded and or compressed in order to reduce data traffic. The service manager may decode and reconstruct the received sensor data before transmitting the data to the data analysis service . The service manager may also transmit the sensor data to a cloud monitoring service also included in the service layer . The cloud monitoring service may provide control parameter data via a data collection module to the sensors the TOR switches the aggregation switches and the core switches in order to control the real time sensor data collection and routing process. In order to fine tune the data collection and routing process the cloud monitoring service may filter sensor data received from the service manager with a data filtering module and use the filtered data to adjust data collection and routing parameters. In some embodiments the data filtering module may be configured to reduce the amount of sensor data aggregated through the switching network and therefore enable the data collection module to a implement a desired data sampling and encoding i.e. compression scheme and b to more efficiently steer the encoded sensor data via the switches.

As shown in a diagram a data filtering module similar to the data filtering module in may be coupled to one or more data query interfaces and implemented within a data collection module similar to the data collection module in . The data query interfaces and may initialize control and receive sensor data from sensors and each of which may collect data from servers and . The data query interfaces and may also provide data and control parameters to TOR switches and . In some embodiments the data and control parameters may include sensor data received from the sensors and . Since the raw sensor data may include different types of information of different data formats the data query interfaces and may reformat and or reorganize the data into a unified data structure. For example a unified data structure may include a header indicating a sensor identifier i.e. type location etc. a server identifier a time a data type a sampling frequency precision units data availability and or the entity incorporating the data values.

In some embodiments while the sensors and send sensor readings to the data query interfaces and in real time each of the sensors may have different sampling frequencies and therefore all sensor data may not necessarily be available at certain times. In these cases the data query interfaces may be configured to forward the available sensor readings while keeping the rest unavailable.

The data and control parameters may also include control parameters for the TOR switches and as well as higher level switches for controlling the routing of the sensor data. For example the control parameters may include sparse transform coefficients and or random construction matrices described in more detail below . Each of the TOR switches and may receive data and control parameters associated with one of server racks and and in some embodiments the TOR switches and may also receive data and control parameters from components on the server racks and . The TOR switches and may then transmit data to aggregators and which may then pass the data to further upper level switches.

In some embodiments a compressive sensing CS approach may be used for data filtering which may maintain real time monitoring performance while reducing data traffic. illustrates an example compressive data collection and reconstruction procedure arranged in accordance with at least some embodiments described herein.

As shown in a diagram a cloud monitoring service similar to the cloud monitoring service in may communicate with a service manager similar to the service manager in . The cloud monitoring service may include a probe initialization module a sparse transformation module a compressive sampling module and a data steering module . The service manager may include a reconstruction module .

The probe initialization module may be configured to initiate one or more sensor probes e.g. the sensors in . A probe may be the physical instance of a data source from which state data is to be collected. For example a probe may include a processing unit a virtual machine and associated monitoring sensor or a server e.g. the servers in and any associated sensors and state data may include a property of the probe e.g. CPU temperature. The probe initialization module may initialize one or more work threads. In some embodiments the probe initialization module may initialize two work threads a producer thread and a consumer thread. The producer thread may collect data from probes while the consumer thread may read the collected data. Data producers and consumers may be connected via a network that distributes the collected measurements and data collection and distribution may be provided by different elements of the monitoring system such that the distribution framework may be modified without modifying all of the producers and consumers. Data transmission rates for raw and compressed data may be adjusted on demand by e.g. the data collection module in based on real time monitoring service specifications.

After the probes are initialized by the probe initialization module they may begin measuring state data and transmitting messages containing the state data to e.g. the data collection module in . While in some embodiments each probe may be associated with a single state or measured parameter in other embodiments each probe may be associated with multiple states from different sensor readings. Therefore the state data messages transmitted by a probe may take the form of a multi dimensional vector. For example one dimension may represent the type of sensed data temperature network traffic memory usage etc. while another dimension may represent different instances of the sensed data time location etc . In another example each dimension may represent one type of the sensed data. If there are three sensor types resulting in three states readings then a three dimensional vector may be constructed with each dimension corresponding to one sensor state. In order to compress the messages the sensed data may be transformed via the sparse transform module and then subsequently compressed via the compressive sampling module both of which are described in more detail below in relation to . The data steering module may then steer the compressed messages to the service manager . Finally the reconstruction module in the service manager may reconstruct the compressed messages received by the service manager .

In some examples probes in a cloud monitoring system may be associated with multiple states from different sensor readings resulting in probe messages having multi dimensional vectors. Since these probe messages are transmitted through the switch network in a datacenter as described above in compressing the multi dimensional vectors in these messages may reduce network traffic and improve the efficiency of the cloud monitoring system.

As shown in a diagram multi dimensional state data may be collected from a number of probes in a data collection operation . For example if there are N probes each probe may provide a message x i 1 . . . N which may encapsulate its individual set of states in a multi dimensional vector. To reduce the complexity of representation an organization of the multi dimensional vector may be changed. For example individual sensor readings may be separated and processed according to dimension or the messages may be vectorized and then concatenated into a single raw vector x. In some embodiments sparsity measures may be used to help compress messages. For example the raw message x may be K sparse where K

Subsequently the K sparse raw message x may be compressed in a compression operation to form compressed messages y. The compression operation may be performed by a compressive sample module similar to the compressive sample module in . In some embodiments the compression operation may include multiplying a random construction matrix of size M by N with the raw message x to form a compressed message y as follows 

In equation 2 each column of may contain a series of random numbers for the corresponding probe and single dimensional vector . The random matrix may be generated by including a random seed generator in the data filtering module e.g. the data filtering module in so that the random coefficients are transmitted together with raw sensor readings from the sensors up to a central node e.g. the service manager in . In other embodiments the random matrix may not be transmitted along the entire network. In these embodiments the central node may instead first broadcast a global random seed to the entire network. An individual probe may then generate its own seed using the global random seed and a unique probe identifier and may use a pseudo random number generator to generate the coefficients of the random matrix . These coefficients may then be reproduced at the central node assuming that the central node knows the identifiers of all the probes without having to transmit the entire random matrix along the entire network.

Once the data has been compressed it may be used along with the random coefficients transmitted along the network or reproduced at the central node to reconstruct the raw data in a subsequent reconstruction operation . In some embodiments the reconstruction operation may be performed by a reconstruction module such as the reconstruction module in .

After a message has been compressed as described above but before reconstruction the message may be steered along the network by a data steering module such as the data steering module described in .

As shown in a diagram a datacenter network architecture may include multiple server racks and that connect to a switch network with multiple levels. The first switch level may include switches and and in some embodiments may be TOR switches e.g. the TOR switches in or the TOR switches and in The second switch level may include switches and and in some embodiments may be aggregation switches e.g. the aggregation switches in or the aggregators and in . The third switch level may include switch which in some embodiments may be a core switch e.g. the core switches in . While three server racks and three switch levels are depicted in the diagram it should be understood that more or fewer racks and or switch levels may be included a datacenter network architecture.

In the diagram the server racks and may have sparse message structures xx. . . x xx. . . x xx. . . x respectively formed from the sensors and associated servers in each rack superscript T refers to transform . These messages may be encoded via compressive sampling and then steered through the network towards the switch . Because the messages from each rack may be independent there may be multiple ways to encode and compress the raw messages at the switches and . However different encoding strategies may affect the final reconstruction process as well as the performance of the data steering process.

One encoding approach may be to assign each rack an independent random construction matrix. According to equation 1 above y x y x and y x where is M N is M Nand is M Nand M

Another encoding approach may be to divide the random construction matrix into three portions as follows 

Yet another encoding approach is depicted in which illustrates example models for data steering arranged in accordance with at least some embodiments described herein. The additional encoding technique may begin with partitioning the random construction matrix into nine portions as follows 

Finally the compressed data may be reconstructed by a reconstruction module e.g. the reconstruction module in . In some embodiments the reconstruction module may be implemented by a service manager module e.g. the service manager module in or the service manager module in . The service manager module may be responsible for the instantiation of service applications e.g. the cloud monitoring service and or the data analysis service in by requesting the creation and configuration of virtual execution environments for each service component. The service manager module may also include components for dynamically evaluating elasticity and SLA rules in order to maintain effective application execution. For these rules to be evaluated the cloud monitoring service e.g. the cloud monitoring service may provide the control parameters generated for the whole system.

For a CS based data collection and filtering approach the service manager module may be configured to reconstruct the status message x from the measurement y e.g. via a reconstruction module such as the reconstruction module in . Reconstruction may occur using a linear programming optimization approach that solves an l minimization problem 

Finally the sparse domain information may be extracted from the reconstructed message x and then x may be transformed back to the original domain using the reverse sparse domain transform. The service manager module may then forward the reconstructed data for analysis by e.g. the data analysis service in .

Depending on the desired configuration the processor may be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. The processor may include one more levels of caching such as a level cache memory a processor core and registers . The example processor core may include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. An example memory controller may also be used with the processor or in some implementations the memory controller may be an internal part of the processor .

Depending on the desired configuration the system memory may be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. The system memory may include an operating system a monitoring service and program data . The monitoring service may include a collection module for implementing real time compressive data collection as described herein. The program data may include among other data transform data or the like as described herein.

The computing device may have additional features or functionality and additional interfaces to facilitate communications between the basic configuration and any desired devices and interfaces. For example a bus interface controller may be used to facilitate communications between the basic configuration and one or more data storage devices via a storage interface bus . The data storage devices may be one or more removable storage devices one or more non removable storage devices or a combination thereof. Examples of the removable storage and the non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

The system memory the removable storage devices and the non removable storage devices are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD solid state drives or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be used to store the desired information and which may be accessed by the computing device . Any such computer storage media may be part of the computing device .

The computing device may also include an interface bus for facilitating communication from various interface devices e.g. one or more output devices one or more peripheral interfaces and one or more communication devices to the basic configuration via the bus interface controller . Some of the example output devices include a graphics processing unit and an audio processing unit which may be configured to communicate to various external devices such as a display or speakers via one or more A V ports . One or more example peripheral interfaces may include a serial interface controller or a parallel interface controller which may be configured to communicate with external devices such as input devices e.g. keyboard mouse pen voice input device touch input device etc. or other peripheral devices e.g. printer scanner etc. via one or more I O ports . An example communication device includes a network controller which may be arranged to facilitate communications with one or more other computing devices over a network communication link via one or more communication ports . The one or more other computing devices may include servers at a datacenter customer equipment and comparable devices.

The network communication link may be one example of a communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF microwave infrared IR and other wireless media. The term computer readable media as used herein may include both storage media and communication media.

The computing device may be implemented as a part of a general purpose or specialized server mainframe or similar computer that includes any of the above functions. The computing device may also be implemented as a personal computer including both laptop computer and non laptop computer configurations.

Example embodiments may also include methods for real time compressive data collection in cloud monitoring. These methods can be implemented in any number of ways including the structures described herein. One such way may be by machine operations of devices of the type described in the present disclosure. Another optional way may be for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some of the operations while other operations may be performed by machines. These human operators need not be collocated with each other but each can be with a machine that performs a portion of the program. In other examples the human interaction can be automated such as by pre selected criteria that may be machine automated.

An example process for providing real time compressive data collection in cloud monitoring may begin with block RECEIVE COLLECTED PERFORMANCE DATA WITHIN A CLOUD INFRASTRUCTURE where data and server states collected by sensors e.g. the sensors in are received by e.g. the cloud monitoring service in as described above. The performance data may be received in real time and may include server temperature CPU usage memory usage network usage and or any other suitable server parameter.

Block may be followed by block APPLY COMPRESSIVE SENSING TO COMPRESS HIGH DIMENSIONAL COLLECTED DATA INTO LOW DIMENSIONAL MESSAGES where a sparse transform module e.g. the sparse transform module in may be applied to the performance data to transform high dimensional data into low dimensional data as described above. Compressive sampling may then be applied to the low dimensional data by a compressive sampling module e.g. the compressive sampling module in to form compressed messages as described above in relation to . For example a random construction matrix may be applied to low dimensional data in order to form compressed messages.

Block may be followed by block TRANSFER THE MESSAGES TO A SERVICE MANAGER FOR RECONSTRUCTION where the compressed messages may be steered to a service manager module e.g. the service manager module in or the service manager module in through a datacenter switch network as described above in relation to . In some embodiments the message steering may be implemented by a data steering module such as the data steering module in . The service manager module may then reconstruct the compressed messages using e.g. a reconstruction module such as the reconstruction module in as described above.

Finally in some embodiments block may be followed by optional block ANALYZE REPORT RECONSTRUCTED DATA where the reconstructed data may be analyzed by a data analysis service such as the data analysis service module in . For example the data may be analyzed to detect anomalies and or to provide decision support for the service manager. In some embodiments the reconstructed data may also be reported to one or more monitoring applications such as applications in .

In some examples as shown in the computer program product may include a signal bearing medium that may also include one or more machine readable instructions that when executed by for example a processor may provide the functionality described herein. Thus for example referring to the processor in the monitoring service may undertake one or more of the tasks shown in in response to the instructions conveyed to the processor by the medium to perform actions associated with providing real time compressive data collection in cloud monitoring as described herein. Some of those instructions may include for example receiving collected performance data within a cloud infrastructure applying compressive sensing to compress high dimensional collected data into low dimensional messages and transferring the messages to a service manager for reconstruction according to some embodiments described herein.

In some implementations the signal bearing medium depicted in may encompass a computer readable medium such as but not limited to a hard disk drive a solid state drive a Compact Disc CD a Digital Versatile Disk DVD a digital tape memory etc. In some implementations the signal bearing medium may encompass a recordable medium such as but not limited to memory read write R W CDs R W DVDs etc. In some implementations the signal bearing medium may encompass a communications medium such as but not limited to a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. . Thus for example the program product may be conveyed to one or more modules of the processor by an RF signal bearing medium where the signal bearing medium is conveyed by the wireless communications medium e.g. a wireless communications medium conforming with the IEEE 802.11 standard .

According to some examples a method for compressive sensing based data collection in cloud monitoring may include receiving multi dimensional data associated with performance of a cloud infrastructure collected by multiple probes within the cloud infrastructure determining a sparsity feature of the received multi dimensional data and applying compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data.

According to some embodiments the method may further include reconstructing the single dimensional data into multi dimensional data at a service manager and or one of analyzing or preparing a report based on the reconstructed multi dimensional data for monitoring a cloud performance. Each probe may be a physical instance of a data source within the cloud infrastructure providing state data and the probes may include one or more of a processing unit a monitoring sensor associated with a virtual machine and a server. The state data may be associated with a property of a probe including one or more of a processor utilization a memory utilization a disk input output I O utilization an adverse event associated with an application a running time associated with an application a resource allocation context information network usage and disk temperature.

According to other embodiments the method may further include initializing the multiple probes by initializing a producer thread and a consumer thread where the producer thread collects data from the multiple probes and the consumer thread reads the collected data. The method may further include adjusting a single dimensional data transmission rate within the cloud infrastructure according to a real time monitoring service specification compressing the multi dimensional data by separating readings of each dimension of a probe vector that includes readings from multiple data sources and processing the separate readings respectively and or compressing the multi dimensional data by vectorizing messages from each probe and concatenating the vectorized messages into a single vector.

According to further embodiments the method may further include compressing the multi dimensional data from the multiple probes employing a sparse transformation. The sparse transformation may include a discrete cosine transform and or a wavelet transform. The method may further include applying compressive sampling to the transformed multi dimensional data by multiplying a single dimensional data vector with a random construction matrix where each column of the random construction matrix includes a series of random numbers for a probe corresponding to the single dimensional data vector. The method may further include broadcasting a random global seed from a central node of the cloud infrastructure where each probe generates its own seed using the global seed and a probe identification to avoid transmitting the random construction matrix throughout the cloud infrastructure and or steering the single dimensional data by splitting the random construction matrix into at least three segments to create at least three measurement vectors of equal size for each probe message steering the same size measurement vectors to a service manager and concatenating the measurement vectors at the service manager.

According to yet other embodiments the method may further include steering the single dimensional data by partitioning the random construction matrix into at least nine segments to create at least three measurement matrices steering the measurement matrices to a service manager and obtaining individual encoded measurement vectors through summation operations at top of rack TOR switches. Communication links may be provided between switches of the cloud infrastructure and global control parameters to enable the summation operations and the global control parameters may be generated at a data filtering module. The method may further include balancing transmission of the single dimensional data through the switches by a load balancer that employs a pre defined load balancing mechanism computed from the global control parameters. The load balancer may dynamically assign the load balancing mechanism based on a network context.

According to some embodiments the method may further include steering the single dimensional data directly via multiple levels of switches to a service manager. The method may further include reconstructing the single dimensional data employing a linear programming optimization extracting sparse domain information from the reconstructed single dimensional data and transforming the reconstructed single dimensional data to an original state domain by applying a reverse sparse domain transform.

According to other examples a method for compressive sensing based data collection in cloud monitoring may include receiving multiple messages from multiple probes within a cloud infrastructure at aggregator switches of the cloud infrastructure generating multi dimensional data associated with performance of the cloud infrastructure from the received messages determining a sparsity feature of the multi dimensional data applying compressive sensing to compress the multi dimensional data into single dimensional messages using the sparsity feature steering the single dimensional messages to a service manager within the cloud infrastructure and reconstructing the single dimensional messages into multi dimensional data at the service manager.

According to some embodiments the method may further include one of analyzing or preparing a report based on the reconstructed multi dimensional data for monitoring a cloud performance. Each probe may be a physical instance of a data source within the cloud infrastructure providing state data and the probes may include one or more of a processing unit a monitoring sensor associated with a virtual machine and a server. The state data may be associated with a property of a probe including one or more of a processor utilization a memory utilization a disk input output I O utilization an adverse event associated with an application a running time associated with an application a resource allocation context information network usage and disk temperature.

According to other embodiments the method may further include initializing the multiple probes by initializing a producer thread and a consumer thread where the producer thread collects data from the multiple probes and the consumer thread reads the collected data and adjusting a single dimensional data transmission rate within the cloud infrastructure according to a real time monitoring service specification. The method may further include compressing the multi dimensional data by separating readings of each dimension of a probe vector that includes readings from multiple data sources and processing the separate readings respectively and or compressing the multi dimensional data by vectorizing messages from each probe and concatenating the vectorized messages into a single vector.

According to further embodiments the method may further include compressing the multi dimensional data from the multiple probes employing a sparse transformation. The sparse transformation may include a discrete cosine transform and or a wavelet transform. The method may further include applying compressive sampling to the transformed multi dimensional data by multiplying a single dimensional data vector with a random construction matrix where each column of the random construction matrix includes a series of random numbers for a probe corresponding to the single dimensional data vector. The method may further include steering the single dimensional data by splitting the random construction matrix into at least three segments to create at least three measurement vectors of equal size for each probe message steering the same size measurement vectors to a service manager and concatenating the measurement vectors at the service manager.

According to yet other embodiments the method may further include steering the single dimensional data by partitioning the random construction matrix into at least nine segments to create at least three measurement matrices steering the measurement matrices to a service manager and obtaining individual encoded measurement vectors through summation operations at top of rack TOR switches. Communication links may be provided between switches of the cloud infrastructure and global control parameters to enable the summation operations and the global control parameters may be generated at a data filtering module of the cloud infrastructure. The method may further include steering the single dimensional data directly via multiple levels of switches to a service manager. The method may further include reconstructing the single dimensional data employing a linear programming optimization extracting sparse domain information from the reconstructed single dimensional data and transforming the reconstructed single dimensional data to an original state domain by applying a reverse sparse domain transform.

According to further examples a cloud based datacenter configured to employ compressive sensing based data collection in cloud monitoring may include multiple probes multiple aggregators and a cloud monitoring service. The multiple probes may be configured to collected data associated with performance of multiple nodes of a cloud infrastructure. The multiple aggregators may be configured to receive the collected data from the multiple probes generate multi dimensional data from the received data determine a sparsity feature of the multi dimensional data and apply compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data into single dimensional data using the sparsity feature. The cloud monitoring service may be configured to manage steering of the single dimensional data to a service manager.

According to some embodiments the service manager may be further configured to reconstruct the single dimensional data into multi dimensional data. Each probe may be a physical instance of a data source providing state data and may include one or more of a processing unit a monitoring sensor associated with a virtual machine and a server within the cloud infrastructure. The state data may be associated with a property of a probe including one or more of a processor utilization a memory utilization a disk input output I O utilization an adverse event associated with an application a running time associated with an application a resource allocation context information network usage and disk temperature.

According to other embodiments the service manager may be further configured to initialize the multiple probes by initializing a producer thread and a consumer thread where the producer thread collects data from the multiple probes and the consumer thread reads the collected data. A single dimensional data transmission rate within the cloud infrastructure may be adjusted according to a real time monitoring service specification. The aggregators may be configured to compress the multi dimensional data by separating readings of each dimension of a probe vector that includes readings from multiple data sources and processing the separate readings respectively and or compress the multi dimensional data by vectorizing messages from each probe and concatenating the vectorized messages into a single vector.

According to further embodiments the aggregators may be further configured to compress the multi dimensional data from the multiple probes employing a sparse transformation. The sparse transformation may include a discrete cosine transform and or a wavelet transform. The aggregators may be further configured to apply compressive sampling to the transformed multi dimensional data by multiplying a single dimensional data vector with a random construction matrix where each column of the random construction matrix includes a series of random numbers for a probe corresponding to the single dimensional data vector. A random global seed may be broadcast from a central node of the cloud infrastructure such that each probe generates its own seed using the global seed and a probe identification to avoid transmitting the random construction matrix throughout the cloud infrastructure. The cloud monitoring service may be configured to steer the single dimensional data by splitting the random construction matrix into at least three segments to create at least three measurement vectors of equal size for each probe message steering the same size measurement vectors to a service manager and concatenating the measurement vectors at the service manager.

According to yet other embodiments the cloud monitoring service may be further configured to steer the single dimensional data by partitioning the random construction matrix into at least nine segments to create at least three measurement matrices steering the measurement matrices to a service manager and obtaining individual encoded measurement vectors through summation operations at top of rack TOR switches. Communication links may be provided between switches of the cloud infrastructure and global control parameters may be employed to enable the summation operations. The datacenter may further include a data filtering module configured to generate the global control parameters and or a load balancer configured to balance transmission of the single dimensional data through the switches by employing a pre defined load balancing mechanism computed from the global control parameters. The load balancer may dynamically assign the load balancing mechanism based on a network context.

According to some embodiments the cloud monitoring service may be further configured to steer the single dimensional data directly via multiple levels of switches to the service manager within the cloud infrastructure. The service manager may be further configured to reconstruct the single dimensional data employing a linear programming optimization extract sparse domain information from the reconstructed single dimensional data and transform the reconstructed single dimensional data to an original state domain by applying a reverse sparse domain transform.

According to yet other examples a computer readable storage medium may store instructions for compressive sensing based data collection in cloud monitoring. The instructions may include receiving multi dimensional data associated with performance of a cloud infrastructure collected by multiple probes within the cloud infrastructure determining a sparsity feature of the received multi dimensional data and applying compressive sensing to compress the multi dimensional data into single dimensional data using the sparsity feature the single dimensional data being suitable for use to reconstruct the multi dimensional data.

According to some embodiments the instructions may further include reconstructing the single dimensional data into multi dimensional data at a service manager and or one of analyzing or preparing a report based on the reconstructed multi dimensional data for monitoring a cloud performance. Each probe may be a physical instance of a data source within the cloud infrastructure providing state data and the probes may include one or more of a processing unit a monitoring sensor associated with a virtual machine and a server. The state data may be associated with a property of a probe including one or more of a processor utilization a memory utilization a disk input output I O utilization an adverse event associated with an application a running time associated with an application a resource allocation context information network usage and disk temperature.

According to other embodiments the instructions may further include initializing the multiple probes by initializing a producer thread and a consumer thread where the producer thread collects data from the multiple probes and the consumer thread reads the collected data. The instructions may further include adjusting a single dimensional data transmission rate within the cloud infrastructure according to a real time monitoring service specification compressing the multi dimensional data by separating readings of each dimension of a probe vector that includes readings from multiple data sources and processing the separate readings respectively and or compressing the multi dimensional data by vectorizing messages from each probe and concatenating the vectorized messages into a single vector.

According to further embodiments the instructions may further include compressing the multi dimensional data from the multiple probes employing a sparse transformation. The sparse transformation may include a discrete cosine transform and or a wavelet transform. The instructions may further include applying compressive sampling to the transformed multi dimensional data by multiplying a single dimensional data vector with a random construction matrix where each column of the random construction matrix includes a series of random numbers for a probe corresponding to the single dimensional data vector. The instructions may further include broadcasting a random global seed from a central node of the cloud infrastructure where each probe generates its own seed using the global seed and a probe identification to avoid transmitting the random construction matrix throughout the cloud infrastructure and or steering the single dimensional data by splitting the random construction matrix into at least three segments to create at least three measurement vectors of equal size for each probe message steering the same size measurement vectors to a service manager and concatenating the measurement vectors at the service manager.

According to yet other embodiments the instructions may further include steering the single dimensional data by partitioning the random construction matrix into at least nine segments to create at least three measurement matrices steering the measurement matrices to a service manager and obtaining individual encoded measurement vectors through summation operations at top of rack TOR switches. The instructions may further include providing communication links between switches of the cloud infrastructure and global control parameters to enable the summation operations and or generating the global control parameters at a data filtering module. The instructions may further include balancing transmission of the single dimensional data through the switches by a load balancer that employs a pre defined load balancing mechanism computed from the global control parameters. The load balancer may dynamically assign the load balancing mechanism based on a network context.

According to some embodiments the instructions may further include steering the single dimensional data directly via multiple levels of switches to a service manager. The instructions may further include reconstructing the single dimensional data employing a linear programming optimization extracting sparse domain information from the reconstructed single dimensional data and transforming the reconstructed single dimensional data to an original state domain by applying a reverse sparse domain transform.

There is little distinction left between hardware and software implementations of aspects of systems the use of hardware or software is generally but not always in that in certain contexts the choice between hardware and software may become significant a design choice representing cost vs. efficiency tradeoffs. There are various vehicles by which processes and or systems and or other technologies described herein may be effected e.g. hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed. For example if an implementer determines that speed and accuracy are paramount the implementer may opt for a mainly hardware and or firmware vehicle if flexibility is paramount the implementer may opt for a mainly software implementation or yet again alternatively the implementer may opt for some combination of hardware software and or firmware.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples may be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part may be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers e.g. as one or more programs running on one or more computer systems as one or more programs running on one or more processors e.g. as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure.

The present disclosure is not to be limited in terms of the particular embodiments described in this application which are intended as illustrations of various aspects. Many modifications and variations can be made without departing from its spirit and scope as will be apparent to those skilled in the art. Functionally equivalent methods and apparatuses within the scope of the disclosure in addition to those enumerated herein will be apparent to those skilled in the art from the foregoing descriptions. Such modifications and variations are intended to fall within the scope of the appended claims. The present disclosure is to be limited only by the terms of the appended claims along with the full scope of equivalents to which such claims are entitled. It is to be understood that this disclosure is not limited to particular methods reagents compounds compositions or biological systems which can of course vary. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting.

In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Versatile Disk DVD a digital tape a computer memory a solid state drive etc. and a transmission type medium such as a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein may be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a typical data processing system generally includes one or more of a system unit housing a video display device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors e.g. feedback for sensing position and or velocity of gantry systems control motors for moving and or adjusting components and or quantities .

A typical data processing system may be implemented utilizing any suitable commercially available components such as those typically found in data computing communication and or network computing communication systems. The herein described subject matter sometimes illustrates different components contained within or connected with different other components. It is to be understood that such depicted architectures are merely exemplary and that in fact many other architectures may be implemented which achieve the same functionality. In a conceptual sense any arrangement of components to achieve the same functionality is effectively associated such that the desired functionality is achieved. Hence any two components herein combined to achieve a particular functionality may be seen as associated with each other such that the desired functionality is achieved irrespective of architectures or intermediate components. Likewise any two components so associated may also be viewed as being operably connected or operably coupled to each other to achieve the desired functionality and any two components capable of being so associated may also be viewed as being operably couplable to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically connectable and or physically interacting components and or wirelessly interactable and or wirelessly interacting components and or logically interacting and or logically interactable components.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

It will be understood by those within the art that in general terms used herein and especially in the appended claims e.g. bodies of the appended claims are generally intended as open terms e.g. the term including should be interpreted as including but not limited to the term having should be interpreted as having at least the term includes should be interpreted as includes but is not limited to etc. . It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended such an intent will be explicitly recited in the claim and in the absence of such recitation no such intent is present. For example as an aid to understanding the following appended claims may contain usage of the introductory phrases at least one and one or more to introduce claim recitations. However the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles a or an limits any particular claim containing such introduced claim recitation to embodiments containing only one such recitation even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an e.g. a and or an should be interpreted to mean at least one or one or more the same holds true for the use of definite articles used to introduce claim recitations. In addition even if a specific number of an introduced claim recitation is explicitly recited those skilled in the art will recognize that such recitation should be interpreted to mean at least the recited number e.g. the bare recitation of two recitations without other modifiers means at least two recitations or two or more recitations .

Furthermore in those instances where a convention analogous to at least one of A B and C etc. is used in general such a construction is intended in the sense one having skill in the art would understand the convention e.g. a system having at least one of A B and C would include but not be limited to systems that have A alone B alone C alone A and B together A and C together B and C together and or A B and C together etc. . It will be further understood by those within the art that virtually any disjunctive word and or phrase presenting two or more alternative terms whether in the description claims or drawings should be understood to contemplate the possibilities of including one of the terms either of the terms or both terms. For example the phrase A or B will be understood to include the possibilities of A or B or A and B. 

In addition where features or aspects of the disclosure are described in terms of Markush groups those skilled in the art will recognize that the disclosure is also thereby described in terms of any individual member or subgroup of members of the Markush group.

As will be understood by one skilled in the art for any and all purposes such as in terms of providing a written description all ranges disclosed herein also encompass any and all possible subranges and combinations of subranges thereof. Any listed range can be easily recognized as sufficiently describing and enabling the same range being broken down into at least equal halves thirds quarters fifths tenths etc. As a non limiting example each range discussed herein can be readily broken down into a lower third middle third and upper third etc. As will also be understood by one skilled in the art all language such as up to at least greater than less than and the like include the number recited and refer to ranges which can be subsequently broken down into subranges as discussed above. Finally as will be understood by one skilled in the art a range includes each individual member. Thus for example a group having 1 3 cells refers to groups having 1 2 or 3 cells. Similarly a group having 1 5 cells refers to groups having 1 2 3 4 or 5 cells and so forth.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

