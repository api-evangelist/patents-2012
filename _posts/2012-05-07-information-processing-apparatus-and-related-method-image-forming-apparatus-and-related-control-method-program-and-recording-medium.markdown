---

title: Information processing apparatus and related method, image forming apparatus and related control method, program, and recording medium
abstract: An information processing apparatus includes a display control unit, a receiving unit, and a switching unit. The display control unit helps set information on printing product post-processing to be performed. The receiving unit receives a print instruction. If the post-processing apparatus is selected, the switching unit performs distributed transmitting processing on an image forming apparatus and the post-processing apparatus in response to the print instruction such that, print data is transmitted to the image forming apparatus and post-processing data is transmitted to the post-processing apparatus. If the post-processing apparatus is not selected, the switching unit performs the transmitting processing on the image forming apparatus in response to the print instruction such that both the print data and the post-processing data are transmitted to the image forming apparatus. The post-processing apparatus specifies the post-processing data transmitted with identification information in response to identification information being input in the post-processing apparatus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08384709&OS=08384709&RS=08384709
owner: Canon Kabushiki Kaisha
number: 08384709
owner_city: Tokyo
owner_country: JP
publication_date: 20120507
---
The present application is a continuation of U.S. patent application Ser. No. 11 404 727 filed on Apr. 14 2006 which claims priority from Japanese Patent Application No. 2005 128617 filed Apr. 26 2005 and from Japanese Patent Application No. 2005 128620 filed Apr. 26 2005 all of which are hereby incorporated by reference herein in their entirety.

The present invention relates to a display technique for a setting screen of an information processing apparatus that enables an operator to execute settings for a post processing apparatus that executes post processing applied to printed products and further relates to an image forming apparatus that executes print processing.

Electro photographic image forming apparatuses and inkjet printing apparatuses can provide high speed and high quality outputs. A new business model Print On Demand referred to as POD can handle a large scale of print products and print jobs.

POD includes print processing and related post processing performed according to user s needs for example in an office environment including an image forming apparatus and various post processing apparatuses such as a bookbinding apparatus and a sheet cutting machine hereinafter referred to as finishers connected to the image forming apparatus.

In the print processing for POD a device driver hereinafter referred to as a printer driver of an image forming apparatus can automatically produce a print job including print attributes relating to post processing applied to printed products based on restriction information i.e. information restricting finisher s functions . As discussed in Japanese Patent Application Laid open No. 2004 078449 various items can be set as functions of a bookbinding machine such as 

 a Whether the bookbinding machine should pick up printed products being stacked from an uppermost position or from a lowermost position and

 b Whether the bookbinding machine should execute post processing for printed products set in a face up condition or for printed products set in a face down condition.

The printer driver can automatically set an output order e.g. ascending order descending order of the pages and an output direction e.g. face up face down of the pages based on functions of the bookbinding machine so that the bookbinding processing can be correctly performed for the printed products set in the bookbinding machine. In this case a print job produced by the printer driver reflects specific information specifying finisher functions. Thus the user needs not confirm the functions relating to the finisher e.g. the above described two functions .

Furthermore in the production of a print job for POD the type of a finisher connected to the image forming apparatus can be manually set or can be automatically identified. Thus a user interface UI screen of a host computer displaying items relating to the functions can be controlled or changed based on the type of an identified finisher and the information specifying the functions of this finisher. A user can perform i.e. input or select necessary settings of various functions through the UI screen according to user s individual needs e.g. cutting method binding method stapling or bookbinding designation etc. . In response to a user s input on the UI screen the printer driver can produce a print job including control commands for outputting final printed products. The produced print job is output to the image forming apparatus and to the finisher connected to the image forming apparatus.

For example when a finisher having a stapling function is connected to the image forming apparatus the printer driver can enable a user to execute stapling settings by providing a stapling setting field as one of function items displayed on the UI screen. In this case the display contents of the UI screen are controlled by the printer driver based on the information specifying the functions of the finisher. The user needs not confirm the function relating to the finisher e.g. the function relating to stapling setting .

Furthermore when a finisher not connected via a physical conveyance path to the image forming apparatus is used to process printed products the operator must confirm finisher functions beforehand and set the output of the image forming apparatus so as to conform to the finisher functions.

For example a middle stitch bookbinding machine can be used to produce final printed products. In this case the operator must execute the settings for arranging two pages of image on a recording medium e.g. a recording paper sheet having a size two times the page size of final printed products.

However when the image forming apparatus is connected to a specific finisher e.g. a bookbinding machine whose information is not incorporated in the printer driver an operator of the image forming apparatus must perform various print settings considering the functions of the newly connected finisher. If there is any restriction s relating to added finisher function s influencing the item s relating to other function s of the printer driver the operator must perform necessary settings considering the effects of the restriction s . In such a case it will be difficult for an operator to accurately determine various settings necessary for the post processing.

If it is known that a specific bookbinding machine is later connected to the image forming apparatus the printer driver can be programmed beforehand to control the display of a UI screen or print attributes based on specific information specifying finisher functions. However after the configuration and contents of the printer driver is fixed the printer driver cannot recognize any function s of a newly connected finisher e.g. a sheet cutting machine a collating machine or any other finisher other than the bookbinding machine. Thus the printer driver cannot control the print attributes requiring the use of a newly added and connected finisher e.g. a sheet cutting machine or a collating machine unless the printer driver can be appropriately updated considering the use of the newly connected finisher.

Furthermore when a printer driver UI screen can display function items based on the specific information specifying finisher functions the printer driver cannot recognize functions of a newly added and connected finisher and accordingly cannot control or change the display of the function items on the UI screen. Thus the operator must confirm the restrictions relating to the function s of the finisher and must accurately determine various settings necessary for the post processing contents.

The present invention is directed to a technique that enables an operator of a host computer to easily perform the settings necessary for a finisher even when the finisher is not directly connected to an image forming apparatus. Furthermore the present invention is directed to image formation preferably used when profile settings of a finisher are transmitted to a host computer when the finisher is not directly connected to an image forming apparatus. According to an aspect of the invention an information processing apparatus configured to be in communication over a network with an image forming apparatus and a post processing apparatus that is not connected with a paper conveyance path of the image forming apparatus and to set print setting information for a print processing performed by the image forming apparatus includes a display control unit configured to display a setting screen to set setting information on post processing to be performed on the printing product a receiving unit configured to receive a print instruction from a user and a switching unit configured to switch transmitting processing depending on a type of the post processing apparatus wherein in a case where the post processing apparatus is selected the switching unit performs distributed transmitting processing on the image forming apparatus and the post processing apparatus in response to the print instruction such that out of i print data generated based on the print setting information and ii post processing data generated based on a the setting information set via the setting screen and b identification information of the print data i the print data is transmitted over the network to the image forming apparatus and ii the post processing data is transmitted over the network to the post processing apparatus wherein in a case where the post processing apparatus is not selected the switching unit performs the transmitting processing on the image forming apparatus in response to the print instruction such that both i the print data and ii the post processing data are transmitted over the network to the image forming apparatus and wherein the post processing apparatus specifies the post processing data transmitted with the identification information in response to the identification information being input in the post processing apparatus.

According to a first exemplary embodiment of the present invention an information processing apparatus is provided which is configured to display a setting screen for enabling an operator to select settings for controlling a print output from an image forming apparatus and post processing applied to a printed product by a post processing apparatus independent of the image forming apparatus. The information processing apparatus includes an obtaining unit configured to obtain function information including display information indicating a post processing function of the post processing apparatus and a display control unit configured to change display contents of the setting screen based on the display information included in the function information and display a changed setting screen.

According to an aspect of the aforementioned embodiment the information processing apparatus may further include a comparing unit configured to compare the function information with setting information relating to a post processing function of another post processing apparatus wherein the display control unit changes the setting screen based on a comparison result by the comparing unit and displays the changed setting screen. According to another aspect of the embodiment the display control unit changes the setting screen based on the function information when the function information disagrees with the setting information and controls the display unit to display the changed setting screen.

According to another aspect of the aforementioned embodiment the information processing apparatus may further include a producing unit configured to produce first job control information for controlling the image forming apparatus and second job control information for controlling the post processing apparatus based on the settings of the display controlled setting screen. While according to another aspect of the aforementioned embodiment the information processing apparatus may include an output unit configured to output the first job control information to the image forming apparatus via a network and output the second job control information to the post processing apparatus.

According to yet another aspect of the present embodiment the display control unit controls a display unit to display a selection screen enabling the operator to select one of a plurality of post processing apparatuses connected via a network when the plurality of post processing apparatuses have the same function information. And furthermore in another aspect of the instant embodiment the display control unit determines whether there space for displaying the contents of the display information on the setting screen based on the display information included in the function information displays the contents of display information on the setting screen when there is the space and adds a new screen on the setting screen and displays the contents of the display information on the new screen.

According to another aspect of the aforementioned embodiment fundamental display information for displaying the setting screen and the function information are described in a hierarchical configuration classified into setting items of the setting screen and when the function information includes new information not existing in the fundamental display information in the same hierarchical configuration of the fundamental display information and the function information the display control unit displays the setting screen incorporating the new information at a corresponding hierarchical position within the fundamental display information.

Furthermore still yet in another aspect of the present embodiment the information processing apparatus may further include a function determining unit configured to determine whether an additional function included in the function information is identical with any existing function on the setting screen and a post processing apparatus deciding unit configured to decide when the function determining unit determines that there is any overlap of functions whether to utilize a post processing apparatus providing the existing function and a post processing apparatus providing the additional function.

According to another embodiment of the present invention an image forming apparatus is provided which is configured to communicate with a post processing apparatus connected via a network wherein the image forming apparatus includes an image forming unit for producing a print output. The image forming apparatus includes an obtaining unit configured to obtain function information indicating a post processing function of the post processing apparatus a determining unit configured to determine based on the function information whether the image forming unit can execute a print output accompanied by post processing using the post processing apparatus and a display control unit configured to a control a display unit to display a setting screen enabling an operator to perform an input operation for controlling the post processing function to use the post processing apparatus when the determining unit determines that the image forming unit can execute the print output accompanied by post processing using the post processing apparatus.

According to an aspect of the aforementioned embodiment the obtaining unit further obtains capability information of the post processing apparatus corresponding to the post processing function and control command information for controlling the post processing apparatus from the function information of the post processing apparatus. According to another aspect of the embodiment the display control unit adds or changes a display of the setting screen to obtain the print output accompanied by the post processing using the post processing apparatus.

According to yet another aspect of the aforementioned embodiment the image forming apparatus may further include a registering unit configured to register when the determining unit determines that the image forming unit can execute the print output accompanied by the post processing using the post processing apparatus information relating to the post processing apparatus including the function of the post processing apparatus capability information corresponding to the function and control command information for controlling the post processing apparatus.

Furthermore according to another aspect of the aforementioned embodiment the image forming apparatus may further include an analyzing unit configured to analyze whether an input print job designates post processing of the print output and a selecting unit configured to select a post processing apparatus that can execute the designated post processing based on function information registered by the registering unit according to analysis of the analyzing unit wherein the display control unit controls the display unit to display the setting screen enabling the operator to perform an input operation for controlling the print output to use the selected post processing apparatus based on capability information registered by the registering unit.

Moreover according to another aspect of the aforementioned embodiment the image forming apparatus may further include an output unit configured to transmit a control command registered by the registering unit to the selected post processing apparatus that executes the post processing for the print output based on an operator s input through the setting screen.

According to another embodiment of the present invention an information processing method is provided for an information processing apparatus that displays a setting screen for enabling an operator to select settings for controlling a print output from an image forming apparatus and post processing applied to a printed product by a post processing apparatus independent of the image forming apparatus. The method includes obtaining function information including display information indicating a post processing function of the post processing apparatus and changing display contents of the setting screen based on the display information included in the obtained function information and displaying a changed setting screen.

Additionally according to still another embodiment of the present invention an information processing method is provided for an image forming apparatus that communicates with a post processing apparatus connected via a network and includes an image forming unit for producing a print output. The method includes obtaining function information indicating a post processing function determining based on the function information whether the image forming unit can execute a print output accompanied by post processing using the post processing apparatus and controlling a display unit to display a setting screen enabling an operator to perform an input operation for controlling the post processing function to use the post processing apparatus when it is determined that the image forming unit can execute the print output accompanied by post processing using the post processing apparatus.

Moreover according to another embodiment of the present invention a control program is provide which is stored on a computer readable recording medium containing instructions executable by an information processing apparatus that displays a setting screen for enabling an operator to perform settings for controlling a print output of an image forming apparatus and post processing applied to a printed product of a post processing apparatus independent of the image forming apparatus. The control program includes instructions to obtain function information including display information indicating a post processing function of the post processing apparatus and instructions to change display contents of the setting screen based on the display information included in the function information and display a changed setting screen.

According to another embodiment of the present invention a control program is provided which may be stored on a computer readable recording medium containing instructions executable by an image forming apparatus that communicates with a post processing apparatus connected via a network and includes an image forming unit for producing a print output. The control program includes instructions to obtain function information indicating a post processing function of the post processing apparatus instructions to determine based on the function information whether the image forming unit can execute a print output accompanied by post processing using the post processing apparatus and instructions to control a display unit to display a setting screen enabling an operator to perform an input operation for controlling the post processing function to use the post processing apparatus when it is determined that the image forming unit can execute the print output accompanied by post processing using the post processing apparatus.

Further according to yet another embodiment of the present invention an information processing apparatus is provided that displays a setting screen for enabling an operator to perform settings for controlling a print output of an image forming apparatus and post processing applied to a printed product of a post processing apparatus independent of the image forming apparatus. The information processing apparatus includes an obtaining unit configured to obtain function information including display information indicating a post processing function of the post processing apparatus and a display control unit configured to change display contents of the setting screen based on the display information included in the function information and display a changed setting screen.

And finally according to still another embodiment of the present invention an image forming apparatus is provided which is adapted to communicates with a post processing apparatus connected via a network the image forming apparatus including an image forming unit configured to produce a print output. The image forming apparatus includes an obtaining unit configured to obtain function information indicating a post processing function of the post processing apparatus a determining unit configured to determine based on the function information whether the image forming unit can execute a print output accompanied by post processing using the post processing apparatus and a display control unit configured to control a display unit to display a setting screen enabling an operator to perform an input operation for controlling the post processing function to use the post processing apparatus when the determining unit determines that the image forming unit can execute the print output accompanied by post processing using the post processing apparatus.

Further features and aspects of the present invention will become apparent from the following detailed description of the numerous exemplary embodiments with reference to the attached drawings.

The following description of the numerous exemplary embodiments is merely illustrative in nature and is in no way intended to limit the invention its application or uses.

Note that similar reference numerals and letters refer to similar items in the following figures and thus once an item is defined in one figure it may not be discussed for following figures. Exemplary embodiments will be described in detail below with reference to the drawings.

In this arrangement for example the image forming apparatuses and can receive print jobs from the host computers and via the network and can process the received print jobs. Finishers and respectively connected via physical conveyance paths to the image forming apparatuses and can perform post processing for printed products produced by the image forming apparatuses and . The image forming apparatuses and can set the post processing for the finishers and . In this respect the finishers and are referred to as in line finishers. 

On the other hand when other devices e.g. devices other than the image forming apparatuses connected via physical conveyance paths can set the post processing for the finishers via the network the finishers are referred to as near line finishers. Furthermore when finishers can set the contents of the post processing the finishers are referred to as off line finishers. In particular the near line finishers and the off line finishers are different in that the near line finishers can communicate with other apparatuses. The off line finishers cannot communicate with other apparatuses.

The control methods of the in line finishers the off line finishers and the near line finishers will be described below. The in line finishers themselves have no capability of directly communicating with the host computers. For example the in line finishers are connected with the image forming apparatuses via the common paper conveyance paths and receive printed products conveyed from the image forming apparatuses. The image forming apparatuses can set the contents of processing performed in the finishers. The image forming apparatuses can produce post processing setting information as the processing contents.

Furthermore printer drivers operable on the information processing apparatuses can be used to set the in line finishers as optional configuration of the image forming apparatuses and can produce print jobs designating processing contents e.g. bookbinding processing in the in line finishers.

Next the off line finishers have no device configured to communicate with external apparatuses off line condition . The off line finishers can set the contents of processing performed in the finishers. For example a user can set processing contents through an operating section of the off line finisher. Alternatively the off line finisher can read the print information printed on an object paper sheet such as a bar code and can automatically set the post processing contents.

Finally the near line finishers are equipped with a device configured to communicate with external apparatuses. Thus not only a user can set the processing contents through an operating section of the near line finisher but also another device e.g. a host computer can set the processing contents i.e. transmit a job ticket via the network.

Next the printed product conveyance paths i.e. paper paths of the in line finishers the off line finishers and the near line finishers will be described below. The following is a description of general features which does not go beyond the purpose of facilitating the understanding and accordingly should not be used to narrowly interpret the features of these finishers. The in line finishers are physically connected with the image forming apparatuses and thus can directly receive printed paper sheets produced from the image forming apparatuses via conveyance paths paper paths . The off line finishers are not physically connected with the image forming apparatuses. Accordingly the printed paper sheets produced from the image forming apparatuses are once buffered on carriages trays or belt conveyors and are set at later timing on input sections of the off line finishers.

The near line finishers are similar to the off line finishers in that the printed paper sheets are once buffered and set at later timing on the input sections. However as described above the near line finishers can receive the processing contents i.e. the job ticket via the communication device. Furthermore the in line finishers can include a communicating section configured to communicate with external devices e.g. host computers so that a post processing instruction i.e. a job ticket can be received via the communicating section. In other words the in line finishers can function as near line finishers.

In the finishers and are constituted as in line finishers. Furthermore a near line finisher e.g. a casing in bookbinding machine and a near line finisher e.g. a sheet cutting machine are connected to the network .

It is noted that the present invention is not intended to be limited to the exemplary embodiment shown in . For example plural near line finishers each having a casing in bookbinding function and plural near line finishers each having a sheet cutting function can be connected to the network . In this case the settings of the near line finisher can be easily performed based on later described restriction information i.e. the information restricting the functions of the finisher .

Furthermore a finisher system can be connected to the network so as to constitute an image forming system. The finisher system shown in includes a system server a middle stitch bookbinding machine and a paper folding machine which are mutually connected via a network or a dedicated line hereinafter simply referred to as a network . The system server is connected to the network . For example system server can receive the information relating to the post processing transmitted from the host computers and and can control the post processing performed in the middle stitch bookbinding machine and the paper folding machine .

Furthermore the host computers and can obtain restriction information that restricts the functions of the middle stitch bookbinding machine and the paper folding machine included in the finisher system . The host computers and can control the display of a user interface based on the obtained restriction information and can easily perform the settings of the near line finishers.

The display control section including a video memory can execute the processing of drawing in the video memory in accordance with an instruction of the CPU and read image data from the video memory. The display control section can send the readout image data as a video signal to the display device . The network interface can control and manage the communications between the client PC and the network.

In response to a turning on action of the electric power source of the apparatus the CPU loads the OS from the HDD to the RAM in accordance with the boot program stored in the ROM and activates the OS. Then a user can operate the keyboard and the pointing device to start a desired application program. When the user inputs a print execution instruction from a menu of the application program the printer driver is loaded to the RAM and a GUI is displayed to enable the user to execute various print settings. Then after accomplishing the settings the user can input a print start instruction to start the print processing.

In the exemplary embodiment the OS installed on the client PCs and is Windows registered trademark provided by Microsoft Corporation. However any other OS of GUI can be used. Furthermore the display device displays a cursor that can shift on a display screen in accordance with a movement of the pointing device . Furthermore the pointing device has one or plural buttons. The user can operate the pointing device to shift the cursor to a target object e.g. a displayed button or menu item and can depress a button of the pointing device as a sequential operation. This sequential operation is referred to as a click operation or simply referred to as a click. 

The window includes as another setting item a page setting column that allows the operator to select a print range in the print job. In other words the user can designate a desirable range page s of the image data produced on the application software hereinafter referred to as application operating on the host computer. For example the user can control through the page setting column the image forming apparatus to print all pages or specific page s only.

Furthermore through a print number setting column the user can designate a print number representing the total number of prints to be produced by the image forming apparatus. By clicking on arrows arrows of scroll bar the user can increase or decrease the print number. Also through a property key the user can perform detailed settings relating to the image forming apparatus selected in the transmission destination selecting column . In response to a user s input operation on the key the printer driver can control the host computer to display detailed screens shown in .

The user can make a key input on an OK key when the settings have been accomplished as the user like on the operation screen of . In response to the user s input the selected image forming apparatus starts the print processing according to the user s determined settings. The user can depress a cancel key to cancel the processing. When the cancel key is depressed the printer driver executes a control for canceling the print and terminates the display of the window .

For example the settings attainable through the operation panel shown in include various detailed settings such as the settings relating to stapling processing the settings relating to sort processing the settings relating to punching processing the settings relating to drilling processing the settings relating to bookbinding processing the settings relating to sheet processing including the settings relating to the finishing the settings relating to selection between one sided printing and two sided printing and the settings relating to image processing e.g. parameter change relating to tint .

For example the user can select the one sided print or can switch to the two sided print in the selecting field and can select as post processing for printed products a preferable bookbinding direction in a selecting field for the image forming apparatus selected on the operation screen of . The selecting field of shows the condition that a long side binding left is set as the binding direction of printed products. The binding directions selectable in the selecting field includes a short side binding left a short side binding right and a long side binding right in addition to the long side binding left .

The post processing for the printed products include two types if the near line finisher is designated beforehand to perform predetermined post processing e.g. casing in bookbinding . According to the first processing the printer driver transmits to the image forming apparatus a print job including job control information describing the contents of post processing performed in the near line finisher and a near line finisher ID. According to the second processing the printer driver see produces a job ticket describing post processing contents and a job ID identifier and outputs the produced job ticket to the near line finisher .

In response to a user s operation in an input field the printer driver controls the display of the operation screen shown in so as to return the print detailed settings to initial values. Furthermore in response to a user s selection of the print quality tab the user can perform the settings relating to resolution or half tone although not shown .

When the user depresses instructs an OK key the printer driver enables the property settings and returns the display screen to the UI screen of . When the user depresses instructs a cancel key the printer driver disables the property settings and returns to the UI screen of . The printer driver outputs as the print job the print processing conditions including various detailed settings and the image data to the designated device e.g. image forming apparatuses and . The host computer can control the device according to various print processing conditions to execute the image data processing.

The driver UI rearrangement application can compare the obtained finisher profile with the functions displayed on the present printer driver UI determine whether a display relating to finisher functions should be added on the UI or deleted from the UI and update the display of the UI based on the judgment. The display control based on the driver UI rearrangement application will be described in more detail with reference to the flowchart of .

If desirable the driver UI rearrangement application can be configured as part of the printer driver . In this case the printer driver must determine whether a display relating to the finisher functions should be added on the UI or deleted from the UI. Furthermore the function of the driver UI rearrangement application can be provided as part of the function of the OS . In this case the OS must determine whether a display relating to the finisher functions should be added on the UI or deleted from the UI.

The printer driver includes a user I F driver and a graphic driver . The user I F driver can display the user interface I F and store the setting data. The graphic driver can receive a print drawing command instructed from the application program via the OS and can convert the received command into a code that the image forming apparatus can interpret. The printer driver can control the display of the printer driver UI based on the processing of the driver UI rearrangement application . The user I F driver can display the above described print setting dialog and the property sheet shown in on the screen when the print settings are instructed from the application program via the OS .

The OS includes a printer driver setting storing region . The print attributes that the user sets through the user I F driver can be stored in the printer driver setting storing region . Furthermore the user I F driver the graphic driver and the application program can access the printer driver setting storing region via the OS and read the print attributes set by the user.

Furthermore a communication I F of the host computer is connected to a communication I F of the image forming apparatus via the communication medium network . The graphic driver can transmit via the OS a print job print data for example to the image forming apparatus . Furthermore the graphic driver can obtain via the OS the information relating to configuration of the image forming apparatus as well as the information relating to the status.

Next a printing flow starting with user s settings of print attributes on the printer driver and ending with the output of print products will be described. is a flowchart showing the setting procedure performed by a user to set print attributes. is a flowchart showing the flow starting with a user s print instruction and ending with the print operation.

First in step S of the user can select a print setting menu from a menu of the application program hereinafter simply referred to as application . In response to selection of the print setting menu the application calls an API Application Programming Interface of the OS and instructs the printer driver to display a print attribute setting property sheet refer to step S . In response to the instruction the OS controls the printer driver to perform the display of the print attribute setting property sheet.

In step S the user I F driver of the printer driver receives the instruction from the OS and displays the print attribute setting property sheet shown in on the screen of the display device. Next in step S the user can set desired print attributes on the above described property sheets shown in . After completing the print attribute settings the user can depress the OK button on the property sheet of to fix the print attribute settings. In response to the depression of the OK button the user I F driver calls the API of the OS and stores the print attribute setting values set by the user in the printer driver setting storing region of the OS refer to step S . With the above described operations the settings of print attributes and the storage of setting values can be completed.

Next to print a document according to the print attribute settings the user can execute the procedure shown in the flowchart of . First in step S the user can select a print menu from the menu of the application . In response to the user s selection the processing procedure proceeds to step S. In step S the application calls the API of the OS and instructs the printer driver to start the printing operation. The print setting dialog shown in can be once displayed during the processing of . In response to a print instruction the OS instructs the printer driver to start the print operation.

In response to a print start instruction the graphic driver of the printer driver reads the print attribute setting values from the printer driver setting storing region of the OS refer to step S . Then the graphic driver produces a print attribute setting code and transmits the produced code to a designated image forming apparatus. Next in step S the application performs through the OS the print drawing based on the document data.

In step S the OS sends a drawing instruction to the graphic driver . The graphic driver converts a received print drawing command into a print code that the image forming apparatus can interpret and transmits the print code to the image forming apparatus. In step S the image forming apparatus performs the image forming processing including the rendering based on the received print attribute setting code and the print code. Then the image forming apparatus outputs print products.

Through the above described procedure the user can set desired print attributes and can obtain print products.

The scanner input section can perform reading of images. The FAX section represented by a facsimile can perform transmission reception of images via a telephone line. The NIC section can perform transmission reception of image data and device information via a network. The dedicated I F section can perform transmission reception of information with other image forming apparatus or with a host computer. The USB interface can perform writing reading of image data with a USB device represented by a USB Universal Serial Bus memory.

The job control section can temporarily store image data according to the operation of the image forming apparatus appropriately read the image data and control an output processing step processing path . Furthermore in response to an operator s instruction entered from the operating section the job control section can perform the data transfer to external apparatuses. More specifically the job control section can transmit the image data read out from the memory such as a hard disk to the host computers and and other image forming apparatuses via the dedicated I F section .

The document storing section includes a hard disk or a comparable memory that can store numerous image data. For example the document storing section can store in its memory plural types of image data including image data entered from the scanner input section image data of a facsimile job entered via the FAX section image data transmitted from a computer or other external apparatus and entered via the NIC section and image data transmitted from other image forming apparatus and entered via the dedicated I F section .

Furthermore according to the processing of the printer section or other output section the job control section can read the image data from the hard disk or other memory and can transfer the readout image data to the printer section or output section appropriately.

The compression expansion section can compress image data when the image data are stored in the document storing section and further can expand the compressed image data to the original data when the image data are read out of the document storing section . Furthermore if the image data are JPEG JBIG ZIP or other compression data transmitted via the network the compression expansion section can extract expand the compression data after the image data are entered into the image forming apparatus.

The common DB section stores various parameters and tables such as fonts color profiles and gamma tables which are commonly used and can be read out when required. Furthermore the common DB section can store new parameters and tables and can correct and update the stored parameters and tables. For example the common DB section can store register data relating to a near line finisher which is newly registered to the image forming apparatus.

When PDL data are entered the job control section controls the PDL section to execute RIP Raster Image Processor processing and also controls if necessary the image processing section to perform the image processing for outputting print products. Furthermore the job control section can control the document storing section to store intermediate data produced in the processing of the image data or print ready data i.e. print output bit map data or their compressed data if necessary.

The job control section can send the above described print ready data to the printer section . The post processing section can execute finishing processing e.g. sorting or bookbinding processing for the recording materials e.g. recording paper sheets printed in the printer section .

The job control section can perform switching of paths according to the operation of the image forming apparatus. Numerous examples of the aforementioned path switching are provided below such as 

Also other various functions including E mail service and Web server function can be combined with the above examples.

The box scan box print box reception and box transmission functions are performed by the image forming apparatus to execute writing and reading of data using the document storing section . More specifically to execute the input output of data the memory of the document storing section is divided into plural regions to temporarily store the data for respective jobs or users together with user IDs and passwords.

Furthermore the operating section can allow a user to select one of the above described various flows or functions and also allow the user to input an instruction. When the operating section has a high resolution display device the user can use the operating section to preview the image data stored in the document storing section and can instruct printing of the image data if acceptable.

The image forming apparatus can set the functions of the in line finisher and the near line finishers and . The image forming apparatus can store finisher profiles later described that describe the functions of respective finishers. The image forming apparatus can transmit the finisher profiles to the host computer e.g. or of to set the functions to be used. The host computer can execute a setting operation based on the received finisher profiles. For example at the timing of shipment the image forming apparatus can obtain the profiles of all types of connectable finishers and store the obtained profiles in its memory.

In this case if the image forming apparatus newly supports the near line finishers and after finishing the shipment the image forming apparatus can obtain profile information i.e. near line finisher profiles of the near line finishers and at the timing the near line finishers and are newly connected to the network.

Furthermore when a finisher has no profile information the image forming apparatus can obtain the profile information from a home page of the finisher maker that can provide newest profile information including updated i.e. changed or added functions. Accordingly even if no finisher profiles are available at the timing of shipment the image forming apparatus can later obtain necessary profiles. The profile information describes the capabilities and properties of a corresponding apparatus. In this respect the profile information can be referred to as capability information or property information.

The job control section can hold the finisher profiles describing the functions of the post processing section i.e. the in line finisher the near line finisher and the off line finisher for example in the common DB section . The job control section can set the functions to be used based on the finisher profiles.

At the timing of shipping the image forming apparatus the common DB section can store the profiles of all finishers that are connectable to the image forming apparatus. Furthermore when a finisher is newly connected to the image forming apparatus after finishing the shipment the job control section of the image forming apparatus can obtain the profile information stored in this finisher. The job control section of the image forming apparatus can communicate via the NIC section with the near line finishers e.g. and in and the finisher system e.g. in connected to the network to obtain the finisher profile data.

Furthermore when a finisher has no profile information the job control section of the image forming apparatus can download the profile information of a home page of the finisher maker that can provide newest profile information including updated i.e. changed or added functions.

The present exemplary embodiment discloses a middle stitch bookbinding machine as an example of the in line finisher and a perfect bookbinding machine and a sheet cutting machine as examples of the near line finisher.

The network section can perform communications with other network devices such as the host computer and the image forming apparatus. The storage device is a primary storage device such as DRAM which can temporarily store the information or a secondary storage device such as HDD. The job control section can control a job of the near line finisher. The operating section can allow a user to input ID or other information. The job control information interpreting section can interpret and convert the entered job information into the form capable of controlling the post processing device. The device control section can control the post processing device . The above described modules constitute the near line finisher.

In a controller has functions comparable with those of the controller shown in . Thus under the control of the controller the perfect bookbinding machine can communicate with other devices via the network and can control a perfect binding device . Similarly in a controller has functions comparable with those of the controller shown in . Thus under the control of the controller the sheet cutting machine can communicate with other devices via the network and can control a sheet cutting device .

In the flowchart of the storage device temporarily stores the job control information and the job control information can be read out at appropriate timing. However when a network server or MFP capable of storing such job control information is available the received job control information can be registered in the server. In this case in response to a job ID entered from the operating section the job control section can access the server to obtain the job control information corresponding to the entered job ID and can transfer the job control information to the job control information interpreting section .

In the present exemplary embodiment the finisher profile is described by XML eXtensible Markup Language format. There are various types of finishers such as bookbinding machines sheet cutting machines and holding machines which are differentiated in functions. Furthermore due to addition of new function s same type of finishers may have different profiles. Therefore the finisher profiles are described according to the XML format described by the tag format as a transcription capable of appropriately responding to the addition of functions. Needless to say the format of finisher profiles is not limited to the XML format and therefore can be any other format that can be adaptively described in response to the addition of new functions.

For example in the case of the bookbinding machine refer to variations of the bookbinding such as middle stitch folding side stitch corner stitch double folding side stitch folding and corner stitch folding can be registered as bookbinding functions. Further reference numeral represents function information.

Furthermore in the case of the sheet cutting machine refer to cutting size information and maximum thick information can be registered. Furthermore according to the cutting tag of the maximum input dimensions MaxInputDimensions are 360 mm in both longitudinal and lateral X Y directions. Furthermore the maximum output dimensions MaxOutputDimensions are 310 mm in both longitudinal and lateral X Y directions. The minimum output dimensions MinOutputDimensions are 80 mm in the lateral X direction and 150 mm in the longitudinal Y direction. Furthermore the maximum thickness MaxThickness is 70 mm.

As described above the profile information of each finisher includes various information such as type of function machine type maker name product type and performances e.g. dimensions and stitch position in each function. The profile information is for example stored in a storage device of the finisher. The image forming apparatus can read the profile information from the storage device . The information processing apparatus serving as a host computer can directly collect the profile information from the near line finisher under the control of its printer driver.

Regarding the inherent functions of each finisher they can be independently defined using tags to describe the profile.

The finisher connection management table can manage finisher names corresponding finisher profile names and connection states. The finisher profile storing region can store detailed contents of the finisher profile. The finishers connectable to the image forming apparatus are registered beforehand. Their names and other information are stored in the finisher connection management table . The profiles corresponding to respective finishers are stored in the finisher profile storing region .

According to the table when the management number is the finisher name is Finisher X the maker name is XYZ corporation the corresponding profile s profile name is finisher x of xyz.xml and the finisher s connection state is true i.e. connected . Similarly the information corresponding to each management number can be known from the finisher connection management table . According to the example of only the finisher having the management number is in a connected state i.e. true .

Next an exemplary procedure for connecting the near line finisher to the image forming apparatus will be described with reference to a flowchart of . For example the Finisher Y manufactured by XYZ corporation i.e. the finisher corresponding to the management number in the finisher connection management table shown in can be connected in the following manner.

It is now supposed that after a new near line finisher is installed a user connects the near line finisher to the image forming apparatus via a LAN cable or other communication medium. The finisher profile control section i.e. a processor of the image forming apparatus executes the processing shown in .

In step S a new finisher is installed and connected to the image forming apparatus e.g. or in via a communication medium. Next in step S a user performs a connecting operation through the operation panel for a near line finisher newly connected to the network to bring the near line finisher into an available condition. The operator through the operation panel of the image forming apparatus changes the finisher s connection state from a disconnected state false to a connected state true . The operation contents will be described later with reference to . Then in step S the finisher profile control section updates the connection state of the finisher connection management table in response to a response of the near line finisher indicating that the near line finisher is ready to use.

On the screen of the operator can depress a Finisher Registration button . In response to the depression of this button a finisher connection registration screen of can be displayed. The finisher connection registration screen shows a list of finishers that can be registered. The connection registration of each finisher can be performed on this screen. The list of finisher data may include for example a finisher name a maker name and a connection state . The list can display a total of seven finishers simultaneously and can other finishers listed before or after these finishers by depress a button to scroll the screen.

Regarding the connection registration of a finisher or its cancellation the operator can touch the display of a target finisher to turn it into a selected condition see reference numeral and can depress a Connect button to register the connection of the target finisher or depress a De Connect button to cancel the connection registration.

For example according to the example to register the connection of the Finisher Y of XYZ Corporation the operator can touch anywhere in the line area to turn the display of Finisher Y into the selected condition. Then the operator can depress the Connect button to register the connection of Finisher Y. In response to the depression of the Connect button the image forming apparatus transmits a connection request i.e. a request inquiring whether the target finisher is available to the near line finisher. In a response to this connection request is received the designated near line finisher is available and accordingly the image forming apparatus displays Connected. 

If no response is obtained the designated near line finisher is unavailable and accordingly the display cannot be changed. Finally the image forming apparatus enables the settings. Then the operator can depress an OK button to return the operation panel to the initial condition. If the operator touches a Cancel button the registration work can be abandoned. The entire contents entered through the operation panel can be erased. Thus no updating work for the finisher connection management table of the image forming apparatus can be performed.

According to the example the operator has made a connection registration for Finisher Y2307 of XYZ Corporation on the finisher connection registration screen shown in FIG. . In response to this registration the connection state of finisher i.e. Finisher Y changes form false refer to in to true refer to in .

Through the above described procedure the connection registration processing relating to a newly added near line finisher can be completed. According to the above described example the settings relating to the connection registration of a finisher was done by an operator through the operation panel of the image forming apparatus after finishing the connection of the near line finisher.

However the method for registering the connection of a finisher is not limited to a particular one and accordingly any other method will be used if the finisher connection management table can be updated. For example the image forming apparatus and the finisher can communicate with each other via the network according to the protocol defined at the timing of connection. In this case the image forming apparatus can automatically perform the connection registration when connection of the finisher is recognized.

Furthermore the image forming apparatus can transmit a request for acquiring a finisher profile to the connected near line finisher. Then the image forming apparatus can receive a finisher profile transmitted from the near line finisher. The received finisher profile can be stored in the finisher profile storing region . Furthermore the name of the received finisher profile can be registered in the field of finisher profile name of the finisher management table . Furthermore the finisher s address can be registered in relation to the finisher profile.

As described above the image forming apparatus can read the profile information of a near line finisher from the registered near line finisher. Subsequently the computer can obtain the profile information from the image forming apparatus. However if desirable the computer can directly obtain the profile information from the near line finisher.

Next an exemplary printer driver s procedure for obtaining a finisher profile from the image forming apparatus and storing the finisher profile will be described. In the configuration shown in the profile storing region is a memory region in the OS that can store finisher profiles obtained by the printer driver from the image forming apparatus e.g. in .

The printer driver can activate a profile acquiring module via the API Application Programming Interface of the OS and can store in the profile storing region the finisher profile obtained from the image forming apparatus using the profile acquiring module. The profile acquiring module can be configured as part of a module of the printer driver or can be provided as part of functions of the OS .

Furthermore to request or transmit a finisher profile the communication I F of the host computer and the communication I F of the image forming apparatus are connected via a communication medium e.g. network . The communication protocol is not limited to a particular type and accordingly any other protocol can be used as far as the printer driver can transmit a finisher profile acquiring request and the image forming apparatus can return detailed contents of the requested finisher profile.

Thus in the judgment of the connection state refer to step S the connection state of Finisher A is false i.e. NO in step S . The processing flow proceeds to step S. In step S it is determined whether confirmation of all finishers listed in the finisher connection management table has been completed.

When the confirmation of all finishers has been completed i.e. YES in step S this routine terminates. When the confirmation of all finishers is not completed yet i.e. NO in step S the processing flow returns to step S to repeat the above described processing for each of Finisher B Finisher C Binder ABC registered in the finisher connection management table .

For example in the processing of the Finisher X i.e. registered in the finisher connection management table the connection state of Finisher X is true i.e. true in step S and accordingly the processing flow proceeds to step S.

On the other hand in the judgment of the connection state refer to step S if the connection state of Finisher A is true i.e. YES in step S the process proceeds to step . In step S the finisher profile control section transmits a finisher profile corresponding to Finisher X which is in a connection state in an available condition to the printer driver . In this case the finisher profile control section can recognize that the finisher profile name corresponding to the finisher Finisher X is finisher x of xyz.xml refer to the field corresponding to the finisher name Finisher X from the finisher connection management table . The finisher profile control section reads the finisher profile from the finisher profile storing region and transmits the readout finisher profile to the printer driver.

After completing the confirmation with respect to a final finisher in the finisher management table the information indicating that the confirmation in step S is completed for all finishers is transmitted to the printer driver before terminating this routine.

On the other hand the printer driver receives a response from the image forming apparatus and determines whether the response indicates incomplete. When the response is incomplete the received data is the finisher profile and can be stored in the storing region. In this manner the printer driver can obtain from the image forming apparatus the finisher profile of a near line finisher in a connection state i.e. in an available state .

To print a document a user can select a print menu in the menu of the application software. In response to the user s selection instruction the application software can call the API of the OS to send a print start instruction to the printer driver. In response to the print instruction the OS instructs the printer driver to start printing. In response to the print start instruction the graphic driver constituting the printer driver reads the print setting information from the printer driver setting storing region of the OS and produces job control information for the image forming apparatus and job control information instructing the finishing settings for the selected finisher.

Then the printer driver produces a print job including the produced job control information and transmits the produced print job to the image forming apparatus according to a first processing method or transmits job tickets of the print job and the job control information to the image forming apparatus and to the selected finisher respectively according to a second processing .

In practice the job control information can include JDF Job Definition Format PJL Print Job Language and PDL Page Description Language commands. The JDF is an XML based file format that can inclusively define describe and manage control all steps in the creation and manufacturing of printed products. In the present exemplary embodiment the JDF is simply referred to as a job ticket. The PJL is a general language that can handle the PDL as a print job. The present exemplary embodiment uses the JDF. When the selected finisher is a near line finisher a job ticket is transmitted as job control information to this near line finisher. When the selected finisher is an in line finisher job control information described in the PJL or PDL of the print job is transmitted to the image forming apparatus connected to this in line finisher.

When the selected finisher is an off line finisher the contents of the job control information are converted into a format that an operator can read and input into the off line finisher and a print job including the converted job control information is transmitted to the image forming apparatus. When the transmission destination is a near line finisher the transmission destination address is an IP address stored in relation to the finisher profile.

The application program through the OS performs print drawing based on document data. The print drawing command instructed to the OS is delivered as a print drawing command to the graphic driver. The graphic driver converts the received print drawing command into drawing information that the image forming apparatus can interpret and transmits the drawing information as the data constituting a print job simply referred to as print job to the image forming apparatus.

After receiving the drawing information the image forming apparatus performs the rendering and printing based on the received drawing information. The page description language representing the drawing information is for example LIPS PCL or PS. With the above described procedure the user can obtain a desired print output.

In step S when the finishing processing is applied to the print data the printer driver displays the detailed finishing setting screen in response to the operator s selection of the finishing tab . When the operator selects required finishing items i.e. finishing functions on the detailed setting screen the printer driver performs the settings of finishing functions provided by a finisher that the printer driver supports refer to step S .

The processing in step S is repeated unless the settings of all required finisher functions are accomplished i.e. NO in step . When the settings of finisher functions are completed i.e. YES in step S the processing flow proceeds to step S. In the settings of finisher functions the printer driver determines whether newly incorporated finisher functions contradict the operator s designated finishing items i.e. finishing functions .

For example when an operator uses the initial setting screen of the printer driver to set newly incorporated finisher functions the operator may erroneously input numerical values that cannot be accepted by the finisher. To avoid such contradiction the printer driver controls the display of the UI screen so that the operator s settings can be acceptable for the finisher. The contents of the display control will be described in more detail.

Then in step S the printer driver executes a print instruction based on the setting contents in response to the operator s depression of the OK button shown in . Then the host computer outputs a print job including produced job control information to the image forming apparatus refer to step S .

Next an exemplary finisher processing flow according to the first processing method will be described with reference to a flowchart of . According to the first processing method the printer driver transmits to the image forming apparatus a print job including job control information describing the post processing contents of the near line finisher. The image forming apparatus receives the job control information and executes the finishing processing in accordance with the related description in the job control information.

First in step S the job control information is received from the printer driver or the like. Next in step S the received job control information is analyzed. In step S it is determined whether any registered finisher can process the received job control information based on the profile information managed in the image forming apparatus. To this end for example it is preferable to prepare a table describing the relationship between the tags described in the profile information and the tags described in the job control information which can be referred to by the control section of the image forming apparatus. Then the finisher profiles collected by the image forming apparatus can be scanned with tags corresponding to the tags described in the job control information.

If all function tags are met or hit the job control information can be processed more specifically the designated finishing processing is executable . However in the present exemplary embodiment the printer driver can produce the job control information corresponding to the finisher profiles and accordingly step S can be skipped.

When there is no registered finisher that can process the processing described in the job control information described by a tag showing a function i.e. NO in step S this routine terminates. When there is a registered finisher i.e. YES in step S the type of this registered finisher is confirmed in step S. When the registered finisher is an in line finisher the processing flow proceeds to step S and the image forming apparatus performs the job control for the in line finisher according to the settings designated in the job control information refer to step S .

In the judgment of step S the finisher type can be discriminated based on the IP address correlated with the profile information that can be hit in the scanning of step S. If any IP address is correlated the finisher type is a near line finisher. Although an off line finisher has no profile information the finisher type can be identified based on a job ID. For example a discriminable code can be put to a job ID of the job control information for an off line finisher. In this case the job control information for an off line finisher is excluded from the judgment objected in step S.

When the registered finisher is a near line finisher the processing flow proceeds to step S and the image forming apparatus transmits the job control information and the job ID to this near line finisher refer to step S . The transmission destination is an IP address entered at the timing of connection of the near line finisher. When the registered finisher is an off line finisher the processing flow proceeds to step S and the image forming apparatus instructs preparation for printing the job ID and the designate finisher name refer to step S .

In the present exemplary embodiment when the printer driver employs the second processing method the printer driver directly transmits the job control information to the addressed finisher. Thus the printer can receive only the job control information for the near line finisher. It is therefore possible to execute step S immediately after accomplishing the processing of step S. Furthermore the printer receives the print job in addition to the job control information and executes the print processing based on the received job and information.

Next in step S it is determined whether all processes post processing have been confirmed. When there is a process to be processed i.e. NO in step S the processing flow returns to step S to continue the above described processing for the next process. When the processing of all processes has been completed i.e. YES in step S this routine terminates.

As described above the in line finisher of the printer executes the post processing. If the job control information of the near line finisher is transmitted to the printer the job control information can be transferred to the addressed near line finisher.

Next an exemplary processing procedure of the image forming apparatus according to an exemplary embodiment will be described with reference to flowcharts shown in and . The processing of corresponds to the above described control in the management of the finisher and the profile in the image forming apparatus. Furthermore shows a processing flow executed by the image forming apparatus to execute the processing described in i.e. the processing that the printer driver obtains the finisher profile from the image forming apparatus .

Next in step S a designated finisher is identified based on the entered IP address with reference to the finisher list stored in the finisher profile storing region of the image forming apparatus. And a list of finishers connectable to the image processing apparatus is displayed. Thus the user can select a maker and a product name of the near line finisher from the displayed list and can designate a corresponding profile.

In step S the image forming apparatus displays a screen to let the operator to check whether the contents entered in steps S and S are correct. When the user inputs an instruction indicating the correctness of the contents the processing flow proceeds to step S. In step S the image forming apparatus requests the finisher corresponding to the entered address to transmit the profile information and stores the profile information received from the finisher in the common DB section . The finisher corresponding to the stored finisher profile is added to the finisher management table. The changed finisher management table is stored in the secondary storage device or in a nonvolatile memory.

Furthermore as another exemplary embodiment the maker and the product name can be known from an ID obtained from the near line finisher. In this case at the timing the user inputs an IP address an ID acquiring request can be issued to obtain the IP from the near line finisher and to display the obtained ID. In accordance with the ID selected by the user the profile information can be requested to the finisher corresponding to the ID.

The profile information can be obtained from the corresponding finisher as a usable finisher connected to the network. The finisher management table can be rewritten correspondingly. The finisher profile can be requested to the finisher corresponding to the entered IP address. The IP address and the profile information can be stored as correlated data.

First in step S when the image forming apparatus waits for an acquiring request of the finisher profile transmitted from the host computer . When the acquiring request is received the processing flow proceeds to step S. Then the image forming apparatus transmits the profile corresponding to the near line finisher registered in the processing of to the host computer e.g. or of . In the present exemplary embodiment only the profile corresponding to the user s registered finisher is transmitted. However it is possible that all profiles including non registered profiles held in the image forming apparatus can be transmitted.

According to the processing of the profile of the operator s registered near line finisher is transmitted to the host computer. However the profiles of the near line finisher and the in line finisher held in the image forming apparatus or the profile of the finisher system can be transmitted in response to the profile acquiring request of the host computer.

In step S when the image forming apparatus receives a print job the job control section interprets the JDF included in the print job. Then it is determined whether there is any processing corresponding to the in line finisher refer to step S . When the processing corresponding to the in line finisher is not included i.e. NO in step S the processing flow proceeds to step S. On the other hand when the processing corresponding to the in line finisher is included i.e. YES in step S the processing flow proceeds to step S. In step S the job control section interprets the JDF corresponding to the in line finisher.

Next in step S the job control section interprets the JDF and determines whether there is any processing corresponding to the near line finisher. When the processing corresponding to the near line finisher is not included i.e. NO in step S the processing flow proceeds to step S. In the following two cases there will be no request for the near line finisher. In one case a user of the client PC issues a print job not using the near line finisher. In the other case the printer driver of the client PC directly transmits control information for executing the post processing as a job ticket to a corresponding near line finisher.

On the other hand when the processing corresponding to the near line finisher is included i.e. YES in step S the processing flow proceeds to step S. In step S the job control section produces a job ID. Then in step S the job control section produces the JDF to be transmitted to the near line finisher. In step S the job control section transmits the job ID and the JDF to the near line finisher. In step S the job control section controls the printer section to execute a print operation.

In step S it is determined whether there is any processing corresponding to the in line finisher. When the processing corresponding to the in line finisher is not included i.e. NO in step S the processing flow proceeds to step S. On the other hand when the processing corresponding to the in line finisher is included i.e. YES in step S the processing flow proceeds to step S. Thus the in line finisher processing is executed as the post processing applied to the print obtained as a result of the print operation refer to step S .

On the other hand when the processing corresponding to the in line finisher is not included i.e. NO in step S the processing flow proceeds to step S without executing the processing of step S. In step S it is determined whether there is any processing corresponding to the near line finisher. When the processing corresponding to the near line finisher is not included i.e. NO in step S the image forming apparatus terminates this routine. When the processing corresponding to the near line finisher is included i.e. YES in step S the processing flow proceeds to step S. In step S the image forming apparatus produces and prints the job ID and a work instruction describing the processing procedure for the processing in the corresponding near line finisher and instruction for the operator before terminating this routine.

In this case the printed job ID is identical with the job ID transmitted to the near line finisher in step S. An aspect of step S is to notify the operator of the near line finisher to which the operator should convey the printed product after completing the print processing based on the print data as well as the job ID to be entered into the near line finisher.

Hereinafter the exemplary processing procedure of the near line finisher based on the job control information stored in the storage device will be described with reference to the flowchart of . First in step S the near line finisher waits for an ID entered from an operator. When the ID is entered i.e. YES in step S the processing flow proceeds to step S.

In step S the near line finisher e.g. 21 22 of requests the job control section of the image forming apparatus to transmit a JDF corresponding to the received ID and obtains the JDF returned in response to the request. In step S based on the contents of the JDF the finisher automatically sets the parameters such as a recording paper size required for performing predetermined post processing. Thus the operator needs not to manually set the parameters based on a conventionally used printed procedure manual.

Next in step S the finisher controls a predetermined display device to display the parameters to let the user confirm the setting contents. The user confirms the displayed contents and depresses a processing start button of the finisher if there is no problem. Thus the finisher starts the processing according to the parameters set in step S. For example if the designated finisher is a cutting finisher the finisher starts a cutting operation according to the determined dimensions.

When there is any problem with the present settings i.e. YES in step S the processing flow proceeds to step S to request the user to manually set the parameters suitable for the near line finisher. When the automatically set parameters include no problem i.e. NO in step S or after accomplishing the manual parameter settings in step S the processing flow proceeds to step S to execute finishing processing.

If the use of plural near line finishers is designated the above described processing is performed similarly for the next near line finisher. As described above using the finisher profiles in the system arrangement of the exemplary embodiment enables the driver to use the finisher functions regardless of the differences in the in line off line and near line finishers.

Next exemplary processing in a case that another near line finisher is newly added to the image forming system will be described. is a diagram illustrating an exemplary arrangement of an image forming system including a host computer that includes a printer driver controlling an image forming apparatus a paper feeding apparatus and an in line finisher . The in line finisher for example has a middle stitch bookbinding function in addition to a stapling function and a punching function.

Furthermore the image forming system of includes a perfect bookbinding machine as a near line finisher. The host computer the image forming apparatus and the near line finisher i.e. perfect bookbinding machine are connected to the network .

The operator can connect the perfect bookbinding machine i.e. near line finisher to the image forming system according to the connecting procedure of the near line finisher described in . After finishing the connection procedure the finisher profile storing region of stores a property information file i.e. property profile that specifies the functions of the perfect bookbinding machine . exemplary shows the contents of the profile of the perfect bookbinding machine stored in the finisher profile storing region .

In a tag is an identifier indicating that the finisher is a perfect bookbinding machine. A tag shows a maker name of the finisher i.e. ABC according to the example. A tag shows a product name of the finisher i.e. NSB100 according to the example. A tag shows the processible bookbinding size of the perfect bookbinding machine . The portion through shows a maximum size of the processible input original. According to the example the maximum dimensions are 320 mm 320 mm. Furthermore the portion through shows a minimum size of the processing input original. According to the example the minimum dimensions are 110 mm 145 mm.

The description of tags and shows restriction information restricting the functions of the perfect bookbinding machine. According to the property profile described according to the XML format the restriction information can be describe by the tag through the tag . The printer driver can identify the restriction information added in the property profile by recognizing the tag.

The description of the tag shows the thickness of the input original processible in the perfect bookbinding machine . According to the example the processible original thickness is in the range from 1 mm to 55 mm. Furthermore when the bookbinding machine performs a perfect binding operation the produced book has an unreadable region near the spine of a book which cannot be perfectly uncovered and accordingly cannot be read when a book is opened. The description of the tag shows the width of such an unreadable region. According to the example the unreadable width is 7 mm in each page.

The driver UI rearrangement application installed in the host computer can obtain the finisher profile of the perfect bookbinding machine from the image forming apparatus and can add a function display item on the user interface UI screen based on the obtained finisher profile. Alternatively the driver UI rearrangement application can change the setting contents of a function display item already displayed on the screen.

When the restriction information agrees with the setting information i.e. YES in step S the processing flow proceeds to step S. In step S the driver UI rearrangement application controls the display of the user interface based on the setting information of the printer driver. On the other hand when the restriction information set in the property file disagrees with the setting information of the printer driver i.e. NO in step S the processing flow proceeds to step S. In step S the driver UI rearrangement application controls the display of the user interface based on the restriction information set in the property file.

The setting information of the printer driver is for example determined considering the in line finisher or the near line finisher to be connected to the image forming apparatus as initial conditions. However the setting information of the printer driver is not limited to the information restricting the functions of these finishers.

For example if a different near line finisher is later connected to the image forming system the restriction information in the finisher profile of this finisher can be used as the reference to be compared in step S. In this case the printer driver setting storing region can store as setting information the information restricting the previous finisher function settable range numerical values orientation of the document page layout etc. In the processing of step S in the driver UI rearrangement application can check the setting information stored in the printer driver setting storing region .

Furthermore when plural near line finishers having the same restriction information are selectable the driver UI rearrangement application can display a user interface that enables the operator to select a desirable near line finisher refer to . The driver UI rearrangement application for example can display a user interface that allows the operator to select a desirable near line finisher considering the property of near line finishers information relating to the operator s work region and the information relating to the frequency of operator s use or other operation history.

When the priority to the processing capability is selected by the operator on the user interface shown in the driver UI rearrangement application can select an optimum near line finisher with reference to the finisher profiles of respective finishers that describe processing capabilities e.g. processing speed and processing capacity .

Furthermore when the priority to work region is selected by the operator the driver UI rearrangement application can select an optimum near line finisher so as to reduce the work time required for the post processing based on the information such as the installation place of the near line finisher stored in the printer driver setting storing region . For example to reduce a shifting distance of the operator the driver UI rearrangement application can designate a finisher closest to the image forming apparatus that the operator is using.

Furthermore when the priority to frequency of use is selected by the operator the driver UI rearrangement application can select an optimum near line finisher based on the information relating to the cumulative frequency of use for example stored in the printer driver setting storing region .

The information processing apparatus displays a setting screen for enabling the operator to perform the settings to control the print output of the image forming apparatus and the post processing apparatus or including the finisher system that executes the post processing for the printed products produced from the image forming apparatus .

The information processing apparatus includes an acquiring section a comparing section and a display control section. The acquiring section can obtain the function information e.g. in in and in showing post processing functions of the post processing apparatus.

The comparing section can compare the function information obtained by the acquiring section with the setting information of other post processing apparatus i.e. information showing post processing functions of this post processing apparatus . The display control section can change the setting screen based on the comparison result of the comparing section and can display the changed setting screen.

The driver UI rearrangement application installed on the host computer can operate under the control of the OS to execute the above described functions of the acquiring section the comparing section and the display control section.

Regarding the bookbinding settings the operator can set a bookbinding print in the input field of the print method refer to step in . Then the operator can input a check mark in the setting field of the middle stitching function refer to step to accomplish the settings for the middle stitch bookbinding operation. The operator can use a button that opens a dialog to perform bookbinding details settings when the bookbinding print is selected in the input field of the print method . The contents of the bookbinding details setting dialog will be described later.

Next according to the above described procedure the driver UI rearrangement application obtains the finisher profile of the perfect bookbinding machine i.e. the near line finisher connected to the network . This processing corresponds to step S of .

The operator for example depresses a button of the UI finishing sheet to obtain the information relating to the device configuration when the perfect bookbinding machine i.e. the near line finisher is newly connected to the network . In response to the user s depression of the button the driver UI rearrangement application can obtain a finisher profile of the perfect bookbinding machine from the image forming apparatus according to the processing described in that can acquire the finisher profile including the information relating to the device configuration.

The timing for obtaining the finisher profile may be based on an operator s instruction and is not limited to the execution of the processing of . For example the finisher profile can be obtained when the finishing sheet of the user interface UI shown in is opened.

Through the processing shown in that obtains the information relating to device configuration the driver UI rearrangement application can obtain the finisher profile of the post processing apparatus i.e. perfect bookbinding machine that is newly connected. The driver UI rearrangement application can analyze the contents of the obtained finisher profile and can control or change the display of the user interface UI based on the analysis. The driver UI rearrangement application can discriminate a character string Non Stitch Booklet contained in the tag of the finisher profile and can recognize that this finisher is a perfect bookbinding machine.

With this recognition the perfect binding is enabled in the case that the bookbinding print is selected as the print method. The driver UI rearrangement application can add a perfect binding check box on a printer driver s finishing sheet of the finishing sheet of the user interface UI shown in . Thus through the user interface UI of the printer driver the operator can set the functions of the perfect bookbinding machine connected as the near line finisher to the image forming apparatus via the network .

Besides addition of the function item on the user interface UI the driver UI rearrangement application can control the display of the user interface UI to change the contents of the screen based on the restriction information described below. The driver UI rearrangement application retrieves from the obtained finisher profile the tags and that are restriction information restricting the functions of the perfect bookbinding machine .

According to the finisher profile shown in the description of tags and sandwiched between two tags and shows detailed restriction information. For example according to the perfect binding bookbinding operation the printed product has a binding portion which cannot be opened. Thus the tag describes the unreadable region as restriction information. According to the example the unreadable region adjacent to the binding portion has a width of 7 mm.

The binding width of the bookbinding operation defines a region on the page where the image is formed i.e. designating the margin to be provided from the spine of a book i.e. binding portion of the bookbinding . The binding width can be set in the units of millimeter. According to the example shown in the binding width can be set in the range from 0 mm to 30 mm as default restriction information. According to the middle stitch bookbinding a recording paper sheet is double folded and the stitching is applied to the folded portion. Thus the minimum value of the binding width is set to 0 mm. Furthermore although the example shows 30 mm as a practical value there is no physical restriction with respect to the maximum value of the binding width.

However in this case the driver UI rearrangement application can obtain the finisher profile of the perfect bookbinding machine can compare the contents of the restriction information being set in the obtained profile with the default restriction information of the user interface UI of the printer driver corresponding to the processing of steps S and S in and can change the contents of the user interface UI screen based on the restriction information.

When the restriction information is different from the setting information the driver UI rearrangement application can change the contents of the user interface UI screen according to the contents of the restriction information set in the finisher profile corresponding to the processing of step S in . In this case according to the restriction information that defines the unreadable range of 7 mm adjacent to the spine of a book i.e. the binding portion of the bookbinding the display contents binding width of the user interface UI screen can be changed from the default setting range 0 mm to 30 mm i.e. of to a setting range based on the restriction information 7 mm to 30 mm i.e. of .

If the driver UI rearrangement application permits the default setting 0 mm to 30 mm in a case that the perfect bookbinding machine is designated to perform the perfect binding bookbinding the image formed on a recording paper sheet cannot be seen in the range of 0 mm to 6 mm. Therefore if the settings of the user interface UI are unconditionally accepted the operation settings and the actual post processing result will contradict with each other when the settings cannot be realized in the actual perfect binding bookbinding processing.

To avoid such contradiction the driver UI rearrangement application can change the default setting range 0 mm to 30 mm to a new range 7 mm to 30 mm reflecting the restriction information based on a binding width range set as the restriction information i.e. refer to tag in . According to the change of the setting range the driver UI rearrangement application can control the display of the user interface UI .

In the above described example only one near line finisher is added and connected. However the driver UI rearrangement application installed on the host computer or can obtain finisher profiles of plural near line finishers i.e. the middle stitch bookbinding machine and the paper folding machine constituting the finisher system shown in . Then the driver UI rearrangement application can compare the restriction information set in the obtained finisher profiles with the default restriction information and can control the display of the user interface based on the comparison result.

As described above according to the present exemplary embodiment the operator can easily perform the settings of a finisher without confirming the connection state and restricted functions of the finisher.

Next a second exemplary embodiment of the present invention will be described with reference to the drawings. is a schematic diagram illustrating the arrangement of an image forming system in accordance with the second exemplary embodiment. The image forming system of is different from the image forming system of in that the near line finisher is replaced with a three side sheet cutting machine that is connected to the network .

With respect to the connection of the three side sheet cutting machine the driver UI rearrangement application performs the following display control. The connection of the near line finisher in the present exemplary embodiment can be performed according to the procedure described in the first exemplary embodiment.

The operator can connect the three side sheet cutting machine i.e. the near line finisher to the image forming system according to the procedure of described in the first exemplary embodiment. After accomplishing the connecting procedure the finisher profile storing region shown in can store the property information file i.e. profile that specifies the functions of the three side sheet cutting machine . shows exemplary contents of the profile of the three side sheet cutting machine stored in the finisher profile storing region .

In a tag is an identifier indicating that the finisher is a three side sheet cutting machine. A tag shows a maker name of the finisher i.e. ABC according to the example. A tag shows a product name of the finisher i.e. ABC CUT according to the example. A tag shows the processible input output size of the three side sheet cutting machine . The portion through shows a maximum size of the settable input printed product. According to the example the maximum dimensions are 330 mm 330 mm. Furthermore the portion through shows a minimum cutting size of the printed product. According to the example the minimum dimensions are 100 mm 142 mm.

The description of a tag shows restriction information restricting the functions of the three side sheet cutting machine . The description of the tag shows the information relating to the thickness of the input original processible in the three side sheet cutting machine . According to the example the processible thickness is equal to or less than 50 mm. The description of a tag shows a minimum cutting width of the three side sheet cutting machine . According to the example the processible minimum cutting width is 3 mm in both X and Y directions. The description of a tag shows a maximum cutting width of the three side sheet cutting machine . According to the example the processible minimum thickness is 230 mm in the X direction and 94 mm in the Y direction.

The driver UI rearrangement application installed on the host computer can obtain the finisher profile of the three side sheet cutting machine from the image forming apparatus and can add a function display item on the user interface UI screen based on the obtained finisher profile or can change the setting contents of a function display item.

The finishing sheet screen of the printer driver s user interface UI is similar to the screen shown in described in the first exemplary embodiment before the driver UI rearrangement application obtains the finisher profile of the three side sheet cutting machine .

Through the finishing sheet screen of the user interface UI shown in the user can set the functions of the in line finisher connected to the image forming apparatus . The in line finisher has a stapling function a punching function a middle stitch bookbinding function and a sheet cutting function for cutting one side of the printed products after finishing the bookbinding operation.

The settings relating to the sheet cutting include a print method setting and a middle stitch setting . The sheet cutting operation is feasible only when the middle stitch is selected in the bookbinding print. Thus the settings for the sheet cutting operation cannot be displayed by only selecting the bookbinding print in the print method input field on the finishing sheet screen .

Next the driver UI rearrangement application obtains the finisher profile of the three side sheet cutting machine which is connected to the network . The operator for example depresses a button of the UI finishing sheet to obtain the information relating to the device configuration when the three side sheet cutting machine i.e. the near line finisher is newly connected to the network . In response to the user s depression of the button the driver UI rearrangement application can obtain the finisher profile of the three side sheet cutting machine from the image forming apparatus according to the processing described in that can acquire the finisher profile including the information relating to the device configuration.

The timing for obtaining the finisher profile is based on an operator s instruction and is not limited to the execution of the processing of . For example the finisher profile can be obtained when the finishing sheet of the user interface UI shown in is opened.

Through the processing shown in that obtains the information relating to device configuration the driver UI rearrangement application can obtain the finisher profile of the post processing apparatus i.e. three side sheet cutting machine that is newly connected.

The driver UI rearrangement application can analyze the contents of the obtained finisher profile and can control or change the display of the user interface UI based on the analysis. The driver UI rearrangement application can discriminate a character string 3 side Cutter contained in the tag of the finisher profile and can recognize that this finisher is a three side sheet cutting machine. With this recognition the cutting is enabled in the case that the bookbinding print is selected as the print method and further the middle stitch is selected. The driver UI rearrangement application can add radio buttons that allows the operator to select a cutting method on a printer driver s finishing sheet of the finishing sheet of the user interface UI shown in .

The operator can select a radio button when no sheet cutting operation is necessary. The operator can select a radio button when a one side sheet cutting operation is necessary. When the radio button is selected the in line finisher is designated as a post processing machine. The operator can select a radio button when a three side sheet cutting operation is necessary. When the radio button is selected the near line finisher i.e. three side sheet cutting machine is designated as a post processing machine.

Furthermore the finishing sheet allows the operator to set a sheet cutting width for each of a long side cutting an upper side cutting and a lower side cutting .

When the one side sheet cutting is selected by the operator the driver UI rearrangement application enables the cutting width as a selectable cutting width of the long side cutting operation. In this case the driver UI rearrangement application can control or change the display for the cutting width of the upper side cutting operation and the cutting width of the lower side cutting operation. For example the display can be differentiated by using masking or the like.

According to the example the range 5 mm to 30 mm of the cutting width for the long side cutting operation is based on the default setting information. The range 3 mm to 94 mm of the cutting width for the upper side cutting and the range 3 mm to 94 mm of the cutting width for the lower side cutting are based on the settings of restriction information i.e. 

When the three side sheet cutting is selected by the operator the driver UI rearrangement application can control the display of the user interface UI so as to change respective cutting width setting ranges based on the restriction information included in the finisher profile of the three side sheet cutting machine .

The driver UI rearrangement application compares the setting 3 mm to 230 mm of the cutting range in the X direction corresponding to the long side as the restriction information included in the finisher profile of the three side sheet cutting machine with the cutting range 5 mm to 30 mm for the one side sheet cutting operation set as the default settings corresponding to the in line finisher and changes the contents of the user interface UI based on the restriction information.

If the near line finisher i.e. the three side sheet cutting machine starts its operation without changing the settings of the cutting range 5 mm to 30 mm that are set for the in line finisher the cutting operation will not be performed when the printed products exceeding the range of 5 mm to 30 mm. Thus the settings and the actual post processing will contradict with each other.

To avoid such contradiction based on the restriction information relating to the cutting range in the X direction corresponding to the long side i.e. refer to tags and in the driver UI rearrangement application changes the default setting range 5 mm to 30 mm to a new range 3 mm to 230 mm reflecting the restriction information and controls the display of the user interface UI .

Regarding the cutting widths of the upper side and the lower side refer to steps and in the sheet cutting ranges are already displayed based on the restriction information. Therefore the display contents need not be changed. When the three side sheet cutting is selected as the sheet cutting method the driver UI rearrangement application controls the display with respect to the cutting widths of the upper side and the lower side based on the restriction information included in the finisher profile. Thus no contradiction occurs in the relationship between the setting values and the post processing. The display control for newly changing the cutting range is unnecessary.

According to the example of the cutting width of the long side is 12 mm and the cutting widths of the upper side and the lower side are 10 mm. If the print is performed based on the above settings the bookbinding print and the middle stitch are successively performed while the information relating to the cutting widths is transmitted to the three side sheet cutting machine according to the above described procedure. Subsequently the operator delivers the printed products from the image forming apparatus to the three side sheet cutting machine . The three side sheet cutting machine can perform a cutting operation based on the transmitted information relating to the cutting widths.

According to the present exemplary embodiment the operator can easily perform the settings of a finisher without confirming the connection state and restricted functions of the finisher.

The key input section shown in includes an operating section power switch provided for switching between a standby mode i.e. normal operating condition and a sleep mode according to which the main controller stops the program and waits for an interrupt relating to the network print or the facsimile to save the electric power consumption . The key input section can be controlled when the power switch for the entire system is in an ON state.

When the power saving key i.e. a control key for suppressing power consumption is depressed the control temperature of the fixing unit in the standby mode can be reduced although a longer time is required to reach a printing condition. The power saving key can be modified so as to decrease the control temperature according to a power saving rate.

A start key is a control key that enables the operator to instruct start of a copy or a transmission. A stop key is a control key that enables the operator to interrupt the operation. A ten key is a control key that enables the operator to perform various settings. A clear key is a control key that enables the operator to cancel various settings. An ID key is a control key that enables the operator to input a password number to acquire authorization to use the image forming apparatus .

A reset key is a control key that enables the operator to return the settings to the default conditions. A help key is a control key that enables the operator to display a guidance or help message. A user mode key is a control key that enables the operator to shift to a user s own system setting screen. A counter confirmation key is a control key that enables the operator to display a total number of printed products based on the data memorized in a soft counter provided in the image forming apparatus that can count a print number. For example the number of output prints can be displayed according to an operation mode e.g. copy print scan fax a color mode e.g. color monochrome or a paper size large small .

An image contrast dial is a dial that enables the operator to adjust the visibility of the screen by changing the intensity of a backlight equipped for the liquid crystal display in the touch panel section. An execution memory lamp is a lamp that flickers during the execution of a job or during access to the memory to notify the operator of it. An error lamp is a lamp that flickers when no job can be executed or when an error such as a service person call occurs or to notify a jam or shortage of expendable supplies.

A copy tab is a tab key that enables the operator to transit to an operation screen for the copy action. A transmit tab is a tab key that enables the operator to transit to an operation screen for instructing a transmission Send action such as fax or electronic mail E mail transmission. A box tab is a tab key that enables the operator to transit to a screen for inputting outputting a job into a box i.e. a job storing unit provided for each user . An option tab is a tab key that enables the operator to set optional function such as scanner settings. A system monitor key is a key that enables the operator to display the conditions of the image forming apparatus . By selecting each tab the operator can transit to each operation mode.

A color select setting key is a key that enables the operator to select a color copy a monochrome copy or an automatic selection. A copy ratio setting key is a key that enables the operator to transit to a setting screen on which the operator can perform copy ratio settings e.g. direct enlarge and reduce . A post processing setting key is a key that enables the operator to transit to a stapling or punching setting screen on which the operator can designate the number position etc.

Furthermore a two sided setting key is a key that enables the operator to transit to a setting screen on which the operator can select either one sided print or two sided print. A paper size setting key is a key that enables the operator to transit to a setting screen on which the operator can select a paper feeding tray a paper size and a media type. An image mode setting key is a key that enables the operator to select an image mode suitable for the original image such as a text mode or a photograph mode. A density setting key is a key that enables the operator to adjust the density of an output image.

Next a status display section performs a simplified display indicating the current status such as a standby condition a warming up condition a jam and an error. A copy ratio display section displays a copy ratio set by the operator through the copy ratio setting key . A paper size display section displays the paper size and the mode set by the operator through the paper size setting key . A copy number display section displays the copy number designated by the operator through the ten key or displays a momentary copy number. Furthermore an interrupt key can be used to interrupt the copy action to execute another job. A special feature key is a key that enables the operator to perform the settings for continuous page copying front page assembled pages reduced layout image shift etc.

The image forming apparatus has functions similar to those of the image forming apparatus described in the first exemplary embodiment with reference to . More specifically the job control section of corresponding to the job control section in can control various functional sections to execute a print job produced by the host computer. In this case the job control section can communicate via the NIC section refer to with the near line finisher e.g. the sheet cutting machine or the middle stitch bookbinding machine shown in that is connected to the network to obtain the information i.e. finisher profile specifying a near line finisher function. The job control section can reflect the contents of the finisher profile to the user interface UI used for the post processing of printed products.

The printed products i.e. stacked sheets disposes on a paper feed tray hereinafter simply referred to as sheets are conveyed along the path in the near line finisher when the near line finisher starts the processing. The near line finisher is equipped with a sample tray and a stack tray which can be selectively used according to a job type or a copy number of discharged sheets.

There are two sorting methods. One method is a bin sorting method for sorting the output sheets to plural bins. The other method is a shift sorting method for sorting the output sheets for each job using an electronic sorting function. Using a large capacity memory equipped in the control section can support an electronic sorting function by using a so called collating function that can change the buffered page order and the discharge order.

Furthermore when the stapling mode is set for the job to be output the finisher control section controls the near line finisher to discharge the sheets to the stack tray . In this case before the sheets are discharged to the stack tray the sheets can be successively stored for each job in a processing tray provided in the finisher and can be bound on the processing tray by a stapler. Thus each bundle of recording paper sheets can be discharged to the stack tray .

Furthermore according to a job type a Z folding machine can fold the sheets into a Z shape and a puncher can open two or three filing holes. For example when the operator sets the Z folding processing through the operation input section as the settings relating to the sheet processing for a job to be output the finisher control section controls the Z folding machine to execute the folding processing for the sheets corresponding to the job. Then the sheets are conveyed along the path in the finisher and discharged to a designated tray i.e. to the stack tray or to the sample tray .

Furthermore when the operator sets the punching processing through the operation input section as the settings relating to the sheet processing corresponding to a job to be output the finisher control section controls the puncher to execute the punching processing for the sheets corresponding to the job. Then the sheets are conveyed along the path in the finisher and discharged to a designated tray for example to the stack tray or to the sample tray .

Furthermore when the operator sets the saddle stitching processing through the operation input section as the settings relating to the sheet processing corresponding to a job to be output the finisher control section controls a saddle stitcher to execute the saddle stitching processing for the sheets corresponding to the job. The saddle stitcher can bind the sheets at two central portions and can fold the sheets fixed along the center line with a roller into a booklet e.g. a pamphlet thereby accomplishing the bookbinding processing. The booklet produced by the saddle stitcher is discharged to a booklet tray .

Furthermore an inserter can directly deliver a sheet placed in an insert tray to a designated discharge tray e.g. to the stack tray and sample tray without sending it into the printer. In other words the inserter can insert a sheet placed in the insert tray between the sheets sent to the in line finisher i.e. the sheets printed in the printer section . Usually the operator puts the sheets in a face up condition in the insert tray of the inserter . A pickup roller provided in the insert tray can feed an uppermost sheet of the sheets stacked in the insert tray . Therefore a sheet fed from the inserter is discharged in a face down condition to the stack tray or to the sample tray .

When a sheet is conveyed to the saddle stitcher the finisher control section can once deliver the sheet toward the puncher and then let the sheet switch a moving direction back to the saddle stitcher so that the face direction of the sheet can be adjusted as intended i.e. a face up condition or face down condition . The finisher control section controls the inserter to execute the above described sheet inserting processing based on an operator s instruction entered through the operation input section .

A trimmer i.e. sheet cutting machine receives the booklet i.e. a middle stitched output from the saddle stitcher . A roller of the trimmer feeds the received booklet by a predetermined length to cut the edges of respective pages of the booklet in a cutter section . As a result the booklet has pages having uniformly trimmed edges. Then the trimmed booklet is stored in a booklet holding section . The finisher control section controls the trimmer to execute the above described sheet cutting processing based on an operator s instruction entered through the operation input section .

According to the table when the management number is the finisher name is Finisher X the maker name is XYZ corporation the corresponding profile s profile name is finisher x of xyz.xml and the finisher s connection state is true i.e. connected see reference numeral . Similarly the information corresponding to each management number can be known from the finisher connection management table . According to the example of only the finisher having the management number is connected to the image forming apparatus i.e. in a connected state.

The finisher connection management table includes a name field describing a character string showing a finisher name a function field describing IDs or character strings showing finisher functions and a layout field describing the number of pages to be disposed per recording paper sheet that is required when the finisher functions are used. For example when the post processing includes the saddle stitch the image forming apparatus must perform printing in consideration of the page layout and the page order suitable for the saddle stitch.

Furthermore the finisher connection management table includes a spec field showing the capability performance corresponding to the finisher functions and a control command field showing control commands used in various settings of the finisher. To realize a remote control of the finisher the job control section of the image forming apparatus can transmit the control commands to the finisher.

The image forming apparatus controlling the post processing apparatus e.g. to in connected to the network and having an image forming unit configured to perform the print output processing includes an acquiring section a judging section and a display control section. The acquiring section can obtain function information e.g. the finisher profile shown in showing post processing functions of the post processing apparatus.

The judging section can determine based on the obtained function information whether the image forming unit can execute the print output enabling the post processing using the post processing apparatus. The display control section can control the operation input section to display a setting screen on its display section for performing an input operation for controlling post processing functions to use the post processing apparatus when the judging section determines that the image forming unit can execute the print output.

Furthermore the image forming apparatus includes a registering section that can register into the finisher connection management table and to a finisher capability management table the information relating to a post processing apparatus that can be designated as the post processing apparatus including functions obtained from the finisher profile capability corresponding to the functions and control commands for controlling the post processing apparatus when the judging section determines that the image forming unit can execute the print output.

The job control section of the image forming apparatus can function as the above described acquiring section the judging section the display control section and the registering section and can execute the processing of these sections.

In step S the job control section of the image forming apparatus determines whether the connection signal transmitted from the near line finisher is received via the NIC section . When no connection signal is received i.e. NO in step S the job control section continues a standby condition to repeat the judgment of step S. When the connection signal is received i.e. YES in step S the processing flow proceeds to step S. In step S the job control section of the image forming apparatus requests the near line finisher to transmit the information specifying the functions i.e. finisher profile .

In step S in response to a request of the image forming apparatus the near line finisher transmits the finisher profile under a control of the finisher control section . In step S the job control section determines whether the finisher profile of the near line finisher is received. When no finisher profile is received i.e. NO in step S the processing flow proceeds to step S to perform error processing.

On the other hand when the finisher profile of the near line finisher is received i.e. YES in step S the processing flow proceeds to step S. In step S the job control section reads from the received finisher profile the finisher function the maker name the product name the capability performance corresponding to respective finisher functions and the control command controlling the finisher.

In step S the job control section determines whether the image forming apparatus has the print output capability for executing the post processing using the near line finisher. For example when the near line finisher having a saddle stitching function is used to perform the post processing the job control section must control the printing of two pages of image disposed on the front and rear pages of each recording paper sheet refer to A and B . More specifically when the image forming apparatus cannot print two pages of image disposed on the front and rear pages of each recording paper sheet in the predetermined page order the newly connected near line finisher cannot be used i.e. NO in step S .

Thus the job control section skips step S. In this case the near line finisher s functions unavailable by the image forming apparatus are not registered in the finisher capability management table . On the other hand when the newly connected near line finisher can be used i.e. YES in step S the processing flow proceeds to step S. In step S the job control section registers the functions of the near line finisher as well as the control commands corresponding to the functions in the finisher capability management table .

The job control section to obtain the print output processible in the post processing apparatus controls the display of the setting screen by adding the buttons e.g. in or and in or changing them. For example the information relating to the unreadable region for example a 7 mm range from the binding portion in the bookbinding operation may be set as the capability information designated in the finisher profile. In such a case the job control section can reflect the detailed information relating to the near line finisher functions e.g. recording paper size type one sided two sided etc. to the setting screen controlling the print output of the image forming apparatus.

In this case if the information of the newly connected near line finisher is different from the information already registered as the initial setting information or the setting values of other finisher the job control section can control or change the display of the setting screen i.e. user interface controlling the print output of the image forming apparatus based on the information relating to the capability of the newly connected near line finisher.

For example the binding width 0 mm may be set as an initial setting value of the in line finisher . In this case if the middle stitch bookbinding machine i.e. near line finisher produces a print output with the initially set binding width each page will have an unreadable region where no image can be read or seen. Thus the setting values and the print output result contradict with each other. To avoid such contradiction the job control section controls changes the display of the input field from the initial setting value 0 mm to an updated value 7 mm based on the capability information contained in the finisher profile.

Still referring to in step S the job control section determines whether the functions and the finisher capability and the control commands relating to the functions have been completely readout of the finisher profile. When there is a function or related capability or control command i.e. NO in step S the processing flow returns to step S. The job control section reads the remaining finisher function as well as related finisher capability and control command s and determines whether the image forming apparatus has the print output capability for executing the post processing using the near line finisher.

When the functions and the finisher capability and the control commands relating to the functions have been completely read out of the finisher profile i.e. YES in step S the processing flow proceeds to step S. In step S the job control section registers the finisher name the profile name or the like of the newly connected near line finisher in the finisher connection management table .

In the processing of the flowchart shown in the job control section can bring the image forming apparatus into a standby condition refer to step S in i.e. a condition for waiting a connection of the near line finisher upon power supply to the image forming apparatus and can start the processing of step S in response to the reception of a connection signal.

On the other hand when the finisher is registered in the finisher connection management table i.e. YES in step S the processing flow proceeds to step S. In step S the job control section adds the finisher setting button on the screen as shown in before terminating this routine.

First in step S the job control section determines whether the information relating to the finisher function i.e. function information is registered in the finisher capability management table . When the finisher function information is not registered in the finisher capability management table i.e. NO in step S the job control section terminates this routine. On the other hand when the finisher function information is registered in the finisher capability management table i.e. YES in step S the processing flow proceeds to step S.

In step S the job control section controls the touch panel section to display the function setting buttons to refer to that enables the operator to input the setting values corresponding to the finisher functions. In step S the job control section determines whether any function setting button is depressed. When there is a function setting button depressed i.e. YES in step S the processing flow proceeds to step S. In step S the job control section enables the function s that the operator has set through the function setting button refer to step S .

In step S the job control section determines whether the cancel button shown in is depressed. When the cancel button is depressed i.e. YES in step S the job control section terminates this routine. On the other hand when the cancel button is not depressed i.e. NO in step S the processing flow proceeds to step S.

In step S the job control section determines whether the setting completion button shown in is depressed. When the setting completion button is not depressed i.e. NO in step S the function s enabled by the operator through the function setting button s to is are not yet fixed. Thus the processing flow returns to step S. Then the job control section executes the similar procedure. When the setting completion button is depressed i.e. YES in step S the finisher function is enabled step S .

The image forming apparatus includes an analyzing section and a selecting section. The analyzing section can analyze whether the received print job includes any post processing for the print output. According to the analysis of the analyzing section the selecting section can select a post processing apparatus that can execute the designated post processing based on the information relating to the near line finisher functions registered in the finisher capability management table .

Further the job control section of the image forming apparatus can function as the above described analyzing section and the selecting section and can execute the processing of these sections. The job control section having the capability of functioning as the display control section can control the operation input section to display a setting screen e.g. and in that enables the operator to control the print output to use the selected post processing apparatus based on the information relating to the capability registered in the finisher capability management table e.g. the information relating to the layout and the information relating to the spec .

Then to use the selected post processing apparatus the job control section obtains the information for controlling the print output e.g. the layout information from the finisher capability management table and displays the obtained information on the display screen refer to . Then the processing flow proceeds to step S. With this display the operator can confirm the contents of the settings. On the other hand when the post processing using the near line finisher is not designated i.e. NO in step S the processing flow proceeds to step S without executing the processing of step S.

In step S the job control section executes the print processing according to the layout information obtained in step S when the finisher is not used the layout information is not reflected to the print processing . For example when the settings of the near line finisher include the saddle stitching in step S the layout information 2 is obtained from the finisher capability management table . Thus the job control section disposes two pages of image on each recording paper sheet and successively executes the print processing according to a predetermined page order.

After completing the processing of step S the job control section obtains the control command information corresponding to the near line finisher function s from the finisher capability management table and transmits the obtained control command s to the near line finisher before terminating this routine refer to step S . For example when the settings of the near line finisher include the saddle stitching the job control section transmits saddleStitch ON to the near line finisher as a control command corresponding to the saddle stitching from the finisher capability management table . With the control command s being thus transmitted the image forming apparatus can perform a remote control of the near line finisher.

According to the above described third exemplary embodiment the processing shown in the flowchart of is executed at the timing the near line finisher is connected to the network. However when this exemplary embodiment is applied to an off line finisher an operator using this system can download the finisher profile shown in at arbitrary timing from a host computer or other external device to establish the finisher connection management table and the finisher capability management table shown in .

According to the present exemplary embodiment the image to be processed in the finisher can be preferably formed without requiring the operator to confirm the capability of the finisher.

Next a fourth exemplary embodiment of the present invention will be described below with reference to the drawings. Similar to the above described first exemplary embodiment an image forming system of the fourth exemplary embodiment includes an information processing apparatus e.g. client PC an image forming apparatus and a near line finisher.

The fourth exemplary embodiment discloses exemplary processing for establishing a GUI of the printer driver operating on the client PC according to the profile stored in the profile storing region .

In general finishers attached to an office device are limited in the type. Therefore the driver UI is usually designed based on the features or spec of the finisher s attached to the device. When a finisher is attached to the device the information of this finisher can be obtained from a printer controller and a UI corresponding to the finisher can be displayed.

However independent finishers e.g. near line finishers and off line finishers which are not connected to the image forming apparatus are not considered in designing the driver UI. Furthermore finishers may have new functions unrecognized at the timing the printer driver is created or finishers may be different in the type. If such finishers are connected to the image forming apparatus it is impossible to realize an adaptive display of the driver UI.

In the present exemplary embodiment the profiles of various finishers are obtained and utilized. Furthermore the information relating to the UI included in the finisher profile can be described according to the format that the printer driver of the host computer can analyze so that the printer driver can adaptively constitute and display the UI.

For the purpose of simplifying the description shows an exemplary flow of finisher profiles among the client PC the image forming apparatus and the near line finishers and . In respective finishers have storage devices storing the profiles and describing the performance or properties of the finishers. Furthermore a driver function DB stores all kinds of finisher functions that can be added changed or deleted. The driver function DB is provided as a server or can be provided in the client PC. A driver UI rearrange application installed and operating on the client PC can rearrange the GUI of the printer driver.

The processing for updating the GUI of the above described printer driver will be described below. The controller i.e. job control section of the image forming apparatus detects the finisher directly connected to the image forming apparatus and the finishers and connected to the network as already described. The controller i.e. job control section obtains the finisher profiles and and stores the obtained profiles in the common DB section .

Next the client PC communicates with the controller of the image forming apparatus obtains all of valid profiles and stores the obtained profiles in the profile storing region . The driver UI rearrangement application of the client PC rearranges the driver UI based on the profile information stored in the profile storing region . In this case when the profile includes the function s which are not present in the driver the driver UI rearrangement application communicates with the driver function DB to obtain the information. Details of each processing will be described later.

First the GUI configuration of the printer driver in accordance with an exemplary embodiment will be described. Similar to the finisher profile the information relating to the GUI of the printer driver is described for each function according to the tag format.

Accordingly as shown in the hierarchical configuration can be described according to the hierarchical language such as XML. In particular small items such as sort group and rotation are directly related to the update of the driver UI and accordingly are accompanied by tags relating to the position and the occupied area on the driver UI. If the function is inherent to the finisher a tag showing the finisher relating to this item is accompanied. This will be described later in more detail.

On the other hand the finisher s profile information includes a Driver UI tag in addition to the above described profile information. For example according to the exemplary hierarchical configuration of the profile of a bookbinding machine shown in the Driver UI tag is added to the Booklet Medium and StapleSpaceInternal tags which are inherently included in the profile of the bookbinding machine.

The bookbinding machine includes a staple function and accordingly the sheet discharge method in the finishing tab should be reflected in the driver UI. The finishing and sheet discharge method tags are described in the profile. Furthermore in adding the stapling function a radio button of staple a staple image and a command button designating the stapling position are added on the driver UI screen. Thus the hierarchical configuration shown in can be obtained.

The radio button the image and the command button represent the functions inherent to the finisher and accordingly the information discriminating the finisher is added to the information relating to the position and the size. Furthermore when the operator clicks on a command button stapling position designation another UI i.e. another window opens to enable the operator to execute detailed settings. In such a case the information relating to the related UI is described after the information of stapling position designation. 

As described above the driver UI can be updated based on the fundamental driver UI having a hierarchical configuration and the finisher profile describing the information relating to the driver UI. is a flowchart describing an exemplary driver UI updating processing procedure of the driver UI rearrangement application in accordance with an exemplary embodiment. The driver UI rearrangement application can be executed in response to activation of the printer driver or when the printer is changed by the operator on the GUI shown in .

Referring to first the printer driver of the client PC receives the profile information including the finisher profile and the device profile from the controller of the image forming apparatus and stores the received profile information in the profile storing region refer to step S . Next the printer driver of the client PC confirms the description relating to the UI included in the stored profile information refer to step S and determines whether there is the description relating to the UI refer to step S . More specifically in the example of the profile shown in it is determined whether there is the Driver UI. 

When there is no description relating to the driver UI i.e. NO in step S the driver UI needs not be updated and accordingly the printer driver terminates this routine. On the other hand when there is the description relating to the UI in the profile i.e. YES in Step S the printer driver determines whether any new function unrecognized by the driver UI rearrangement application is added refer to step S . More specifically when there is a tag other than the page setting finishing paper feed and print quality tags shown in the printer driver decides that an unrecognized function is added. When there is an unrecognized function is added the printer driver notifies the driver function DB of the presence of this tag refer to step S .

The driver function DB determines whether there is any supported function refer to step S . When there is a supported function i.e. YES in step S the printer driver obtains the information of the driver function DB and executes driver UI updating processing refer to step S . When there is no supported function i.e. NO in step S the printer driver terminates this routine without updating the driver UI.

The above described processing of steps S and S is required to respond to a new finisher unrecognized by the driver UI rearrangement application. Therefore if there is a new finisher introduced in the market later than the image forming apparatus and its printer driver the function s of the new finisher can be created as a profile compatible with the UI of the exemplary embodiment and the created profile can be registered in the driver function DB . In this respect it is desirable to provide the driver function DB in a FTP server accessible via the Internet.

Furthermore when no unrecognized function is added i.e. NO in step S the processing flow proceeds to step S. In step S the printer driver determines whether there is any space available for a new UI on the GUI corresponding to this tag. When there is no available space i.e. YES in step S the processing flow proceeds to step S to execute space creation processing and then proceeds to step S to execute the driver UI updating processing. When there in an available space i.e. YES in step S the processing flow proceeds to the S to update the driver UI. Details of each processing will be described later.

Still referring to first in step S a tag beneath the Driver UI in the finisher profile and an uppermost layer of the driver UI architectural information are checked. Then the corresponding tags are obtained from the driver UI architectural information. Next in step S the finisher profile and the lower layer of the driver UI architectural information are checked. In step S it is it is determined whether there is a corresponding item i.e. same item . If there in the same item i.e. YES in step S the processing flow returns to step S to further check the lower layer. When there is no corresponding item i.e. NO in step S the item s of the finisher profile and the item s of the lower layer are added to the driver UI architectural information in the following manner.

The screen information of the driver UI is stored as the driver UI screen information in the DB. The margin on the present UI can be confirmed based on the information stored in the DB. Thus in step S the present margin is confirmed from the driver UI screen information . On the other hand an area necessary for an incorporated item is calculated based on the information of the finisher profile refer to step S . Then based on the calculation result the new item is incorporated into the margin refer to step S . Then it is determined whether a new UI is required by confirming whether any information relating to another UI is present in the profile refer to step S .

If a new UI is required i.e. YES in step S the information of the lower layer is combined with the driver UI template to execute the UI addition processing refer to step S . In this case the driver UI template is a driver UI screen that includes the definition of a screen size or the like and includes no functions. When no new UI is required i.e. NO in step S the processing flow proceeds to step S to update the driver UI screen information and the driver UI architectural information .

An example will be described with reference to the driver UI shown in which is displayed when no finisher is connected. It is now assumed that a finisher having the profile shown in newly establishes a communication with the image forming apparatus and the printer driver obtains the finisher profile from the image forming apparatus .

The driver UI rearrangement application of the client PC and the client PC successively retrieves the tags included in the profile from the beginning. First the driver UI rearrangement application confirms that the Driver UI tag is included in the profile. Then the driver UI rearrangement application continuously retrieves to find the finishing tag and determines whether the finishing tag is present in the upper layer i.e. the description corresponding to the page setting tab or the like on the UI of the hierarchical configuration of the driver UI shown in .

Subsequently lower layers are checked similarly. Regarding the sheet discharge method positioned in a lower layer of the finishing in the profile the layer of positioned immediately below the finishing is checked. After the presence of sheet discharge method is confirmed the next layer is checked. Then if a non existing tag appears e.g. staple in a lower layer of the radio button according to the example of the staple and its lower layer s information are added to . Similarly information is added to lower layers of the image and command button tags. Then the present margin is calculated based on the driver UI screen information.

The area required for the incorporated items such as option button image and command button is calculated to execute incorporation of these items. The command button includes the information relating to another UI and accordingly the UI screen of stapling position designation is added based on this information. Finally the driver UI information e.g. the driver UI screen information and the driver UI architectural information is updated in accordance with the updated driver UI before terminating the processing.

The space creation processing refer to step S of will be described below. This processing is performed when the fundamental UI has no space for incorporating a new UI. When there is no space available for the new UI an appropriate space must be added. However the driver UI having a fixed screen size cannot easily expand the space. Furthermore even if the driver UI has an expandable area a setting operation exceeding the maximum screen size of the client PC will not be accepted. Therefore the exemplary embodiment secures the required space by adding a new tab.

When a next finisher is added with increased functions the processing of step S or the like can be changed so as to check not only the uppermost layer but also the finishing and finishing 2 items of the lower layer. However the space addition processing is not limited to the above described one. Any other format can be used.

Next the processing performed when a non recognized function is added will be described with reference to the flowcharts of . When a non recognized function is added the driver UI rearrangement application asks the driver function DB about this function. If there is a supported function a new tab is added.

As an example it is now assumed that a finisher having the finisher profile of is connected to the driver UI of . In this case the bookbinding details setting i.e. a lower layer of Driver UI in the finisher profile is not included in the upper layer showing tab information of the driver architectural configuration. The driver UI rearrangement application asks the driver function DB about the presence of bookbinding details setting. 

When there is the information relating to the bookbinding details setting in the driver function DB a new bookbinding details setting tab is added based on this information. As a result the driver UI architectural configuration shown in can be obtained and the resultant UI can be displayed as shown in . As shown in the driver UI architectural configuration includes a bookbinding details setting item newly added. Furthermore as shown in the driver UI includes a bookbinding details setting tab newly added.

In the above described exemplary embodiment the post processing to be executed in a near line finisher e.g. the casing in bookbinding may be designated as the post processing applied to the printed products. In such a case a print job including the contents of the post processing to be executed in the near line finisher and job control information describing a near line finisher ID can be transmitted to the image forming apparatus. More specifically when the received print job includes the post processing to be performed in a near line finisher the image forming apparatus transmit the contents of the post processing to the near line finisher identified by the near line finisher ID.

First the client PC obtains the IP address of the near line finisher by performing the processing similar to that of the image forming apparatus described in the exemplary embodiment. This processing can be constituted as a module of the printer driver or can be constituted as an independent program. Then the printer driver produces a job ticket describing post processing contents and a job ID i.e. identifier and directly transmits the produced job ticket to the near line finisher. In this case a print job transmitted to the image forming apparatus needs not include the contents of post processing relating to the near line finisher or the job control information of this near line finisher.

In a fifth exemplary embodiment there are plural finishers having functions overlapped with each other. For example when there are plural finishers each having a stapling function the finishers may be differentiated in detailed functions e.g. in the number of stapled paper sheets or in the stapling position.

The processing of step S is executed when no unrecognized function is added i.e. NO in step S . In step S it is determined whether there is any similarity i.e. overlap of the functions. In this case the similarity i.e. overlap of the functions is recognized if newly added functions of a finisher are already incorporated as the functions of another finisher. When there is no similarity i.e. overlap of the functions i.e. NO in step S the processing flow proceeds to step S to determine whether there is any space available for the new UI.

When the similarity i.e. overlap of the functions is recognized i.e. YES in step S the processing flow proceeds to step S to execute function comparison processing and then proceeds to step S to execute the driver UI updating processing. For example the similarity i.e. overlap of the functions will be recognized if a new stapler i.e. a finisher having a stapling function is newly connected in the condition that a stapling function is already incorporated.

Regarding the function comparison processing executed in step S there are two practical methods. One method is selecting a finisher having highest performance among plural finishers. The other method is comparing plural finisher functions and displaying them according to the comparison. As an example it is now assumed that two finishers can communicate with the image forming apparatus having the driver UI of .

For example according to the former method the capabilities of finishers can be compared based on their profiles because the profiles include the information relating to the performance such as a maximum copy number. Therefore it is possible to select a finisher having higher performance. In this case the information identifying the selected finisher needs not be specified because the operator can perform the settings without considering the performance or properties of the selected finisher. As described above the operators having no specialized knowledge about the finishers will be confused if they are asked to determine an apparatus necessary to obtain the final printed products they want. Therefore only the functions are intentionally displayed to avoid any confusion.

On the other hand according to the latter method it is necessary to specify each of the plural finishers and explicitly display their functions in the form of a list describing the finisher name and related functions. shows one example of the list. According to the example of one finisher A has a stapling function performable at two positions i.e. upper left and lower left while another finisher B has a stapling function performable at three positions i.e. upper left lower left and center . The operator can compare the finisher functions to select an optimum finisher.

It is further noted that comparison of similar overlapped functions and the related processing are not limited to the above described ones. Also as described above according to the present exemplary embodiment the UI architectural information of the printer driver used on the client PC is described according to the general purpose description language such as XML format. Meanwhile the profile showing finisher functions is described in a similar fashion so as to be conformable to the UI architectural information of the printer driver. As a result a user can obtain the profile of an intended finisher and a GUI of the printer driver can be constituted appropriately in compliance with the environment in which the printer driver is used.

According to the present invention the software program s realizing the above described functions of the present exemplary embodiments can be supplied by using a recording medium to a system or an apparatus. The system or the apparatus e.g. CPU or MPU can read the supplied program codes from the recording medium and can execute the program s to realize the functions of the present exemplary embodiments.

In this case the program codes read out of the recording medium can realize the functions of the above described exemplary embodiments. The recording medium storing the program codes can constitute the present invention. Furthermore realizing the functions of the above described exemplary embodiments is not limited to executing the program codes read by the computer. The operating system OS running on the computer can execute part of all of the actual processing based on an instruction of the program codes to realize the functions of the above described exemplary embodiments.

Furthermore the program read out of a recording medium can be written into a memory of a feature expansion board equipped in a computer or into a memory of a feature expansion unit connected to the computer. In this case based on an instruction of the program the CPU provided on the feature expansion board or the feature expansion unit can execute part or all of the processing so that the functions of the above described exemplary embodiments can be realized.

As understood from the above described exemplary embodiments the present invention can be embodied as a system an apparatus a method a program or a recording medium. More specifically the present invention can be applied to an integrated system including plural devices or can be applied to a single device.

Furthermore software programs realizing the functions of the above described exemplary embodiments i.e. the programs corresponding to the flowcharts shown in the drawing of the exemplary embodiments can be directly or remotely supplied to the system or to the apparatus so that a computer of the system or the apparatus can read and execute supplied program codes to realize the present invention. Therefore the present invention encompasses the computer codes installed in a computer that can realize the functions or processes of the present invention or any recording medium that can store the program s . In this case the type of program s can be selected from any one of object codes interpreter programs and OS script data.

A recording medium supplying the program s can be selected from any one of floppy disk registered trademark hard disk optical disk magneto optical disk MO CD ROM CD R CD RW magnetic tape nonvolatile memory card ROM and DVD DVD ROM DVD R .

The method for supplying the program s includes accessing a home page on the Internet using the browsing function of a host computer when the home page allows each user to download the computer programs of the present invention or compressed files of the programs having automatic installing functions to a hard disk or other recording medium of the user. Furthermore the program codes constituting the programs of the present invention can be divided into a plurality of files so that respective files are downloadable from different home pages. Namely the present invention encompasses WWW servers that allow numerous users to download the program files so that the functions or processes of the present invention can be realized on their computers.

Furthermore enciphering the programs of the present invention and storing the enciphered programs in a CD ROM or comparable recording medium is a practical method when the programs of the present invention are distributed to the users. The authorized users i.e. users satisfying predetermined conditions are allowed to download key information from a home page on the Internet. The users can decipher the programs with the obtained key information and can install the programs on their computers.

When the computer reads and executes the installed programs the functions of the above described exemplary embodiments can be realized. Furthermore based on an instruction of the program the operating system running on the computer may execute part or all of the processing so that the functions of the above described exemplary embodiments can be realized.

Furthermore the program read out of a recording medium can be written into a memory of a feature expansion board equipped in a computer or into a memory of a feature expansion unit connected to the computer. In this case based on an instruction of the program the CPU provided on the feature expansion board or the feature expansion unit can execute part or all of the processing so that the functions of the above described exemplary embodiments can be realized.

According to the above described exemplary embodiments an operator or user can easily perform the settings of a finisher without knowing or confirming the connection state and the restricted functions of the finisher. The images processed in a finisher can be preferably formed even if an operator does not know or confirm the finisher s capability.

According to the above described exemplary embodiments the configuration language describing the fundamental display information required to constitute fundamental print setting display screens can be commonly used to describe the function information of a print post processing apparatus. Thus a print setting screen for setting printing and bookbinding conditions can be easily displayed by combining them.

Therefore the user can execute seamless settings relating to the printing and bookbinding conditions. In particular the above described exemplary embodiments enable the printer driver of a printing apparatus to control a print post processing apparatus that is connected to the network but was conventionally difficult to automatically control its printed products.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications equivalent structures and functions.

