---

title: Managing task approval
abstract: A method is used in managing approval of a data storage management operation. An approval module is provided. A request to perform a management operation is received from a first user where the first user is associated with a first user access level. The management operation is forwarded to the approval module. The management operation is evaluated to determine an approval status, the evaluation based on the first user access level and the management operation. Based on the evaluation, an approval status is provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09250955&OS=09250955&RS=09250955
owner: 
number: 09250955
owner_city: 
owner_country: 
publication_date: 20121231
---
Computer systems may include different resources used by one or more host processors. Resources and host processors in a computer system may be interconnected by one or more communication connections. These resources may include for example data storage devices such as those included in the data storage systems manufactured by EMC Corporation. These data storage systems may be coupled to one or more servers or host processors and provide storage services to each host processor. Multiple data storage systems from one or more different vendors may be connected and may provide common data storage for one or more host processors in a computer system.

A host processor may perform a variety of data processing tasks and operations using the data storage system. For example a host processor may perform basic system I O operations in connection with data requests such as data read and write operations.

Host processor systems may store and retrieve data using a storage device containing a plurality of host interface units disk drives and disk interface units. The host systems access the storage device through a plurality of channels provided therewith. Host systems provide data and access control information through the channels to the storage device and the storage device provides data to the host systems also through the channels. The host systems do not address the disk drives of the storage device directly but rather access what appears to the host systems as a plurality of logical disk units. The logical disk units may or may not correspond to the actual disk drives. Allowing multiple host systems to access the single storage device unit allows the host systems to share data in the device. In order to facilitate sharing of the data on the device additional software on the data storage systems may also be used.

Different tasks may be performed in connection with a data storage system. For example a customer may perform data storage management tasks and operations such as viewing information regarding a status or current configuration configuring and provisioning data storage for use with an application as may reside on a host system and the like. Data storage management software may be developed for use in performing the foregoing and other data storage management tasks and operations.

A method is used in managing approval of a data storage management operation. An approval module is provided. A request to perform a management operation is received from a first user where the first user is associated with a first user access level. The management operation is forwarded to the approval module. The management operation is evaluated to determine an approval status the evaluation based on the first user access level and the management operation. Based on the evaluation an approval status is provided.

Referring to shown is an example of an embodiment of a computer system that may be used in connection with performing the techniques described herein. The computer system includes one or more data storage systems connected to server or host systems through communication medium . The system also includes a management system connected to one or more data storage systems through communication medium . In this embodiment of the computer system the management system and the N servers or hosts may access the data storage systems for example in performing input output I O operations data requests and other operations. The communication medium may be any one or more of a variety of networks or other type of communication connections as known to those skilled in the art. Each of the communication mediums and may be a network connection bus and or other type of data link such as a hardwire or other connections known in the art. For example the communication medium may be the Internet an intranet network or other wireless or other hardwired connection s by which the host systems may access and communicate with the data storage systems and may also communicate with other components not shown that may be included in the computer system . In one embodiment the communication medium may be a LAN connection and the communication medium may be an iSCSI or Fibre Channel connection.

Each of the host systems and the data storage systems included in the computer system may be connected to the communication medium by any one of a variety of connections as may be provided and supported in accordance with the type of communication medium . Similarly the management system may be connected to the communication medium by any one of variety of connections in accordance with the type of communication medium . The processors included in the host computer systems and management system may be any one of a variety of proprietary or commercially available single or multi processor system such as an Intel based processor or other type of commercially available processor able to support traffic in accordance with each particular embodiment and application.

It should be noted that the particular examples of the hardware and software that may be included in the data storage systems are described herein in more detail and may vary with each particular embodiment. Each of the host computers the management system and data storage systems may all be located at the same physical site or alternatively may also be located in different physical locations. In connection with communication mediums and a variety of different communication protocols may be used such as SCSI Fibre Channel iSCSI and the like. Some or all of the connections by which the hosts management system and data storage system may be connected to their respective communication medium may pass through other communication devices such as a Connectrix or other switching equipment that may exist such as a phone line a repeater a multiplexer or even a satellite. In one embodiment the hosts may communicate with the data storage systems over an iSCSI or a Fibre Channel connection and the management system may communicate with the data storage systems over a separate network connection using TCP IP. It should be noted that although illustrates communications between the hosts and data storage systems being over a first connection and communications between the management system and the data storage systems being over a second different connection an embodiment may also use the same connection. The particular type and number of connections may vary in accordance with particulars of each embodiment.

Each of the host computer systems may perform different types of data operations in accordance with different types of tasks. In the embodiment of any one of the host computers may issue a data request to the data storage systems to perform a data operation. For example an application executing on one of the host computers may perform a read or write operation resulting in one or more data requests to the data storage systems .

The management system may be used in connection with management of the data storage systems . The management system may include hardware and or software components. The management system may include one or more computer processors connected to one or more I O devices such as for example a display or other output device and an input device such as for example a keyboard mouse and the like. A data storage system manager may for example view information about a current storage volume configuration on a display device of the management system provision data storage system resources and the like.

In one embodiment the one or more data storage systems of may be a data storage array or an appliance with hardware and software for hosting the data storage of the one or more applications executing on the hosts . The appliance may include one or more storage processors and one or more devices upon which data is stored. The appliance may include software used in connection with storing the data of the hosts on the appliance and also software used in connection with configuring the data storage for use by the hosts in connection with techniques described herein. As an example in connection with an email application server component that may executed on the hosts the data storage configuration tasks may include allocating storage for user accounts or mailboxes specifying the devices logical and or physical used to store the email data specifying whether data replication is performed for disaster recovery and the like. Techniques that may be used in connection with performing data storage configuration and configuration tasks are described in more detail in following paragraphs in order to provide ease of use to customers of the data storage system s .

In connection with an embodiment in which the data storage is an appliance including hardware and software the appliance may also include other software for performing different data services. For example the appliance may include backup server software which interacts with software on the hosts when performing a backup operation.

In another embodiment the data storage systems may include one or more data storage systems such as one or more of the data storage systems offered by EMC Corporation of Hopkinton Mass. Each of the data storage systems such as a data storage array may include one or more data storage devices such as disks. One or more data storage systems may be manufactured by one or more different vendors. Each of the data storage systems included in may be inter connected not shown . Additionally the data storage systems may also be connected to the host systems through any one or more communication connections that may vary with each particular embodiment and device in accordance with the different protocols used in a particular embodiment. The type of communication connection used may vary with certain system parameters and requirements such as those related to bandwidth and throughput required in accordance with a rate of I O requests as may be issued by the host computer systems for example to the data storage systems . It should be noted that each of the data storage systems may operate stand alone or may also be included as part of a storage area network SAN that includes for example other components such as other data storage systems. Each of the data storage systems may include a plurality of disk devices or volumes. The particular data storage systems and examples as described herein for purposes of illustration should not be construed as a limitation. Other types of commercially available data storage systems as well as processors and hardware controlling access to these particular devices may also be included in an embodiment.

In such an embodiment in which element of is implemented using one or more data storage systems each of the data storage systems may include code thereon for performing the techniques as described herein for processing a data storage configuration request.

Servers or host systems such as provide data and access control information through channels to the storage systems and the storage systems may also provide data to the host systems also through the channels. The host systems may not address the disk drives of the storage systems directly but rather access to data may be provided to one or more host systems from what the host systems view as a plurality of logical devices or logical volumes LVs . The LVs may or may not correspond to the actual disk drives. For example one or more LVs may reside on a single physical disk drive. Data in a single storage system may be accessed by multiple hosts allowing the hosts to share the data residing therein. An LV or LUN logical unit number may be used to refer to the foregoing logically defined devices or volumes.

In following paragraphs reference may be made to a particular embodiment such as for example an embodiment in which element of is an appliance as described above. However it will be appreciated by those skilled in the art that this is for purposes of illustration and should not be construed as a limitation of the techniques herein.

Referring to shown is an example of components that may be included on the data storage system and the management system . The management system may include a web browser which is used when communicating with the element manager EM of the data storage system . The EM may be used to perform operations in connection with management configuration monitoring and the like of the data storage system. For example the EM may be used to provision storage used by any one or more different applications such as an email application a database application and file server and the like. As described herein the EM may also be used to facilitate interactions with environments and locations external to the data storage system and management system such as other computer network locations. In other words the EM may be used to facilitate communications with other locations and environments external with respect to the data storage system environment in which the data storage system environment may include for example one or more data storage systems the management system a SAN and the like.

The EM includes a user interface UI a management component and one or more layers or levels of services such as and in connection with implementing a data storage request such as a data storage configuration or data storage provisioning request.

The user interface UI may provide for one or more different types of user interfaces and associated data. For example the UI may provide support for a graphical user interface GUI command line interface CLI and the like to support interactions between the data storage system and the hosts of . The UI may interact with other components on the data storage system in connection with communicating with a user. For example the UI may provide UI data e.g. content or data used to populate the UI menus and UI presentation or structure information e.g. command organization or particular hierarchical menu structure to another component such as the web browser in connection with interacting with the user. This is described in more detail in following paragraphs for use in connection with the techniques herein where the UI may be customized and adapted for use with each particular user different levels of knowledge and expertise and or different desired levels of automation that may be performed in connection with implementing a data storage operation request in accordance with best practices. Information for each particular user may be stored in a location represented by element . As will be described in more detail below element may include one or more types of user information such as for example user preferences and information generally usable in connection with the techniques herein to provide one or more customized user interfaces for each user of the data storage system .

The management component may be used in connection with facilitating communications between the UI and the different service layers and when performing element management operations. In one embodiment element management operations may be characterized as those involving interactions with environments and locations internal and or external to the data storage system environment. Such external environments and locations may include for example other network locations and websites as described elsewhere herein. The management component may facilitate a two way communication flow of information to and or from the external environments.

In the example the component is represented as a single logical component. However an embodiment may integrate the operations and functionality of the component in the UI and or other components included in the EM .

It should be noted that there are two paths and illustrated in . The path may be used in connection with those operations involving interactions with environments external to the data storage system. The path may be used when performing operations that do not involve such interactions with environments external to the data storage system and management system . For example the path may be used in connection with performing a data storage configuration request issued by a user from the management system . The path may be utilized if an operation or condition occurs involving the EM component such as when the user requests connection to a website on the Internet for additional information and assistance with respect to an error that occurred as a result of the data storage configuration request.

In the example the EM may include application services intermediate or generic storage services and physical storage services . In one embodiment the user may interact with the UI communicating directly with any one of the different services and . In other words a user may communicate directly with layer or . If a user provides an input request and or data by directly communicating with one of the upper service layers such as the user request and or data may be mapped to one or more lower service requests such as by services of communicating with services of and or to implement the original input request. By connecting to the different service layers and the UI may provide the user with exposure to different levels of abstraction in connection with performing data storage system management tasks. In one embodiment as described in more detail below the different service layers may be in accordance with different levels of proficiency and knowledge with respect to performing data storage system management tasks for different applications.

The application services may have an application specific focus and provide a level of abstraction customized for an application such as for example a particular email application law office application or medical office application as well as a class of related applications such as multiple email applications. The application services layer may map the user provided inputs for use by the intermediate storage services . When a user interacts with the application services for a particular application the interface language may vary with the application. For example if the application is a law office application the interface language menu options and the like may be tailored to the law profession. Similarly a medical office application may utilize an interface language menu options and the like familiar to the medical office. As such the application services may use one set of rules or mappings for each application to implement the application specific best practices for the user level. A first set of rules for the medical office application may be used to map the user input parameters using medical office terminology to parameters for the appropriate API calls for other services included in and or . A second set of rules for the law office application may be used to map the user input parameters using law office terminology to parameters for the appropriate API calls for other services and or . The user connecting to the data storage system at the application services may be provided with a user interface customized for the selected level and application to perform a requested data storage configuration.

The intermediate storage services may be an intermediate level. The application services may communicate with the intermediate storage services when implementing a request for data storage configuration. In one embodiment a user connecting to the intermediate storage services may be provided with a generic level of interaction which may not be tailored for the particular application. In other words the same language and user interface may be presented to a user for multiple applications such as the medical application or law office application. As a variation to the foregoing the intermediate storage services may be customized for each application and provide for a more detailed level of exposure that varies per application.

The physical storage services provide the most detailed or greatest level of exposure of the underlying data storage system. The physical storage services may be customized for the particular storage vendor and associated options. The user interface for a user connected at to the physical storage services may include menu options and terms particular to the underlying storage vendor and the more knowledgeable user. For example the user may specify particular devices RAID levels and techniques file types SCSI and iSCSI terminology and the like.

As an example in connection with a user making a data storage configuration request and communicating with the application services the user may input data in connection with the request in an application specific context. For example a user may make a data storage configuration request to configure or provision data storage for a file system or email application. The data input by the user may be in the context of the particular application e.g. a number of mailboxes size of mailbox storage group and the like . The application specific data received by the application services may be mapped to one or more application neutral or generic requests to the intermediate storage services . The intermediate storage services may then make one or more calls to the physical storage services to implement requests in the context of the physical storage devices for example for the particular data storage vendor and underlying hardware.

Software executed on the data storage system may provide for implementation of best practices for data storage configuration and data services in accordance with each particular application whose data is hosted on the data storage system. Such software may be included in the different service layers such as and of the EM and are described in more detail below and also in U.S. patent application Ser. No. 11 824 578 filed Jun. 29 2007 APPLICATION AWARE STORAGE which is incorporated by reference herein. In such an embodiment using the different service layers such as and having an application specific focus with each layer providing a different level of abstraction customized for each application the UI may provide a user with different levels of exposure to information and requests when performing data storage system configuration tasks.

It will be appreciated by those skilled in the art that an embodiment may include different service layers in connection with performing the techniques described herein.

It should be noted that the example is one possible embodiment of the components used in connection with the techniques herein. As illustrated in the EM is included in the data storage system. In another embodiment using the techniques herein the EM may be installed and execute on a host or other component connected to the data storage system. In yet another embodiment portions of the EM such as the UI and or one or more of the services may be installed and execute on a host or other component connected to the data storage system.

Referring to shown is an example representation of components that may be included on the data storage system for use in performing the techniques herein for data storage configuration and other tasks that may be performed in connection with a data storage system. The example includes the user interface UI one or more levels of service providers and adapters . In the example the element includes 3 service provider layers or levels . It should be noted that although 3 service provider levels are shown in an embodiment may include any number of service provider levels.

It should be noted that the different service providers provide a more generalized representation of and as illustrated and described in connection with .

The adapters are used in connection with facilitating communications between the service providers such as the level 3 service provider and other components. The different service providers included in the example may be able to communicate directly with one another. However when one of the service providers at one of the levels communicates with another component other than one of the service providers an adapter may be utilized. An adapter may be characterized as a layer of software between one of the service providers such as service provider and another component such as a lower level component invoked to implement data storage platform specific functionality. An adapter may convert a service provider API to the API of another component. As an example the service provider may perform a call to an external component to create a file system. An adapter may be used as an intervening layer between and the external component in which the adapter converts the API call from to the API of the external component. The conversion may include for example mapping parameters between the API calls performing multiple calls to the external component for the one API call from and the like. It should be noted that an adapter may not utilized if such conversion is not needed.

As mentioned above the user interface UI provides for one or more different types of user interfaces and associated data. For example as mentioned above the UI may provide support for a graphical user interface GUI command line interface CLI application programming interface API and the like to support user interactions such as a data storage administrator in connection with performing different tasks. Each of the different service provider levels of may be used in connection with a UI associated with that level to provide a different logical view and level of abstraction with respect to a data storage configuration task to be performed for an application executing on one of the hosts. In connection with the techniques herein a user may interact through the UI with any one of the different levels of service providers when performing data storage configuration requests. Interfaces used in connection with each of the service providers of may provide a different level of detail or abstraction with respect to the underlying operations and tasks performed on the data storage system in accordance with different levels of user sophistication and knowledge. As will be described in more detail below the language or terminology UI data e.g. content or data used to populate the UI menus and UI presentation or structure e.g. commands presented or particular hierarchical menu structure may vary in accordance with the particular level of service provider selected by the user. Thus a user may interact with the data storage system at a variety of different levels when issuing data storage configuration requests for the same application. The UI may be customized for the particular level and application for which the request is performed.

In an embodiment the UI may be characterized a set of different user interfaces that may vary depending on the target user and associated user level at which the user interacts with the system. As described in more detail in following paragraphs each level may provide a different user interface for a different level of user interaction and level of knowledge and sophistication. Each level may also be associated with a different level of automation of the best practices for example with users interacting at level 1 obtaining the greatest amount of automation of best practices and users interacting at level 3 obtaining none or a minimal amount of automation. The UI may provide multiple different user interfaces in accordance with the different levels allowing a user the option of connecting and interacting with the data storage system at any level. By allowing a user to select a level of interaction and automation the techniques herein provide a user with a flexible approach to choose deeper levels and entry points e.g. level 3 providing less automation and more detail as well as selection of other levels e.g. level 1 when greater automation of best practices is desirable.

For example level 1 service provider may provide a beginner or most simplistic view of the data storage system and tasks performed for data storage configuration. Interaction with the level 1 service provider requires the least amount of knowledge and may be geared toward interacting with users having minimal knowledge when performing a data storage configuration request by providing the greatest level of abstraction of the underlying system and operations performed. The language may be more non technical in comparison to the interface language of other levels. As the level increases so does the assumed level of knowledge of the user in connection with interactions. Level 3 service provider in the example may be utilized by the most knowledgeable users providing a greatest granularity of control of all levels in connection with a data configuration request. Level 3 exposes more detailed information to the user than interactions at levels 1 and 2. As an example a level 1 user may issue a data storage configuration request to provision storage for a number of mailboxes for storing data of an email application executing on one of the hosts. The level 1 user may specify a minimal amount of information in connection with the request such as only a number of mailboxes. A user may interface with the data storage system using a GUI and issue the data storage configuration request. The language and terminology of user interactions via the GUI may be customized for the level 1 user of the email application. In connection with the same email application a more knowledgeable user may choose to issue a data storage configuration request via a GUI for a same number of mailboxes by interacting with level 3 service . At level 3 the user provides more detailed information about the request regarding the underlying data storage device and how this data storage device is used by the application. To further illustrate the level 3 data storage configuration request may specify the physical and or logical devices upon which storage is allocated provide vendor specific attributes or settings indicate a number and type of file created and the like. In connection with the type of file created this may be particular to the email application. A file may be a database or a log file. The log files are used to keep a record of transactions taking place and may be used in connection with recovery operations. The database files hold mailbox stores such as email data. In connection with the user communicating with the level 1 service provider such detail is not provided and defaults may be specified by the data storage system when implementing the level 1 data storage configuration request. The defaults may be customized for the particular application.

When implementing the request the level 1 service provider may communicate with one or more other level service providers such as and . Different defaults for the particular application may be used by service providers and . For example with reference to the level 1 request for the email application described above the level 1 service provider may communicate with the level 2 service provider . Provider may then communicate with the level 3 service provider to implement the request and allocate the requested storage along with specifying other defaults such as for example a default level of data protection. The service provider may communicate with other data storage system hardware and or software when implementing the configuration request.

As illustrated in the example a service provider at a level n may generally communicate directly or indirectly with one or more other service providers at levels lower than level n when processing a data storage configuration request. A user may select the level of interaction and the user s data configuration request is received at the data storage system by the UI . The UI in turn communicates with the appropriate level service provider to initiate the request. Furthermore a request received at a first level can result in multiple requests to a lower level to perform an operation. For example a user may connect to the data storage system at level 1 . In response the level 1 service provider may issue more than one request to provider . In turn each request to provider may result in one or more requests to provider which in turn communicates with adapters and other code modules to perform the requested operation.

The data storage configuration request may identify the user e.g. by user identifier or other authentication information the application for which the request is being made and any user selections or input parameters.

In one embodiment the service providers may be code modules which are included in the same appliance. Each of the service providers may provide a published interface or API application programming interface . A first service provider at level n may issue a request of another lower level service provider by issuing an API call to the lower level service provider. The API may also be used to facilitate communications between the UI and the different level service providers of . As described in more detail in following paragraphs an API call from a first service provider to a second service provide may use rules or mappings to map the data received by the first service provider to the appropriate API call with parameters and any defaults in accordance with the received data. Thus the rules or mappings may be used to map between levels of abstractions of the different service providers.

Although an embodiment may have all service providers located in the same appliance or other component the service providers may be characterized as remotable. One or more of the service providers may be located on different components having connectivity so that the API calls between service providers may be remote API calls as well as local API calls e.g. service providers on same component . As an example an embodiment may have multiple data storage systems included in a network. Each of the service provider may be located on a different data storage system.

An embodiment may determine the level at which a user interacts with the system using a variety of different techniques. With reference to a user may be allowed to interact at any of the 3 levels. The menus may be directed to a level 1 user. The user may select whether to interact at a lower level by selecting further detailed menu options providing more detailed information at lower levels. As a variation a user may have associated roles or permissions. If the user does not have the associated roles or permissions to perform operations or view such detailed information associated with particular levels the associated menu options wizards and the like may not be displayed or may otherwise be disabled when interacting with the particular user.

As a variation to the foregoing the levels exposed to a user may be limited in that a user may not be allowed to interact with one or more lower levels. For example user interaction with the data storage system may start at level 1 and provide wizard or other menu options for more detailed selection by the user for level 2. However information and interactions at level 3 may never be exposed if the product is intended only for a certain level of users or a particular target market. In other words the capability to drill down and interact may be limited to only levels 1 and 2 but not level 3.

As will also be described in more detail below an embodiment may also utilize user preferences to determine the initial or default level of interaction and exposure. For example user preference settings stored on the data storage system or on the host may specify a default level used for the user interface menus language and the like. No further detailed buttons or drill down capabilities may be provided via the interface unless the user changes his her preferences and selects to apply such preferences. In such an embodiment the user interface may be presented from a viewpoint of the user preferences having content structure and an interface language terminology in accordance with the selected level. The user preferences may be stored as configurable parameters or options on the appliance or remotely located such as on the host workstation for use with a browser and the like. For example the configuration file for the users may be stored on the host or workstation having a web browser. Code executing on the host or workstation may read the configuration file and communicate the preferences to software on the appliance or other data storage system providing data for populating and presenting the user interface. A user may change the preferences via menu options directly editing a configuration file and the like. As a user gains experience and knowledge a user may select to interact at a lower level for some or all requests. As will also be described below an embodiment may provide for automatically adjusting the UI and level at which a user interacts at a first point time based on one or more user interactions prior to the first point in time.

Referring to shown is an example illustrating how the different service providers of may be used to perform the mapping between levels to perform a data configuration request and also provide different levels of user interaction.

Elements and correspond to the different levels of service providers described in connection with . Elements and represent the information obtained via the UI at the various levels and service providers. Element represents the information obtained for a user connected at level 1 to service provider . Element represents the information obtained for a user connected at level 2 to service provider . Element represents the information obtained for a user connected at level 3 to service provider . Information obtained by a user at level n may be subsequently passed on via an API call to one or more other lower level e.g. greater than n service providers in order to perform the user request.

Element may also represent the information communicated by the service provider after the provider applies mapping rules to resulting in an API call of the form as illustrated in . Element may represent the information communicated by the service provider after the service provider applies mapping rules to resulting in an API call of the form as in

With reference to the example if a user interacts with the system at level 1 the application service provider obtains the data included in which is passed on in form to provider as illustrated by . Provider in turn maps data from form to the form of to provider as illustrated by . If a user interacts with the system at level 2 the intermediate service provider obtains the data included in and passes the data of to provider in the form represented in . If a user interacts with the system at level 3 the physical storage service provider obtains the data from the UI in the form . In this example the provider may implement or execute the one or more operations to perform the request indicated by by invoking one or more other code modules . The code modules may communicate with other components on the data storage system to perform the requested task.

In one embodiment the UI of may query each service provider to obtain the appropriate UI data and via API calls in accordance with a user selected or specified level of interaction using any one of a variety of different techniques as described herein and known to those skilled in the art. The UI data and may be used to populate the menus and other UI elements that may be displayed to a user in accordance with the particular level of user interaction for that particular user.

The example illustrates the user inputs for creating a file system for an application with interactions at the various levels 1 3. Element illustrates the input received from the most basic user level 1 in which the user may enter a command to create a particular file system. The file system created with user level 1 interactions uses all default options specified via mapping rules and API calls to levels 2 and 3. For level 2 the parameters input from the user or received via mapping and an API call from level 1 are illustrated in . By default parameters related to size e.g. SIZE size device speed e.g. QOS FAST wherein QOS is quality of service and data protection e.g. REDUNDANT are specified. At level 2 there is a level of abstraction from the underlying data storage system but the attribute characteristics may be specified. For level 3 the parameters input from the user or received via mapping and an API call from level 2 are illustrated in . At level 3 details regarding the underlying data storage system such as devices RAID levels vendor specific attributes which file system e.g. NFS CIFS or block storage and the like are specified. For example level 2 indicates that storage for the file system is to be located on a FAST device. Level 3 mapping rules map the abstract FAST attribute to the particular device e.g. LUN s on the data storage system that may be characterized as FAST with respect to other data storage devices . As more physical devices and or logical devices added which are also FAST different LUNs may be used and specified by the mapping rules without any change in the data of . Thus data obtained from users interacting at level 1 and 2 need not change as the underlying data storage system changes when devices are added removed.

In connection with the bottom most level service provider or service provider associated with the greatest level of user knowledge and detail may optionally not include and utilize rules . An embodiment may have the language of the user interface map directly with low level calls to code modules to implement the request. In other words the language terms and parameter values specified by the user at level 3 may not require mapping in order to be utilized by the system.

As will be appreciated by those skilled in the art the examples such as those of and following may be simplistic for purposes of illustration of the techniques herein. At lower levels there may be greater amounts of detail and complexity in order to provide automation of the best practices.

Referring to shown is another representation of the mapping of the different parameters that may be performed by the rules of the different service providers. The example further illustrates the parameter mapping between levels. Element represents the data obtained by service provider . Element represents the data obtained by service provider via direct user interaction or from provider . Element represents the data obtain by service provider via direct user interaction or from provider . The FILESYSTEM type is passed as a parameter from level 1 to level 2 and then passed to level 3 . Level 1 mapping rules may define defaults based on best practices for the particular application as indicated by the parameters SIZE size specifying a default size for the file system and QOS FAST REDUNDANT specifying default quality of service QOS parameters for a fast device with redundancy. Level 2 mapping rules map the parameters of to parameters of as indicated by and . Additionally level 2 mapping rules introduce additional default parameter values as indicated by element when interacting with level 3.

As described herein the user can connect and interact with the data storage system at various levels to perform different operations and tasks such as data configuration and provisioning requests and other data storage management tasks. The user system administrator and the like may select the level of interaction that can vary with each request. The mapping rules provide for specifying any defaults that may be needed to implement the request. When implementing a same data configuration request for different applications the defaults introduced at one or more levels may vary with application. The mapping rules at the different levels allow for implementation of best practices while insulating and abstracting the details from the user. For example the rules used by the application service provider of may be used to implement application specific best practices. The rules used by the intermediate storage service provider may be used to implement best practices with respect to the underlying data storage system. As such using the techniques herein a framework may be defined which provides customized interfaces for different user levels of interaction with respect to a particular application when performing a data service or other request in connection with data storage configuration and or management for the particular application. Rules included in the framework may be selected for use depending on the application data service task or operation and defined set of one or more user groupings. A user grouping may be defined as a set of one or more user levels and associated service providers. For example illustrates a single user grouping of 3 levels. A data service may be defined as a particular service performed in connection with a data storage configuration request.

In connection with the different one or more user groupings each corresponding to a different user level and associated service provider as described above a different UI may be presented to the user. In particular with reference to where there are 3 levels a user interacting at level 1 may be a novice user and may be presented with a UI in which the user provides a name for the file system and no other parameters as indicated by . A user interacting at level 2 may be an intermediate user and may be presented with a UI in which the user provides parameters of a file system name size and attributes relates to QOS of fast and redundant of . A user interacting at level 3 may be an expert user and may be presented with a UI in which the user provides parameters of a file system name size LUNs RAID level and other file attributes and or vendor specific storage attributes of . The different UIs associated with a user grouping for example to perform a particular task or data service for an application may be referred to as a UI set.

In connection with the customized UIs that can be provided to a user the user may have a different level of expertise in connection with different applications data services or tasks and the like. Thus it may be desirable to provide customized UI selection for each user and also provide a further granularity of UI customization for each user by allowing different UIs and levels of interaction for each user in accordance with each possible UI set or user grouping. For example an embodiment may have a first UI set of 3 possible UIs and corresponding levels of interaction as described in connection with . The first UI set may be used in connection with performing data storage provisioning for an email application. Similarly there may be a second UI set of 3 possible UIs and corresponding levels of interaction as described in connection with . The second UI set may be used in connection with performing data storage provisioning for a database application. A user may be a novice in connection with provisioning storage for use with the email application and the user may choose to interact with the system at the novice level 1 using the associated level 1 UI. That same user may also be an expert in connection with provisioning storage for use with the database application and the user may choose to interact with the system at the expert level 3 using the associated level 3 UI. What will be described in following paragraphs are techniques that may be used in connection with providing for each user customizable UI levels for different tasks applications and the like as may be associated with different UI sets.

As described herein a different UI set may be associated with each unique combination of application data service or task and the like. As such a single user may have a different knowledge level and or otherwise may have reason to vary a level of interaction when performing operations associated with each UI set. For example a different UI set may be associated with each of the following issuing requests in connection with provisioning or configuring storage for a particular email application provisioning or configuring storage for a particular database application monitoring a data storage system migrating data diagnosing system problems adding or expanding data storage capacity such as adding a new device destroying or removing data storage capacity such as when removing an existing device providing data storage protection such as through redundancy servicing the data storage system such as by applying software upgrades patches and the like. A single user may have a different level of expertise and interaction when performing requests associated with each of the foregoing UI sets. What will be described in following paragraphs are techniques that can be used to track and manage the different customized levels and associated UIs for each user.

Referring to shown is an example of information that may be associated and stored for a particular user in connection with the techniques herein. The example illustrates user information that may be maintained for a single user John . The information is represented in tabular form for purposes of illustration only and can actually be stored in any organization using any data structure and in any data container storage or repository known in the art. Information of for each user may be stored for example in a data storage location including user information as represented by element of for use in connection with the techniques herein for providing different levels of customized UIs and user interactions. The table may include a row for each possible UI set that may be available to a user. For each possible UI set a corresponding UI level may be specified. Table includes a column of UI sets and corresponding levels in column . For an entry or row in the table the level indicated in column may specify a level of user interaction when performing operations and issuing requests for the application task and the like associated with the UI set in column . With reference to the example John is an expert e.g. level 3 at performing tasks and issuing requests associated with UI sets for and but is a novice e.g. level 1 when performing tasks and issuing requests associated with UI sets for and . It should be noted that a blank entry may mean to use some system or other default level or may otherwise indicate that user John is not allowed to view or perform operations using the UI set. Table may be initialized for example by an administrator for user John as part of account management and or creation.

Referring to shown is an example illustrating how each UI set may be specified and how a particular UI presented for a particular user may be selected. Element is a general representation of the foregoing and element is an example of how a UI may be selected and presented in connection with user John having user information as described in connection with . In other words element is a particular instance of the more general representation of element .

Element represents how a UI set may be determined. Element includes a function F which may have one or more input parameters such as APP application TASK task or operation type and the like. F may have one or more dimensions or parameters although two are illustrated herein. For each unique possible combination of input parameters a different UI set or value for may be determined. The UI set may be an input to another function F represented by to select a particular UI for use in connection with user interactions. F may have input parameters of UI set user and level used to select a UI presented for use when interacting with a particular user. Element includes elements and . Element illustrates that a UI set may be associated with a particular combination of APP application and TASK where the application is a database application DB APP and the task is to provision or configure storage Provisioning for the database application. Element may be for example an identifier uniquely identifying the UI set e.g. set of UIs for the different levels of interaction of possible UIs for the particular input parameter values of F illustrated in . For example the UI set identified by may include 3 possible UIs for each of the 3 different levels illustrated in . Element may represent how one of the UIs of the UI set is selected for the particular user. In this example of values from entry of table of are used to select the UI of the UI set corresponding to the expert level 3parameter of F for user John second parameter of F .

Referring to shown is an example representation of multiple instances of user information that may be logically organized and stored for each user. The example includes a table of multiple users. Each user is indicated by a separate entry in the table . Associated with each user entry of table is an instance of the user information as included in the table of . The instances of user information are denoted as and are associated with a particular user as indicated by the corresponding arrows . Information of example may be stored in the location represented by element of .

Thus the example represents one way in which user information may be logically organized in connection with providing customized UIs for each user for the different UI sets and associated applications tasks and the like that may be performed by each user.

An embodiment may also use other user information in connection with providing customized UIs for each user that will now be described.

Referring to shown is an example of information that may be associated and stored for a particular user in connection with the techniques herein. The example illustrates user information that may be maintained for a single user John. An embodiment may use the information of rather than the information described in connection with for each user.

Element may represent information that may be specified in connection with initializing the table of user information . Element may include an identifier specifying a particular user a level indicator and a max maximum level . Element may identify a particular level of interaction such as novice level 1 or expert level 3 . Element may also optionally include a UI extension indicator such as a sign. The extension indicator indicates that the specified level is a starting level and that the user may be allowed to use the UI at levels higher than that as indicated in . The level indicated in in this example is Novice and may specify a starting or default level which is used in initial presentation and interactions with John during a session. A session may be defined for example as a set of interactions associated with a user when logged on to the system. The session may terminate when the user logs off or the session may be otherwise terminated. Although a is used herein for purposes of illustration other elements characters and the like may be used to represent when a UI extension indicator is specified. Element specifies an optional maximum UI level. Element may be characterized as a cap or maximum UI level that may be presented and accessible to the user John. To further illustrate if the UI extension indicator is omitted John may only have access to UI level Novice. When the is specified the UI displayed initially may be associated with the Novice level and John may be able to utilize UIs associated with one or more levels higher than Novice e.g. UIs associated with levels indicating more experienced user levels than Novice . Max level indicates that John may be allowed to display and interact at any level between novice as indicated in up to and including expert as indicated by

Element represents a table of user information indicating a UI set and corresponding level similar to that as described in connection with table of . In this example however the level may specify one of the possible levels of interaction associated with a UI set of and may also optionally include the UI extension indicator . An administrator may for example specify the data of which may then be used to initialize or populate the table of for a particular user. After initialization the table may then be optionally modified or further customized for the user John via manual and or automated techniques. Examples of automated customization are described in more detail in following paragraphs. The user information may be customized for example by changing a level of and or adding removing the UI extension indicator for an entry in .

The data of may be specified when first creating the table for a user. The data of may also be optionally stored for further use for example if additional UI sets are added for use with the techniques herein.

As a variation to the foregoing each entry in the may include a max level rather than have a single max level associated with a user as indicated by .

Referring to shown is an example representation of multiple instances of user information that may be logically organized and stored for each user. The example includes a table of multiple users. Each user is indicated by a separate entry in the table . Associated with each user entry of table is an instance of the user information as included in the table of . The instances of user information are denoted as and are associated with a particular user as indicated by the arrows . Information of example may be stored in the location represented by element of .

Thus the example represents another way in which user information may be logically organized in connection with providing customized UIs for each user for the different tasks that may be performed by each user.

In connection with the foregoing description the UI extension indicator e.g. may provide for dynamic extension of the UI for the associated user. In contrast omitting the UI extension indicator may provide for static UI specification for a particular user. When the UI extension indicator is specified in an entry of a user information table the default or starting UI level may be adjusted manually and or automatically using other techniques described in more detail below.

What will now be presented is a more detailed example with associated UIs that may be displayed in connection with user John having a table of user information as described in table of . With reference back to John may be interacting with the data storage system to perform provisioning and data storage configuration for an email application so that entry of table is used to determine the appropriate UI displayed and level of user interaction. As indicated by John has a starting or default level of Novice and the UI display may be initialized accordingly.

Referring to shown is an example of a UI that may be displayed in connection with a session for user John based on entry of . The current default or starting level of novice is indicated by the highlighted novice tab . Since the UI extension indicator is specified in indicating additional levels of allowable or possible UI exposure additional tabs associated with higher levels intermediate and expert are also displayed. Since the max level for user John as indicated by of is expert both tabs and are displayed and may be selected by user John. As a further illustration if instead the max level of for John was intermediate an embodiment may choose to omit displaying and or otherwise making available for selection the expert tab . An embodiment may also have the expert tab included in the display based on previous user interactions with John for example indicating that John has knowledge and is capable of performing operations at the intermediate level. In connection with the novice or level 1 UI only a single parameter may be specified. John may enter a value for indicating a number of mailboxes Mboxes for which storage will be provisioned. After entering the value in John may select OK in order to submit the desired provisioning request for approval.

The example also includes an option which provides for making the currently active UI level as indicated by the bolded tab the default or starting level of interaction. Thus a user may select to manually change the starting level of UI interaction for the UI set by selecting . For example selection of 904 for user John would cause entry of table to be updated so that column may indicate Novice as the starting or default level if it not already so specified.

Although the display of the example may be initially presented to John John may also select to not interact at level 1 Novice and may select another one of the tabs or to perform a provisioning request for additional mailboxes. John may select tab intermediate causing an update to the UI display as indicated by .

Referring to shown is an example of a UI that may be displayed in response to John selecting the intermediate tab. The currently active tab is indicated by the bolded tab . The UI may be updated to display additional fields associated with the intermediate level. A novice user may not have the knowledge about log files or performance parameters that may be associated and specified in connection with provisioning storage for use with the email application. Thus a novice user may opt to provision storage by specifying only the information for the parameter of . In accordance with techniques described herein other code included in the data storage system may be used to determine in accordance with best practices the other appropriate parameters for provisioning storage for the request. John however has chosen to interact with the system to perform the provisioning request at the intermediate level. The example displays information with the intermediate level of interaction and associated knowledge level. The intermediate level may for example assume that the user has additional knowledge beyond the novice and specifies the additional information of . In accordance with techniques described herein other code included in the data storage system may be used to determine in accordance with best practices the other appropriate parameters for provisioning storage for the request based on the inputs provided by John for and . Once John inputs values for and John selects OK and storage may be accordingly provisioned for the email application storage request and submitted for approval. As described above John may also select to make the intermediate level his starting or default UI level when performing email application provisioning requests.

An embodiment may also not allow John to select and update the starting UI level to intermediate by selection of until John has successfully completed a threshold number of one or more provisioning requests from the intermediate level.

As a variation to the foregoing example John may interact with the system at the novice level using the UI of . After John inputs a value such as 100 for the parameter in connection with interacting at the novice level as indicated in John may choose to not yet submit the request by selecting OK. Rather John may select the intermediate tab after entering a value in of resulting in the display of which is populated with the value as entered by John in and additional data values in automatically determined by the data storage system. The display of may include in portion corresponding data values determined in accordance with best practices by other code on the data storage system for the requested 100 mailboxes. In other words John may perform the foregoing to gain knowledge and insight into how to provision storage for mailboxes for the email application by viewing what the code on the data storage system determines as data values of in response to his entry of 100 mailboxes.

As mentioned above the default or starting UI level for a particular UI set may be updated automatically as well as manually e.g. such as via user selection of of . An embodiment may collect information in connection with a particular user s interactions and activities and update the user s default or starting level for a UI set. For example information regarding John s selections of the novice intermediate and or advanced tabs of may be collected. In response an embodiment may automatically update the starting UI level for that particular UI set. The automatic updating of the starting UI level for a UI set may be determined in accordance with one or more criteria such as for example John s manual selection to interact at a particular level the number of successful provisioning requests John performs at a level and the like. For example code may be executed to monitor the current UI level when John performs a provisioning request and when John has specified values for the parameters presented at a particular UI level. The code may also monitor whether the foregoing provisioning request was successful or otherwise results in an error. If the request is successful the starting UI level for that UI set may be accordingly updated to the current UI level associated with John s successful provisioning request e.g. entry column of may be accordingly updated . If the request results in error or failure then the starting UI level may not be updated e.g. entry column of will not be updated .

Referring to shown is an example of the user information table for user John which has been automatically updated in accordance with the techniques herein. Entry may be updated for example if John enters values for parameters at the intermediate level and after John s provisioning request made at the intermediate level has been deemed to successfully provision the requested storage for the email application. As described above code may perform the update in response to detecting that one or more criteria have been met events have occurred and the like that may be related to John s activity and interactions in connection with the associated UI set e.g. John s activity and interactions as related to the email application and the task of provisioning storage for the email application .

Thus use of the UI extension indicator for a particular UI set may provide for dynamic adjustment of a starting UI level for a user in accordance with manual and or automatic techniques as may be included in an embodiment.

The user information of table of and user information of table of may be used alone or in combination with additional user information specifying user roles and or permissions. In other words tables and may be used to indicate a first set of user information specifying UI levels and levels of user interaction for different UI sets. However the foregoing first set of user information may be used in combination with a second set of user information specifying roles and or permissions. This second set of information may be used to indicate which of the specified UI levels and levels of user interactions of the first set are allowable or possible.

Referring to shown is an example illustrating how a first set of user information indicating UI levels and levels of user interaction may be used in combination with roles and permissions. The example includes element which represents entry of table from for user John. Table includes different roles and permissions that may be specified for different users. Table includes a row or entry for each user. Element indicates that user John has a role of administrator in training and permissions indicated as follows L ALL L VIEW L VIEW. For purposes of illustration Ln refers to a particular level number of user interaction and UI level n. Also in this example novice corresponds to L intermediate to L and expert to L. John is allowed to perform all requests from L and only allowed to VIEW results from L and L. In other words John is not allowed to enter any input parameters at L and L and is not allowed to implement a provisioning request from L and L. John is only allowed to implement a provisioning request and modify parameters at L. John may input information associated with a request at L and then view the additional parameters associated with L and L as may be automatically determined by code in accordance with best practices. As such John may learn or gain knowledge for example by viewing the parameter values determined for L and L by the code implementing the best practices for the different requests. Entry indicates that user Alice is an administrator and is able to implement requests from all level L L and L. Entry indicates that user Ted is a contractor and is only able to view information at L and L. Ted is not allowed to implement or issue any requests from any level.

It should be noted that although the table specifies a set of permissions that apply to all UI sets an embodiment may also specify a set of permissions for each UI set or one or more UI sets.

In an embodiment using roles and permissions of table in combination with other user information for user John as indicated by John is able to view but not modify or otherwise issue provisioning requests from any UI level other than L novice. Thus the information of table may be used to indicate those requests which are allowable for a particular user.

Described above are some ways in which an embodiment may choose to automatically update a default or starting UI level for a UI set. Such an update may automatically be performed by code that monitors user activity collects data related to the user activity and performs analysis of the collected data. The foregoing update may be based on for example successful completion of a threshold number of requests issued from a particular level a number of successive user selections or some combination of the foregoing as well as other criteria that may be specified in an embodiment.

Referring to shown is an example representation of user preferences and collected information that may be used in automatically adjusting the starting or default UI level for one or more UI sets. The example includes a table of information that may be stored for each user indicated by . For each user user preferences and user activity information may be specified. The user preferences may include preferences specified by the user. In connection with the techniques herein a user may indicate whether the automatic adjustment of starting or default UI level is enabled disabled. User activity information may include one or more counters represented information collected in accordance with observed user activity. Information of may be further analyzed in connection with determining whether to automatically adjust a starting or default UI level. Information of may be used if the UI level of indicates that the foregoing automatic adjustment of starting UI level is enabled. In this example of there is a single or global indicator which may enable disable the foregoing automatic adjustment of starting UI level for all UI sets. However an embodiment may provide for a finer granularity of control by allowing enablement disablement specification for an individual UI set or groups of UI sets. The particular information collected in may vary with the criteria used to determine whether to automatically adjust a starting UI level for one or more UI sets. For example an embodiment may adjust the starting UI level for a UI set depending on whether a threshold number of successful requests have been performed by the user. The criteria for updating the starting UI level may also include that the foregoing requests be made in one or more sessions within a given time period and the like. Such information may be collected in as illustrated. At the start of each user session information of may be reinitialized. Other embodiments may use other techniques for data collection and analysis across multiple user sessions.

The information of may also be stored in a variety of different locations. In one embodiment the information associated with each user as represented in may stored in the location associated with element of .

What will now be described in connection with and is another example illustrating UIs that may be displayed and used in accordance with the techniques herein described above. Following figures and description make reference to a UI set including 3 UI levels in accordance with . The UI set may include 3 levels a novice level 1 associated with of an intermediate level 2 associated with of and an expert level 3 associated with of .

Referring to shown is an example of a UI that may be displayed in an embodiment in accordance with the techniques herein. Element represents information that may be included in an instance of a table of user information of specifying a starting level of intermediate and a UI extension indicator for the above UI set when issuing a request to provision storage for a file system. Element may represent permissions allowed for a user. Element may represent a UI initially displayed for the intermediate level corresponding to element of . Element may represent a menu that can be displayed by a user in making a selection for device type. Element may represent a menu that can be displayed by a user in making a selection for redundancy. Selection of the OK button may result in issuance and implementation of the request in accordance with the information on the display. However in connection with this example the user does not select at this time but rather inputs the requested parameters for file system size device type and redundancy.

It should be noted that each include an OK button which the user may select to issue and forward the request for approval. This is in accordance with the permissions of of . does not include an OK button in this example since for this particular user the user is only allowed to view information at the expert level 3. Furthermore the user may not be able to modify any values displayed in . The information of the UI of may be read only in this example. If Element of is modified to indicate L ALL then the display of may also include an OK button that may be selected to implement the request and the information of the UI of may also be accordingly modifiable by the user.

In connection with the UI extension indicator as described herein the examples have illustrated the user selecting to interact at higher levels of expertise or knowledge than the starting level. However it should be noted that specifying a UI extension indicator may also allow a user to interact at levels characterized as lower than e.g. associated with levels of greater abstraction than the starting level as well. For example referring back to a starting level of intermediate with the extension indicator in also allows a user to selectively interact at the novice level as well as the expert level. Specifying a starting level alone without the extension indicator may indicate that the user is only allowed to interact at the starting level. Alternatively an embodiment may also be implemented so that specifying the starting level without the extension indicator means that the user is allowed to interact at the starting level or other levels of greater abstraction requiring less knowledge and the like.

One use of the techniques herein provides for specifying a starting or default UI level for each UI set for a user. The starting UI level may be customized for each UI set for each user. The techniques herein also provide for adjusting or updating the starting UI level for a particular UI set for example as a user s proficiency increases. Automatic adjustment to the starting UI level may be performed automatically in accordance with criteria. Processing may be performed to automatically adjust a starting UI level for a UI set in accordance with criteria associated with the particular UI set. The foregoing criteria may be associated with performing operations selections tasks and the like possibly in connection with a particular application as may be associated with the UI set.

Accordingly implementing the techniques described above advantageously provide a way to present varying levels of access to varying levels management operation complexity based upon a user s permission level or functional role. Such access limitations may prevent unintended and at times potentially disastrous consequences. However such unintended consequences may still occur should a user provide incorrect parameters or simply select unintended settings by mistake.

Referring to shown is an example of components that may be included in the data storage system and the management system . The management system may include a GUI CLI which is used when communicating with the element manager EM of the data storage system . The management system may also include a task request that represents a management operation requested by a user. Such request may be provided using one of the various UIs described above with reference to and or . The management system may further include a job list that provides a configurable display of the status of a task or management operation request task and management operation may be used interchangeably herein . The EM may be used to perform operations in connection with management configuration monitoring and the like of the data storage system collectively management operation . The EM may be used to facilitate communications with other locations and environments external with respect to the data storage system environment in which the data storage system environment may include for example one or more data storage systems the management system a SAN and the like.

The user interface UI may provide support for a graphical user interface GUI command line interface CLI and the like to support interactions between the data storage system and the hosts of . The UI may interact with other components on the data storage system in connection with communicating with a user. For example the UI may provide UI data e.g. content or data used to populate the UI menus and UI presentation or structure information e.g. command organization or particular hierarchical menu structure to another component such as the web browser in connection with interacting with the user. This is described in more detail in following paragraphs for use in connection with the approval techniques described below where the UI may be customized and adapted for use with each particular user different levels of knowledge and expertise and or different desired levels of automation that may be performed in connection with approval levels for implementing a data storage operation request. Information for each particular user may be stored in a location represented by element . As will be described in more detail below in addition to the approval queue element may also include other types of user information such as for example user preferences and information generally usable in connection with the techniques herein to provide an approval process management operations associated with a particular user of the data storage system .

The management component may be used to facilitate communications between the UI and the different service layers and the approval module when performing management operations. The management component may facilitate a two way communication flow of information to and or from the external environments.

It should be noted that there are three sets of paths and illustrated in . The path may be used in connection with those operations involving interactions with environments external to the data storage system and path may be used when performing operations that do not involve such interactions with environments external to the data storage system and management system . Path allows direct communication between the approval module and or the UI and the management component . For example user task request may be received at the user interface wherein if for example a system administrator has requested a task be executed such task may be automatically approved and communicated to the approval module for execution in the data storage system . Alternatively a command may be received from a novice user whereby the guided GUI processes described above may be performed and as such the procedure may flow through the various components and .

In the example the EM may include application services intermediate or generic storage services physical storage services and approval module . In one embodiment a user may communicate directly with layer or . If a user provides a task request and or data by directly communicating with one of the upper service layers such as the user request and or data may be mapped to one or more lower service requests such as by services of communicating with services of and or to form the task request. By connecting to the different service layers and the UI may provide the user with exposure to different levels of abstraction in connection with performing data storage system management tasks. However regardless of which service level s the user communicates with all task are evaluated by the approval module to determine if such request are actually performs.

The application services may have an application specific focus and provide a level of abstraction customized for a particular application. The application services layer may map the user provided inputs for use by the intermediate storage services . A user connecting to the data storage system at the application services may be provided with a user interface customized for the selected level and application to perform a requested data storage configuration.

The application services may communicate with the intermediate storage services when providing a request for data storage configuration. In one embodiment a user connecting to the intermediate storage services may be provided with a generic level of interaction which may not be tailored for the particular application. Alternatively the intermediate storage services may be customized for an application to provide for a more detailed level of exposure that varies by application.

The physical storage services provide the most detailed or greatest level of exposure of the underlying data storage system. The physical storage services may be customized for the particular storage vendor and associated options. The user interface for a user connected at to the physical storage services may include menu options and terms particular to the underlying storage vendor and the more knowledgeable user.

As an example in connection with a user issuing a data storage configuration request and communicating with the application services the user may make a data storage configuration request to configure or provision data storage for a file system or email application. The application specific data received by the application services may be mapped to one or more application neutral or generic requests to the intermediate storage services . The intermediate storage services may then make one or more calls to the physical storage services to complete task requests in the context of the physical storage devices for example for the particular data storage vendor and underlying hardware. Once the task or management operation request is complete the request may be forwarded to the approval queue or directly to the approval module . The approval module may perform an evaluation of the request and if approved or modified the request is executed. If the request is denied by the system or a more senior user e.g. a senior administrator or other user with higher access privileges the request is rejected. An indicator indicating the result of the request evaluation may be provided and forwarded to the user via path through management component or and or UI for communication to and display in GUI CLI and or job list .

Other alternative embodiments illustrating a variety of user interaction scenarios using techniques implementing the approval based storage system are described below. However such examples should not be construed as limitations and other such examples may be provided.

A large data center usually has a number of different users performing a variety of different management operations on one or more data storage systems. Typically a senior system administrator oversees the storage system to ensure proper configuration and maximum performance operation. Junior administrators or other users may perform various management operations based upon for example their particular user access level. Thus as described above a particular UI may be presented to a particular user based upon that particular user s access or permission level. Typically senior administrators perform the more complex tasks and junior administrators or other users may be allowed to perform less complicated tasks. As used herein the terms senior administrator junior administrator and user are terms of convenience and are meant to indicate different levels of expertise and or user access or privileges levels. As such a senior administrator represents an expert user having the highest access or permission levels and is capable of executing most every command on the storage system. A junior administrator represents an intermediate user having mid level access or permission levels and a user indicates a novice user with an even lower or lowest access or permission level.

Advantageously techniques described herein allow offloading some less complicated day to day administration tasks from a senior administrator to a junior administrator or other lower level user. Examples include overall management of the system provisioning expanding storage creating shared folders and the like. Some low level management operations may be automatically approved based upon configurable approval criteria. Users or junior administrators may be allowed to request intermediate level management operations that can be placed in an approval queue for later review by the senior administrator. The senior administrator may approve approve with modification or reject user requests. Approved request may be forwarded for execution either immediately or queued for later execution as appropriate. The senior administrator may reject the request if it includes for example incorrect or invalid parameters or may result in a detrimental effect on the storage system. The senior administrator may also approve the management operation request after modifying one or more parameters.

In an example embodiment a junior administrator may open a GUI to perform various administrative tasks on the storage system as allowed based on their access permission level role or other functions that person is allowed to perform. Various commands may be entered via the GUI providing various options based upon the particular GUI presented to the junior administrator as a function of his her permission level similar to that described above. The GUI may also display the system in its current state available storage attached host etc. . Once the junior administrator completes the GUI parameter selection process they can submit the requested management operation for approval.

The senior administrator may receive an alert such as an e mail text pop up or other such alert indicating that one or more request is awaiting approval. The senior administrator may then access the system via for example a user interface configured for a senior administrator that will display a queue of pending requests and may further include additional details describing the requested tasks. The GUI may also provide system status and current configuration or settings associated with the requested task as well as additional information that may not be visible to the junior administrator such as potential system impact recommendations and the like.

The approval process can be automatic semiautomatic or require manual evaluation by a senior administrator. For example based on the junior administrator s current permission level and the particular task requested approval may be automatically provided without requiring manual evaluation by the senior administrator. Automatic approval may be provided for lower level task which can then be executed immediately or placed in a queue for later execution. For example a user may want to provision a 50 GB LUN in a standard storage pool having sufficient capacity. Alternatively or in addition such commands may be determined by the senior administrator by providing a rank order of commands or other indicator sufficient to identify an authorization level for such commands and corresponding permission levels corresponding to the user.

Other examples of commands that may be automatically approved include commands the user has successfully requested or executed in the past or commands associated with the users particular role or function. For example a user may be allowed to perform certain commands on a particular application such as an e mail application e.g. MICROSOFT exchange server whereas another user may be allowed to execute storage commands related to a virtualization application such as that provided by VMWARE . Thus in this case one user may be allowed to execute commands for one application but not another application and vice versa. Other examples associated with a particular user s function may include size parameters such as LUNs under a particular size or other such commands as allowed by the senior administrator and or the user s access level.

Automatic approval may result in commands being placed in a queue for later execution. For example some commands may depend upon the storage system been in a particular state. In this situation the commands may have been automatically approved however such commands may be forwarded to a management operation queue and queued for subsequent execution once for example the system returns to a normal operating state.

Other commands may require manual review by a senior administrator. Such commands may include more complicated commands or commands that may place the storage system in an unintended state produce unintended or undesirable results or commands not typically performed or allowed for a particular user. For example a user may request the creation of the nonstandard storage pool a nonstandard RAID configuration not typically utilized or allowed within the user s organization request an exceptionally large storage provision e.g. 10 TB LUN or other such questionable or non allowed request. Other examples of commands requiring manual approval may be associated with a user s particular role within the organization i.e. user s sphere of responsibility . For example the user may be limited to provisioning file systems but mistakenly submits a request to provision a block LUN. In this case a filesystem user will be flagged when trying to create block level storage and vice versa thereby allowing particular users to create one type of storage but not another.

Such examples highlight scenarios where a command may be approved for one user but not another thereby providing a user associated approval process. In other cases a request may be reviewed taking into consideration two or more factors such as the particular user s sphere of responsibility along with the requested management operation type. Other such combinations of multiple factors may be similarly utilized employing the techniques described herein. Thus example embodiments include applying the approval process to categories that may include attributes related to the storage system e.g. size configuration etc. and operation attributes related to a particular user e.g. a user s sphere of responsibility permission levels previously approved request proficiency level etc. .

During the manual approval process a senior administrator may also partially approve a particular management operation request. In such situations the senior administrator may allow the general theme of the request but may notice that the request as provided would not be performed in the most efficient or desirable manner. In such cases the senior administrator may modify various parameters or settings using different storage pool etc. prior to approving the request whether it be immediate or placed in a queue for subsequent execution.

Should the requested management operation be outside the users responsibility access or permission level adversely impact system performance contain an error or otherwise be cause for rejection the senior administrator may outright reject the request thereby preventing the requested management operation from executing.

As described above approved commands may include a temporal characteristic. That is some commands automatically approved may be executed immediately e.g. simple commands such as changing in IP address whereas other more involved complex or system state dependent e.g. adding a 30 increase in system storage may require significant time to implement and thus may be queued for execution at a later time. Information indicative of such operations may be provided in a job list display.

Alternative embodiments may further include providing notification to the user initiating the management operation request. Such notification may include an e mail pop up window report or other indicator detailing the results of the request. For example an approved request may simply state that the command has been approved or is pending or may include additional details as appropriate e.g. time result system state etc. . Request that were approved with modification may also generate a message indicating approved pending status as well as what changes were made to the original request and optionally why the changes made and additional information or resources as desired. Management operation request that are rejected may also include details as to why the request was rejected suggestions for submitting a new request sources for additional information or other avenues for follow up.

The senior administrator may also receive a message when automatically approved requests are approved and or pending and or executed. The message may be an indicator in a dashboard display e mail pop up text or other such indicator. Thus both parties on both sides of the approval process can be notified.

In an alternative embodiment the storage system itself may be used to provide an additional review level for users including even a senior administrator. As good as a senior administrator may be they re still liable to mistakes and human error. Therefore example embodiments may be provided wherein the system itself may initiate an approval process whereby recommendations may be provided should a senior administrator s approval result in less than optimal change in the system. In this case a report may be provided to the senior administrator indicating suggested modifications or reasons why they are request was flagged for additional review. In such cases should a senior administrator make a simple entry error the senior administrative can catch and fix such mistakes prior to execution. However the senior administrator may be aware a particular request is not being performed in an optimal manner such as the case where they may have knowledge that the system will be reconfigured in the future and in such cases allow the less than optimal command be executed nonetheless.

Alternatively or in addition the system may also implement a set of rules whereby a particular request will be known to fail. In this case the request may be automatically rejected and storage system will provide feedback to the senior administrator offering suggested changes reasons why the request will not work and or additional information and or resources.

Another use of the technique herein provides for considering a user s proficiency level as a factor for the approval procedures described herein. Additional information regarding user proficiency level determination may be found in U.S. patent application Ser. No. 13 076 911 filed Mar. 31 2011 MANAGING USER PROFICIENCY LEVELS which is incorporated by reference herein. For example referring to the EM may be used to facilitate interactions with environments and locations external to the data storage system and management system such as other computer network locations and websites. The management component may facilitate a two way communication flow of information to and or from the external environments. The management component may gather information from management operations approval queue describing a user s proficiency levels in accordance with the user s associated UI levels executed management operations approval success rate and system or application performance as described above. The management component may gather such information included in the approval queue by communicating with other components on the data storage system such as one or more of the service layers and in the approval module . The management component may communicate the information to a target location in an external environment such as a target network location on the Internet or to an IT department. The management component may facilitate selecting in accordance with the information of the data storage system a target location in the external environment such as an Internet website and communicating the information directly to the target location. The management component may also be used to facilitate communicating information received from the target location to the user.

The techniques herein may be performed by executing code which is stored on any one or more different forms of computer readable media. Computer readable media may include different forms of volatile e.g. RAM and non volatile e.g. ROM flash memory magnetic or optical disks or tape storage which may be removable or non removable.

While the invention has been disclosed in connection with preferred embodiments shown and described in detail their modifications and improvements thereon will become readily apparent to those skilled in the art. Accordingly the spirit and scope of the present invention should be limited only by the following claims.

