---

title: Authenticating linked accounts
abstract: Embodiments of authenticating linked accounts are presented herein. In an implementation, an authentication service provides functionality to form links between a plurality of user accounts. A client may then authenticate by providing credentials for one account in a group of linked accounts, and is permitted access to each account in the group of linked accounts based upon the linking. Thus, a single sign-in of a client to one account may permit the client to obtain services for service providers corresponding to multiple linked accounts, without an individual sign-in to each account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09065817&OS=09065817&RS=09065817
owner: Microsoft Technology Licensing, LLC
number: 09065817
owner_city: Redmond
owner_country: US
publication_date: 20121108
---
This application is a continuation of and claims priority to commonly assigned co pending U.S. patent application Ser. No. 11 565 611 entitled Authenticating Linked Accounts filed on Nov. 30 2006 the entire disclosure of which is incorporated by reference herein in its entirety.

A user has access to a variety of different types of services both locally and remotely over a network. For example the user may shop at an ecommerce web site write in a blog read and respond to messages in a message board communicate using instant messages send and receive email and so on. Users may choose to have separate accounts with the same or different service providers which are used for the interactions with different social groups. For example the user may interact with a variety of social groups via instant messages and or other services including work contacts college friends high school friends family friends family members and so forth. The user may have a work account for interactions with work contacts and a separate home account for interactions with friends and family members. To interact with the variety of services the user may be required or find it desirable to sign in to a particular account with a service by providing sign in credentials such as a username and password. However once the user is logged into a particular account in traditional systems the user is typically limited to accessing data and services of the particular account. Thus to access different accounts for different interactions the user may be limited to a sign off from one account and providing additional sign in credentials to sign in to another account which may be time consuming and frustrating for the user.

Authenticating linked accounts techniques are described. In an implementation a linking interface is exposed via an authentication service through which a user may specify a plurality of accounts which are to be linked. The authentication service can store data describing linked accounts based open the users selections. Authentication to one account of a set of linked accounts may then provide access to each of the linked accounts with a single presentation of credentials. Service providers may interact with the authentication service to reference linked accounts and data such that a client authenticated to one account may receive services corresponding to one or more other accounts which have been linked to the one account.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A user may have various different user accounts for different interactions via a network. For instance a user may have a Work account to access business related e mail and services and a Personal account to interact with friends and family via instant messaging e mail forums to access Internet content and so forth. However in order to access different accounts for different interactions using traditional account log in techniques the user may have to a sign off from one account and then provide additional sign in credentials to sign in to another account which may be time consuming and frustrating for the user.

Accordingly authenticating linked accounts techniques are described in which an interface can be exposed to permit a user to link together a plurality of accounts such that authentication to one of the linked accounts provides access to each linked account. In an implementation a client internets with an authentication service to indicate which accounts are to be linked. The authentication service may expose one or more interfaces through which a client may specify accounts to link or de link and which causes the authentication service to store data describing the link. For example a user may choose to link the Work account and the Personal account and the authentication service can then store account linking data to describe the link such as a unique link identifier matched to account identifiers for the Work account and the Personal account.

When a user or client is authenticated via the authentication service to one account in a set of linked accounts the corresponding authentication data may include account linking data to reference the linked accounts. For instance if a user provides valid credentials for the Work account the authentication service can form authentication data such as an authentication token which may be used as proof of identity to the Work account. The authentication data e.g. the token may also include data to reference the linked accounts such as the unique link identifier. When the user presents an authentication token to access services from one or more service providers the service providers may utilize a link identifier included in the authentication token to identify linked accounts and to provide interactions with services corresponding to each linked account based upon client authentication to the one account. Thus the user may perform a single sign in to the Work account and based on the account linking may receive access to each linked account e.g. may interact with services and content corresponding to the Work account and the Personal account .

In the following discussion an exemplary environment is first described that is operable to employ the authenticating linked accounts techniques described as well as other techniques. Exemplary procedures are then described which may be employed by the exemplary environment as well as in other environments.

The clients are each illustrated as including a respective communication module which may be configured to provide a variety of functionality. For example a communication module may be configured to send and receive email. Email employs standards and conventions for addressing and routing such that the email may be delivered across the network utilizing a plurality of devices such as routers other computing devices e.g. email servers and so on. In another example a communication module may be configured to send and receive instant messages. Instant messaging provides a mechanism by which clients when participating in an instant messaging session can send test messages to each other. Any of the clients can be configured to communicate one to another via network . The instant messages are typically communicated in real time although delayed delivery may also be utilized such as by logging the text messages when one of the clients is unavailable e.g. offline . Thus instant messaging may be thought of as a combination of e mail and Internet chat in that instant messaging supports message exchange and is designed for two way live chats. In an embodiment a communication module may be configured to provide Web browsing functionality to access Web based resources service and content and for client interactions with the resources which may be provided via the network .

Each of the clients may also include one or more application modules not shown which may be configured to provide a variety of functionality to the clients . Functionality provided by application modules may include but is not limited to home office business productivity functionality such as word processing database spreadsheet and presentation functionality software development functionality such as development interfaces tools management and compilation and other computing functionality such as graphic design and media management editing viewing and or playback. A variety of other examples are also contemplated.

Communication modules may former be configured to interact with the authentication service to gain access to resources e.g. content and services provided via network . Authentication service is illustrated having an authentication manager module which represents functionality to manage one or more user accounts where r may be any integer to communicate via network to authenticate clients to corresponding user accounts e.g. to determine that clients seeking access to resources provided via network are who they say they are and so on. User accounts may each correspond to clients and or users of the clients and may be associated with a variety of account data that is utilized for interaction by the clients with corresponding network resources. For example one of the accounts may correspond to a particular client and or user and may include service authorizations specifying resources with which the account and or user is permitted to interact account credentials e.g. user name and password user profile data and so forth. Further in accordance with one or more described embodiments the authentication service and or authentication manager module may include functionality to form manage and or maintain account link data which describes relationships between user accounts which link respective ones of the accounts one to another. In an implementation authentication manager module may manage storage for example a user account database for user accounts account data and or account link data .

In an implementation clients may be communicatively coupled via network to one or more service providers where m can be any integer . Each of service providers is illustrated as having a respective service manager module which is representative of functionality used by the service providers to manage access to one or more services over the network performance of the services and so on. Although illustrated separately the functionality represented by the service manager module may be incorporated within the services themselves.

One or more of service providers may be configured as a provider of a web service state. A service provider configured as a web service suite integrates a plurality of services that are accessible via the network . Thus the service provider provides a full suite of services rather than individual or only a limited number of services. In an implementation a user registers e.g. signs up for an account a single time with the service provider and is provided access to all of the services of the suite during a session. The user has access via a particular one of the accounts to all of the services whether the user actually uses the services or not and need not register individually for each different desired service . Thus each of the accounts may have full privileges and access to an entire suite of services provided by one or more service providers . A user when interacting via an account may simply select one service and then any additional services provided by the websuite service provider without requiring the client to provide additional credentials e.g. additional account set up . In effect the user turns on the full suite of services upon registration creating an account with a service provider . While a service provider configured to provide a Web service suite has been described it is contemplated that service providers may range from those providing a single one of services e.g. an email provider up to a provider of a full suite of services .

A wide variety of functionality may be made available via the services . For example the services may include a Web search service e.g. a search engine provided to search the Internet an email service provided to send and receive e mail and an instant messaging service to provide instant messaging between die clients . Additional examples include a news service a shopping e.g. ecommerce service and a web log service. Further productivity services may also be provided such as word processing spreadsheets presentations drawings note taking and so on. For instance network access may be given to one or more of clients to applications that have been traditionally executed locally on the clients . Therefore execution of the application modules may be performed remotely at the service providers and results of the execution may be communicated over the network to one or more of the clients . An authentication service integrated as part of a service provider may also be provided to authenticate clients to access other services which may include other services provided by one or more of the service providers . Although a few examples of services have been described it should be apparent that a wide variety of other services are also contemplated a few examples of which include a community based forum for topical discussions and support a marketplace for exchange of good and services a travel service a computer health and maintenance service to provide one or more of virus protection spyware protection software updates and so forth a map service and so on.

In an implementation the service providers via the service manager modules are configured to redirect clients seeking access to services to an authentication service for authentication. Thus rather than authenticate directly with the service providers the service providers may utilize a separate authentication service for authentication thereby offloading authentication to the authentication service . In this way the service providers may be configured to understand whether die clients were successfully authenticated by the authentication service but do not need to understand how the authentication was performed. Authentication via a service may be limited to a particular service provider and or service such that authentication would be valid only for the one service provider and or for a particular service . Alternatively a single authentication with an authentication service may permit access to a plurality services provided by one or more of the service providers . In other words a single sign in e.g. verification of credentials corresponding to one of the accounts via the authentication service may authenticate a client i.e. provides proof of identity of the client for access to a plurality of services corresponding to the one of the accounts .

Further the account link data may be used to manage authentication of users to accounts which are linked one to another. For instance a user at a client having two separate accounts Work and Friends may interact with the authentication service via network to link the accounts one to another in a linked group e.g. to create a set of linked accounts . Then upon providing credentials corresponding to one of the accounts Work the user receives access to each of the accounts Work and Friends . The user through a client may then interact with one or more service providers to access services which correspond to either of the linked accounts Work and Friends . The user may be authenticated for interaction with multiple service providers based upon a single sign in . Further a single sign in to one of the linked accounts e.g. Work allows the user to access each of the separate user accounts which are linked together based on the account link data . Thus once a group of accounts are linked by account link data access may be obtained to each account in the group by a single authentication to any one of the accounts which are linked in the group. Further description of techniques for linking of user accounts and authenticating linked accounts may be found in the discussion of below.

Generally any of the functions described herein can be implemented using software firmware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality and logic as used herein generally represent software firmware or a combination of software and firmware. In the case of a software implementation the module functionality or logic represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code can be stored in one or more computer readable memory devices further description of which may be found in relation to . The features of the authenticating linked accounts techniques described below are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductors and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions. Alternatively the mechanisms of or for processors and thus of or for a computing device may include but are not limited to quantum computing optical computing mechanical computing e.g. using nanotechnology and so forth. Although a single processor is depicted for each of the authentication service client and service providers multiple processor arrangements are contemplated such as processors for different servers providing the authentication service or a processor core of client having a variety of processing devices. Additionally although a single memory is shown for each of the authentication service client and service providers a wide variety of types and combinations of memory may be employed such as random access memory RAM hard disk memory removable medium memory and other computer readable media.

Authentication manager module is depicted as executed on processor of authentication service and is also storable in memory . Authentication manager module is further depicted as including as sub modules a linked account manager module and a service provider interface module. Linked account manager represents functionality to create manage and maintain links between the accounts . For instance the linked account manager may be executed via processor to expose one or more application programming interfaces API through which a client may interact to specify accounts to link together. Such interactions may include but are not limited to linking of accounts de linking of accounts indicating particular aspects or data to share or not share between linked accounts setting linked account preferences and so forth.

The service provider interface represents functionality to provide service providers interactions with user accounts data and or accounts link data . For instance one or more of service providers may access the accounts links data to understand a group of linked accounts and may obtain account date corresponding to those accounts such as to form a user interface to represent data for a group of linked accounts. In an implementation the service provider interface may be configured to expose an application programming interlace which is callable by service providers to identify linked accounts and to access corresponding data. In another implementation the service provider interface may permit a service provider to expose a switching control in a user interface selectable to switch the data rendered in the user interface from data corresponding to one account in a group of linked accounts to data corresponding to another account the group of linked accounts.

User accounts and associated user account data is illustrated as stored in storage in memory of authentication service . A variety of account data associated with each user account is contemplated examples of which include but are not limited to unique account identifiers a password a username and a variety of user profile data such as preferences a user tile or graphic account representation user interface elements service authorizations billing in formation and so forth. illustrates an embodiment in which the accounts links data is illustrated as maintained in storage e.g. a database of memory which is separate from the user accounts data maintained in storage . Naturally storage and may represent components of a common data system such as separate tables or sets of tables in a database configured to maintain user accounts . In an implementation accounts links data may be configured as a unique link Identifier which is matched to one or more user account identifiers such as in a database table. Thus the link identifier may be used to reference a group of accounts which are linked one to another. Thus when authentication via authentication service to one of the accounts occurs the link identifier may be referenced to determine which other accounts are linked . In this way a user by specifying linked accounts may pre authorize a single sign in to permits access to and or authenticate the linked accounts. A variety of other arrangements are also contemplated. In an embodiment rather than maintain accounts links data separately from account data a link identifier may be stored as part of account data for each account and may be referenced from the user account data . Those skilled in the art will appreciate a variety of other arrangements to specify a relationship in a stored data record which are suitable to define a relationship between separate user accounts and thereby create linked accounts .

One technique to authenticate linked accounts involves including account links data in authentication tokens which may be issued to a client upon successful authentication to one of the linked accounts . Account links data may be used by parties e.g. service providers relying upon the authentication tokens for proof of identity to understand that a linked account exists and to provide services corresponding to each account which is linked based upon the single authentication token . Thus authentication token which is issued for one of the accounts may be sufficient to access several separate accounts which are linked via account link data and upon authentication to a single one of the linked accounts.

In an implementation authentication tokens issued in response to successful authentication contain the link identifier though which linked accounts may be referenced for instance to obtain or understand the set of account identifiers matched to the link identifier . Authentication manger is depicted as forming an authentication token which includes an account identifier of the authenticated account the particular account for which credentials are provided and verified and the corresponding link identifier . Authentication token may be communicated via network to a client which is illustrated as storing an exemplary authentication token in memory . Client may present the token to one or more service providers as proof of identify to access corresponding services . Based upon the link identifier service provider may provide services corresponding to one or more or the linked accounts without additional presentation of credentials. For instance a service provider may produce a user interface or data sufficient to form a user interface based upon account link data . The user interface may be configured for interactions with linked accounts which are identified via a link identifier provided by a client in an authentication token . The user interface or data may be communicated to a client via network to be rendered by the client . Communication module of client in is illustrated as receiving and outputting an exemplary user interface .

Additionally the authentication token may include a hash based upon each of the linked account identifiers and or a time stamp which indicates the latest update of the account links data . The hash and or time stamp may be used by a relying party e.g. the service provider to determine when the authentication token expires and or to determine when account link data which may be cached by the relying party may need to be updated. Further discussion of exemplary techniques suitable to perform linking of user accounts and or authenticating linked accounts in one or more embodiment as well as exemplary user interfaces may be found in reference to the following figures.

The following discussion describes techniques for linking of user accounts and authenticating linked accounts that may be implemented utilizing the previously described systems interfaces and devices. Reference will be made in the course of the discussion of the following procedures to the environment depicted in and the system depicted in . Aspects of each of the procedures may be implemented in hardware firmware or software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks.

Then the client logs in via the authentication service to the first account using one or more credentials corresponding to the first account block . For example die user Bob may authenticate e.g. sign in by providing credentials such as a username and or password to one of the linked accounts such as authenticating to the account BobWork via the authentication service in . Upon successful verification of credentials the client receives an authentication token having data to reference the linked accounts block . In the preceding example authentication service in the embodiment of may execute authentication manager module on processor to verify the credentials provided by Bob and to form an authentication token which corresponds to the account BobWork . For instance the authentication token may include an account identifier corresponding to BobWork . The authentication token may also be formed including account link data to indicate a link relationship such as a link identifier which links the accounts Bobwork BobHome and BobAlt . The authentication manger module may then communicate the authentication token to a client via network which may be received via communication module executed on processor of the client .

The authentication token is presented to one or more service providers as proof of identity block . The client receives services from one or more service providers corresponding to the first account block . The cheat based upon the link also receives services corresponding to the one or more other accounts without providing credentials for the one or more other accounts block .

Continuing the above example Bob may wish to access service corresponding to one or more service provider and or one or more of the linked accounts Bobwork BobHome and BobAlt . For example assume Bob wishes to read email for each account send an instant message via BobHome and buy a present for his nephew via BobAlt . Bob via a client may present the authentication token as proof of identity at one or more service providers to obtain the various services . The service providers relying on the authentication token may understand that Bob has successfully authenticated to the account BobWork and may provide corresponding services based upon this authentication. Further based upon a link identifier included with the authentication token the service providers may understand that BobWork is linked to one or more other accounts. Thus one of more of the service providers may interact with the authentication service to determine which accounts are linked such as to understand the link to the accounts BobHome and BobAlt . Then the service providers may provide services corresponding to the accounts BobHome and BobAlt based upon the linking of the accounts and without Bob providing credentials for these other accounts. In other words a user or client upon authentication to one account may be provided access to each account in a set of linked accounts based upon the account linking. Thus the user may access services and content corresponding to the multiple linked accounts upon a single sign in e.g. a single verification of credentials to one of the linked accounts.

Data is stored describing a link between a first account and at least one other account block . For example if Account A is linked with Accounts B and C by a client accessing an exposed link API the Link API may respond by creating a database record e.g. account links data having at least a unique link identifier which is matched to an account identifier for each of accounts A B C. Thus the account identifiers may be used to look up the corresponding the link identifier and vice versa. Additionally or alternatively a unique link identifier may be stored with account data for each account A B C and the link between the accounts may be determined by matching the link identifier for each account.

Based upon a single sign in of the client to the first account an authentication token is formed fox communication to the client having a link identifier to reference the link between the first account and the second account block . In the preceding example a client may sign in to any one of accounts A B or C and an authentication token corresponding to the one account is formed in response such as by the authentication manger module executed on a processor . The authentication manger module may reference the stored accounts link data to determine a corresponding link identifier which is also included in the authentication token .

The authentication service communicates the token to the client via the network wherein the link identifier included in the authentication token is to provide the client access to services corresponding to each of the linked accounts with the single sign in. block For instance a relying party e.g. a service provider relying on the authentication token as proof of a client s identity may use the link identifier to understand that linked accounts exist and to reference the linked accounts and or corresponding data. Thus one or more of the service providers may permit access to services corresponding to accounts A B and C based upon the authentication token issued upon authentication to any one of accounts A B or C and the account links data which links the accounts. Thus a client may access a plurality of linked user accounts with a single sign in to one of the linked accounts.

In an implementation the service provider interface depicted in may represent a variety of functionality for interactions between authentication service and service providers to manage authentication of linked account. Thus service provider interface may include one or more interfaces to provide functionality by which a service provider may identify linked accounts using a link identifier obtained from an authentication token and may access corresponding data to form a user interface for the linked accounts further discussion of which may be found in relation to . In another example service provider interface may include one or more interfaces to provide functionality to cause switching between linked accounts. In an embodiment an interface is provided which receives a user selection of one account in a set of linked accounts and in response overwrites data in authentication tokens to correspond to the selected account further discussion of which may be found in relation to . Thus an authentication service may expose one or more interface through which authentication of a client to the set of linked accounts is managed.

A client provides credentials for a first account and upon verification of the credentials receives a corresponding authentication token block . Then the client presents the token to a service provider to access services block . In an implementation service provider as in may utilize an authentication token provided by a client to determine which services the client is authorized to receive e.g. to provide the clients identity . Further the service provider may utilize the authentication token to provide access to linked accounts when a link relationship exists.

A determination is made as to whether linked accounts exist block . For instance when there is no linking data in the authentication token the service provider may determine that the first account is not linked to other accounts. In this instance the service provider may form a user interface for the first account block . In other words the client is provided an interface to interact with services and content for the first account such as to interact with email a instant messaging service a shopping service and or a variety of other services and data related to the first account. The user interface or data sufficient to form the user interface may be communicated to a client via network which may output the user interface such as the user interface of depicted as output via communication module . When the authentication token contains data to reference linked accounts the service provider detects this and in response may perform acts to provide access to the corresponding linked accounts.

For instance when linked accounts exist a determination is made whether valid data for linked accounts has been cached block . In an implementation a service provider may be configured to maintain or cache certain account data for example cached locally in memory . Such cached data may include the list of accounts associated with linking data corresponding account profiles and preferences such as user tiles display preferences account ids and a variety of other account data . The authentication token as previously described may include a time stamp which may indicate when a linked account relationship has been changed. Thus the service provider may determine based upon the time stamp if cached data is stale and needs to be refreshed. Another technique to verify cached linked account data is to use a link hash which may be configured as a hash of each account identifier in the linked relationship. Thus the service provider may compare a cached hash to a hash received via an authentication token to validate the cached data and or to understand when to obtain updated data for the linked relationship.

Thus when data is not cached or is not valid e.g. when it is determined that an update to the data is to be performed service provider interacts with an interface exposed by the authentication service to identify and get data for each of the linked accounts block . For instance the authentication service of may incorporate a service provider interface which is callable with certain account link data to reference linked accounts and which returns data associated with the linked accounts. In response to a call from a service provider the service provider interface may return a variety of linked accounts data examples of which include but are not limited to a hash time stamp profile data account ids usernames user tiles and so forth. In an implementation the service provider interface may be provided as a part of the authentication manager module of or alternatively as a stand alone module. The service provider interface may be configured as an application programming interface API accessible via the network . The service provider interface e.g. API may further be configured for a particular communication protocol such as simple object access protocol SOAP or to employ other suitable client server communication techniques. Thus a service provider may extract an link identifier included in an authentication token provided by a client and may call the service provider interface using the link identifier to obtain data for associated linked accounts.

When data has been cached and is valid or following an update of linked accounts data the service provider forms a user interface to display data for each linked account block . For instance a service provider may use data from a cache or obtained using the link identifier to form a user interface for display of linked accounts examples of which are shown in .

The address bar shows communication module directed to a service provider specifically websuite.com . Websuite.com may be configured to provide a suite of services as previously discussed with respect to . In the implementation of interface is depicted as email page for an email service which may be provided by a service provider e.g. websuite.com. The interface may display email for multiple accounts based upon the accounts being linked as described herein. The interface includes an inbox portion for listing of email messages and a display portion to display a selected message. In an implementation the inbox may include e mail messages from a plurality of linked accounts. In the illustrated example assume a user Adam has accounts AdamWork websuite.com and AdamHome websuite.com which have been linked such as via Link API exposed by authentication service . The interface has portions each corresponding to a one of the linked accounts. Each of portions displays data corresponding to their respective accounts such as the account name email messages a user tile e.g. factory image for AdamWork and house image for AdamHome and so forth. In an implementation a portion may be provided which is selectable to manage linked accounts such as to access a Link API or De Link API to manage which accounts are linked.

Referring to an exemplary embodiment of another user interface for client interaction with linked accounts is shown. In this embodiment a user interface configured for email is again shown however separate portions for displaying email messages corresponding to each linked accounts are not provided. Rather the messages are displayed together in a common inbox portion . The interface may also include a portion which indicates the set of linked accounts in the depicted instance AdamHome AdamWork and Adam isp.com . A respective user tile or other identifier for each account may also be displayed in the user interface to visually identify the accounts. For instance the factory image corresponding to AdamWork is displayed in the portion with the listed account name and is also displayed with each corresponding message in the inbox portion. The same is true for the house and globe images corresponding to AdamHome and Adam isp.com respectively. A variety of other arrangements of user interfaces to provide interactions with linked accounts and corresponding services are also contemplated.

Referring back to and procedure a client may access a service provider using an authentication token issued by an authentication service for a first account which is linked via a link identifier to at least second account block . For example Adam via a client as in may sign in to one of the linked accounts such as AdamWork via the authentication service and in response receives a corresponding authentication token having the link identifier . Adam may then present the authentication token corresponding to AdamWork at one or more service providers to access services . The authentication token may include an account identifier corresponding to AdamWork by which service providers may understand that Adam has provided credentials corresponding to AdamWork which have been verified by the authentication service .

A service provider outputs a user interface for the first account the interface including a portion selectable to switch between linked accounts block . For instance Adam may use the authentication token to access one of service providers . The service provider may form a user interface for communication to the client such that the client may interact with provided services . The client may then output the user interface such as on a display device associated with the client .

Referring to an exemplary implementation of a user interface of is depicted in greater detail the user interface including a switching control to switch between linked accounts. A variety of different user interfaces are contemplated which may correspond to different services and or service providers. In the implementation of the interlace is depicted as a home page or start page of a service provider websuite.com which may be configured to provide a suite of service as described with respect to . The interface includes a header portion and a search portion to provide a variety of search functionality. Further depicted in the header portion is a portion which displays a user account for which the interface has been rendered. In this case the account name AdamWork websuite.com is shown. An icon or user tile may also be displayed to visually identify the account. In a user tile is illustrated as a factory image corresponding to AdamWork websuite.com .

The interface is also depicted as including a switching control portion selectable to switch between linked accounts. In the depicted implementation the switching control portion is illustrated as a drop down list box control surrounding the portion to display the selected account. The switching control portion is configured to list the set of accounts which are linked . By way of example and not limitation shows a drop down list box control including the accounts AdamHome AdamWork and Adam isp.com . Thus a user may make a selection of one of a set of linked accounts via the switching control portion. A variety of other arrangements of a switching control are also contemplated.

In an implementation a service provider may obtain a list of accounts to display in a switching control portion as well as other data corresponding to linked accounts through interaction with the authentication service . For instance a service provider may provide a link identifier obtained from an authentication token to an authentication service via the service provider interface . In response the service provider may obtain access to a variety of data for corresponding linked accounts . This interaction based on the link identifier may be user to populate the switching control portion with the list of linked accounts. Examples of data which may be obtained via service provider interaction with the service provider interlace include but are not limited to a list of the linked accounts account identifiers associated user tiles account profile data content selections or preferences and so forth.

A variety of content corresponding to the selected one of a set of linked accounts may also be displayed via the user interface . Thus in a variety of content portions are depicted including a stock portion a top news stories portion and a email preview portion . A variety of other content portions and arrangements are also contemplated. Each of these portions may be displayed based upon the selected one of the linked accounts and may include content specific to that account. For example stock portion may display stocks indicated in preferences for AdamWork websuite.com . Likewise the email preview portion displays email for the account AdamWork websuite.com. 

Referring again to procedure of a selection of a second account via the user interface portion is detected block . For example user Adam after interacting with AdamWork websuite.com may wish to access another one of his accounts such as AdamHome websuite.com. Thus Adam may make a corresponding selection of one of the linked accounts in a portion exposed in the user interface of the preceding example. For instance in the switching control portion shows the account AdamHome highlighted to represent a selection of that account by a user e.g. Adam .

The service provider detects the selection and calls the authentication service with the user selection of the second account to cause the authentication service to switch the authentication token corresponding to the first account to correspond to the second account block . For example the selection of AdamHome via the switching control portion of the previous example may be detected via functionality incorporated with the service manger module which is illustrated in as executed on a respective processor of a service provider . Service manger module may then call the authentication service to communicate the user selection of AdamHome . For instance service manager module may communicate via the service provider interface data identifying the selection such as an account identifier corresponding to AdamHome . Upon receiving the selection of AdamHome the authentication service in response may perform a switch between linked accounts. For example the service provider interface may operate to cause a switch between the initially authenticated account AdamWork and the account AdamHome selected via the switching control portion .

In an implementation a switch between linked accounts includes updating an authentication token issued for a first account to correspond to the selected account. This switch may occur based upon the link relationship and without credentials being provided for the selected account. Further the switch may involve overwriting account specific data in the authentication token with data for the selected account. For instance the authentication token issued upon Adam signing in to the account AdamWork may be overwritten with data corresponding to AdamHome such that the token now corresponds to AdamHome . A variety of data in an authentication token may be overwritten in response to a selection via switching control portion . For instance an account identifier included in an authentication token which corresponds to a first account AdamWork may be overwritten with an account identifier corresponding to the second account e.g. the selected account AdamHome .

Further the switch may extend to include updating of a variety of other authentication data such as overwriting one or more other authentication tokens issued upon authentication of a client to a first account updating cached data at the client or maintained at one or more service providers updating data stored by the authentication service and or updating other data associated with the initial authentication of client to the first account AdamWork . In this manner an authentication switch between an initially authenticated account and an associated linked account may be performed throughout an entire domain e.g. all of websuite.com and or for a set of domains or participating sites e.g. service providers . Thus a client may use the updated authentication token which now corresponds to AdamHome to interact with corresponding services throughout the domain and or at each of the participating sites.

In an implementation the authentication service provides functionality to switch between linked accounts via a uniform resource locator URL . For instance service provider interface may be configured to expose a URL which is accessible via the network to service providers and or a client to initiate a switch between linked accounts. As noted the switching control may be populated with data for linked accounts by calling service provider interface with a link identifier extracted from an authentication token . Each account listed in the switching control may also be associated with an account identifier which may be returned with the list of linked accounts. When the user interacts with the switching control to switch to another account the corresponding account identifier is provided to the URL exposed by the authentication service to cause the switching. The data is then processed via the URL to cause the switching. This may include validating the link between the accounts e.g. verifying the provided account data identifying data to be updated performing the update returning the updated data and or confirmation and causing a reload or refresh of the user interface through which the switch was initiated.

Optionally for added security a version of the account identifier other than the account identifier itself may be utilized to cause switching via the URL. In this manner the account identifier is not exposed to being Intercepted via the network . In an implementation the data provided to initiate switching may be a one way hash of the account identifier . A one way hash of an account identifier for each of the linked accounts may be provided by the authentication service when the switching control is populated. The one way hash may be configured to be decoded by the authentication service to identify a corresponding account identifier However the service provider or individuals who might intercept the one way bash may not be able to identify the corresponding account . This may introduce a simple but effective level of security between the service providers and the switching functionality of the URL without the service providers having to undertake complex encryption techniques or other redesign to implement a secure communication protocol.

Then the user interface is reloaded for the second account based upon the switch. block . For instance following the switch by the authentication service the authentication token will now correspond to the account selected via the switching control portion of . The selection via switching control portion may be configured to cause a page reload or refresh of the user interface to occur. Upon reload or refresh the user interlace will now correspond to the selected account for instance the account AdamHome in the example given above.

Referring to an exemplary implementation of a user interface is illustrated following a switch between accounts in accordance with procedure of . For instance In the portion now displays the account Adamhome websuite.com . Further the user tile has been updated to display a house image corresponding to the account Adamhome websuite.com . In addition the user interface now has content portions corresponding to the selected one of the linked accounts e.g. Adamhome websuite.com . Thus a sports portion and a weather travel portion which may correspond to preferences for Adamhome websuite.com are now displayed. Further an email preview portion displays email for the account Adamhome websuite.com 

It is noted that the switch between linked accounts such as from the user interface in to that of may occur without the additional credentials being provided by the user Adam via a corresponding client . Thus a client and or user e.g. Adam may access services for a linked account e.g. AdamHome websuite.com based upon a linked account relationship without providing credentials to sign in to the account. This switching control technique may permit participating sites that may already support token based authentication to support linked accounts without significant redesign of content such as redesign of web pages interfaces infrastructure protocols and so forth. The switching control may be added to existing pages and then the actual switching functionality is performed via the authentication service . To the participating sites the switching between linked accounts is understood in the same manner as if a different authentication token for a different account had been presented. The site responds by providing corresponding service when the reload of the user interface occurs. Thus the techniques for overwriting authentication tokens and data may permit partner sites to understand and support linked accounts without much work on the part of the partner sites. Following a switch between linked accounts it will look to the partner sites like another user account the selected account has been is authenticated. Sites wishing to provide even greater support for linked accounts may additionally or alternative choose to develop user interfaces for displaying linked accounts such as discussed with respect to . Thus different service providers may choose different levels of support for authenticating linked accounts techniques described herein.

Although embodiments of authenticating linked accounts have been described in language specific to features and or methods it is to be understood that the subject of the appended claims is not necessarily limited to die specific features or methods described. Rather the specific features and methods are disclosed as example implementations of authenticating linked accounts.

