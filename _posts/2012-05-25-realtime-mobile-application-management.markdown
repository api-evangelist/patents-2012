---

title: Real-time mobile application management
abstract: Some embodiments relate to mobile application management. An example embodiment includes a method of mobile device management. The method includes installing a client-side engine of an enforcement engine on a mobile device. The enforcement engine further includes a runtime engine. The method also includes routing communications between the mobile device and a network/cloud or an enterprise network through the enforcement engine. In addition, the method includes generating a policy regarding the mobile applications from a signature database (“SigDB”). The SigDB includes signatures pertaining to mobile applications. Compliance of the mobile device with the policy is enforced in real time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08578443&OS=08578443&RS=08578443
owner: Mobileasap, Inc.
number: 08578443
owner_city: Fremont
owner_country: US
publication_date: 20120525
---
This application claims the benefit of and priority to U.S. Provisional Application No. 61 492305 filed on Jun. 1 2011 which is incorporated herein by reference.

Embodiments described herein generally relate to enterprise mobility. More particularly some example embodiments relate to mobile application management.

In bring your own device BYOD environments users provide mobile devices which are likely owned by the users to interface with an enterprise. Public mobile applications may be already loaded on the mobile devices. The public mobile applications may have been purchased accessed or downloaded from an application store such as iTunes. In addition the users may seek to add public mobile applications to the mobile device by purchasing public mobile applications from the application store. The mobile devices may also be configured to interface with a user s private data such as personal files and or private email accounts for example. Additionally the enterprise may load and or provide access to private mobile applications. The private mobile applications may include enterprise email services or access to enterprise files for example. Because the users provide the mobile devices the users often expect to use or add the public mobile applications and access personal data. However by using the public mobile applications accessing personal data and being provided access to private applications the users may expose the enterprise to vulnerabilities including but not limited to malware malicious applications network sniffers applications that consume excessive network bandwidth applications that encourage data leakage applications that reduce the users productivity applications with inappropriate content applications that reduce battery life or some combination thereof.

To manage and or reduce exposure to such vulnerabilities mobile device management MDM has developed. One aspect of MDM may include mobile application management MAM that includes management of the private mobile applications the public mobile applications and mobile risk management related to the mobile devices. For example MAM may include features designed to provision one or more mobile applications. As used herein to provision a mobile application may refer to the enterprise deeming the mobile application acceptable. That is once a mobile application has been provisioned the enterprise may allow the use of and or access to the mobile application. A list of provisioned applications may be referred to as a whitelist. In whitelists all mobile applications default as not included and or not provisioned and thus the use thereof may not be allowed. Furthermore the enterprise may have to individually provision each public mobile application included in the whitelist.

Additionally the MAM may include an application interface similar to an application store from which the provisioned applications may be made available to users or a specific group of users. The application interface may authenticate users prior to allowing access to the provisioned applications. In addition the MAM may monitor access and or use of provisioned applications and or erase non provisioned applications from the mobile devices. Thus the whitelist and the application interface may conflict with the expectations of the users who own the mobile devices. Moreover the whitelists and the application interface may require significant investment of time and resources by the enterprise.

The subject matter claimed herein is not limited to embodiments that solve any disadvantages or that operate only in environments such as those described above. Rather this background is only provided to illustrate one exemplary technology area where some embodiments described herein may be practiced.

Embodiments described herein generally relate to enterprise mobility. More particularly some embodiments relate to mobile application management.

An example embodiment includes a method of mobile device management. The method includes installing a client side engine of a policy enforcement engine enforcement engine on a mobile device. The enforcement engine further includes a runtime engine. The method also includes routing communications between the mobile device and a network cloud or an enterprise network through the enforcement engine. In addition the method includes generating a policy regarding the mobile applications from a signature database SigDB . The SigDB includes signatures pertaining to mobile applications. Compliance of the mobile device with the policy is enforced in real time.

Another example embodiment includes a method of mobile application management in a bring your own device BYOD environment. The method includes publishing at least one signature of at least one mobile application in a SigDB. The signature includes information indicating whether the mobile application is a private mobile application or a public mobile application. The signature also includes information about vulnerabilities introduced to an enterprise by the mobile application. The method further includes provisioning at least one private mobile application. Provisioning includes enabling a first user to use the private mobile application. The method also includes by default blocking the mobile applications defined as private mobile applications except the at least one private mobile application that is provisioned. In addition the method includes blocking the at least one public mobile application based on the information about vulnerabilities and by default allowing use of the mobile applications defined as public mobile applications except the at least one public mobile application that is blocked.

Another example embodiment includes a BYOD environment mobile application management system. The system includes a computing device including a computer readable medium having computer executable instructions stored thereon that are executable by the computing device. The computer executable instructions include an enforcement engine and a customizable policy. When executed by the computing device the enforcement engine manages in real time mobile applications on the mobile device and traffic related to mobile applications in the network cloud. Additionally when executed the customizable policy forms the basis of the enforcement engine management.

Additional features and advantages of the invention will be set forth in the description which follows and in part will be obvious from the description or may be learned by the practice of the invention. The features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present invention will become more fully apparent from the following description and appended claims or may be learned by the practice of the invention as set forth hereinafter.

Embodiments described herein generally relate to enterprise mobility. More particularly some embodiments relate to mobile application management. In an example embodiment a mobile application management system which may be implemented in a bring your own device BYOD environment includes a policy enforcement engine enforcement engine . The enforcement engine includes a client side engine installed on a mobile device and a runtime engine installed on a network cloud or an enterprise network. The enforcement engine manages mobile applications on the mobile device and traffic related to mobile applications in the network cloud. The management performed by the enforcement engine is based on a customizable policy generated from a signature database SigDB . The management occurs in real time. The mobile application management system avoids unwarranted intervention with the mobile device while safeguarding an enterprise s security interests by allowing public mobile applications unless blacklisted and by blocking private mobile applications unless whitelisted.

Referring to a diagram of an example mobile enterprise management platform structure platform structure is illustrated. Generally the platform structure may accommodate a multi tenant system in which each tenant represents an enterprise customer A C generally an enterprise customer or enterprise customers . Within the platform structure the enterprise customers may manage mobile applications not shown devices not shown users A E generally a user or users and policies not shown within the context of an enterprise substructure A C generally a substructure or substructures . The platform structure may enable each of the enterprises customers to become a logical unit that may be separate from the other enterprise customers included in the platform structure .

The platform structure may include a super administrator . The super administrator may generally oversee and or manage the platform structure . For example the super administrator may set up and maintain the substructures sell and or enable services related to the platform structure etc. In some embodiments the super administrator is centrally managed by a single administrator. Additionally in some embodiments the platform structure may include reseller administrators A and B. The reseller administrators A and B generally provide similar oversight and or management as the super administrator but the reseller administrators A and B may be limited to some portion of the platform structure .

In some embodiments the platform structure and or the substructures may be organized in a hierarchy of organizational units A C A B A E A B A E generally an organizational unit or organizational units . In this way the configuration of the platform structure and or the substructures may be intended to model or minor that of enterprises. The substructure may be a basis of policies that serve as the basis of mobile device management within the platform structure. Some additional details of the policies are discussed below.

Specifically in this and other embodiments the enterprise structure may include one or more of the enterprise customers . The enterprise customers may be at a lower level in the platform structure than the super administrator and or the reseller administrator A and B. Accordingly the super administrator and or the reseller administrators A and B may oversee and or manage the enterprise customers as discussed above. The enterprise customers may represent one of the tenants of the enterprise structure and further represent an enterprise a combination of enterprises or some portion of an enterprise. Each of the enterprise customers may be a delineation point of one of the substructures . For example a first enterprise customer A is the delineation point to a first substructure A.

Below the enterprise customers in the platform structure may be one or more business units A E departments A B users some combination thereof or one or more additional organizational units representing some sub hierarchal unit. Within each of the substructures a manner of mobile device management and or the policy may be customized to the enterprise customer associated therewith.

For example in the first substructure A the first enterprise customer A may set up a logical unit including a first business unit A and a second business unit B in a first level. Stemming from the first business unit A there may be a first department A and a second department B in a second level. Stemming from the second department B there may be a first user A a second user B and a third user C in a third level. Accordingly the manner of mobile device management and or the policy may be customized to a particular user such as the first user A may be customized to a particular set of users such as the first user A and the second user B may be customized to a particular department such as the second department B that includes the first user A the second user B and the third user C etc. In contrast in a third substructure C a third enterprise customer C may set up a second logical unit that is separate from the first substructure A and may include a different manner of mobile device management and or a different policy.

The platform structure is illustrative and not meant to be limiting. There is no restriction on the number of levels the number of organizational units in the substructures the number of reseller administrators A and B the number of substructures etc.

Additionally one or more of the organizational unit may be included at any level in the platform structure . For example the first substructure A includes three levels while the third substructure C includes two levels. Additionally the platform structure may not be static. That is any organizational unit stemming from any other organizational unit may be changed at any time. Alternatively in some embodiments the organizational units may be fixed or otherwise restricted in association without limitation.

Referring to an example operating environment is illustrated in which some embodiments of a mobile application management system may be implemented. Generally the operating environment may be a BYOD environment. Accordingly the operating environment may include a mobile device that may be provided and or owned by one or more users not shown a public network and or a cloud network cloud and an enterprise network . A mobile application management policy enforcement engine enforcement engine that may be included in the mobile application management system may also be included in the operating environment . The enforcement engine may manage mobile applications on the mobile device which are referred to herein as native mobile applications mobile applications in the network cloud which are referred to herein as cloud based mobile applications communication of traffic related to mobile applications either cloud based mobile applications or native mobile applications within the operating environment or some combination thereof. Example communications are indicated by arrows and in .

The operating environment may include the mobile device . Although one mobile device is depicted in there may be multiple mobile devices included in the operating environment . One or more users may be associated with the mobile device . The association between the one or more users and the mobile device may indicate that the user owns uses has provided or has responsibility for the mobile device for example. A one to one association between the mobile device and the user is not required. For example the mobile device may be associated with one user multiple mobile devices may be associated with one user a mobile device may be associated with multiple users or some combination thereof. The mobile device might include but is not limited to a mobile phone a smartphone a personal digital assistant a laptop computer a tablet computer or other mobile communication device.

In some embodiments the mobile device may additionally include a locator . The locator may track or otherwise calculate a real time location of the mobile device . The locator may include a global positioning system GPS locator or a network based locator that determines the location of the mobile device based on access point proximities.

The mobile device may have installed thereon the native mobile application . The native mobile application may be downloaded from the network cloud such as through a mobile application store. An example of a native mobile application may include a mobile application that is purchased from a publically accessible internet application store. When installed on the mobile device the native mobile application may be run without connecting to a network cloud . The native mobile application may be a private mobile application or a public mobile application. Generally public mobile applications may include any publically available mobile applications. Private mobile applications may include mobile applications created by an enterprise not shown or mobile applications that have been privately licensed by the enterprise for example.

The network cloud may include one or more local area networks LANs and or wide area networks WANs . In some embodiments the network cloud includes the Internet including a global internetwork formed by logical and physical connections between multiple WANs and or LANs. Alternately or additionally the network cloud may include one or more cellular RF networks and or one or more wired and or wireless networks such as but not limited to 802.xx networks Bluetooth access points wireless access points IP based networks or the like. The network cloud may also include servers that enable one type of network to interface with another type of network.

The network cloud may include the cloud based application that is maintained and or stored at least partially in the network cloud . The cloud based mobile application may be accessed by the mobile device through a browser for instance. In this manner the mobile device may use and have reliable access to the cloud based mobile application without loading and or storing the cloud based mobile application on the mobile device . The cloud based mobile application may include a public mobile application or a private mobile application. The cloud based mobile application may be updated and or modified and may be accesses by other mobile devices .

Additionally or alternatively the enterprise network may communicate with the cloud based mobile application as indicated by a communication denoted at . A modification of the cloud based mobile application may occur via communication when the cloud based mobile application is a private mobile application for example. That is the enterprise may be responsible for updates to the cloud based mobile application and may communicate the updates to the cloud based mobile application .

As depicted in one network cloud includes one cloud based mobile application however this depiction is not meant to be limiting. The operating environment may include multiple network clouds any one or more of which may include one or more cloud based applications .

The operating environment may include the enterprise network employed by the enterprise. The enterprise network may generally include one or more servers that enable the enterprise to internally communicate and or to communicate with the mobile device the network cloud the enforcement engine or some combination thereof.

In this and other embodiments internally the enterprise network may include an HTTP proxy an application host directory services and a content host which may communicate with a dynamic host configuration protocol DHCP server and or a radius server . The DHCP server and or the radius server may further communicate with a corporate router . One or more of the HTTP proxy the application host the directory services the content host the DHCP server the radius server and or the corporate router may additionally or alternatively communicate with the network cloud the enforcement engine the mobile device or some combination thereof. For example the directory services may communicate with the enforcement engine via communication s denoted at discussed below .

In alternative embodiments the enterprise network may take various configurations including any combination of the components discussed above and or one or more other components not explicitly listed.

As stated above the enterprise network may enable communication between the enterprise and the mobile device the network cloud the enforcement engine or some combination thereof. For example the enterprise network may enable the mobile device to access private mobile applications that may be stored on the applications host and or the HTTP proxy server the enforcement engine to access personnel information that may be stored in the directory services the enforcement engine access through a corporate router or some combination thereof.

As previously mentioned the enforcement engine may be a part of the mobile application management system. Generally the enforcement engine may be configured to among other things control and secure mobile applications the mobile device and communications including traffic related to mobile applications between the mobile device the network cloud and the enterprise network within the operating environment . The enforcement engine may be customized to the operating environment through the generation of a policy. The policy may include specific controls and or security features protocols specific to the operating environment . For example the enterprise may customize the specific control of the mobile device in the operating environment by selecting a set of mobile applications it deems inappropriate. Additionally or alternatively the enterprise may enable the mobile device to use a private mobile application by allowing access to the private mobile application or may allow the mobile device to install the private mobile application on the mobile device.

With combined reference to the policy may have a tree structure similar to that described with reference to . The tree structure of the policy may be based on one of the substructures of the corresponding enterprise customer . Accordingly the policy may define controls and or security features for one or more organizational units according to the level within the substructure . For example a root organization control may be the most general control which may apply to all organizational units of a substructure . In contrast a user control may be the most precise which may apply to a single user .

In some embodiments that include a policy with a tree structure a policy evaluation process may start from a bottom organizational unit such as the users in and proceed to higher levels in the substructure . Specifically referring to the second department B is at a higher level than the first user A the second user B and the third user C. In addition the first business unit A is at a higher level than the first department A and the second department B in the first substructure A. This convention is used herein with respect to descriptions of higher and lower levels.

Thus if the policy applies at the lowest level the enforcement engine applies the policy. However if the policy does not apply at a lowest level then the policy evaluation proceeds to the next higher level. Again if the policy applies at the next higher level the enforcement engine applies the policy. If not the policy evaluation proceeds to the next higher level. This evaluation progression continues until there are no more levels. In some embodiments if the policy does not apply at any level the policy treats the communication or request as a violation. In other embodiments if the policy does not apply at any level the policy treats the communication or request as allowable.

Referring again to the enforcement engine may include a client side enforcement engine client side engine a runtime enforcement engine runtime engine and a management platform that in some combination enforce compliance with the policy. Enforcement of the policy may occur in real time. That is as the user is operating the mobile device the enforcement engine may be blocking one or more mobile applications monitoring the users access to cloud applications etc. The client side engine may be installed and or run on the mobile device while the runtime engine and or the management platform may be installed and or run in the network cloud and or the enterprise network .

The enforcement engine may include one or more of each of the client side engine and or the runtime engine . For example in some embodiments the enforcement engine may include a device guard which may be implemented as the client side engine . Additionally the enforcement engine may include a cloud solution and or a mobile applications access control and security MAACS engine . The runtime engine may include the MAACS engine in some embodiments. Additionally or alternatively the cloud solution may include the runtime engine the client side engine or some combination thereof.

The client side engine may be downloaded and or stored on the mobile device . The client side engine may control and or secure the mobile device the mobile applications that may include one or more native mobile applications and or one or more cloud applications accessed by the mobile device and or communications entering and or exiting the mobile device . For example the client side engine may block the native mobile applications on the mobile device the client side engine may block access to the cloud based mobile application when access is attempted from the mobile device through a browser for instance and or the client side engine may coordinate with the runtime engine of the enforcement engine to maintain and or moderate a tunnel connection with the enterprise network .

The runtime engine of the enforcement engine may be installed and or run in the network cloud and or the enterprise network . The runtime engine generally includes and may communicate the policy that determines how the enforcement engine will operate in the operating environment . Contents of the policy may be communicated throughout the operating environment by the runtime engine . The runtime engine may additionally or alternatively provide and or control an interface between the network cloud the mobile device and the enterprise network . Control of the interface between the network cloud the mobile device and the enterprise network may be based on the policy. An example of the function of the runtime engine may include inspecting upstream mobile traffic in real time identifying the originating mobile device and or user and then enforcing the policy on the upstream mobile traffic.

The management platform of the enforcement engine may be installed and or run in the network cloud and or the enterprise network . The management platform generally coordinates creation modification and enforcement of the policy. For example the management platform may enable the creation of the policy using input from the enterprise an administrator a public source or some combination thereof.

Additionally the management platform may communicate with the enterprise network . In the communication between the management platform and the enterprise network is represented by arrow . Some examples of the communication between the management platform and the enterprise network may include but is not limited to receiving modifications to the policy from the enterprise network and or the administrator transmitting violations statistics etc. to the enterprise network and providing a user interface visible to the enterprise network .

Within the enforcement engine the management platform may communicate with the runtime engine and the client side engine as indicated by arrows and in . For example the client side engine may periodically call home to the management platform to pull policy updates and or other application updates. The client side engine may also periodically notify the management platform of status updates access violations pull commands from the management platform or some combination thereof.

Additionally or alternatively the runtime engine may periodically receive policy updates such as mobile application signature changes discussed below or substructure modifications discussed with reference to from the management platform . Additionally or alternatively the runtime engine may periodically receive internet protocol IP address mappings of the mobile device . By updating the IP address of the mobile device the runtime engine may identify the mobile device . Additionally or alternatively in some embodiments the runtime engine may track one or more logs. The logs may be communicated to the management platform by the runtime engine . The logs may be further processed at the management platform and or communicated to the enterprise network . One or more of the communications within the enforcement engine or between the management platform and the enterprise network may be event driven. Alternatively the communications with the enforcement engine or between the management platform and the enterprise network may routinely occur.

Additionally or alternatively the enforcement engine may perform certification processes. Generally the certification processes may include but are not limited to verification of a mobile device appropriateness of a mobile application and a source of a mobile application. The certification processes may include some combination of the client side engine the runtime engine and the management platform and communications therebetween. That is the enforcement engine may include both client side and server side certification.

The communications within the enforcement engine that is between the management platform the client side engine and the runtime engine as well as the communication between the enforcement engine and the network enterprise may occur using the same or different protocols. For example in some embodiments the communications within the enforcement engine may include separate protocols for communication between the management platform and the client side engine and communication between the management platform and the runtime engine .

In this and other embodiments the client side engine may communicate with the management platform via a web services module discussed below . The communication between the client side engine and the management platform may adopt a proprietary communication protocol such as hypertext transfer protocol extensible markup language HTTP XML . Additionally the protocols may include a collection of endpoints exposed by the management platform for various mobile operating systems such as iOS. The collection of endpoints may exhibit the behavior as outlined in the profile of the mobile operating system.

The communication between the management platform and the runtime engine may vary based on what is being communicated. For example for updates the management platform and the runtime engine may communicate via a persistent secure socket layer SSL connection. The updates discussed above may be pushed via the SSL connection. Additionally between the management platform and the runtime engine there may be a keep alive ping acknowledgement mechanism to ensure that the communication SSL connection is active. The management platform may include a worker thread to service the SSL connection.

In contrast the communication between the runtime engine and the management platform for logs may use a separate protocol. For example the logs may be aggregated by a daemon process in the runtime engine and periodically dispatched to the management platform . The logs may be compressed using various algorithms and transmitted over a standard protocol. For example the logs may be compressed using the Lempel Ziv Markov chain algorithm and transmitted over hypertext transfer protocol secure HTTPS .

For certification processes the enforcement engine may generally issue and revoke digital certificates for mobile devices and or users associated therewith on a certificate authority database. The enforcement engine may use an issuing protocol for the certification processes such as simple certificate enrollment protocol SCEP .

The client side engine and the runtime engine may manage one or more communications denoted at and within the operating environment . The communications and or may include traffic related to mobile applications. For example in the operating environment the client side engine may manage access by the mobile device to cloud based applications that are public mobile applications including managing communications between the client side engine and the cloud based applications . The management by the client side engine may be based on the policy. For example if the policy blocks access to YouTube by the mobile device because YouTube usage consumes excessive bandwidth for instance the client side engine may block the mobile device from accessing YouTube. Alternatively if the policy allows access to YouTube the mobile device may access YouTube from the network cloud .

Additionally or alternatively in some embodiments the client side engine blocks the mobile device from running and or launching the native mobile application . Again whether the client side engine blocks the native mobile application may be based on whether the policy blocks the native mobile applications . For example the native mobile application may be a game the enterprise has deemed to be malicious or potentially malicious. Accordingly the client side engine may block the mobile device from launching the game.

Additionally or alternatively in some embodiments the mobile device may communicate with the enterprise network via a virtual private network VPN tunnel. For example the VPN tunnel may allow the mobile device to access data stored on the enterprise network . In these and other embodiments the client side engine may assist in managing the communication between the mobile device and the enterprise network via the VPN tunnel. As indicated by arrow the client side engine may route communications via the VPN tunnel through the runtime engine . The runtime engine may then route the communications to the corporate router as indicated by arrow thus establishing a VPN tunnel between the mobile device and the enterprise network .

The management of the VPN tunnel may be based on the policy. For example the policy may restrict communication via the VPN tunnel unless a secure wireless WiFi network is available and or a specific VPN conductivity is available. Alternatively the policy may allow communication via the VPN tunnel via a public radio network. The runtime engine and or the client side engine may accordingly block the VPN tunnel without the secure WiFi network and or the specific VPN conductivity. Alternatively the runtime engine and or the client side engine may accordingly allow communication via the VPN tunnel via the public radio network.

Additionally or alternatively the runtime engine and or the client side engine may prohibit access to one or more mobile applications when a VPN connection is not established. In some embodiments the client side engine may then take the user of the mobile device to a VPN configuration screen thereby enabling the user to establish the VPN connection.

Additionally in some embodiments the enforcement engine may include generic routing encapsulation GRE technology applied to communications between the mobile device and the enterprise network . By applying the GRE technology to the communication a GRE tunnel may be generated in which packets of information included in the communication are not parsed or treated like IP packets by any intervening routers.

Additionally or alternatively the runtime engine and or the management platform may communicate with the enterprise network as indicated by arrow . Specifically in some embodiments the runtime engine may access directory information that may be stored in the directory services . According to some policies the mobile device may not be allowed access to the cloud based mobile application and or the VPN tunnel without verification of the user associated with the mobile device . In these and other embodiments the runtime engine may use the directory information to determine and or verify the user associated with the mobile device .

Additionally the directory information may be communicated from the directory services to the runtime engine then to the cloud based mobile application as indicated by arrow . The directory information may modify the cloud based mobile application . Once configured the management platform may periodically check the alive status of the directory information by communicating updated directory information. The communications between the runtime engine and or management platform and directory services may use a standard lightweight directory access protocol LDAP .

The above listed functions of the enforcement engine are illustrative and are not intended to be limiting. The enforcement engine may perform additional or alternative functions. For instance the enforcement engine may be configured to provide a four way mapping between users mobile devices mobile applications both native mobile applications and or cloud based applications enterprise data mobile device data access times or some combination thereof such that the enterprise can have visibility into which user using a particular mobile device accessed a particular mobile application and during which periods of time.

Alternately or additionally the enforcement engine may be configured to provide visibility into which users on which mobile devices accessed which mobile applications enterprise data mobile device data or some combination thereof in the network cloud . Alternately or additionally the enforcement engine may be configured to generate event based alerts when policy violations occur. For example an event may include the user accessing a mobile application that was not permitted as defined in a blacklist In addition if a particular mobile device is misplaced or lost the enforcement engine may be configured to allow the enterprise to disable a mobile application on the particular mobile device for a particular user while continuing to allow the user to operate normally from another mobile device and or to lock or wipe the particular mobile device completely.

The management platform may enable an administrator to perform tasks related to the enforcement of policies. For example the management platform may enable the administrator to define policies monitor devices for compliance with policies view reports including information related to enforcement of policies and view alerts related to the policies. Additionally the management platform may track the operational status of devices and publish or push policies to the devices and to the real time engine for example.

The management platform includes one or more modules and or in an application stack which may enable the performance of the above tasks among others. In some embodiments the enterprise stack may include a Java Platform Enterprise Edition J2EE application stack which may be based on a Spring framework.

The application stack may include one or more modules and that may enable database access between the management platform and a backend database platform database platform and or an LDAP server . The database access between the database platform and the management platform is represented in by arrow . Likewise the database access between the LDAP server and the management platform is represented by arrow .

The database accesses and between database platform and the management platform and or the LDAP server and the management platform may be conducted through an object relational mapping ORM module ORM in a data access object layer an LDAP connector or some combination thereof. In some embodiments the ORM module may include Hibernate framework for instance.

The management platform may also include a web services module web services . The web services may enable communication between the management platform and the client side engine and or a mobile device not shown implementing the client side engine . The communication between the client side engine and the management platform is represented by arrow . In some embodiments the web services may be implemented using a java architecture for XML binding JAXB based data binding. Additionally in some embodiments the management platform may scale the web services by including a multi node deployment platform such as a multi node deployment J2EE with session clustering for example.

In some embodiments the application stack may include an additional layer of security and or a load balancing application. For example J2EE application servers may include an application or server that runs one or more standalone daemon process such as an apache Hypertext Transfer Protocol daemon HTTPd server.

Additionally the application stack may include a logging module logging in connection pooling module pooling in a business logic module business logic in a publishing module publishing in and a mobile device management module MDM module MDM in or some combination thereof. The logging module may receive log store or some combination thereof one or more logs communicated from the runtime engine or the client side engine . For example the runtime engine may transmit logs to the management platform which may be stored in the logging module . The communication between the management platform and the runtime engine is represented in by arrow .

The pooling module may centrally store information related to the policy the enterprise etc. The publishing module controls and communicates updates to the runtime engine the client side engine an enterprise network not shown or some combination thereof. The business logic module may include one or more details of the enterprise. The MDM module includes the details of the policy.

The management platform depicted in is not meant to be limiting. In alternative embodiments the management platforms may include one or more alternative modules that perform for example background jobs or the localization. In this and other embodiments the modules and and applications included therein may be performed by standard applications such as Spring component beans.

The runtime engine may include multiple modules and that may perform runtime and or real time enforcement of the policy enable updating of the policy log violations of the policy communicate logs to the management platform or some combination thereof. Generally the modules and may include daemons that may be run on system boot and or may run continuously.

An inspection engine module inspection engine may be included in the runtime engine to monitor internet traffic traffic . The monitoring of the traffic is represented in by arrow . Specifically in some embodiments the inspection engine may be installed and included in a host not shown . The host may be configured to direct the traffic to the inspection engine . For example in some embodiments the inspection engine includes a listening socket that receives the traffic transmitted from the host. The inspection engine may be aware of data included in a third layer the IP layer and a fourth layer the transmission control protocol TCP layer . When inspection engine intercepts the traffic the inspection engine may view a source IP address of the traffic a destination IP addresses of the traffic an original destination IP address an original TCP port or some combination thereof.

For example the inspection engine may be running on a host with an IP address of 1.2.3.4. Additionally the inspection engine may be listening on a 10000 TCP port. A user of a mobile device with an IP address of 192.168.0.1 is attempting to access with a request a public website with an IP address of 10.20.30.40. The request originates at 192.168.0.1 1051 and is directed to 10.20.30.40 443. The request is routed through the host. Even though the request is directed to host 1.2.3.4 to TCP port it is internally redirected to the listening socket of the inspection engine that is IP address 1.2.3.4 TCP port 10000. The inspection engine may receive the request on the listening socket. The inspection engine may not be able to decrypt the SSL stream of the request. Thus the inspection engine may not be able to determine an original destination. However the inspection engine is able to see the original IP address i.e. 10.20.30.40 and original TCP port i.e. . Based on the original IP address and the original TCP port the policy is applied determining whether the traffic is allowed or not. If the traffic is not allowed the connection is closed. If the traffic is allowed the runtime engine establishes a new connection to the original IP address and original TCP address. Additionally if the new connection is established the runtime engine allows traffic until the new connection is closed.

In some embodiments the traffic includes HTTP traffic and or HTTPS traffic. For HTTP traffic and HTTPS traffic for which certificates and private keys are provided to runtime engine the HTTP traffic or HTTPS traffic is inspected at HTTP level instead of TCP level. Additionally each request included in the HTTP traffic or the HTTPS traffic may be considered separately against the policy. If a particular request included in the HTTP traffic or HTTPS traffic is allowed the data is relayed to a separate connection between the runtime engine and an original service server.

The inspection engine runs as a daemon. Specifically the inspection engine may run several threads to handle HTTP connections and or HTTPS connections. The threads may be referred to as work threads. The work threads may include a master thread that receives incoming connections. The master thread then determines which of the work threads is least busy and transfers the connection over to the least busy thread. If all of the work threads are busy the master thread transfers the connection to the first work thread on a work thread list. Work threads may handle multiple connections simultaneously using an event system processed in each work thread s event loop. The number of Work Threads is configurable. In some embodiments a default number of work threads may be 4 in some embodiments. Additionally or alternatively some embodiments include a policy update thread for handling connections related to a policy update module .

The runtime engine may include the policy update module to monitor the management platform for policy updates. In some embodiments the policy update module may be configurable in a passive mode and or an active mode. In passive mode the policy update module periodically checks if an updated version of the policy is available on the management platform . A time interval between checks may be configurable. In active mode the policy update module establishes persistent connection to the management platform and awaits the management platform to push policy updates. Whenever the connection is dropped the policy update module persistently tries to re establish the connection. In some embodiment a proprietary protocol is used to communicate policy updates.

The runtime engine may include a logger module logger . A function of the logger may include accumulating information and sending logs to the management platform . The logger may not directly contact the inspection engine to obtain logs. Instead the logger may include the syslog that may be used to distribute the logs between the logger and the inspection engine . In some embodiments with multiple networks the syslog may be able to send logs to another host running a second syslog not shown . The communication between the syslog and the second syslog may enable a host running the syslog and the logger to gather logs from multiple hosts. The communication between the syslog and the second syslog may be applicable when an enforcement engine such as the enforcement engine of is utilizing web load balancing for instance.

In some embodiments the logs communicated from the logger to the management platform may be sent over HTTPS protocol. Authentication of the logs may occur at one or more data levels including but not limited to the HTTP level or the SSL level.

The runtime engine may include policy data a proxy HTTP Proxy in and a watcher not shown . The policy data contains a set of rules used for defining access to services and applications. The policy data may reflect the structure of the policy such as a tree structure. The policy data may be updated by the management platform . Additionally the proxy acts as an intermediary for the traffic and requests included therein. The watcher monitors operation of the runtime engine and starts any component thereof if the component is not operational.

In some embodiments the runtime engine may include load balancing capability. Runtime engines utilizing a load balancing capability may include a first host running an inspection engine which is changed to a set of hosts. Each of the set of hosts runs an inspection engine . A runtime engine utilizing a load balancing capability may also include one policy update module . The one policy update module monitors the management platform updates. When the updates are received the updates are pushed to the set of hosts.

The client side engine may include multiple modules and generally client side modules . Generally the client side modules enable the client side engine to locally enforce the policy at a mobile device implementing the client side engine periodically call home to the management platform to pull policy updates and or other application updates track violations which may be pushed to the management platform for further processing some combination thereof or one or more functions.

Specifically the client side engine may include a user interface layer UI layer . The UI layer enables a user of the mobile device to view manage and modify the mobile device. For example the user may attempt to purchase a mobile application from an application contents store store using the UI layer . Generally at least some portion of input from the user of the mobile device is introduced to the mobile device through the UI layer .

A mobile device management core MDM core enables the management platform to implement certain device controls that may be included in the policy. For example MDM core may enable the MDM included in the management platform to wipe or lock the mobile device. The MDM core may interface with multiple systems of the mobile device operating system device OS for example to enable the device controls.

The store may interface with an application content parser parser . The parser generally reviews evaluates or performs analysis of the format of mobile applications or logs. For example the parser may evaluate the format of mobile applications available at the store . In some embodiments the parser may interface with an application programming interface API that may act as a format for mobile applications for use with the device OS .

The client side engine may also include a memory . The memory may store the policy mobile applications etc. The memory may interface with the store to save mobile applications purchased or otherwise obtained through the store for instance. Additionally updates related to the policy enforced by the client side engine may be saved and periodically updated in the memory .

A browser and an application launcher launcher may be included in the client side engine . The browser and the launcher may enable the mobile device to launch a mobile application either locally via the launcher or over a network cloud via the browser . A uniform resource locator trapper URL trapper enforces the policy to prohibit the launch of a mobile application via the browser . In addition an application trapper app trapper enforces the policy to prohibit the launch of a mobile application locally from the launcher . When a mobile application is prohibited from launching a violation may be communicated to a violation logger . A web services module client side web service may communicate the violations to the management platform .

Additionally the client side engine may include a virtual private network wrapper VPN wrapper . Generally the client side engine along with the runtime engine may cooperate to establish and control a VPN between the mobile device and an enterprise. The VPN between the mobile device and the enterprise may be communicated through the runtime engine to enable the user of the mobile device to access enterprise mobile applications for example. The communication between the client side engine and the runtime engine is represented in by arrow .

The signatures may generally describe characteristics of mobile applications. The signatures of the SigDB may be defined and or published by one or more SigDB input sources . The SigDB input sources may include but are not limited to an administrator A the enterprise B and a public source C. The administrator A may include the provider and or administrator of the management system such as the super administrator and or reseller administrator A of . The public source C may include a network or an internet based service that provides information concerning the vulnerabilities of mobile applications examples of such services include but are not limited to SURBL and SPAMHAUS.

An example of a formation of the SigDB may include the administrator A publishing signatures for one or more public mobile applications. In some embodiments the signatures published by the administrator A may form the bases of multiple SigDBs . The signatures published by the administrator A may be described as pre populated signatures because the signatures published by the administrator A may exist in the SigDB before the enterprise B and or public sources C publish signatures.

Additionally the enterprise B may publish signatures for private mobile applications and or sort modify etc. the signatures published by the administrator A. The signatures published by the enterprise B may be described as enterprise definable signatures because generally the enterprise B may provide and control these signatures. The public source C may periodically update the signatures published by the administrator A and or the enterprise B. The signatures published by public sources C may include threat data feeds. In this way the SigDB may be initially created then updated such that the signatures of the mobile applications are up to date and accurate.

Referring to an example SigDB is illustrated that may be implemented in the mobile application management system of . The SigDB may include one or more signature criteria A U generally signature criteria or signature criterion specified for one or more mobile applications A B and C generally mobile application s . In the SigDB the mobile applications include a first mobile application A a second mobile application B and an nth mobile application C. The nth indicates that information about any number of mobile applications may be included in the SigDB .

The signature criteria may include but are not limited to a mobile application name A that may be human readable a mobile application description B that may be human readable a mobile application unique identifier C a mobile application version number D a mobile application tag E that may include multiple commas that separate tags of the mobile application a public vs. private flag F a cloud based vs. native flag G a mobile application download uniform resource locator URL H that may be the URL at which the mobile application may be downloaded and or purchased a mobile application risk that may be designated as a value such as a number 1 5 1 being the least risk and 5 being the greatest risk a mobile application characteristic J which may include designations such as evasive excessive bandwidth prone to misuse transfers files tunnels other apps used by malware or some combination thereof a list of vulnerabilities of a mobile application K which may be designated by spams the network or scans the network or the like a URL reputation L an internet protocol IP address reputation M a mobile application access URLs N which may include the URLs of traffic generated by the mobile application a HTTP URL traffic generated by a mobile application O an IP address for accessing the HTTP sites P a target platform Q that may be an operating system OS name and or OS version a mobile application binary code R a mobile application traffic URL S a mobile application type T and a mobile application category U that may include whether the mobile application is a utility a game a human resource application a finance application or an operational application for instance.

In the SigDB the signature for each mobile application may include a specified value for each of the signature criteria . That is in the depicted and other embodiments the first mobile application A the second mobile application B and the nth mobile application C may include specified values for each of the signature criteria . As mentioned above the specified values may include a number 1 5 indicating risk level or a designation such as public for instance.

Referring back to the SigDB may be viewable to the enterprise B and or the administrator A such that the enterprise B may generate the policy based on the signatures included in the SigDB . The SigDB may enable the enterprise B and or the administrator A to sort and or organize the signatures pertaining to the mobile applications in order to classify or characterize one or more mobile applications by common signature criteria that may be referred to as commonalities. When organized in such a manner the policy or a part thereof may be based on one or more commonalities and may be applied to all mobile applications including the commonality. As used herein applying the policy or a part thereof based on one or more commonalities may be referred to as leveraging the SigDB . As an example of leveraging the enterprise B may restrict all mobile applications with a mobile application risk level of 3 or greater. That is the administrator A may select a set of mobile applications available and organized in the SigDB rather than manually publishing a signature for each mobile application.

More generally the policy may include one or more provisions applied to one or more mobile applications. The policy may be customizable to a given operating environment. For example the provisions may apply to 1 a specific mobile application 2 a subset of mobile applications based on a commonality or lack thereof in the signatures of the mobile applications 3 a user or set of users 4 a type of mobile device 5 a specific geographical area which may be based on a locator 6 a particular time 7 one or more specific vulnerabilities or some combination thereof.

Additionally the policy may include multiple variations of any of the provisions included above. For example the policy may include provisions that enable a first user to use a first private mobile application. Additionally the policy may enable a second user to use a second private mobile application. The first user and or the second user may include individuals an enterprise group or the enterprise.

In some embodiments the policy may include a blacklist A a whitelist B and defaults C. The defaults C include automatic provisions based on the signatures of mobile applications. The blacklists A include a list of mobile applications that are blocked. The whitelists B include a list of mobile applications that are provisioned for use.

The policy may be enforced by the enforcement engine which may correspond to the enforcement engine of . Similar to the operating environment of the enforcement engine may include runtime engines and client side engines. In the depicted and other embodiments the enforcement engine includes client side engine . Additionally enforcement engine includes a runtime engine . In some embodiments the enforcement engine may also include a cloud solution . The cloud solution may utilize the runtime engine the client side engine or some combination thereof. Some additional details of the cloud solution are discussed with reference to .

The client side engine and the runtime engine may respectively correspond to the client side engine and the runtime engine of for example. As such some details of the client side engine and the runtime engine are disclosed herein with respect to .

Referring to an example cloud solution is illustrated that may be implemented in the mobile application management system of . The cloud solution generally includes a mobile device a runtime engine and an enterprise network . The enterprise network includes an active directory and private mobile applications private apps that may be communicated to the runtime engine via an enterprise router . The enterprise router may communicate with an LDAP replica via a permanent site to site VPN tunnel. In some embodiments the permanent site to site VPN tunnel includes an SSL VPN connection. The VPN permanent connection is represented by arrow in . The LDAP replica may communicate the private apps and or information in the active directory to a portal which may relay the private apps and or information in the active directory to the inspection engine . The communication between the portal and the LDAP replica is represented by arrow in Likewise the communication between the portal and the inspection is represented by arrow in . Additionally the portal may communicate with a client side engine on the mobile device . The communication between the portal and the mobile device is represented by arrow in . Policy updates and private apps updates may be pushed from the portal to the mobile device . Through having the LDAP replica updating the policy the runtime engine may update the policy on the mobile device .

Additionally the cloud solution enables formation of a VPN tunnel between the mobile device and the enterprise router . The VPN may be requested by a user of the mobile device for instance. Between a VPN server which may receive the request from the mobile device and the inspection engine may be a permanent VPN tunnel which is represented by arrow in . Additionally between the inspection engine and the enterprise router may be a permanent VPN tunnel which is represented by arrow . Thus the VPN server may initiate and or terminate the VPN between the mobile device and the enterprise router . Through the VPN tunnel the mobile device may have access to the private apps through the enterprise router .

Referring to an example policy organized as a 2 2 matrix is illustrated. The 2 2 matrix includes 2 columns and 2 rows creating 4 blocks and . The policy may be based on whether a mobile application is a native mobile application or a cloud based mobile application . This categorization designates the two rows. Additionally the policy is based on whether the mobile application is a private mobile application or a public mobile application . This categorization designates the two columns. Whether a mobile application is a private mobile application or a public mobile application and whether the mobile application is a native mobile application or a cloud based mobile application may be included in a SigDB such as the SigDB of .

A first block describes a portion of the policy applied to mobile applications that are both public mobile applications and native mobile applications . A second block describes a portion of the policy applied to mobile applications that are both private mobile applications and native mobile applications . A third block describes a portion of the policy applied to mobile applications that are both public mobile applications and cloud based mobile applications . A fourth block describes a portion of the policy applied to mobile applications that are both private mobile applications and cloud based applications .

Each block and in the 2 2 matrix organizing the policy includes a default rule and an enforcement strategy. The default rule may be based on whether the mobile application is a public mobile application or a private mobile application and the enforcement strategy is based on whether the mobile application is a native mobile application or a cloud based mobile application . Specifically in this and other embodiments if the mobile application is a public mobile application the policy includes a default rule for allowing the mobile application except for mobile applications that are blocked i.e. mobile applications that are included on a blacklist By allowing the non blacklisted mobile application a user of a mobile device may use the mobile application locally on a mobile device and or have access to the mobile application via a network cloud. Essentially the policy generally allows use of public mobile applications unless the enterprise deems or otherwise determines a public mobile application to be undesirable. An example of a blacklisted mobile application may include pornographic applications.

Additionally in this and other embodiments if a mobile application is a private mobile application the policy includes a default rule to block the mobile application except for provisioned applications. That is the mobile applications are placed on a whitelist. By blocking private mobile applications the policy generally blocks a user from using a mobile application locally at a mobile device and or prohibits access by the user via a network cloud.

The enforcement strategy of the policy can be based on whether the mobile application is a native mobile application or a cloud based mobile application . As above the policy may be enforced by an enforcement engine that may include a client side engine and a runtime engine. For example the policy may be enforced by the enforcement engine of .

Generally for mobile applications blocked by the policy the client side engine blocks the mobile application when launched on the mobile device drops communications including traffic related to the mobile application prevents a user from accessing a mobile application or some combination thereof. Similarly the runtime engine drops mobile application traffic related to mobile applications blocked by the policy .

Specifically for mobile applications described by the first block the client side engine blocks mobile applications included on the blacklist when launched. Additionally the runtime engine drops traffic for mobile applications included on the blacklist For mobile applications described by the second block the client side engine blocks all private mobile applications except the mobile applications included on the whitelist. Additionally the runtime engine drops traffic related to private mobile applications except traffic related to mobile applications included on the whitelist. For mobile applications described by the third block the client side engine prevents a user from accessing public mobile applications included on the blacklist but allows the rest. Additionally the runtime engine drops traffic related to public mobile applications included on the blacklist but allows traffic related to other public mobile applications. For mobile applications described by the fourth block the client side engine prevents a user from accessing private mobile applications from a mobile device browser except for private mobile applications included on the whitelist. Additionally the runtime engine drops traffic related to all private mobile applications except private mobile applications included on the whitelist which is allowed.

The method may begin at by installing a client side engine of an enforcement engine on a mobile device associated with a user. The client side engine may be downloaded over the air OTA according to some embodiments. Alternately or additionally as part of or after completion of the installation the client side engine of the enforcement engine may be configured to prompt the user to authenticate the installation of the client side engine. Additionally the client side engine may include a device guard.

At the method may include routing communications between the mobile device and the network cloud or enterprise network through the enforcement engine. In some embodiments the enforcement engine may include one or more runtime engines that may manage the communications between the mobile device and the network cloud or enterprise network. The runtime engines may further include a MAACS engine and or a cloud solution.

At the method may include generating a policy based on a SigDB that includes one or more signatures pertaining to one or more mobile applications. The SigDB may include signature criteria describing characteristics of the one or more mobile applications. In some embodiments the policy may include one or more default rules a blacklist a whitelist or some combination thereof.

At the method may include enforcing compliance with the policy. The enforcement strategy may occur at the client side engine of the enforcement engine or at the runtime engine of the enforcement engine. In some embodiments the policy may be communicated to the client side engine such that the client side engine blocks a mobile application included in the blacklist when launched on the mobile device and or blocks mobile applications not allowed under the policy by default. Additionally or alternatively enforcing the policy may include communicating the policy to the runtime engines. The runtime engines may drop the communications of traffic related to mobile applications included in the blacklist and or drop the communications of traffic related not allowed under the policy by default. Regardless of whether the enforcement strategy occurs at the client side engine and or the runtime engine in some embodiments the enforcement strategy may occur in real time.

In some embodiments the signature includes information indicating whether the mobile application is a private mobile application or a public mobile application and information about vulnerabilities introduced to the enterprise by the mobile application. Additionally or alternatively the signature of the mobile application may include whether the mobile application is a cloud based mobile application or a native mobile application.

At the method may include provisioning at least one private mobile application. In some embodiments provisioning may include enabling a first user to use the private mobile application. Use of the private mobile application may include accessing a cloud based mobile application such as through a browser and or launching and running a native mobile application.

At the method may include by default blocking the mobile applications defined as private mobile applications except the at least one private mobile application that is provisioned. In some embodiments blocking a mobile application includes preventing access to a cloud based mobile application and stopping native mobile applications when launched locally at the mobile device.

At the method may include blocking at least one public mobile application based on the information about vulnerabilities. At the method may include by default allowing use of the mobile applications defined as public mobile applications except the at least one public mobile application that is blocked.

In some embodiments of the method enabling a first user to use the private mobile application blocking the mobile applications blocking the at least one public mobile applications allowing use of the mobile applications define as public mobile applications or some combination thereof occur in real time.

At the method may include leveraging the SigDB which includes enabling the enterprise to provision a plurality of the mobile applications based on a commonality or lack thereof in the information included in the signatures in the SigDB pertaining to the plurality of mobile applications. In some embodiments leveraging the SigDB may include blocking multiple public mobile applications based on a commonality or lack thereof.

Depending on the desired configuration processor may be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. Processor may include one more levels of caching such as a level one cache and a level two cache a processor core and registers . An example processor core may include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. An example memory controller may also be used with processor or in some implementations memory controller may be an internal part of processor .

Depending on the desired configuration system memory may be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. System memory may include an operating system one or more applications and program data . Application may include policy enforcement algorithms that are arranged to enforce the policy during use of the mobile device management system. Program data may include the SigDB development programs that may be useful for generating the policy as is described herein. In some embodiments application may be arranged to operate with program data on operating system such that communicating enterprise media content may be performed on the computing device .

Computing device may have additional features or functionality and additional interfaces to facilitate communications between basic configuration and any required devices and interfaces. For example a bus interface controller may be used to facilitate communications between basic configuration and one or more data storage devices via a storage interface bus . Data storage devices may be removable storage devices non removable storage devices or a combination thereof. Examples of removable storage and non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

System memory removable storage devices and non removable storage devices are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which may be used to store the desired information and which may be accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may also include an interface bus for facilitating communication from various interface devices e.g. output devices peripheral interfaces and communication devices to basic configuration via bus interface controller . Example output devices include a graphics processing unit and an audio processing unit which may be configured to communicate to various external devices such as a display or speakers via one or more A V ports . Example peripheral interfaces include a serial interface controller or a parallel interface controller which may be configured to communicate with external devices such as input devices e.g. keyboard mouse pen voice input device touch input device etc. or other peripheral devices e.g. printer scanner etc. via one or more I O ports . An example communication device includes a network controller which may be arranged to facilitate communications with one or more other computing devices over a network communication link via one or more communication ports .

The network communication link may be one example of a communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. A modulated data signal may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF microwave infrared IR and other wireless media. The term computer readable media as used herein may include both storage media and communication media.

Computing device may be implemented as a portion of a small form factor portable or mobile electronic device such as a cell phone a personal data assistant PDA a personal media player device a wireless web watch device a personal headset device an application specific device or a hybrid device that include any of the above functions. Computing device may also be implemented as a personal computer including both laptop computer and non laptop computer configurations.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

