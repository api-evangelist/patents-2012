---

title: Automated technique for generating a path file of identified and extracted image features for image manipulation
abstract: A method for identifying, by at least one processor, at least one feature in a raster image based on a set of extraction parameters, and generating, by the at least one processor, a feature path file conforming to a vector format, the feature path file represents a plurality of instances of the at least one feature in the raster image. A system and computer program product are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183454&OS=09183454&RS=09183454
owner: LOCKHEED MARTIN CORPORATION
number: 09183454
owner_city: Bethesda
owner_country: US
publication_date: 20121106
---
This application claims the benefit of U.S. Provisional Application No. 61 672 124 filed Jul. 16 2012 and incorporated herein by reference in its entirety.

Embodiments relate to image processing and more particularly to an automated technique for generating a path file of identified and extracted image features for image manipulation.

It is common practice to identify features like doors and windows from the images used in modeling and or simulations. Identifying features in an image allows the assignment of different material codes to regions of the image. It also allows parts of the image to be selectively adjusted to create night scenes from day scenes. However the benefits of identifying the features from an image are often overshadowed by the time consuming nature of the processes currently available for feature identification and feature based manipulation of graphic images.

Current approaches to features extraction typically require a user to manually identify i.e. outline and fill the features that are to be extracted within an image manipulation software program. The amount of time required to perform feature based manipulation of graphic images increases with the quantity and types of features contained in the image.

For example extracting the windows from an image of a single house takes significantly less time than identifying the windows from an image of a city street having multiple buildings and performing manipulations based on the identified windows. More features require more time because the user must detect or identify each feature individually.

The typical efficiency short cut copy and paste provides some help to the user especially when the features are uniform. However each pasted area must still be individually placed upon the corresponding feature s content as expressed in an image. Further this usefulness is significantly reduced when the features lie on varying planes of perspective i.e. a copy of an extraction area for a front facing window will not match that of a side facing window .

Embodiments relate to a system method and computer program product for automatically generating a path file of identified and extracted image features for image manipulation. An embodiment of the method comprises identifying by at least one processor at least one feature in a raster image based on a set of extraction parameters and generating by the at least one processor a feature path file conforming to a vector format the feature path file represents a plurality of instances of the at least one feature in the raster image.

An embodiment of the system comprises an extraction engine configured to identify at least one feature in a raster image based on a set of extraction parameters. The extraction engine is further configured to generate a feature path file conforming to a vector format. The feature path file represents a plurality of instances of the at least one feature in the raster image and a data storage is configured to store the raster image and or the feature path file of the raster image.

An embodiment of the computer program product provided by a non transitory processor readable storage medium comprises a computer software code that when executed on a processor causes the processor to identify at least one feature in a raster image based on a set of extraction parameters and generate a feature path file conforming to a vector format the feature path file represents a plurality of instances of the at least one feature in the raster image.

The feature extraction engine determines detects or identifies boundaries or regions for each feature of the set of one or more features . In an embodiment the feature extraction engine may determine detect or identify each feature through pattern recognition. For example if a feature is a window and this feature is designated for extraction the feature extraction engine determines the edges or boundaries of each instance of the window as expressed within the initial raster image . The boundaries are defined using geometrical primitives such as points lines curves shapes or polygons. For example a window an example of a feature may be defined as a rectangle having four line segments and four points. Thus the feature extraction engine can use a vector representation or a vector format to define detected features. This vector representation specified in the feature path file is referred to as an extracted feature .

An image manipulation IM program or engine when executed may conduct a graphic manipulation operation against the initial raster image that results in a manipulated raster image . The IM program or engine uses the feature path file to define boundaries where graphic manipulation operations of the IM program or engine are confined or constrained by these boundaries. The manipulated raster image may include one or more post manipulation PM features . The PM features correspond to at least one feature of the initial raster image where a bound by one of the extracted features graphics manipulation operation has been performed.

The image manipulation program or engine illustrated in and the imagine manipulation program or engine illustrated in are each synonymous with an IM program or an IM engine and may be referenced as an image manipulation program engine.

In an embodiment the initial raster image may be a digital photograph of a street scene. The scene can include multiple buildings that have windows of varying sizes that are to be extracted as part of the image processing procedure.

The feature extraction engine may be invoked to create a feature path file for the initial raster image . The feature path file may be thought of as a line drawing representation of the extracted features of the initial raster image .

It is important to note that conventional approaches for generating a feature path file require a significant amount of user interaction. Using the process shown in diagram the user interaction required by the feature extraction engine is the selection of parameters that is to be used to identify a feature for generating the feature path file .

For example a conventional semi automated approach may require a user to be present during generation of the feature path file in order to approve reject or modify each extracted feature . The feature extraction engine as described herein however can produce the feature path file without this interaction on the part of a user.

Once the feature path file has been created for the initial raster image both the initial raster image and feature path file may be used by IM program or engine to produce the manipulated raster image .

Hence the feature path file may be used to selectively modify the initial raster image to produce the manipulated raster image . For example the areas defined that represent windows can be lightened while the walls are darkened. This produces a convincing night scene that correlates to the day scene. Windows and walls reflect light and transmit heat differently. Feature detection and manipulation facilitates the assignment of different material codes to each pixel.

In the system illustrated in a user may execute the functionality of an image processing system via a user interface running on a client device . The client device may represent a variety of computing devices capable of supporting operation of the user interface and capable of communicating with the image processing system over a network . In an embodiment the client device may communicate directly with the image processing system . In another embodiment the client device and the image processing system may be integrated into a single computer or computing device.

The image processing system can represent the hardware and or software required to perform a variety of image manipulation operations. The image processing system may include an image manipulation program or engine and a data store for storing raster images feature path files and manipulated raster images .

However the data store need not store raster images feature path files and manipulated raster images and may only store at least one of these data. It should be noted that the image processing system can include additional components not shown for performing other image processing functions.

The image manipulation program or engine may be a software application designed to perform a variety of operations upon image files such as the raster images contained in the data store . A GNU image manipulation program such as by way of non limiting example GIMP may be an example of an image manipulation program or engine suitable to operate in system .

The image manipulation program or engine can include a feature extraction engine . The feature extraction engine can be a software application that interfaces with the image manipulation program or engine to produce feature path files for selected raster images . Communication between the feature extraction engine and the image manipulation program or engine can utilize applicable protocols programming languages and or application programming interfaces APIs .

For example the feature extraction engine can be a plug in component for GIMP that uses the GIMP API to execute functions using GIMP.

In another embodiment the feature extraction engine can be a stand alone software component that is separate and or remotely located from the image manipulation program or engine . In such an embodiment the communications between the feature extraction engine and image manipulation program or engine may be conveyed over the network .

Operations or techniques of the feature extraction engine may include but are not limited to edge detection edge linking Gaussian blurs histograms and hysteresis. The feature extraction engine can have a feature detection dialog graphical user interface GUI that the user can access via the user interface . User interface can be a GUI that allows the user to select and execute functions of the image manipulation program or engine . The feature detection dialog GUI may be a GUI configured to accept user entered values for the parameters of the feature extraction engine as will be described in more detail in where the parameters are received from the GUI and communicated to the extraction engine . Using the parameters entered by the user in the feature detection dialog GUI the feature extraction engine can generate a feature path file for a specified raster image . The feature path file can be a vector image file that defines the areas that correspond to the features contained in the raster image .

In another embodiment the feature extraction engine can be configured to focus on a specific type of feature. In such an embodiment the feature extraction engine can process the raster image for only the features that it has been designed to identify.

For example the feature extraction engine may be configured to only identify windows within a raster image leaving doors untouched.

Yet in another embodiment the feature extraction engine can have a menu that allows the user to specify the type or category of the feature to be identified for extraction. As such the feature extraction engine can include logic for differentiating between the different types or categories of features. In an embodiment the different types of features are architectural features of buildings structures or the like.

Once the feature path file has been generated the user can apply the feature path file to the raster image using the image manipulation program or engine . Application of the feature path file to the raster image can allow the user to select the extracted or identified features of the image and perform graphics manipulation functions upon the extracted or identified features.

In an embodiment all occurrences of a particular extracted or identified feature of the image may be selected or highlighted simultaneously so that graphics manipulation can be applied simultaneously across a selected area of the initial raster image or the entire raster image on the particular feature.

For example using the Path to Selection function of GIMP the user can select every feature of a raster image defined in the feature path file . Once the features are selected the user can then fill the selected areas of the raster image with the background color of the image removing the features.

Thus the user can use the feature path file generated by the feature extraction engine to produce a manipulated raster image .

It is important to emphasize that the feature extraction engine can require the original image to be of a raster graphics format e.g. .BMP .GIF .JPEG .PNG etc. and not a vector graphics format e.g. .AI .SVG. .WMF etc. . However the embodiments do not require that the original file adhere to any specific file format.

Network can include any hardware software and firmware necessary to convey data encoded within carrier waves. Data can be contained within analog or digital signals and conveyed though data or voice channels. Network can include local components and data pathways necessary for communications to be exchanged among computing device components and between integrated device components and peripheral devices. Network can also include network equipment such as routers data lines hubs and intermediary servers which together form a data network such as the Internet. Network can also include circuit based communication components and mobile communication components such as telephony switches modems cellular communication towers and the like. Network can include line based and or wireless communication pathways.

As used herein presented data store can be a physical or virtual storage space configured to store digital information. Data store can be physically implemented within any type of hardware including but not limited to a magnetic disk an optical disk a semiconductor memory a digitally encoded plastic memory a holographic memory or any other recording medium. Data store can be a stand alone storage unit as well as a storage unit formed from a plurality of physical devices. Additionally information can be stored within data store in a variety of manners. For example information can be stored within a database structure or can be stored within one or more files of a file storage system where each file may or may not be indexed for information searching purposes. Further data store can utilize one or more encryption mechanisms to protect stored information from unauthorized access. Additionally the extraction engine image manipulation program or engine or other component of the image processing system may feature an internal data storage to store the raster images feature path files and or manipulated raster images .

Method can begin at step where a user can load a raster image into an image manipulation program or engine such as without limitation a GNU image manipulation program. At step the user can select a command for Feature Extraction to be performed upon the loaded raster image. In an embodiment the user will select the Feature Extraction command which invokes the feature extraction engine such as by accessing a feature detection dialog GUI described below in relation to . The command can be presented to the user within the user interface of the image manipulation program or engine in a variety of ways such as a menu option a context menu option a toolbar button a keyboard short cut and the like.

In step the feature extraction engine can automatically generate a feature path file in vector format for features contained in the loaded raster image based on a set of selected parameters. The user can then save the feature path file in step . Then in step the user can use the image manipulation program or engine to apply the feature path file to the loaded raster image in order to perform raster image manipulations. Execution of step selects the features in the feature path file. Thus the user then has the ability to perform image manipulation operations upon areas of the raster image that are defined by the feature path file.

Method can begin with step where the feature extraction engine may receive a command to perform feature detection and or extraction on a raster image. The user can be presented with the feature detection dialog GUI in step . In step the user selected feature extraction parameters are received.

Using the user selected feature extraction parameters the feature extraction engine can identify the features in the raster image in step . The feature identification process is described in relation to . In step an initial vector representation of the identified features can be created. The vector representation can define boundaries for the detected features or a subset thereof. An additional step may be provided in which the initial vector representation of the identified features are segregated by the extraction engine into one or more groups based on geometric similarity and or planar orientation of the identified features on a planar surface within the image. For example the extraction engine may segregate a group of windows on an architectural structure into two different groups with respect to a same planar surface of the architectural surface of each group of windows.

For each group of geometrically similar features i.e. all square windows all rectangular windows all semi circular windows etc. a template representing the feature can be generated from the initial vector representations in step . That is in step the vector representations of geometrically similar features can be compared to each other to synthesize a general shape to represent that group of geometrically similar features. In a mathematical sense step can be thought of as normalizing the set of geometrically similar features. At this step the initial vector representation of the identified features may be refined wherein refinement removes errant vectors and normalizes the initial vector representations of the identified features.

In step the template of the feature can be applied to each instance of the feature in the raster image. In an embodiment the final vector representation of the features in the raster image is generated by replacing the initial vector representations of the features with the template. For example the initial vector representations for a group of rectangular windows of roughly the same size can be replaced with the template generated in step for the group of rectangular windows to generate the final vector representation. Each template can define characteristics for a related type or category of the feature. In one embodiment window template s gutter template s door template s parking lot template s and the like can exist. Thus a list of templates may be generated. Each template is dynamically generated for the perspective view or orientation of the architectural structure in the raster image.

The execution of steps and has been performed for each group of geometrically similar features which can result in a final vector representation of the features that defines boundaries of the each of the detected features. The final vector representation can then be presented as the feature path file or a derivative thereof to the user in step . The feature path file may be stored and used by a computing device and need not be presented to a user in one embodiment.

Method can begin in step where the feature extraction engine executes a Gaussian blur process on the raster image to generate a blurred raster image. The initial blur reduces image noise which can result in extraneous paths. The Gaussian blur process may be applied using a selectable kernel size and methods to reduce noise. A decision of whether or not to execute a Gaussian blur process can depend upon characteristics and properties of an initial raster image. An edge detection operation can be performed in step on the blurred raster image. The edge detection operation of step can provide magnitude and directional information for each pixel. Edges are detected where the magnitude and or direction changes between adjacent pixels. The edge detection is performed using one of a plurality of edge detection algorithms. The algorithms may be further refined with a specifiable sensitivity.

In step two levels of thresholds can be applied to the pixel values. Step can separate the pixels of a detected edge into color groupings of black gray and white representing edges possible edges and non edges hysteresis respectively.

These color groupings may be considered predefined threshold values used to designate each pixel. Histograms for the black pixels can then be computed in the horizontal vertical and or diagonal orientations in step . In step the gray pixels can be converted to either black or white by applying thinning and or hysteresis techniques to the gray pixels and comparing the results of the thinning and or hysteresis with the computed histograms. Edge linking can then be performed in step using the directional information derived in step . Step essentially connects all the lines such as but not limited to linking ends of the detected edges that are proximate to each other of a feature to create a closed shape. In an embodiment a removing step may be performed of the detected edges from the initial vector representation of the raster image when a result of the edge linking step does not create a closed shape by linking all ends of the detected edges that are proximate to each other.

The feature detection dialog GUI can be a graphical user interface GUI that allows a user to input values for various feature extraction parameters using one or more of data entry fields radios buttons and or slide controls. The feature extraction parameters are executed by the feature extraction engine to generate the feature path file of the raster image.

Although the feature extraction parameters can include but are not limited to a horizontal and vertical blur radius a blur method one or more edge detection algorithms a method to detect or manipulate edges upper and lower variable thresholds for edge detection different histogram modes variable sensitivity and the like. Examples of histogram modes include but are not limited to linear and logarithmic. Examples of Blur methods include but are not limited to filters for Infinite Impulse Response IIR and Run Length Encoding RLE . Examples of the edge detection algorithms include but are not limited to Sobel Prewitt Kirsch Robinson Gradient Roberts Differential and Laplace. The edge modes may include but not limited to wrap smear and black. One or more of the feature extraction parameters may be supported by the IM program or engine. If the feature extraction engine is a plug in one or more of the feature extraction parameters may be accessed through the IM program or engine if supported by the IM program or engine .

The effects of changes to the values of the feature extraction parameters can be dynamically presented to the user within a preview area of the feature detection dialog GUI . This may assist the user in selecting values for the feature extraction parameters that produce the desired result. Display of the preview area can be toggled on and off using a preview control . Although illustrates a preview area in the GUI the GUI need not include a preview area and need only include an interface for the user to input parameters of the extraction parameters.

Function buttons can allow the user to execute the functions associated with the feature detection dialog GUI . As shown in this example the function buttons can include a help button an OK button and a cancel button . The GUI may include less or more function buttons than these function buttons illustrated in depending on the specific application.

Selection of the help button can present the user with a window in which helpful information about the feature detection dialog GUI is presented. Selection of the OK button can trigger the feature extraction engine to generate the feature path file using the values entered for the feature extraction parameters . The values of the feature extraction parameters can be discarded and the feature detection dialog GUI closed upon selection of the cancel button .

The embodiments described herein may be embodied as a method system or computer program product. Accordingly an embodiment may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore the disclosure may take the form of a computer program product on a computer usable storage medium having computer usable program code embodied in the medium. In an embodiment the disclosure is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore an embodiment can take the form of a computer program product accessible from a non transitory computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate or transport the program for use by or in connection with the instruction execution system apparatus or device. Any suitable computer usable or computer readable medium may be utilized. The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device. Non limiting examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a rigid magnetic disk and an optical disk. Current examples of optical disks include but are not limited to compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Computer program code for carrying out operations of the disclosure may be written in an object oriented programming language such as JAVA Smalltalk C or the like. However the computer program code for carrying out operations of the disclosure may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which may provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters although other types may be utilized.

The disclosure is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to the embodiments. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams may be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The diagrams in illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof. Furthermore the use of the term at least one of is intended to mean the same as the term and or where either is used to indicate that either a choice between alternatives are included or all alternative choices are included.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the embodiments. The embodiments were chosen and described in order to best explain the principles and the practical application thereof and to enable others of ordinary skill in the art to understand the embodiments with various modifications as are suited to the particular use contemplated.

