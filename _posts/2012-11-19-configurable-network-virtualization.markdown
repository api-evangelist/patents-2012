---

title: Configurable network virtualization
abstract: A network profile describes one or more characteristics of a network including bandwidth, latency, rate of packet loss, duplication, corruption, or reordering, and so forth. Using the network profile, one or more adjustments are made to network traffic between a server device and an application executing on a client device. These adjustments virtualize the profiled network and emulate how the profiled network affects traffic. Such virtualization may enable an application to be tested under different network conditions corresponding to different network profiles.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09113358&OS=09113358&RS=09113358
owner: Google Inc.
number: 09113358
owner_city: Mountain View
owner_country: US
publication_date: 20121119
---
With the growing popularity of mobile devices there is an increasing demand for applications or apps to run on such devices. To ensure that an app is reliable it may be tested by the app developer s or tester s . Because the app may be tested under conditions that may not correspond to real world conditions of varying network properties potential bugs or usability issues in the app may go unidentified during the testing. Such problems may be revealed as end users run the app under various conditions potentially leading to degradation in the end user experience or enjoyment of the app.

Certain implementations and embodiments will now be described more fully below with reference to the accompanying figures in which various aspects are shown. However various aspects may be implemented in many different forms and should not be construed as limited to the implementations set forth herein. Like numbers refer to like elements throughout.

This disclosure describes embodiments of systems methods and computer readable media for configurable network virtualization through dynamic adjustment of network traffic. Computing devices such as smartphones tablet computers and the like operate with varying network service conditions of a speed link quality and so forth when using wireless local area networks WLAN wireless wide area networks WWAN or other wireless technologies. Accordingly an application that employs a network connection may perform differently as the device running the application transitions between different networks. For example the user device may physically move between areas having differing network service conditions.

Adjustments may be made to the network traffic between a server device and an application executing on a client device. These adjustments may serve to emulate data transfer on different networks under different network conditions and so forth. The network traffic may be adjusted to emulate traffic over a network profile with previously determined characteristics of bandwidth latency or rate of packet loss duplication corruption or reordering or other network characteristics. Such emulation of network characteristics enables a virtualization of the network.

Network virtualization may enable an application to be tested under different network conditions corresponding to different network profiles without costly field testing of an application under real world network conditions. For example an app developer may have an app that runs on a particular mobile device running a particular mobile operating system. The developer may wish to test the functionality performance usability or other aspects of the app as it communicates over a 3G WAN provided by a telecommunication service provider BT T with a particular signal strength e.g. 3 bars . Such testing may enable the optimization or verification of an application s functionality performance usability and so forth on one or more networks with various characteristics.

A network profile may include one or more parameters describing characteristics of a network. The parameters may have been previously determined through measurements of the network bandwidth latency or rate of packet loss duplication corruption or reordering or other network characteristics. The developer may request that network traffic to and from the device be adjusted to emulate the characteristics for the network and virtualize the network enabling the app to be tested under a controlled set of network conditions. Results of testing the app under various network conditions may be employed to fix bugs in the app to improve the performance or the usability of the app or for other purposes.

The environment may include one or more client devices that are owned by operated by or otherwise associated with one or more users. In some implementations the client device s include one or more mobile computing devices such as smartphones tablet computers electronic book readers and the like. However implementations are not so limited and the client device s may include any other type of computing device that is able to communicate with other devices over a network including but not limited to desktop computers personal computers laptop computers wearable computers implanted computers thin clients terminals game consoles mobile gaming devices and the like. In some implementations the client device s may include emulation software running on a first device and emulating a second different device. For example the client device s may include an emulation of a mobile device such as a smartphone the emulation executed on a personal computer a workstation a server computer or other type of device.

In some implementations the client device s may include one or more applications under test stored in memory and executed by a processor of the client device s . The application under test may include any software module program or application that is executable on a computing device. The application under test may be a stand alone application or may operate in conjunction with one or more other software modules libraries or application programming interfaces APIs . In some cases the application under test may include functionality to communicate with other devices over a network connection. Any type of the application under test may be supported by implementations including games document processing applications media players chat programs mail clients social networking applications navigation programs mapping programs or other types of applications. In some cases the application under test may include one or more modules of an operating system OS .

The client device s may also include a network traffic redirection module . In some implementations the network traffic redirection module may be part of an OS of the client device s . For example the network traffic redirection module may be included in a network communications stack of an OS or may be included in an OS utility that enables a user of the client device s to select a network for communications between the client device s and other devices. In some implementations the network traffic redirection module may be an application installed on the client device s and not part of the OS. In some implementations the network traffic redirection module may operate to redirect outgoing network traffic to an IP address of the traffic modification server device s . The client device s may include other modules and are described further with reference to .

The environment may also include one or more server computing devices such as backend server device s and traffic modification server device s . Such servers may include any type of computing device including but not limited to network servers rack mounted servers workstations desktop computers laptop computers tablet computers mobile computing devices virtual servers cloud resources and the like. Further the server devices may include one or more computing devices that operate in a cluster or other grouped configuration to share resources balance load increase performance provide fail over support or redundancy or for other purposes. The servers may also include one or more hardware modules and one or more software modules processes or applications to perform tasks as described herein.

As shown in the environment may include one or more backend server devices . The backend server device s may provide one or more services accessible to the application under test over a network. In some cases the application under test may participate in a network connection or a communication session with the backend server device s and send or receive data to or from a service provided by the backend server device s . The application under test may be associated with the service on the backend server device s for example in a client server relationship.

In the course of communicating with the backend server device s the application under test may send outgoing network traffic toward the backend server device s with a destination address corresponding to the backend server device s . In some implementations the network traffic redirection module may function as an intermediary in such communication receiving the outgoing network traffic from the application under test and sending it over a network. In some implementations the application under test may itself send the outgoing network traffic . Implementations support any type of network communications traffic for outgoing network traffic or the other network traffic depicted in . For example the traffic described may employ any protocol at any level of the Open Systems Interconnection OSI model for computer network communications.

In some implementations the communications traffic between the client device s and the backend server device s is intercepted by one or more traffic modification server device s and modified for network virtualization as described herein before being sent on to the backend server device s . The traffic modification server device s are described further with reference to .

The traffic modification server device s may include a traffic modification module to perform traffic modification operations as described further herein with reference to .

The traffic modification server device s may also store network profile data to be employed by the traffic modification module in traffic modification operations. The network profile data may include data for a plurality of network profiles each network profile associated with a plurality of network profile parameters that describe one or more characteristics of a network. The network profile data is described further with reference to .

In some implementations the traffic modification server device s may provide a traffic modification user interface module to enable a user to manage or control traffic modification operations performed by the traffic modification module . In some cases the traffic modification user interface module may be provided as a web site. The traffic modification user interface module may accept one or more commands from a user requesting network virtualization. Such commands may be entered individually or included in a script or program that executes to send commands to the traffic modification user interface module or the traffic modification module . An example of the traffic modification user interface module is described further with reference to .

In some implementations the environment may include one or more management device s which a user may employ to interact with the traffic modification user interface module . In some cases a user may interact with the traffic modification user interface module through the client device s through various components of the traffic modification server device s or through other means.

The traffic modification module may receive the outgoing network traffic from the client device s modify the outgoing network traffic to provide a virtualized network and send modified outgoing network traffic to the backend server device s . The backend server device s may generate and send incoming network traffic that is addressed to the client device s or to the application under test . In some cases the incoming network traffic may be response traffic generated and sent by the backend server device s in response to the modified outgoing network traffic .

The incoming network traffic may be intercepted by the traffic modification server device s and may be modified by the traffic modification module to virtualize a network. The modified incoming network traffic may then be sent to the client device s to the network traffic redirection module to the application under test or to another module of the client device s .

In the example of the traffic modification server device s are situated in a network topology between the client device s and the backend server device s intercepting and modifying traffic sent between the client device s and the backend server device s . In some implementations the traffic modification server device s may function as a network proxy server and the traffic redirection module may configured to redirect the outgoing network traffic to a network address e.g. IP address of the traffic modification server device s .

In some implementations a first type of network may connect the client device s to the traffic modification server device s and a second type of network may connect the traffic modification server device s to the backend server device s . In some implementations the connection between the client device s and the traffic modification server device s may be over a WiFi network that conforms to an IEEE 802.11 family of communications standards such as 802.11g 802.11n and so forth. In some implementations the connection between the client device s and the traffic modification server device s may be over a Bluetooth connection or other type of wireless connection. In some cases this connection may be a wired network connection such as a universal serial bus USB connection compliant with the standards promulgated by the USB Implementers Forum Inc. of Beaverton Oreg.

In some implementations the connection between the traffic modification server device s and the backend server device s may be over a wired network such as a T1 or T3 line. Both connections may be high speed and high quality connections to ensure that degradation of the network traffic is controlled through network traffic modifications made by the traffic modification server device s . Implementations support any type of network connection between the devices shown in or other devices.

In some implementations the client device s may be included in a cloud of host devices that may be remotely controlled for testing auditing or validation of applications as described in U.S. patent application Ser. No. 13 631 919 filed on Sep. 29 2012 titled Application Validation Through Object Level Hierarchy Analysis and in U.S. patent application Ser. No. 13 655 667 filed on Oct. 19 2012 titled Application Auditing Through Object Level Code Inspection both of which are incorporated by reference into this disclosure.

The traffic modification server device s and its traffic modification module may operate to intercept and modify network traffic to and from any number of application s under test executing on any number of client device s and to and from any number of backend server device s . In cases where traffic between multiple client device s multiple application s under test or multiple backend server device s is being intercepted and modified the traffic modification module may operate to define a plurality of sub channels where each sub channel carries traffic between a client device running an application under test and a backend server device . In such cases the traffic modification module may multiplex the intercepted traffic based on an identifier e.g. an IP address or other identifier of one or both of the client device and the backend server device .

In cases where the traffic modification module is modifying multiple streams of traffic carried on multiple sub channels different network profiles may be applied to the multiple streams of traffic to virtualize different networks. In some implementations a network channel to or from the traffic modification server device s may have a measured bandwidth that is greater than or equal to the sum of the emulated bandwidths of the multiple sub channels defined within the channel. In some implementations the network traffic on each of the sub channels may be prioritized based on a prioritization of testing for various applications under test or based on other considerations.

For example where the network connection between the traffic modification server device s and the backend server device s or the client device s has a bandwidth of 1000 kilobits second three sub channels may be defined having bandwidths of 300 500 and 200 kilobits second. These three sub channels may each carry network traffic between a backend server and an application under test on a client device . Each sub channel may carry network traffic over a virtualized network having emulated network characteristics provided through the application of a network profile as described below and the applied network profile may be different for each sub channel.

In some implementations the traffic modification module operates to virtualize a network according to the network profile data as described herein and does not virtualize the backend server device s . In other implementations the traffic modification module may spoof or otherwise imitate at least some operations of the backend server device s by sending traffic that appears to the client device to have been sent from the backend server device s .

The network profile may include a network profile identifier . The network profile identifier may identify the network profile and may enable a user or process to look up and access the network profile from the network profile data stored in data storage. In some cases the network profile identifier may be a unique identifier. In implementations each network profile may correspond to a particular type and strength of network for a particular telecommunication service provider and the network profile identifier may include information describing the type strength and telecommunication service provider associated with the network profile . For example the network profile identifier may be BT T 3G 4 bars indicating that the network profile is for a network of type 3G with strength 4 bars provided by a service provider BT T.

The network profile may include one or more network profile parameters that provide data for various characteristics of the profiled network. In some implementations network profile parameters include a network type describing a particular technology or protocol of the profiled network. The network type may include a WWAN type such as one or more of the following a 3G network type a 4G network type a GSM network type a GPRS network type an EDGE network type an Enhanced EDGE network type a HSPA network type a HSPA network type a LTE network type. The network type may also include a WLAN type such as a WiFi network type.

In some implementations the network type may provide for a network virtualization of a public semi public or private WLAN provided by a business government agency school university and so forth. For example the network type may provide for a network virtualization of a public WiFi network provided at one or more locations of a bar restaurant coffee shop library airport stadium conference center university social club and so forth.

Network profile parameters may include a network strength indicating a strength of the profiled network. In some implementations the network strength is described as a number of bars e.g. 1 2 3 4 or 5 bars similar to what a user would see on the display of a mobile device. In some implementations the network strength may be a measurement of received radio frequency RF power as a received signal strength indication RSSI .

Network profile parameters may include a network location corresponding to a geographic location or area where the network was profiled. The network location may be described as a place name including one or more of a continent a country a state a province a region a county a parish a city a town a neighborhood a street an address a building and so forth. The network location may be described using postal codes latitude and longitude coordinates or other location descriptions.

In some implementations the network profile parameters may also include a network connection scenario describing a particular circumstance or scenario in which the network was profiled. For example the network for network profile may have been profiled from inside a tunnel an elevator a parking garage a cellar a train a ship a stadium a festival an airport or in other circumstances where network connectivity may be atypical. In some implementations the network connection scenario may include a description of a particular event occurring at a venue. For example the network connection scenario may include a description of a sporting event occurring at a stadium. Such an event may affect a profile of a WWAN or WLAN at or near the stadium and increase latency slow bandwidth cause packet loss or corruption or affect other of the network profile parameters for the profiled network.

The network profile may be associated with a particular telecommunication service provider that employs time division multiple access TDMA code division multiple access CDMA or some other channel access method for providing telecommunication service. The telecommunication service provider may employ a particular polling rate or polling window to poll the signal strength from cell towers. In some implementations the network profile parameters include a network time period that corresponds to the polling rate or polling window of the telecommunication service provider for the network profile . For example the network time period may be derived from the polling rate and related to the polling rate through a proportionality constant offset by an additive or subtractive constant or related through some other mathematical relationship. In some implementations the network time period is synchronized to be the same as or substantially the same as the polling rate. In implementations the network time period may be employed in analysis and modification of packet data for network traffic as described further below.

Network profile parameters may include a bandwidth and a latency . The bandwidth provides a measure of the speed of the profiled network and may be described as a data rate per time e.g. kilobits per second . The latency provides a measure of the delay in communications over the profiled network and may be described as a round trip time RTT to send a packet over the network and receive a reply.

Network profile parameters may also include a packet loss rate a packet corruption rate a packet duplication rate and a packet reordering rate . These rates may be described as a percentage or a proportion of the number of packets that are lost e.g. dropped corrupted duplicated or reordered respectively. Implementations may employ network profile parameters in addition to or instead of those described herein to characteristic a particular network for the network profile . The network profile parameters for the packet loss rate the packet reordering rate and others may provide for an emulation of packet jitter in the virtualized network.

In some implementations the network profile may include profiles for a plurality of networks to be virtualized. For example the network profile may include a plurality of sub profiles with each sub profile including a set of the network profile parameters such as the network type the network strength and so forth. In this way implementations may enable network virtualization through an emulation of network conditions in a location that has multiple networks available.

Some implementations may support one or more relationships or associations between at least some of the network parameters . For example in cases where the network connection scenario indicates a stadium or another scenario in which a large number of users may be using a network the bandwidth may be decreased or the latency may be increased to respectively emulate a decrease in the speed or an increase in the delay associated with the virtualized network.

Some implementations may provide a network profile that includes two or more sets of the network profile parameters with each set corresponding to a particular packet type for network communications. In some cases the network profile may include a first set of the network profile parameters to use when packets of a first protocol are being communicated over the virtualized network a second set of the network profile parameters to use when packets of a second network protocol are being communicated and so forth. For example the network profile may include a first set of network profile parameters for use with UDP packets and a second set of network profile parameters for use with TCP packets. Although this example describes differentiation based on different packet types at the transport level of the OSI model embodiments are not so limited. Packet differentiation may be based on packet types at any level of the OSI model.

Moreover some implementations may provide a network profile that includes two or more sets of the network profile parameters with each set corresponding to particular payload data included in the packets. For example the network profile may include a first set of the network profile parameters to use when communicating packets that include payload data for a request to or a response from a domain name system DNS server and a second set of the network profile parameters to use when communicating other types of packets. In some cases packets including data for a ping a multicast or other payload data may be associated with different sets of the network profile parameters .

In some implementations the network profile and its network profile parameters may have been developed through measurements of a network provided by a telecommunication service provider maintenance provider performance audit provider and so forth. Such measurements may have been taken in at least one particular geographic area that is stored in the network location under at least one connection scenario that is stored in the network connection scenario or under other circumstances.

In some implementations the network profile and its network profile parameters may have been configured to differ at least in part from an actual network. Such configuration may be manually performed by a developer or tester of the application under test by an administrator or user of the traffic modification server device s or another individual. In some cases the configuration of the network profile may be through an automated process. Configuration of the network profile and its network profile parameters enables a network shaping of the virtualized network to test the application under test under various hypothetical network connectivity conditions.

In some implementations traffic modification operations may be performed on a set of packets within the network time period . One or more operations modify the outgoing network traffic based on the network profile parameters in the network profile to emulate the network described by the network profile . In the example shown the operation s modify the outgoing network traffic to apply the bandwidth to emulate a speed of the profiled network. In this example the outgoing network traffic is throttled down to emulate a slower network.

As shown the modified outgoing network traffic includes modified outgoing packet s . In this example the modified outgoing packet s may include the same data as the outgoing packet s but the packets may have a different start and end time to emulate a slower network speed. In this example a number of the modified outgoing packet s in the network time period may be different than the number of the outgoing packet s in the network time period . In other cases various other network profile parameters may be applied to drop corrupt duplicate or reorder a percentage of the outgoing packet s and to generate the modified outgoing packet s by applying the packet loss rate the packet corruption rate the packet duplication rate or the packet reordering rate respectively.

The interface may include a section describing characteristics of the traffic modification server device s . Section may include an address such as an IP address for the traffic modification server device s . In some implementations the network traffic redirection module may redirect traffic from the application under test to the address listed in section . Section may also include a name or other identifying information of the traffic modification server device s .

The interface may include a section describing the network profile . In some cases the section may list a currently active network profile i.e. the network profile that is currently being employed to modify network traffic. Section may provide the network profile identifier of the currently active network profile. Section may also list the network profile parameters such as the bandwidth the latency the packet loss rate the packet corruption rate the packet duplication rate or the packet reordering rate or any other network profile parameters including but not limited those shown in .

In some implementations the interface includes a section providing an estimated power consumption. This estimate may be provided as an amount of power consumed e.g. in Watts or other units or as a percentage of available battery power consumed. The power consumption estimate may be calculated based on the network s emulated and the amount of time spent emulating each network at the traffic modification server device s . A network described in a first network profile BT T 4G may consume 0.1 of battery per minute on a mobile device and a network described in a second network profile CT T 3G may consume 0.8 of battery per minute on the mobile device. If each of these networks is emulated for 10 minutes the estimated power consumption may be reported as 9 of battery. Such an estimate may provide a tester or other user with information regarding how an application under test affects the device on which the application is running.

The interface may include a section providing information for a currently executing test script. Some implementations support the use of test scripts to control network emulation. In some implementations the traffic modification user interface module may run on a web server on the traffic modification server device s and may accept commands in the form of HTTP requests such as GET POST PUT and so forth. Such commands may be assembled into a script by a user using a scripting language such as javascript VBscript or other scripting languages. In the example shown in section a script is running that requests a first network profile BT T 3G 4 bars run for 60 seconds followed by a second network profile BT T 3G 3 bars for 120 seconds followed by a third network profile CT T HSPA for 60 seconds followed by a fourth network profile Pequod s public WiFi for 90 seconds to emulate a public WLAN for a business. In this way a user may specify an emulation of networks in a scenario in which a device is moving between regions of different telecommunications service providers different network types different network strengths or other differences in network profiles.

Some implementations expose an API including API commands that a script may employ to specify various network profile parameters . The API commands may include one or more of the following 

The API commands listed above are illustrative and non limiting. Implementations may support commands with different names different parameters and different functionality.

In some implementations the interface may provide one or more controls such as buttons dialogs text boxes dropdown lists and the like to enable a user to enter information or commands into the interface . For example the interface may include a control to enable a user to select a test script to be executed and a control to enable a user to execute the selected test script. The interface may also include a control to enable a user to select a network profile and a control to activate the selected network profile.

Although shows an example interface with various user interface elements in particular positions the particular example arrangement shown is not in any way limiting of implementations. Accordingly various implementations may employ a user interface that includes more or fewer user interface elements or controls in any combination and in any arrangement to enable functionality of the implementations. Further implementations may support multiple user interfaces e.g. multi page web sites with functionality spread across various pages. Implementations may also support dynamically generated interfaces where the particular user interface elements displayed and the location or duration of their display is based on a particular state of the system particular characteristics of the user the client device the management device or other factors.

The client device may include one or more input output I O interface s to allow the client device to communicate with other devices. For example the I O interface s may be configured to provide a universal serial bus USB connection compliant with the standards promulgated by the USB Implementers Forum Inc. of Beaverton Oreg.

The I O interface s may couple to one or more I O devices . The I O device s may include user input devices such as one or more of a keyboard a mouse a pen a game controller a voice input device a touch input device a gestural input device the other devices shown in and so forth. The I O device s may include output devices such as one or more of a display a printer audio speakers haptic output device and so forth. In some embodiments the I O device s may be physically incorporated with the client device or be externally placed.

The client device may also include one or more network interfaces to enable communications between the client device and other networked devices such as those depicted in . Such network interface s may include one or more network interface controllers NICs or other types of transceiver devices configured to send and receive communications over the network s . For example the network interface s may be configured to provide a WiFi connection compliant with one or more IEEE 802.11 standards such as 802.11g or 802.11n. The client device may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the client device .

The client device includes one or more memories . The memory comprises one or more computer readable storage media CRSM . The CRSM may be any one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium a mechanical computer storage medium and so forth. The memory provides storage of computer readable instructions data structures program modules and other data for the operation of the client device .

The memory may include at least one operating system OS module . The OS module is configured to manage hardware resources such as the I O interface s and network interface s and to provide various services to applications or modules executing on the processor s . In some implementations the OS module may comprise one or more mobile operating systems configured for execution on mobile computing devices. For example the OS module may implement one or more of iOS from Apple Corp. of Cupertino Calif. Windows Mobile from Microsoft Corp. of Redmond Wash. Android from Google Corp. of Mountain View Calif. and its derivatives from various sources Palm OS from Palm Computing Inc. of Sunnyvale Calif. and its derivatives from various sources BlackBerry OS from Research In Motion Ltd. of Waterloo Ontario Canada or other operating systems such as VxWorks from Wind River Systems of Alameda Calif. In cases where the OS module implements a version of iOS any version of iOS may be supported including iOS 1.x 2.x 3.x 4.x 5.x 6.x or higher versions including any version of iOS for the iPhone iPad iPad Touch or any other compatible device. In cases where the OS module implements a version of Android any version of Android may be supported including but not limited to versions 2.3.x Gingerbread 4.0.x Ice Cream Sandwich 4.1.x Jelly Bean and so forth.

The memory may include the application under test the network traffic redirection module or other module s . In some implementations the network traffic redirection module may be part of an OS of the client device as a part of the network communications stack of an OS. The network traffic redirection module may also be included in an OS utility application that enables a user of the client device to select a network for communications between the client device and other devices or specify an address of the traffic modification server device s as a proxy for network traffic sent by the client device .

In some implementations the network traffic redirection module may be an application installed on the client device by a user of the client device to redirect traffic sent by the client device . In some cases one or more modifications may be made to the client device for example to root or to jailbreak the client device prior to installation of the network traffic redirection module .

The memory also includes a datastore to store information for operations of the client device . The datastore may comprise a database array structured list tree or other data structure. In some implementations the datastore may store network traffic redirection data including an address of the traffic modification server device s or other information describing a destination for network traffic sent by the client device . Other data may also be stored such as user account information network connectivity data application testing result data test scripts network virtualization data power consumption data and so forth.

The client device may include one or more I O interface s to allow the traffic modification server device to communicate with other devices. The I O interface s may couple to one or more I O devices . The I O device s may include user input devices such as one or more of a keyboard a mouse a pen a game controller a voice input device a touch input device a gestural input device the other devices shown in and so forth. The I O device s may include output devices such as one or more of a display a printer audio speakers haptic output device and so forth. In some embodiments the I O device s may be physically incorporated with the traffic modification server device or be externally placed.

The traffic modification server device may also include one or more network interfaces to enable communications between the traffic modification server device and other networked devices such as those depicted in . Such network interface s may include one or more network interface controllers NICs or other types of transceiver devices configured to send and receive communications over network s . For example the network interface s may be configured to provide a WiFi connection compliant with one or more IEEE 802.11 standards such as 802.11g or 802.11n or an Ethernet connection compliant with the IEEE 802.3 standard. The traffic modification server device may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the traffic modification server device .

The traffic modification server device includes one or more memories . The memory comprises one or more computer readable storage media CRSM . The CRSM may be any one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium a mechanical computer storage medium and so forth. The memory provides storage of computer readable instructions data structures program modules and other data for the operation of the traffic modification server device .

The memory may include at least one OS module . The OS module is configured to manage hardware resources such as the I O interface s and network interface s and to provide various services to applications or modules executing on the processor s . In some implementations the OS module may comprise a distribution or variant of the Linux operating system originally released by Linus Torvalds.

The memory may also include the traffic modification module . Operations of the traffic modification module are further described with reference to . The memory may include the traffic modification user interface module and one or more other modules . These other modules may include but are not limited to user authentication modules access control modules billing modules scripting language interpreters to execute test scripts and so forth.

In some embodiments the memory also includes a datastore to store information for operations of the traffic modification server device . The datastore may comprise a database array structured list tree or other data structure. The datastore may store the network profile data . The datastore may also store test script data including one or more test scripts for network virtualization such as those described above with regard to . Datastore may store test result data power consumption data or other data . Other data may include user account or authentication information data regarding the operation of the traffic modification server device data provided by the interface and so forth.

At an indication is received of the network profile to be applied to network traffic between the client device s and the backend server device s . In some cases this indication may be provided by a user through the traffic management user interface module . The indication may be provided through a script sending commands to an API of the traffic management user interface module . The network profile may be indicated using the network profile identifier to select a network profile stored in the network profile data .

At one or more outgoing packets of network traffic may be intercepted. In some cases the intercepted traffic is outgoing network traffic sent from the client device and addressed to the backend server device . In some cases the outgoing packets are generated by the application under test as part of a communications session with a process or service executing on the backend server device .

At the intercepted outgoing packet s may be adjusted based on the applied network profile . This adjustment may include applying the one or more network profile parameters of the network profile to modify one or more packets of the outgoing network traffic . In some implementations the adjustment is based on the network time period such that one or more packets received during the network time period are intercepted and adjusted. As described above the network time period may be synchronized with or otherwise correspond to a polling window or polling rate of a telecommunication service provider whose network is being virtualized through application of the network profile . The packet adjustment operations of are further described with reference to . At the adjusted outgoing packet s are sent to the backend server device as part of the modified outgoing network traffic .

At one or more incoming packets of network traffic are intercepted. In some implementations the one or more incoming packets are sent from the backend server device and addressed to the client device . In some cases the one or more incoming packets may include response data in response to the outgoing packet s sent to the backend server device . The intercepted incoming packet s may be part of the incoming network traffic .

At the incoming packet s are adjusted based on the applied network profile as further described with reference to . As discussed above in some implementations the adjustment is based on the network time period such that one or more incoming packets received during the network time period are intercepted and adjusted. Implementations support adjustments to the outgoing network traffic adjustments to the incoming network traffic or adjustments to both the outgoing network traffic and the incoming network traffic . At the adjusted incoming packet s are sent to the client device as part of the modified incoming network traffic .

In some implementations at the incoming packet s are analyzed and validated. In some cases the data of the incoming packet s may be analyzed to determine whether a source address of the incoming packet s e.g. an IP address of the backend server device s has changed relative to previous incoming packet s received. In some cases a payload size of the incoming packet s may be analyzed to determine whether the payload size has changed relative to previous incoming packet s received. In some cases the data of the incoming packet s may be compared to expected data to validate a response from the backend server device s . Implementations support other operations to analyze or validate the incoming packet s .

At a determination is made whether an indication has been received of a different network profile to apply for network virtualization. If so then at the different network profile is applied and the process continues from . If not then the process continues from . As described with regard to an indication of a changed network profile may be received through the traffic management user interface module . The indication may be provided through a script sending commands to an API of the traffic modification user interface module . The network profile may be indicated using the network profile identifier to select a network profile stored in the network profile data . A change in network profile may emulate a movement of the client device between regions of different network connectivity strengths different network types network telecommunication service providers and so forth. This emulation of a network change may be performed even though the client device physically remains substantially stationary.

In some implementations the adjustments made at and may be made to all of the outgoing packets that are received from the client device or all of the incoming packets that are addressed to the client device . In some implementations the received packets may be filtered to select and adjust those outgoing packets that originate from the application under test or to select and adjust those incoming packets that are addressed to the application under test . In some implementations the received packets may be filtered to select and adjust those outgoing packets that are addressed to the backend server device or to select and adjust those incoming packets that originate from the backend server device .

At a packet size of one or more packets may be modified based on the network type included in the network profile being applied. In some cases the network type being virtualized through application of the network profile may be different than the network type over which the packets are received. For example the outgoing network traffic may be sent from the client device over a WiFi network that has a packet size e.g. a maximum transmission unit MTU of 1518 bytes or over a wired Ethernet connection with packet size 8192 bytes. In cases where the applied network type is a WAN type of 3G 4G and the like the packet size may be 64 bytes. Accordingly the received packets may be repacketized into smaller or larger packets before being sent on. In such cases the data carried by the packets in their payload may not change as the packet size is altered.

At a packet timing may be changed based on the one or more bandwidth parameters in the network profile . In some cases to emulate a slower network speed or bandwidth the timing of packets in a set of packets may be altered as shown in the example of .

At a packet timing may be changed based on the one or more latency parameters in the network profile . To simulate a latency or delay in the network profiled by network profile one or more of the packets may be delayed before being sent on. In some cases the one or more latency parameters may include a parameter indicating a latency of the virtualized network when communicating packets for a DNS response or request. In such cases at least one of the packets that includes DNS request or response data may be delayed based on the latency parameter that is particularly associated with DNS traffic. Operations associated with DNS traffic are described in further detail with reference to .

At a portion i.e. one or more of the received packets may be dropped or deleted to emulate a packet loss rate indicated by one or more packet loss rate parameters . In some cases portion of the received packets in the network time period may be selected randomly and dropped according to the packet loss rate . In other cases the selection may be pseudo random or not random. For example to simulate a 20 packet loss rate every fifth packet may be dropped.

At a portion of the received packets may be corrupted to emulate a packet corruption rate indicated by one or more packet corruption rate parameters . The selection of packets to be corrupted may be random pseudo random or non random. In some implementations packet corruption may be performed by randomizing at least a portion of the payload or header of a packet by deleting data from the payload or header of the packet by injecting data into the payload or header of the packet or through other means.

At a portion of the received packets may be duplicated to emulate a packet duplication rate indicated by one or more packet duplication parameters . The selection of packets to be duplicated may be random pseudo random or non random. In some implementations packet duplication may be performed by inserting a copy of a packet before or after the packet in the network traffic. Insertion may be immediately before or after or a certain number of packets removed from the duplicated packet.

At a portion of the received packets may be reordered to emulate a packet reordering rate indicated by one or more packet reordering rate parameters . The selection of packets to be reordered may be random pseudo random or non random.

Implementations support applying any of the above described network profile parameters or other parameters in any combination and in any order to achieve the desired network virtualization. The steps may be applied to at least some packets of the outgoing network traffic to at least some packets of the incoming network traffic or to at least some packets of both the outgoing network traffic and the incoming network traffic .

At in some implementations at least a portion of the packets may be further modified based on a packet type. In some cases a speed or bandwidth of the virtualized network may at least partly determine a type of packet that is sent over the network. For example the application under test or the client device may determine to send traffic in the form of UDP packets over a network that has a higher bandwidth compared to other networks. To emulate traffic on such a network implementations may drop a portion of received TCP packets that are associated with TCP synchronization such as the SYN or ACK packets.

At the payload data of one or more packets is analyzed. The analyzed packets may include at least one packet in the outgoing network traffic at least one packet in the incoming network traffic or both outgoing and incoming packets.

At based on the analysis a determination is made whether the packet s include DNS traffic such as a DNS resolution request from the client device to a DNS server or a response to the client device from a DNS server. If the determination is negative the process may continue analyzing subsequent packets at .

If the determination is positive at one or more packets are modified to alter a DNS server address included in the payload for the packet s . In some implementations the network profile may include information describing a DNS server that devices connected to the profiled network may use to request DNS information such as resolving a host name to an IP address. The client device may under normal circumstances send DNS requests to a default DNS server that is different than that included in the network profile . Accordingly to virtualize the profiled network implementations may intercept DNS traffic sent from the client device to its default DNS server and redirect that traffic to the DNS server included in the network profile .

At the packet timing of the packet s may be altered based on a latency parameter that is specific to DNS traffic. For example in some cases the DNS server associated with the profiled network may have a particular latency or delay in responding to DNS requests. That particular latency may have been measured during the development of the network profile and stored as a DNS specific latency parameter in the network profile . Implementations may introduce a delay in sending at least some of the packet s to simulate the latency in the DNS server associated with the virtualized network.

At the packet s may be adjusted based on one or more other network profile parameters that are specific to DNS traffic. For example during the development of a network profile for a network a DNS server associated with the network may have been determined to drop a proportion of incoming packets. The network profile may include a packet loss rate parameter for traffic to the DNS server. Although shows an example process performing steps and various implementations may perform one or more of steps and in any combination and in any order.

At in some implementations information may be collected regarding the DNS traffic. This information collection may include logging some or all of the DNS packet data and analyzing the data to determine which DNS server is being used performance statistics regarding the DNS server e.g. latency etc. a number of network hops to reach the DNS server and other data. In some cases the collected information may be employed to update the network profile parameters that are associated with DNS traffic to or from the DNS server.

In some implementations the network s connecting the traffic modification server device s to one or both of the client device and the backend server may be monitored and characteristics of the network s may be measured or otherwise determined. Such characteristics may include a current bandwidth latency rates of packet loss duplication corruption or reordering or other network characteristics. The process may further adjust one or both of the incoming and outgoing packets based on these determined characteristics to ensure that the network is virtualized according to the network profile .

At one or more characteristics are determined for the network connection s to one or both of the client device and the backend server device . This determination may be made by the traffic modification server device s using a packet sniffing utility or other tools. This determination may also be made by an external device and the data provided to the traffic modification server device s .

At the incoming or outgoing packets are further adjusted based on a current bandwidth of the network connection s such that the modified outgoing network traffic or the modified incoming network traffic as actually transferred corresponds to the bandwidth of the network profile . This adjustment may include altering a timing of the packets.

At the incoming or outgoing packets are further adjusted based on a current latency of the network connection s such that the modified outgoing network traffic or the modified incoming network traffic as actually transferred corresponds to the latency of the network profile . This adjustment may include altering a timing of the packets.

At the incoming or outgoing packets are further adjusted based on other characteristics of the network connection s such as a packet loss rate packet corruption rate packet duplication rate or packet reordering rate. Such adjustments may be made so that the modified outgoing network traffic or the modified incoming network traffic as actually transferred corresponds to network profile parameters of the network profile .

As shown in the client device may include a traffic modification module and may store the network profile data . In some implementations the client device may have access to the network profile data stored on an external device. In some implementations the client device may include a traffic modification user interface module that provides a user interface. Such a user interface may include similar features to that shown in and may enable a user to manage or control operations of the traffic modification module or receive information regarding the network virtualization.

The traffic modification module may intercept outgoing network traffic generated or sent by the application under test and perform traffic modification operations as described above. The traffic modification module may then send the modified outgoing network traffic to the backend server device s .

The backend server device s may generate and send incoming network traffic to the client device . The incoming network traffic may be intercepted and modified by the traffic modification module as described above and modified incoming network traffic is sent to the application under test .

Those having ordinary skill in the art will readily recognize that certain steps or operations illustrated in in the figures above can be eliminated combined subdivided executed in parallel or taken in an alternate order. Moreover the methods described above may be implemented as one or more software programs for a computer system and are encoded in a computer readable storage medium as instructions executable on one or more processors.

Separate instances of these programs can be executed on or distributed across separate computer systems. Thus although certain steps have been described as being performed by certain devices software programs processes or entities this need not be the case and a variety of alternative implementations will be understood by those having ordinary skill in the art.

Additionally those having ordinary skill in the art readily recognize that the techniques described above can be utilized in a variety of devices environments and situations. Although the present disclosure is written with respect to specific embodiments and implementations various changes and modifications may be suggested to one skilled in the art and it is intended that the present disclosure encompass such changes and modifications that fall within the scope of the appended claims.

