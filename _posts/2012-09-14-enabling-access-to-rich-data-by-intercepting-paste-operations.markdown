---

title: Enabling access to rich data by intercepting paste operations
abstract: Systems and methods for enabling access to data, including data represented using a variety of “richer” data formats, are disclosed. Such systems and methods may be useful, among a variety of cases, with applications or entities that may not typically be able to access such richer data. In at least some implementations, data copied to a clipboard and formatted using a variety of formats may be provided or accessed by a destination application as part of a paste operation even when the destination application may not natively provide the ability to access all of the data formats that might exist on a clipboard. In at least some implementations, such access may be provided without modifying or augmenting the data placed on the clipboard.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09417933&OS=09417933&RS=09417933
owner: Microsoft Technology Licensing, LLC
number: 09417933
owner_city: Redmond
owner_country: US
publication_date: 20120914
---
This application is a continuation of U.S. patent application Ser. No. 12 113 214 filed on May 1 2008 entitled ENABLING ACCESS TO RICH DATA at least some of which may be incorporated herein.

Clipboard systems are a common part of many modern operating systems or computer systems. Typically a clipboard system enables applications or other entities to copy or cut data to a computer implemented clipboard and enables the same or other applications or entities to paste data from the clipboard. The clipboard is available to or shared between applications and entities and enables the transfer of information or data between such applications and entities.

At least some clipboard systems enable the transfer of multiple pieces of data as well as the transfer of data in multiple formats. For example in some clipboard systems an application may have the ability to add a single logical piece of data or information to the clipboard in multiple different formats. For example an application might place a text representation of a piece of data as well as an image representation of the same piece of data on the clipboard. A destination application to which such a piece of data may be pasted might then be able to access the format of the data that is most useful to the destination application.

In order to participate in information sharing or transfer using a clipboard any executable code or application must generally have the ability to interact with the clipboard system. Such interaction may be accomplished through the use of application programming interfaces APIs or a variety of other mechanisms. While some applications or entities may have the ability to access the full capabilities of a clipboard system including perhaps the ability to request alternative data formats for a particular piece of data on the clipboard in some cases at least some applications may only have access to a limited subset of a clipboard system s functionality. As just one example a page displayed by a web browser typically only has access to data on a clipboard that is formatted as text. That is even if the clipboard includes say an image or one or more other representations of a piece of data and even if the page may have the capability of using these other representations of the data the page may not be able to access the other data formats.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Described herein are various techniques and technologies directed to enabling access to additional and sometimes richer data formats in applications or other entities that may not typically be able to access such additional data. More particularly in at least some implementations data copied to a clipboard and formatted using a variety of formats may be provided or accessed by a destination application as part of a paste operation even when the destination application may not natively provide the ability to access all of the data formats that might exist on a clipboard. In at least some implementations such access may be provided without modifying or augmenting the data placed on the clipboard.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

Described herein are various techniques and technologies directed to enabling access to additional and sometimes richer data formats in applications or other entities that may not typically be able to access such additional data. More particularly in at least some implementations data formatted using a variety of formats may be provided or accessed by a destination application even when the destination application may not natively provide the ability to access all of the data formats that might exist on a clipboard. In at least some implementations such access may be provided without modifying or augmenting the data placed on the clipboard.

As used herein a clipboard or clipboard system should be interpreted as an entity that provides functionality associated with the transfer of data between different entities including for example between different applications web pages and so on. Some clipboard systems may provide the capabilities of adding data to a clipboard perhaps associated with a copy or cut operation and reading data from a clipboard perhaps associated with a paste operation. The same or other clipboard systems may provide the ability to hold multiple pieces of data or items at the same time. Furthermore the same or other clipboard systems may provide the ability to hold multiple representations or formats for a particular data item. For example a clipboard system might have the ability to hold say a formatted text plain text and image representation of the same item. The same or other clipboard systems may enable a destination application to use or request a particular format or representation of an item. For example a word processing application might use the formatted text representation a simple text editor the plain text representation and an image processing application the image representation. Some applications may enable a user to choose between multiple representations or formats and paste one or more of such representations. For example some applications provide a paste special or other similar option that enables the user to choose between multiple formats when pasting information.

While many applications including the word processing text editor and image processing applications introduced in the previous paragraph may have the capability of accessing one or more data formats associated with data items on the clipboard in at least some implementations some applications may only have the capability of accessing a limited set of data formats or a single data format. For example and in at least some implementations a web browser as well as pages or other information displayed or provided by a web browser may only be able to access a simple text representation of a data item that exists on the clipboard. Furthermore executable code included in web pages or other information displayed by a browser such as JavaScript code included with or referenced by an HTML page may only have the capability of accessing a text representation of a data item that exists on the clipboard.

While some applications or entities may only have access to a single or more limited set of data formats or representations it may still in some implementations be possible to transfer or communicate richer or more extensive data. As just one example additional or richer data might be represented as text say as XML or using some other data representation language or format and then the richer text might be communicated using the clipboard perhaps using only a plain text or similar clipboard format. One specific example of a text format that can hold rich data is the Live Clipboard format. In some implementations a format such at the Live Clipboard format or other format may define one or more ways to represent encode or otherwise make available for transfer a variety of additional or richer data. In the case of Live Clipboard for example and without limitation the data format may enable the transfer of structured data including XML or other representations of a variety of data references to feeds and references to presentation data that may be used as part of displaying the data. The Live Clipboard format is described in more detail elsewhere herein including below with reference to .

Generally as used herein the terms structured information or structured data may refer to information or data that has additional meaning when compared to plain text. For example a text field that contains say a first name or last name might not comprise structured data. In contrast an XML fragment that conforms to the hCard schema or some other schema for representing contact information and contains say name address phone number email address and so on in a structured format such as for example the hCard format would be considered structured data. Structured information may also in some embodiments include a wide variety of other information. For example structured information may include information about the data metadata like its type or content type as well as references to other or additional data and so on. Furthermore although this example mentions hCard and XML it is important to note that structured data is not limited to hCard and XML information and may comprise a wide variety of data types and be represented using a wide variety of data representation formats. Similarly a reference may in some embodiments be implemented using something like a Uniform Resource Locator URL that identifies information like a changed or updated version of copied data or a Really Simple Syndication or Rich Site Summary RSS or Atom feed at some endpoint on a network. However a reference may be embodied in a variety of ways and may identify information of a wide variety of types.

A text or richer format such as the Live Clipboard format may be used in a variety of ways. For example a source application or a web page hosted in a browser might include executable code such as JavaScript perhaps that generates and places data represented in a richer format on the clipboard. In some examples such data might be indicated to the clipboard system as using the text format and as a result when that data is pasted to a destination application that requests the text format all of the rich data represented using the richer format may be provided to the destination application.

If the destination application has the capability of interpreting the richer data it may be able to do additional processing or provide additional functionality that might not be possible without access to the richer data. As just one specific example suppose that a user views a web page that displays contact information for a variety of people or other entities. In this example when the user selects a particular contact or contacts and indicates that they want to copy the selected contact information to the clipboard the page might generate say a Live Clipboard representation of the contact information perhaps using hCard and place the resulting Live Clipboard XML on the clipboard. Further suppose that the user then pastes the Live Clipboard data on the clipboard to another web page or some other application and for the purposes of this example that the destination page or application is also associated with maintaining contact information. If the user pastes the information into an application that can recognize that the pasted data includes Live Clipboard information or even just hCard information the destination application might be able to for example treat the pasted data as comprising information for a full contact or perhaps set of contacts and maybe even automatically create contacts or other data entities. In contrast if the user pastes the richer data into an application such as a simple text editor that does not recognize or treat the richer data in any particular special manner the text editor may just display the text in this case this might simply mean that the Live Clipboard XML might be included in the document or text currently being displayed by the text editor application.

Richer formats may enable the transfer of richer data in some implementations but the existence of a richer data format represented for example as text and even the existence of destination applications or entities that can interpret the richer data format are not always sufficient to enable the transfer of richer information between entities or applications. One common example where a richer data format isn t sufficient may occur when a source application is not aware of or does not provide data using a richer data format that can be understood by a destination application. For example a source application might not be aware of the Live Clipboard format and might not add information that uses the Live Clipboard format to a clipboard. In some implementations it may be possible to convert or augment data so that the data can be understood by a destination application. For example it may be possible to recognize when information about a contact is placed on a clipboard and then convert this information to a format such as the Live Clipboard format.

However even if source data can be converted to a data format that can be understood by a destination application there may in some cases be no suitable way to place such information on the clipboard so that it can be accessed by the destination application. As an example suppose a user of a personal information management application or PIM application say perhaps the Microsoft Outlook application written by Microsoft Corporation of Redmond Wash. indicates that they want to copy a calendar item or appointment to the clipboard. The PIM application might create a data item on the clipboard that represents the calendar item. Such a data item might contain information associated with the calendar item in a simple text format not as Live Clipboard or some other richer data format but simply as say the description of the calendar item and the time and date separated by tabs commas or some other delimiter. This simple text representation of the calendar item enables a user to paste information about the calendar item or event into a text editor or other application. The data item added by the PIM application might also contain the calendar item information in one or more other richer formats for example in the case of Microsoft Outlook the calendar information might be represented using a format like the iCalendar format and then such iCalendar information might be included on the clipboard as a reference to a file with an .ics extension or as an ICS file. As a result of the multiple data formats added to the clipboard for this single data item if the user subsequently pastes the data item into a simple text editor they might see the contact information in the simple text format. If they paste the data item into an application that can interpret file references with iCalendar data that application might be able to interpret and use all of the rich information represented in the attached or referenced file.

However if they paste such a data item into a web page or other application that could interpret and use rich calendar item information represented using a text format like Live Clipboard in some cases but that might only have access to information on the clipboard in a text format or might have access only to some other format or set of formats the web page or application might not be able to access the richer or more extensive information. That is as the destination application in this case might only have access to the simple text representation that doesn t include all of the calendar item information the destination application may not be able to access all of the calendar information even though the application has the capability of using more extensive calendar information and even though the more extensive information exists in the referenced ICS file.

In some cases one attempt to resolve such a problem might involve the use of a converter or adapter application that say watches or observes the clipboard and in this specific example upon seeing a data item with a referenced ICS file converts the data in the ICS file to a Live Clipboard data and then replaces the simple text representation of the data item that is already on the clipboard with the Live Clipboard representation. However this relatively simple approach also has a few problems the biggest of which is that it requires deleting information that is already on the clipboard by replacing the simple text representation with the more complex Live Clipboard representation. In general and with many computer systems or clipboard implementations overwriting or deleting information on the clipboard is at best considered a bad practice and may not be allowed instead the recommended approach when all applications can access multiple data formats is generally to add alternative data formats . In this example if the simple text representation is overwritten with a Live Clipboard representation a user that pastes the calendar data item into an application that can interpret Live Clipboard data may have access to richer data but a user that pastes the calendar item into an application that cannot interpret the Live Clipboard data might see an extensive amount of XML rather than simply the short and easy to read text representation that was originally placed on the clipboard.

The techniques and technologies described herein are directed to resolving this problem by in at least some implementations making a richer representation of a data item such as perhaps a Live Clipboard representation available to some applications while not changing the representation on the clipboard or changing the experience of other applications or entities that also might use the data item. In at least some implementations elements of the techniques and technologies described herein may intercept paste operations and then provide a richer representation of data on the clipboard to the destination.

Turning now to shown therein is an exemplary generalized operational flow including various operations that may be performed when enabling access to rich data when interacting with a clipboard system. Operations that may be associated with a source application from which data is copied or cut may in some implementations be associated with the first column operations that may be associated with a destination application to which data may be pasted may in some implementations be associated with the second column and operations associated with an adapter or converter application or other executable code may in some implementations be associated with the third column. The following description of may be made with reference to other figures. However it should be understood that the operational flow described with reference to is not intended to be limited to being used with the elements described with reference to these other figures. In addition while the exemplary operational flow of indicates a particular order of execution and is divided into three columns in one or more alternative embodiments the operations may be ordered differently and may be performed by just a single entity or application or may be performed by other combinations of applications or executable code. Furthermore while the exemplary operational flow contains multiple steps it should be recognized that in some implementations at least some of these operations may be combined or executed contemporaneously.

In an exemplary implementation of operation an adapter application or other executable code may identify existing paste targets that can receive richer data and when identified may register for notification of paste operations initiated using identified paste targets.

Generally a paste target may be understood herein to refer to some entity by which a user or other executable code may initiate a paste operation where the entity may be associated with receiving interpreting or otherwise using richer data. Paste targets may take a variety of forms and be implemented in a variety of ways. In one example a paste target might comprise an edit control or text box control of some type. With such an exemplary edit control a user may click or take some other operation to select give focus to or otherwise indicate a desire to interact with the edit control and may then choose to paste information from the clipboard in one or more of a variety of ways including through the use of a menu item a keyboard shortcut and so on. Other types of paste targets may have different visual appearances or may have no visible appearance at all and may be interacted with in the same or other ways.

In some implementations only particular edit controls or other elements may be considered to be paste targets and such a differentiation if it exists may be made in a variety of ways. In such implementations some elements of a user interface for example some edit controls or text boxes may be enabled to support the pasting of richer data while other elements of a user interface including perhaps other edit controls or text boxes are not so enabled. For example in an implementation where a user interface is represented using a technology like HTML an edit control may be defined as just two examples using an HTML input element with a type attribute set to the value text or using an HTML textarea element. In at least some of such implementations an edit control that is to support the pasting of richer data might have for example a class attribute with a particular value or name or might be denoted in some other fashion. Other edit controls may not have or use the same value or name for the class attribute or other characteristic and therefore may in some implementations be considered to not support the pasting of richer data as described herein. In some implementations which edit controls enable the pasting of richer data may be determined in other ways or all edit controls may support the pasting of richer data without the use of any particular identifying characteristic.

In at least some exemplary implementations a paste target may include or be associated with an HTML div element and an edit control or text control including an HTML input element with a type attribute set to the value text or an HTML textarea element. The paste target may have some kind of visible representation like an image associated in some fashion with the div element. In other implementations the paste target may just comprise an edit control itself or might comprise some other arrangement or composition of one or more user interface elements or controls. In some implementations the edit control may be transparent or not visible in at least some of such implementations an image or other user interface element or elements that are associated with the edit control or with a containing element like a div element may enable a user to interact with the paste target. If the edit control is not visible it may appear to a user that they are interacting with the visible user interface element the image say when they are in fact interacting with the edit control.

Furthermore in at least some implementations a paste target may have another user interface representation or may not have any explicit user interface or visible representation at all. For example an application or web page itself not just a particular part or user interface element of the application or web page may in some cases be implemented to respond to paste initiation operations such as a keyboard command like Control V by initiating a paste operation. In at least some of such implementations the resulting destination data may be placed in some part of the user interface possibly independently of where the mouse or other selection was at the time the paste operation was initiated. As just one example a paste operation performed anywhere on a particular web page might result in the pasting of information at say the bottom of a list being displayed as part of the page. In the same or yet other implementations destination data provided to the destination may not result in any visible change in the user interface. For example destination information might be processed saved or otherwise used in some manner without any change to the user interface.

Once a paste target has been defined or exists for example because the author of an HTML page has included an edit control with a particular class attribute in a page the identification of paste targets may be accomplished in a variety of ways depending on characteristics such as the nature of the destination applications that include paste targets the operating system in use and so on. In at least some implementations at least part of identifying paste targets may involve enumerating user interfaces applications or the like and further enumerating elements that might be paste targets. As just one very specific example and without limitation when paste targets that enable access to richer data may occur as part of a web page displayed by a browser paste targets may be identified by enumerating all of the web browser applications web browser tabs web browser windows and the like. In the specific case of the Internet Explorer application written by Microsoft Corporation each user interface element that displays a web page may exist as an operating system window and also have at least some characteristics that are shared between instances of the window that displays web pages or other content such as the same name. In the case of Internet Explorer a window that displays web pages or other content may be referred to for example as a web browser control or the like. In such an implementation the identification of paste targets may be accomplished in part by first identifying each web browser control or each window that has this particular name. In the case of Internet Explorer and also with other applications this may enable the identification of paste targets in applications that use contain or include web browser controls even when the applications are not considered to web browser applications. For example the Visual Studio development environment also produced by Microsoft uses web browser controls to display help information in at least some implementations. 

It should be noted that in at least some contexts and at least some of the time an operating system window is separate from and not the same as a window that might typically be perceived by a user. For example an operating system window might be any operating system entity that has a window handle which might include a wide array of windows that for example do not have menu bars maximize and minimize buttons and so on do not have the capability of being independently moved and the like. For example in the case of the Microsoft Windows operating system many elements of a window perceived by a user may in and of themselves be windows for example in some cases a button may be a window a text box may be a different window and so on.

In specific examples that use web browser controls or the like the identification of paste targets may further be accomplished by identifying edit controls or other user interface elements that are denoted as being paste targets including through the use of techniques such as identifying characteristics like the use of the HTML class attribute as described above. In the specific example of Internet Explorer and also possibly applied to a variety of other applications a representation of the content displayed by the web browser control or the like may be retrieved in some fashion and then examined for the presence of paste targets. At least some implementations of Internet Explorer and also some other applications provide access to the information they display using one or more accessibility interfaces. Such interfaces are so named because they are often used to provide access to applications data or the like to individuals with disabilities such as with the use of screen reader applications for those that cannot see a user interface. In the specific example of Internet Explorer the implementation of an accessibility interface may in some cases provide access to a computer readable representation of the HTML page or other displayed content. Such a representation may then be examined for the presence of paste targets. For example using an accessibility interface it may be possible to enumerate all of the edit controls in a particular HTML page and identify the edit controls that have a particular value for the HTML class attribute.

The manner in which notifications of the initiation of paste operations may be received also depends on a variety of characteristics including the nature of the destination applications the operating system in use and the functionality associated with the clipboard system. In many implementations one or more of a variety of APIs may be provided that enable executable code to be called or called back when a particular operation or event occurs. For example an API might exist and be used that enables a particular piece of executable code to be called or executed when a paste operation is initiated with one or more paste targets edit controls or the like. Using such an API or a different API some implementations of this operation may be able to specify executable code that will be called when a paste is initiated for a paste target.

In one or more exemplary implementations of operation an adapter application or other executable code may register or otherwise configure itself or other code to be notified or gain knowledge of new paste targets that enable access to richer data. That is some implementations of the already described operation may identify existing paste targets while some implementations of operation may be related to registering to be notified when new paste targets targets that may not have existed when the operation was executed are created or come into existence. When one or more of such new paste targets come into existence the adapter or other application may then register to be notified when a paste operation is initiated using the new paste targets. Such registration for notification of paste operation initiation may in some implementations be accomplished in a similar fashion to that described previously with reference to the operation . For example in some implementations of this operation an adapter or other application may register perhaps using an API provided by the operating system or windowing environment to be notified when any new applications windows or other relevant elements are created. Upon being notified the adapter application may then examine the new element and find any paste targets that are to enable access to richer data. If any paste targets are found the adapter application or other entity may then register to be notified of when any paste operations associated with those paste targets are initiated.

In an exemplary implementation of operation a copy or cut operation or some other clipboard operation may place data on the clipboard. Such data may be referred to in some instances as source data because it originates with a source application. The addition or transfer of data to the clipboard may be implemented in a variety of ways and may in at least some implementations be exactly the same whether access to richer data is being provided as described herein or not. That is in at least some implementations this operation may simply be a copy or cut operation like any copy or cut operation after the operation has completed source data from the source application may exist on the clipboard. As described previously such source data may be associated with one or in some cases more than one data item and the information associated with each data item may be represented in one or more data formats.

It should be noted that as used herein in the context of transferring information the term copy may also include a cut operation where the difference may be that data associated with a copy operation may remain in the location from which it is being copied. In contrast data being cut may be removed through some means from the location from which it is being copied. In both copy and cut operations data may be placed on the clipboard the difference may be in what happens at the location from which the data is copied or cut. It should further be noted that in some implementations cut copy and paste operations as well as data transfer operations that do not explicitly use system provided cut copy or paste functionality may be performed through multiple different user interface actions. For example a user may initiate a copy operation using a Copy menu item using a keyboard command like Control C or some other command and so on. In some embodiments a user may also or instead employ one or more of a variety of other actions such as drag and drop gestures to transfer data. For example a user may select indicate or otherwise identify some data to be transferred copied or cut by say selecting the data using computer mouse movements and then initiate a data transfer copy or cut operation by dragging the selected entity or data to some other location perhaps by clicking and holding a mouse button and then finally drop the entity as part of the data transfer operation or to initiate a paste operation at the indicated location. As used herein copy cut and paste operations should be considered to encompass any set of user actions or gestures including those associated with such drag and drop implementations. It should also be further noted that in some implementations alternative user actions and gestures including possibly drag and drop gestures may be implemented without the use of system provided cut copy and or paste functionality. For example a drag operation may not actually result in the execution of some or all of the same executable code associated with a copy or cut operation and a drop operation may not result in the execution of some or all of the same executable code as a paste operation. Nonetheless such systems may still use the techniques described herein. As a result as just one example a drop operation might result in the providing of generated or converted data in a way that is the same as or similar to the manner in which a paste operation might result in the providing of generated or converted data.

Continuing with a description of the exemplary operations in one or more exemplary implementations of operation a paste operation may be initiated in a destination application. Generally such a paste operation may be associated with a paste target like those described previously and may be initiated in one or more of a variety of fashions including through the use of a menu item a keyboard shortcut a drag and drop operation and so on.

As part of initiating a paste operation in some implementations a user or other entity may select or otherwise indicate a particular paste target. The selection of the paste target might be performed in a variety of ways depending among other things on how the paste target is implemented and the desired user experience. In one example if the paste target comprises an edit control a user may select the edit control. In another example a user might select a control that is associated with an HTML div element by selecting a visible representation of the control like perhaps an image associated with the div element using a mouse or using the keyboard perhaps by using a TAB key to move the focus between different controls or user interface elements. In yet other examples a paste target may be selected or indicated in a variety of other ways.

Then to actually initiate a paste operation the user or entity may take some action that in some implementations is related to an edit control associated with the paste target. That is for example as the edit control may provide paste functionality or may be associated with paste functionality provided by the application or provided elsewhere the initiation of the paste operation may use the edit control. For example in at least some cases where the edit control is associated with an HTML textarea or text input control the user may initiate a paste operation by right or left clicking the control and choosing a paste menu item from a resulting pop up menu. In such an example the pop up menu may in some implementations be provided by the edit control. In the same or other cases a user might use a keyboard command like Control V or use a general top level application paste menu item. As the edit control may not be visible it may appear and the user may believe that the interaction is with a visible representation associated with the selected control even though the actual interaction may be with the edit control itself. For example in a case where an edit control is not visible and is located in the same physical location as an image the user may believe that they are interacting with the image not with the not visible edit control. Such an arrangement with a not visible edit control providing paste functionality and a visible representation with which the user appears to interact may be used in a variety of scenarios including with web pages displayed by a web browser. Edit controls used in non web browser contexts may operate the same or in a similar fashion or may operate differently.

In an exemplary implementation of operation a paste notification may be received as a result of the paste operation that was initiated in operation and also possibly as a result of the registration for paste notification that was accomplished in one or more of operation and operation . In some implementations this operation may result in the execution of callback or other code in an adapter or other application and such code may also execute or use operation and operation as described below.

In one or more implementations of operation destination data may be generated using at least some of the source data that exists on the clipboard. Generally the destination data may then as a result of one or more subsequent operations be provided or used by the destination application in which the paste operation was initiated. The nature of the source data used and the extent and format of the destination data may vary widely and may generally encompass some or all of the source data including possibly multiple data formats associated with a particular or each data item and may produce destination data in one or more of a variety of formats. As just one example an implementation of this operation might identify a data item on the clipboard as including as introduced previously a reference to an ICS file where the file contains contact information in the iCalendar format. This implementation might then create the corresponding Live Clipboard XML data that represents the same or similar information that exists in the ICS file perhaps by say converting the iCalendar data to the hCard format and then encapsulating the hCard data in Live Clipboard XML. In the same or other implementations of course a variety of other source data might be used and a variety of other destination data in a variety of formats might be produced. In some implementations including those where the destination application may be configured to use text data and those that use data in the Live Clipboard format or other XML or text format the destination data may comprise text.

In some implementations this operation may be implemented at least in part using an extensibility system. Such a system might for example enable users or other entities to plug in executable code or other instructions that specify for example how to convert particular source data to particular destination data. Using such a system the source and destination data that an implementation of operation may interpret or generate may be extended or changed without changing an adapter or other application that provides an implementation of operation . As just one example when a new source application or source data format is introduced or becomes common a plug in may be provided that can convert from the new source data format and produce destination data in some other format.

In an exemplary implementation of operation the destination data generated in operation may be provided to the destination application in which the paste operation was initiated. This operation may be implemented in a variety of ways depending on characteristics such as the manner in which the destination application is implemented and the functionality available to the adapter application or other executable code associated with operation . For example in some implementations of operation the adapter application or other executable code may be able to programmatically change the contents of the edit control or paste target associated with the paste operation initiated in operation . For example as part of the paste notification received in operation or perhaps part of the paste target identification accomplished in operation or operation a handle or other identifier associated with the paste target or some element associated with the paste target such as an edit control may have been provided or have been accessible. Using this handle or identifier executable code that implements at least part of operation may be able to call a Set Text function or the like and provide the destination data. In the case of a Set Text function the destination data most likely would be provided as text. For example in the specific case where the paste target in the destination application is configured to understand and interpret information in the Live Clipboard format the destination data provided using the Set Text or other function may be XML text that conforms to the Live Clipboard format. As a result of this operation the destination data may now be accessible to the destination application for example if the destination data was set to be the text of an edit control that is part of the destination application the destination application may be able to access the destination data by reading the contents of the edit control s text property or the like.

Finally in an implementation of operation the destination application may use the destination data it received as part of operation in one or more ways including by updating a user interface by processing the data in one or more of a variety of ways by storing the data and so on. As just one example a web page that includes a paste target and that can interpret Live Clipboard data might examine the destination data and if it is Live Clipboard data that includes information understood or associated with the page perhaps the page displays contacts and the Live Clipboard data includes an hCard representation of a contact might execute code that retrieves relevant data from the Live Clipboard representation and uses it to update the user interface associated with the page. Executable code in the destination application may be configured to be called when the text associated with a paste target perhaps the text associated with an edit control is changed perhaps by subscribing or registering to be called when a Text Change event or the like is fired or occurs may poll the paste target or other repository of destination data and take action when the data associated with the paste target changes or may identify when to use the destination in a variety of other ways.

Turning now to shown therein is an exemplary system that demonstrates one manner in which access to richer data may be enabled by an adapter application. The system includes a source application a destination application an adapter application and a clipboard . The adapter application in turn is shown as including a watcher module a registration module a converter module and an input output module . This description of may be made with reference to other figures. However it should be understood that the elements described with reference to are not intended to be limited to being used with the elements described with reference to other figures. In addition while the exemplary diagram in indicates particular elements in some implementations not all of these elements may exist and in some implementations additional elements may exist. Furthermore it should be understood that the exemplary graphical representations of the systems and user interfaces shown in and in other figures included herein are provided only for purposes of discussion and in no way should be construed as limiting the scope of the techniques described herein to any particular graphical or other representation.

Generally the source application the destination application and the adapter application may be one or more applications web pages hosted in a web browser or other application host or other executable code as introduced previously and described elsewhere herein or that are evident to one of skill in the art while the clipboard may be a clipboard system that enables information to be exchanged between applications and other entities also as introduced elsewhere herein and known in the art. Some or all of the operations previously described with reference to may in some implementations be associated with the source application the destination application the adapter application and the clipboard.

Generally the source application may be considered to provide or be associated with source data placed on the clipboard while the destination application may include one or more paste targets that may ultimately include or have access to destination data generated or provided by the adapter application as described in more detail below and also with reference to the operations of . For example the copying of source data to the clipboard operation described previously with reference to may in some cases take place in or be associated with the source application while the paste initiation operation and or the use of destination data operation may in some implementations take place in or be associated with a destination application.

The adapter application may in some implementations exist as an application that might run transparently or in the background and provide access to richer data in applications with appropriately configured paste targets. The watcher module may include functionality associated with the detection of new paste targets including identifying new paste targets using steps as described previously with reference to for example operation of . The registration module may include functionality such as that associated with identifying a paste target registering the adapter application to be notified when a paste operation using a paste target is initiated and may include functionality associated with for example operation of . The converter module may include functionality associated with converting source data to destination data including in some implementations an extensibility or plug in system and functionality associated with for example operation of . Finally the input output module may include functionality associated with for example receiving a paste notification when a paste operation is initiated including in manners such as those described previously with reference to for example operation of . The input output module may also or instead include functionality associated with providing generated data including in some implementations data generated by the converter module to the destination application including functionality associated with for example operation of .

In some implementations an adapter application may be written or implemented so that the execution of the adapter application and the functionality it provides does not require elevated privileges such as administrator or root access. Such an application may then in some cases be installed and or used by a wider variety of users.

It should be noted that while the source application the destination application and the adapter application are shown in the exemplary system as being separate applications that might exist in a single computer system that the applications may in fact exist as part of fewer than three separate applications and might exist as part of multiple different computer systems as long as the computer systems are able to communicate data placed on a clipboard between the different computer systems. In addition while the source application and destination application are shown as being separate applications in some implementations source and destination functionality may be implemented as part of the same application same web page or related web pages and the like.

Turning now to shown therein is an exemplary system that includes a graphical example of one mechanism for representing clipboard data including a representation of data that might exist as destination data or might be provided to a destination application. The exemplary system may contain clipboard data structured data feed data presentation data and other data . Any or all of the structured data feed data presentation data and other data may include references in at least some implementations. Structured data may be associated with one or more structured data formats such as structured data format and structured data format N . A structured data format may contain one or more items such as item and item N . Feed data may be associated with feeds like feed and feed N while a feed may be associated with some number of sets of feed items such as feed items and feed items N . A set of feed items like feed items may be associated with some number of feed items like feed item and feed item N . Finally presentation data may be associated with one or more presentation formats like presentation format and presentation format N . This description of may be made with reference to other figures. However it should be understood that the elements described with reference to are not intended to be limited to being used with the elements described with reference to other figures. In addition while the exemplary diagram in indicates particular elements in some implementations not all of these elements may exist and in some implementations additional elements may exist.

Clipboard data including destination data perhaps generated by an adapter application or the like may be represented in a wide variety of formats. In some implementations clipboard data may include some structured representation of the data itself which may itself include references to additional data feed or subscription information associated with a reference to additional data and about the structured data or about other data and additional presentation or display representations of the structured data. In general the term clipboard data may be interpreted to refer to destination data including data generated by an adapter application or as part of a generate destination data operation as described elsewhere herein.

In some implementations clipboard data such as the clipboard data may be represented using a markup language like XML for example or some other representation. It should be noted that while the system and the clipboard data may be described herein with reference to XML elements XML attributes and so on the use of XML is not required and any description of such use herein is provided for exemplary purposes only. The clipboard data may be represented in any number of a wide variety of alternate formats. Furthermore while particular elements attributes and so on may be referred to for exemplary purposes using a particular name such elements attributes and so on may be referred to using any name.

In some implementations the clipboard data may contain header information as well as one or more of different types of data including the actual structured data feed data and presentation data. In general each of these types of data may refer to the same information but in different formats. One purpose of providing multiple formats in this manner may be to make it more likely that a destination may find data appropriate for its use.

When represented using a markup language perhaps like XML the structure of the clipboard data might be the same as or similar to the following 

In some implementations the liveclipboard element may be associated with the clipboard data and the data feeds and presentations elements and their child elements may be associated respectively with the structured data feed data and presentation data and their child elements as described with reference to . In addition in this example data the use of the string lc might indicate a particular XML namespace perhaps including a namespace related to transferring structured data or destination data using a clipboard as described herein.

In some cases header or other information may be associated with the clipboard data . This data may be associated with some or all of version source and description attributes as well as other attributes. The version attribute may represent the version of the clipboard data format used in a particular instance of the clipboard data. The source attribute may represent a reference like a URL to the source provider of the clipboard data content. And the description attribute may represent a human readable description of clipboard data content.

In some implementations the clipboard data may be associated with at least one of structured data feed data and presentation data . In the same or other implementations the clipboard data may be associated with more than one of these elements including some implementations where all three of the elements or possibly other elements may be included.

The first set of data that may be included is the structured data itself which in some implementations may be associated with the structured data . In the same or other implementations the structured data may be associated with data represented using defined data formats such as hCard and vCard for representing contact information hCal and iCalendar for representing event information and so on. However any defined format or structured data may be used or associated with the structured data .

When the clipboard data contains structured data it may be represented for example in a manner similar to or the same as the following 

When represented like this the format element may correspond to the structured data format and the structured data format N while the item element may correspond to the item and the item N .

A structured data format like structured data format may define the format of the child item elements like item and item N with which it is associated. A structured data format may be associated with some or all of the contenttype type and encoding attributes as well as other attributes. The contenttype attribute may represent the content type of data for the contained item elements. For example this attribute may contain data defined by the Internet Assigned Names Association IANA like text calendar application xhtml xml and so on. The type attribute may represent a schema or format type of the data for the contained item elements. This may be useful for example if an IANA format identifier provided may not be sufficient to completely determine the type. For example when the contenttype attribute has a value of text calendar there may be sufficient information to determine that the data associated with an item element is formatted using the iCal standard. In contrast when the contenttype attribute has a value such as application xhtml xml additional information may be necessary to determine the format of the data in the item element. For example in this case the type attribute might have a value of vevent which might indicate that the data is formatted using the hCal standard. Finally an encoding attribute may represent how the data associated with the item elements is encoded.

In some implementations when multiple formats are provided such as with multiple instances of structured data format and structured data format N it may be useful to order the formats in some fashion. For example higher fidelity formats formats that may provide more data for example might be ordered before lower fidelity formats that do not provide as much data. Lower fidelity formats may be more widely accepted by destinations and so still may be preferable for some uses or for some applications web pages and so on. 

After the format of the data is defined for example using a structured data format like structured data format one or more items that are represented using that format may be provided. These items may correspond for example to the item and item N . In some representations these items may be associated with item elements that are perhaps located as children of data and format elements.

An item may represent data itself and may be associated with some or all of description and ref attributes as well as other attributes. The description attribute may represent additional data defined by the user or application. The ref attribute may contain a reference for example a URL associated with the item.

The item element may also contain data itself. For example when using XML if the data can be represented as well formed XML data that uses say the UTF 8 encoding then the XML corresponding to the data may be appended as a child of the item element. In some other cases for example when the data may not be represented as well formed UTF 8 XML data the data may reside in a CDATA section for the item element optionally encoded in the format described by the encoding attribute of the enclosing format element.

Data associated with either or both of the format and item elements may include both by value and by reference data. That is the actual data itself may be included for example in the item element. Alternatively or in addition to the actual data a reference to the data or to additional data may be included. That is an item reference may be included in the data for a structured data item. In some implementations for example the reference to the data may be stored using the previously introduced ref attribute. For example in an item that contains information about a single contact or person a by value copy of the data might be provided as part of the item element itself and a reference to that contact perhaps as a URL might be provided using the ref attribute of the item element. In some cases for a particular item only by value data may be provided while in other cases only by reference data may be provided and while in yet other cases both by value and by reference data may be provided.

In some implementations when there are multiple structured data formats the ordering of items beneath each format may indicate how items correspond to each other. For example if clipboard data includes two structured data formats X and Y corresponding in some implementations to two format elements the first item element of format X may correspond to the first item element of format Y. That is the first item element for each format may refer to the same item but represented in different formats. Furthermore in some implementations when feed data discussed in more detail below exists including feed data that includes feed items the ordering of item elements may correspond to the ordering of feeditem elements which may enable the correspondence of items to their location in a feed.

As just one example suppose that the clipboard data includes contact information for a particular contact and that the contact information itself is represented using the hCard standard. In such an example the contact information itself may be represented as follows 

As another example suppose that two contacts each represented using hCard are to be represented as clipboard data. The contacts themselves might be represented as follows 

As discussed previously the clipboard data may include alternate representations or formats for a single item. As one example suppose that an event may be represented using both the iCalendar and hCal standards. With such an example the iCalendar data might be like the following 

Both of these formats might be represented in clipboard data in a manner similar to or the same as the following 

Some clipboard data representations may be associated with subscription or feed information that may be in some implementations associated with the feed data . Such information may be useful for example to transfer references to data to represent feeds or sequences of data enable subscriptions to data or feeds and so on. In one example item data may be provided using for example the structured data and information about a feed that may be used to update the item data may be provided using the feed data . For example an initial set of contacts or contact information might be provided using the structured data and information in the feed data may be provided to enable an application to later update the contacts initially provided using the structured data. In another example the feed data may refer to some other data or information that is for example the feed data may refer to data that is not transferred in the structured data . For example the feed data may refer to one or more RSS Atom or other feeds that contain additional or other information. The information referred to by the feed data may be related to or associated with the data included elsewhere in the transfer or clipboard data representation such as with updating contact information as previously introduced or may refer to data that is not included or associated with the transfer or clipboard data representation. Note also that references may be represented and communicated in other fashions that do not use feed references in feed data. For example a reference might be represented as an item reference in a structured data item.

Feed data may be represented in multiple ways including for example in a manner similar to the following 

When represented like this the feeds element may correspond to the feed data the feed element may correspond to the feed and feed N the feeditems element may correspond to the feed items and feed items N and the feeditem element may correspond to the feed item and feed item N .

A feed like feed and feed N may have associated information about the feed. A feed may be associated with some or all of the type ref description and authtype attributes as well as other attributes. The type attribute may represent the type of data that exists at the location specified for example by the ref attribute. For example the type attribute may include values such as RSS Atom and so on or other values. Generally a wide variety of feed types may be used depending upon for example the capabilities of the endpoints. For example some implementations may support RSS other implementations may support RSS and also support extensions to RSS to implement other functionality and so on. For example some endpoints may support Simple Sharing Extensions to enable bi directional synchronization of data using RSS or other feed types. The ref attribute may represent a specific reference or address associated with the feed like a URL. In some implementations this reference may be the location of the feed itself. The description may represent some user specified data associated with the feed. Finally the authtype attribute may represent some type of authentication technique or techniques that may or must be used when accessing the feed.

Each feed may contain some number of sets of feed items such as feed items and feed items N . These may be represented in some cases by one or more feeditems elements. In turn a set of feed items may contain some number of feed items which might be represented using feeditem elements.

A set of feed items may be associated with the contenttype type and xpath attributes as well as other attributes. The contenttype attribute may represent the content type of data for the contained feeditem elements. For example similar to the structured data this attribute may contain data defined by IANA like text calendar application xhtml xml and so on. The type attribute may represent a schema or format type of the data for the contained feeditem elements. This may be useful like before and for example if an IANA format identifier provided may not be sufficient to completely determine the type. For example when the contenttype attribute has a value of text calendar there may be sufficient information to determine that the data associated with a feeditem element is formatted using the iCalendar standard. In contrast when the contenttype attribute has a value such as application xhtml xml additional information may be necessary to determine the format of the data in the feeditem element. For example in this case the type attribute might have a value of vevent which might indicate that the data is formatted using the hCal standard.

The xpath attribute may represent a query perhaps using the XPath standard but also represented using some other query language or standard that returns or otherwise identifies data items from the feed. For example if a feed is retrieved using the ref attribute of the parent feed element in some cases the query represented by the xpath attribute may be executed against the contents of the retrieved feed to identify particular data items in the feed. This may enable the feed to contain a variety of data only some of which may be relevant for or associated with the clipboard data and still enable the clipboard data to be associated directly with the relevant data. In addition this may enable the relevant portions of the data to be changed perhaps at some later time by only changing the value of this attribute the actual data in the feed would not necessarily need to change. In implementations that do not use the xpath attribute or a similar type of attribute or query all of the data associated with the feed may be relevant to for example a subsequent update or data retrieval operation.

Similar to with the structured data discussed previously in some implementations when multiple formats are provided it may be useful to order the formats in some fashion. For example higher fidelity formats again formats that may provide more data for example might be ordered before lower fidelity formats that do not provide as much data. As before lower fidelity formats may be more widely accepted and so still may be preferable for some uses or for some applications web pages and so on.

A set of feed items may in turn be associated with or contain some number of feeditem elements which may in some cases enable information retrieved from the feed to be linked to item elements provided for example in the structured data . A feeditem element may be associated with an id attribute or some other attribute or data which may represent some type of identifier perhaps a unique identifier for the feed item. In implementations that do not use or include elements like the feeditem element data may still be retrieved and used but in some cases the data may not be linked to the structured data also provided with the clipboard data.

In at least some implementations if there are multiple instances of feeds like feed and feed N the ordering of feeditem elements beneath each feed may indicate that particular items correspond to each other. For example in the case where there are two feed elements named X and Y the first feeditem element associated with feed X may correspond to the first feeditem element associated with feed Y. Also in clipboard data that has structured data the ordering of feeditem elements may correspond to the ordering of item elements provided in the structured data .

An example clipboard data representation that uses feed data is provided below after the discussion of presentation data.

Finally some clipboard data representations may be associated with presentation data such as presentation data and presentation format and presentation format N . Such data may provide a formatted or display representation of data that may also be provided elsewhere in the clipboard data. For example where the structured data includes a contact perhaps in the hCard or vCard formats the presentation data may be associated with an instance of the same contact data represented using HTML JPEG or some other presentation data format. In many cases destination applications web pages or the like that do not understand data in one or more structured data formats may still understand a display representation like HTML or JPEG and so may still be able to at least display or present the clipboard data.

Presentation may be represented in multiple ways including for example in a manner similar to the following 

When represented like this the presentations element may correspond to the presentation data and the format element may correspond to the presentation format and presentation format N .

The presentation data may be associated with some number of presentation formats. Each presentation format perhaps represented by a format element may be associated with some or all of the contenttype type encoding description and ref attributes as well as other attributes. The contenttype attribute may represent the content type of data for example for a CDATA section associated with this format. For example this attribute may contain data defined by IANA like application xhtml xml and the like. The type attribute may represent a schema or format type of the data for the format. Like before this may be useful for example if an IANA format identifier provided may not be sufficient to completely determine the type. The encoding attribute may represent how the data associated with for example a CDATA section is encoded. The description attribute may represent data defined by the user or application. Finally the ref attribute may contain a reference for example a URL associated with the item.

Similar to with structured data a format element may also contain data itself. For example when using XML if the data can be represented as well formed XML data that uses the UTF 8 encoding then the XML corresponding to the data may be appended as a child of the format element. In some other cases for example when the data may not be represented as well formed UTF 8 XML data the data may reside in a CDATA section for the format element optionally encoded in the format described by the encoding attribute.

As just one example suppose clipboard data or destination data is desired that represents contact information in the hCard format an RSS feed associated with the contact information so the contact information can be updated at some later point in time for example and an HTML representation of the contact data perhaps useful for example if a destination of the clipboard data does not understand the hCard format.

Given all of these data representations a corresponding clipboard data or destination data representation might consist of the following data 

In the same or other implementations a clipboard data or destination data representation might also include other elements including other data . As just one example a representation might include other data associated with providing more information about other schemas that might be used in the clipboard data or destination data representation. For example information in a data element or a feed element or the like might be represented using one or more particular schemas and the particular schema or schemas might be described using a schema definition format like the XSD XML Schema Definition format or one or more of a variety of other schema definition formats. In some examples schema definitions might be included using a top level element one named schemas perhaps that might include child elements each perhaps named schema that contain information defining the schemas. Such schema information might be referenced using other parts of the clipboard data or destination data representation including the format element the feeditem element and the like.

As just one specific example a clipboard data or destination data representation that includes a schema definition associated with a contact might be represented as follows where the schemaid attribute in the format element references the schema element with the id attribute that has a value of 1 

Turning now to this figure and the related description are intended to provide a brief and general description of an exemplary computing environment in which the various technologies described herein may be implemented. Although not required the technologies are described herein at least in part in the general context of computer executable instructions such as program modules that are executed by a controller processor personal computer or other computing device such as the computing device illustrated in .

Generally program modules include routines programs objects components user interfaces data structures and so on that perform particular tasks display particular information or implement particular abstract data types. Operations performed by the program modules have been described previously with the aid of one or more block diagrams and operational flowcharts.

Those skilled in the art can implement the description block diagrams and operational flows in the form of computer executable instructions which may be embodied in one or more forms of computer readable media. As used herein computer readable media may be any media that can store or embody information that is encoded in a form that can be accessed and understood by a computer. Typical forms of computer readable media include without limitation both volatile and nonvolatile memory data storage devices including removable and or non removable media and communications media.

Communication media embodies computer readable information in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communications media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

The computing device illustrated in in its most basic configuration includes at least one processing unit and memory . In some implementations the computing device may be associated with or include for example some or all of the elements described with reference to such as the source application the destination application the adapter application and or the clipboard . In some implementations the processing unit may be a general purpose central processing unit CPU as exists for example on a variety of computers including desktop and laptop computers. Depending on the exact configuration and type of computing device the memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. This most basic configuration is illustrated in by dashed line . Additionally the computing device may also have additional features and functionality. For example the computing device may also include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by the removable storage and the non removable storage .

The computing device may also contain one or more communications connection s that allow the computing device to communicate with other devices and services. For example the computing device might have one or more connections to a variety of communication means or computing devices. The computing device may also have one or more input device s such as an image input devices like cameras or scanners keyboards mice pens voice input devices including microphone arrays touch input devices and so on. One or more output device s such as a display speakers printer and so on may also be included in the computing device .

Those skilled in the art will appreciate that the technologies described herein may be practiced with computing devices other than the computing device illustrated in . For example and without limitation the technologies described herein may likewise be practiced in hand held devices including mobile telephones and PDAs multiprocessor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. Each of these computing devices may be described at some level of detail by the system of or may be described differently.

The technologies described herein may also be implemented in distributed computing environments where operations are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote devices.

While described herein as being implemented in software it will further be appreciated that the technologies described herein may alternatively be implemented all or in part as hardware firmware or various combinations of software hardware and or firmware.

Although some particular implementations of methods and systems have been illustrated in the accompanying drawings and described in the foregoing text it will be understood that the methods and systems shown and described are not limited to the particular implementations described but are capable of numerous rearrangements modifications and substitutions without departing from the spirit set forth and defined by the following claims.

