---

title: Resource object resolution management
abstract: Systems and methods are disclosed for management of resource objects (“resources”) within a computing environment. Resources may be stored in a number of resource spaces, each including service endpoints configured to facilitate access to resources. On creation of a resource, an identifier may be assigned to the resource. Thereafter, the identifier may be used to determine an appropriate service endpoint for accessing the resource. For example, each resource space may submit a set of resolution rules to a resolution server. Each set of resolution rules may be used to identify an appropriate endpoint for accessing a resource. Thereafter, a request for a resource may first retrieve the set of resolution rules, and use such rules to determine an appropriate service endpoint. Illustratively, utilization of resource resolution rules may enable the service endpoint to be modified without requiring modification of client devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09576062&OS=09576062&RS=09576062
owner: Amazon Technologies, Inc.
number: 09576062
owner_city: Seattle
owner_country: US
publication_date: 20120730
---
Generally described computing devices utilize a communication network or a series of communication networks to exchange data. Companies and organizations operate computer networks that interconnect a number of computing devices to support operations or provide services to third parties. The computing systems can be located in a single geographic location or located in multiple distinct geographic locations e.g. interconnected via private and or public communication networks . Specifically data centers or data processing centers herein generally referred to as data centers may include a number of interconnected computing systems to provide computing resources to users of the data center. The data centers may be private data centers operated on behalf of an organization or public data centers operated on behalf or for the benefit of the general public.

Data centers may provide a number of network accessible services to computing devices. Further data centers may store and maintain a variety of information related to or created by a variety of computing processes or services. For example information may be stored in databases or other data stores and made available to computing devices either within a data center or external to a data center. In order to access services or information provided by such services a computing device may be required to know a network address at which a service may be reached. Further in some embodiments a computing device may be required to know an identifier associated with a specific item of information or service. By utilizing a network address to request information corresponding to an identifier of a service or information item the service or information item may be accessed by a requesting computing device.

In some instances an address of a service or information item may be independent of the service or information item itself. For example services and information items may be made available via a variety of protocols. Each protocol may define common mechanisms by which computing devices or other devices may communicate with one another. Within a networked communication context examples of protocols may include Hypertext Transfer Protocol HTTP Simple Mail Transfer Protocol SMTP and Simple Object Access Protocol SOAP . Moreover in some instances multiple protocols may be used in conjunction. For example SOAP and HTTP may be used in conjunction in order to transmit receive or process information. Further protocols may be modified or altered in order to suit the needs of the user of the protocol. For example a developer of computing software may conform to the principals of Representational State Transfer REST when utilizing a protocol e.g. HTTP the combination of which may also be considered a protocol e.g. REST HTTP . Accordingly a given service or information item may be made available at a variety of addresses e.g. corresponding to different protocols locations etc. .

Generally described aspects of the present disclosure relate to managing resources objects on computing networks. As used herein resource objects resources may generally refer to any identifiable entity or thing that can be identified named addressed or handled in a networked communication system. For example resources may correspond to information or items of information stored within a database or other data store. Moreover resources may correspond to services or software applications e.g. a web server a database storing information a search engine etc. . Still further resources may include interfaces such as application programming interfaces. Generally described resources may be made available via a network by reference to a resource identifier e.g. a resource name and a resource address e.g. a location at which to find the resource . In some instances a resource address may be independent of the resource itself. For example a resource may be relocated and therefore made available at a new resource address. Moreover a resource may be available at more than one resource address at any given time. For example a resource address may be partially or wholly dependent on the protocol used to interact with the resource. Illustratively the same resource may be made available via a SOAP HTTP protocol a SOAP SMTP protocol a REST HTTP protocol etc. In some instances a resource address at which a resource is made available may change over time e.g. as new software or hardware is implemented etc. . As such aspects of the present disclosure relate to managing address information of resources such that given an identifier of the resource an address of the resource may be resolved to the resource as the address changes. Further aspects of the present disclosure relate to managing resources associated with multiple addresses such that a desired address may be returned that conforms to desired criteria e.g. a desired protocol . For example systems and methods disclosed herein may facilitate returning a current address of an object A when using a REST HTTP protocol.

Specifically one or more resource resolution servers may be provided which store rules regarding the resolution of resource addresses. When a computing device e.g. a client device is attempting to identify the address of a resource the device may first request rules regarding the resource from a resource resolution server. Thereafter the requesting computing device may utilize the retrieved resolution rules in order to identify an appropriate address for the desired resource. For example rules may specify that for a given resource identifier MyResource and a desired protocol of REST HTTP the resource may be located at http resourceserver.domain.TLD 1111 getResource resourceID MyResource. In some embodiments rules for resolving a resource address may be maintained by the same entity that manages the resource itself. For example a computing device or administrator thereof that manages the MyResource resource may alter resolution rules to add support for a new protocol. Illustratively the MyResource resource may be made available via the SOAP HTTP protocol at http resourceserver.domain.TLD 2222 getResource resourceID MyResource. 

As a further example resolution rules may be altered to reflect a change in a physical endpoint that handles requests for a resource. For example a resource may initially be accessed worldwide at a single global server e.g. http globalserver.TLD . However at a later point in time frequency of access to the resource may require that multiple regional servers be implemented e.g. http NAserver.TLD for North America http EUserver.TLD for Europe etc. . As such resource rules may be updated such that a request for a North American resource is pointed to the North American server a request for a European resource is pointed to a European server etc. In this manner a resource may be accessed without requiring independent knowledge of the address at which the resource is available.

In some embodiments resources may be grouped according to any logical or physical criteria. For example resources of similar types may be grouped into resource spaces. In some embodiments resources spaces may be administered by different entities and the collection of resources within a resource space may be determined by each entity independently. As such each resource space may contain any collection of resources even if those resources are similar to or duplicative of resources in other resources spaces. In other embodiments multiple resource spaces may be administered by a single entity or multiple related entities. As such each resource space may contain a divided portion of resources. For example resource spaces may be defined for creation of a collaborative website e.g. a wiki . A first resource space may include resources related to articles or web pages available on the wiki while a second resource space includes resources related to users a third resource space includes resources related to community forums etc. As a further example resource spaces may be defined for an e commerce website. Illustratively a first resource space may include resources related to items offered for sale a second resource space may include resources related to user accounts a third resource space may include resources related to placed orders etc.

In addition to resources resource spaces may include service interfaces for accessing a resource. For example a service interface may be configured to receive a request for information regarding a resource formatted according to a given protocol. Illustratively a first service interface may be configured to receive requests in the REST HTTP protocol a second service interface may be configured to receive requests in the SOAP HTTP protocol etc. Moreover different service interfaces may be configured to receive requests for resources according to an identifier of the resource. For example a first service interface may be configured to receive requests for a first type of resource identifier e.g. identifier version 1 while a second service interface may be configured to receive requests for a second type of resource identifier e.g. identifier version 2 . Still further different service interfaces may be configured to receive requests for resources according to an aspect of a requesting device. Illustratively different service interfaces may be configured to process requests according to a location of a requesting device e.g. continent country region city etc. or according to an identity of the requesting device e.g. production or non production authenticated or non authenticated user facing or non user facing etc. .

Accordingly in order to determine a correct address for a given resource a requesting device may be required to determine a resource space in which the resource exists as well as an appropriate service interface by which to request the resource. As such systems and methods may be provided for determining based at least in part on resource resolution rules a resource space and service interface that correspond to a given resource. In some embodiments multiple resource resolution rules may be utilized such that resolution of a resource address may occur through combined use of multiple linked resolution rules. Further in some embodiments resolution rules may be administered by entities associated with each resource space such that each resource space or an entity associated with each resource space may independently manage resolution of resource addresses.

In other embodiments resolution rules may be configured such that resolution rules are indefinitely backwards compatible. For example rather than replace a given set of resolution rules with an updated version rules may be amended such that identifiers corresponding to an outdated set of resolution rules are still resolvable given the rules. For example rules may enable resolving of multiple versions of address identifiers at a single time. Illustratively a resource identifier conforming to a latest version may resolve to a resource address capable of handling a request for the resource at a high speed while a resource identifier conforming to an outdated version may resolve to a resource address capable of handling requests at a relatively slower speed. Because resolution rules may enable resolution of any number of resource identifier formats it is possible to indefinitely resolve even very old resource identifiers.

In still more embodiments resource rules may enable resource identifiers to include information facilitating rapid resolution of a resource address. For example resource rules may modify a resource address based on a characteristic of a requesting client device e.g. user facing or non user facing . Moreover resource rules may enable the use of additional information in resource identifiers themselves such as hint information that facilitates resolving of a correct resource address. Examples of additional information that may be utilized for resolving resource addresses will be described below.

Subsequent to identification of a resource address a requesting client device may interact with a resource according to a specified protocol. For example a web server associated with a collaborative website may based on a resource identifier and a set of resource resolution rules interact with a first resource space to retrieve a listing of articles available on the website. Similarly the web server may interact with a second resource space to retrieve a listing of users on the website or to authenticate a requesting user. In accordance with embodiments of the present disclosure each resource space may modify addressing of resources or implement additional protocols and modify resolution rules accordingly. As such interfacing devices e.g. the web server discussed above that utilize the resolution rules would not be required to modify their configuration in order to resolve new resource addresses.

With reference to an illustrative operating environment is shown which includes a resource resolution server that enables client devices to resolve resource addresses corresponding to resources available via a variety of resource spaces . As illustrated in the operating environment includes one or more client devices . Though general reference is made herein to clients each client device may correspond to any computing device e.g. physical virtual etc. that may request access to or information regarding a resource in one of a number of resource spaces . For example in some embodiments a client device may correspond to a device of an end user of a web site or service such as a general purpose computing device mobile phone PDA tablet laptop set top box internet connected television etc. In other embodiments a client device may correspond to a server such as a web server or a database server. As such though reference is made to clients client devices should not be construed to include only user facing devices. In some embodiments client devices are embodied in a plurality of devices each executing an instance of the respective device. In addition a client device may include a network interface memory processing unit and non transitory computer readable medium drive all of which may communicate with each other by way of a communication bus. Moreover a processing unit may itself be referred to as a client device. The network interface may provide connectivity over the network and or other networks or computer systems. The processing unit of the client device may communicate to and from memory containing program instructions that the processing unit executes in order to operate the device. The memory generally includes RAM ROM and or other persistent and or auxiliary non transitory computer readable storage media.

Moreover though shown as distinct from each resource space in some embodiments client devices may be associated with or reside within a resource space . For example a first service operating within a first resource space A may require access to a resource within a second resource space B. As such the first service may constitute a client device . Accordingly a client device may generally correspond to any computing device that may access a resource within a resource space .

As shown in the illustrative operating system may include any number of resources spaces A N. Moreover in some embodiments an operating environment may include only one resource space. A resource space may generally correspond to any collection logical physical or otherwise of resources and or computing devices configured to provide access to those resources. For example a resource space corresponding to an e commerce site may include all items available for purchase all orders placed via the site all users of the site etc. Each resource space may include one or more data stores for storing information regarding resources. Generally speaking data stores may include hard disk drives HDDs solid state drives SSDs tape drives databases network attached storage NAS or any other persistent or substantially persistent memory storage devices or any collection or combination thereof. As will be described in more detail below data stores may be located in a single physical location or may be located in diverse locations e.g. regions continents etc . Although depicted in as local to the resource spaces one or more of the data stores may be accessible over the network and or may be embodied as a web service. In addition each resources space may include a number of service interfaces . Illustratively each service interface may correspond to a collection of computing devices configured to provide access to resources via a distinct protocol. For example a first service interface may provide access to resources e.g. information stored in a data store via the SOAP HTTP protocol while a second service interface may provide access to the same or similar resources via the REST HTTP protocol. Accordingly in order to access a resource within a given resource space a client device may request the resource via a given service interface that is configured to enable access to the resource via a desired protocol. Similarly to a resource space service interfaces may be any logical or physical grouping of computing devices or software implemented by a computing device that is configured to provide access to a resource via a protocol. As will be discussed in more detail below with respect to in some embodiments service interfaces may include a number of regional service groups e.g. North American European Asian etc. . Further each regional group may itself include a number of service endpoints each configured to facilitate access to resources by a given group of client devices .

In order to facilitate communication between client devices and resource spaces the illustrative operating environment may further include a resource resolution server . The resource resolution server may correspond to any computing device e.g. virtual or physical configured to facilitate resolution of resource addresses. For example resource resolution server may be a physical server that includes a network interface a processing unit an input output device interface a display optional an input device and a computer readable medium drive all of which may communicate with one another by way of a communication bus. The network interface may provide connectivity to the network and or one or more networks or computing systems. The processing unit may thus receive information and instructions from other computing systems or services via the network . The processing unit also communicates to and from memory and further provides output information for a display optional via the input output device interface. The processing unit of the client device may communicate to and from memory containing program instructions that the processing unit executes in order to operate the device. The memory generally includes RAM ROM and or other persistent and or auxiliary non transitory computer readable storage media.

Illustratively the resource resolution server may include a resolution rules interface by which it receives resolution rules from resource spaces and delivers resolution rules to client devices . In some embodiments a resolution rules interface may be a hardware component of the resolution server such a computing device or portion thereof configured to transmit and receive information from one or more resource spaces client devices or other computing devices. In other embodiments a resolution rules interface may correspond to software or computer executable modules implemented by one or more computing devices. As will be described in more detail below resolution rules may generally correspond to any set of information that facilitates resolution of a resource address based on a resource identifier. For example resolution rules may include that any resources corresponding to a resource identifier between 1 and 100 are available from resource space A while resource identifiers between 101 and 201 are available from resource space B etc. In some embodiments resolution rules may be received from each resource space A and stored within a resolution rules data store associated with the resource resolution server . Similarly to data stores described above the resolution rules data store may correspond to a HDD SSD NAS tape drive data base or any other persistent or substantially persistent memory storage device. Moreover the resolution rules data store may correspond to any collection or combination of the above. Although depicted in as local to the resource resolution server the resolution rules data store may be accessible over the network and or may be embodied as a web service.

As will be described in more detail below the resource resolution server may be configured to transmit resolution rules to one or more client devices in response to requests. Illustratively a client device may require information regarding a specific resource identifier 110A 112.1 ABC. As such the client device may transmit a request to the resource resolution server in order to obtain resolution rules facilitating identification of a proper service interface for requesting information regarding the resource. For example the resolution rules may state that requests for resource identifiers beginning with 110A should be directed to resource space A. Further the resolution rules may state that requests for resource identifiers including 112.1 should be directed at a first service interface within an identified resource space e.g. resource space A . Finally resolution rules may state that for REST HTTP protocol requests to a first service interface of resource space A requests may be transmitted to http serviceEndpoint.myServer.TLD getResource id ID where ID corresponds to any portion of an identifier following a final colon symbol. As such a client device may determine that based on the rules described above a request via the REST HTTP protocol for resource identifier 110A 112.1 ABC should be directed to http serviceEndpoint.myServer.TLD getResource id ABC. As will be appreciated by one skilled in the art rules may be modified during operational use of resources such that resource addresses may be modified without requiring client devices to modify their own configuration. For example a resource space may at a given point in time decide to implement a different format for resolving resource addresses e.g. utilizing dashes rather than colons . Accordingly the resolution rules may be updated such that older style resource addresses using colons would continue to be routed to the correct service endpoints within a resource space while newer style resource addresses could be routed to new or existed service endpoints.

In some embodiments the flexibility of resolution rules may facilitate ease of deprecation of resource identifier formats without requiring that deprecated resource identifiers become obsolete. For example a resource space may include two distinct service endpoints a first service endpoint that handles at a high rate of speed all requests conforming to a most recent resource identifier format and a second service endpoint that handles at a low rate of speed all requests conforming to deprecated resource identifier formats. Accordingly if a new resource identifier format were to be implemented resolution rules may be updated to reflect that all requests conforming to the new resource identifier format should be directed to the first service endpoint while all other request formats including for example the recently outdated format as well as already deprecated formats be transmitted to the second service endpoint. As such requests utilizing a deprecated resource identifier format may continue to work indefinitely though in this example at a slower speed .

With respect to an illustrative embodiment of a resource space such as resource space A of is described in more detail. As described in a resource space may include a number of service interfaces . For example the illustrative resource space A of may include two service interfaces A and B. Each service interface e.g. service interfaces A and B may correspond to a collection of service endpoints configured to facilitate interaction with resources according to a given protocol. For example each service endpoint of service interface A may be configured to respond to requests utilizing a SOAP SMTP protocol while each service endpoint of service interface B may be configured to respond to requests utilizing a REST HTTP protocol. Generally described a service endpoint may correspond to any computing device virtual or physical configured to handle requests for resources. Moreover though shown as distinct within in some embodiments multiple service endpoints may be provided by a single computing device. For example a single physical computing device may facilitate interaction with resources according to a number of different protocols. Still further in some embodiments different service endpoints may be configured to handle requests for resources according to an aspect of the requestor. For example a first service endpoint may be configured to handle requests originating from user facing services e.g. web sites or servers while a second service endpoint may be configured to handle requests originating from non user facing devices e.g. database servers etc. .

In some instances service endpoints may be grouped according to a given criteria such as physical location of the service endpoint . For example a number of service endpoints may be included within a regional service group A corresponding to North America. Similarly regional service group B may correspond to Europe while regional service group C may correspond to Asia and regional service group D may correspond to Latin America. Each regional service group may further include additional components such as a data store . Each data store may correspond for example to one of the data stores of . For example the data store within regional service group A may include information regarding resources within the given resource space that are associated with North America e.g. information regarding North American customers of an e commerce site .

Though one illustrative hierarchy of a resource space is described herein one skilled in the art will appreciate that resource spaces may be configured to include any combination or configuration of service endpoints each configured to return information regarding resources within the resource space . For example a resource space may omit any one or more of the classifications discussed above e.g. protocol region etc. Moreover a resource space may include additional classifications such as the type of computing device implementing a service endpoint or a required authentication level of requestors e.g. authenticated and non authenticated service endpoints . As such the depicted configuration of a resource space is intended to be illustrative and not limiting.

In some embodiments resolution rules for identifying a service endpoint e.g. as provided by a resource resolution server of may correspond to or be based at least in part on a hierarchical structure or grouping of service endpoints . For example in the illustrative embodiment of service endpoints are collected into regional service groups which are arranged into service interfaces which are arranged into resource spaces . As such in some embodiments each of the resource spaces service interfaces regional service groups and service endpoints may provide resolution rules for identifying the next contact within the hierarchical structure. For example each resource space may provide resolution rules for identifying a service interface each service interface may provide resolution rules for identifying a regional service group and each regional service group may provide resolution rules for identifying a regional service endpoint . Accordingly each level of a hierarchical arrangement of service endpoints may be managed independently such that the rules for identifying a regional service group may not be required to be known by a resource space . Such a structuring of resolution rules may enable a restructuring of hierarchy of service endpoints with minimal changes to resolution rules e.g. changes may only be required for rules pointing to or provided by an altered structure .

Further in some embodiments multiple resolution rules may be linked without regard to the hierarchical structure of service endpoints . For examples multiple resolution rules may be linked in order to create modularity of the resolution rules such that any individual set of resolution rules may be modified while only affecting resolution rules that point directly to the modified set of resolution rules. For example a first set of resolution rules may based at least in part on an aspect of a resource request determine that a second set of resolution rules should be retrieved and implemented. Such a second set of resolution rules may in turn reference a third set of resolution rules etc. until a final set of resolution rules identifies an applicable service endpoint for accepting the resource request. As such resolution rules may be combined to achieve any level of granularity desired.

With reference now to a block diagram is shown depicting the transmission of resource resolution rules from a resource space such as a resource space A of as well as creation of a resource conforming to such resource resolution rules. In this regard a resource space A may at 1 determine a set of resource resolution rules. As described generally above resource resolution rules may include a set of criteria for determining a resource address based at least in part on a resource identifier. Optionally resource resolution rules may further include criteria for determining a resource address based on additional information such as aspects of the request or the requesting device.

Illustratively a resource identifier may include a number of elements such as an identifier of the resource space to which the resource belongs and an indication of the identity of the resource itself. For example a resource generated and stored by the resource space A of may correspond to RS110A 0001 where the portion prior to the colon RS110A represents the resource space A and the portion after the colon 0001 represents the specific resource created. In this case the resource RS110A 0001 may correspond to the first resource created and stored on the resource space A.

In some embodiments a resource identifier may include further information regarding a resource. For example in some embodiments a resource identifier may include a hint or other information regarding the nature and location of a resource. Illustratively as described above with respect to a resources space such as resource space A may be subdivided into regional service groups such as a regional service group of . Accordingly a hint may be included into a resource identifier to directly identify the regional service group to which a resource belongs. Illustratively the resource identifier RS110A 0001 discussed above may be modified to RS110A NA 0001 where the newly added section NA represents that the resource is assigned to the North American regional service group . Still further in some embodiments versioning information may be included for a resource identifier or for one or more portions of an identifier. Illustratively in continuation of the example discussed above an identifier may be modified to RS110A 1.NA 0001 where the newly included 1. represents that the hint NA is a version 1 hint. Similarly versioning information may be included for other aspects of the resource identifier such as the identifier for the specific resource e.g. 0001 the resource space A or the identifier as a whole.

As an example of the potential usefulness of versioning information consider a hypothetical situation in which additional regional service groups are added and defined by country rather than continent. As such a new hint portion of an identifier may be created e.g. version 2 and may reference a country code rather than continent code. Illustratively a new identifier may correspond to RS110A 2.US 0005. In determining a specific resource address corresponding to the identifier a client device such as client device of may apply specific rules based on versioning information within an identifier. For example where the portion 1.NA is included in an identifier a client device may be configured to locate a resource based on continent. Similarly where the portion 2.US is included in an identifier a client device may be configured to locate a resource based on country.

Though aspects of resource identifiers are discussed above one skilled in the art will appreciate that additional or alternative resource identification schemes may be used without departing from the present disclosure. For example portions of identifiers may be separated by any character or symbol e.g. dashes dots hexadecimal codes specific characters etc. . Additional information may be included within a resource identifier such as a preamble indicating its status as an identifier e.g. Identifier RS110A 2.US 0005 . Moreover information discussed above may be excluded from an identifier such as hint portions or specific resource spaces to which a resource belongs. In general one skilled in the art will appreciate that a resource identifier may contain any amount of information sufficient to uniquely identify a resource. Further a resource identifier may be encoded according to any format capable of representing such information including text strings binary data files classes structs etc.

In some embodiments resource identifiers may be obfuscated or encrypted. For example any of the illustrative identifiers above may be modified by any known encryption or obfuscation technique in order to provide added security to a resource resolution system.

Returning to at 1 the resource space A may determine a set of resource resolution rules for resolving a resource address based at least in part on a resource identifier. In some embodiments resource resolution rules may include filtering criteria for extracting useful information from a resource identifier. For example using the resource identifier discussed above Identifier RS110A 2.US 0005 resolution rules may first specify that a resource identifier should be checked to verify that the identifier begins with Identifier and that otherwise an error be returned. Further in some embodiments where resolution rules are specific to each resource space resolution rules may first specify that a resource identifier should be checked to verify that the identifier includes a reference to the correct resource space A e.g. identifier begins includes RS110A . Resolution rules may specify that if the above rules are satisfied a hint should be extracted from the identifier. In the present example that hint may correspond to 2.US. The version number of the hint as well as information regarding the hint may be used to identify an applicable sub rule. For example an identifier including a hint version 1 e.g. beginning with 1. may be referred to different sub rules than an identifier including a hint version 2 e.g. beginning with 2. . A sub rule directed towards a specific hint version may further redirect a resource resolution request to additional sub rules. For example a first sub rule may specify that for identifiers including a hint version 2 the two letters following the hint version should be extracted and used to identify a next sub rule. Illustratively an identifier including 2.US may be redirected to a rule specifically for United States based resources. Similarly an identifier including 2.EU may be redirected to a rule specifically for European based resources. As will be appreciated by one skilled in the art any number of sub rules could be defined and linked to an initial set of resolution rules such that each intermediate sub rule directs a request to a next rule until a final address is resolved. In other embodiments the entirety of resolution rules may be contained within one resolution rule set.

As discussed above in some embodiments rules may be based on information included within a client request such as the identity of the client or the protocol by which a resource request should be transmitted. For example a client may specify that a protocol of SOAP SMTP is preferred. As such an initial set of resolution rules or sub rules thereof may direct a request to rules for a given service interface . Further a client may specify that they are requesting a resource for a user facing process. As such an initial set of resolution rules or sub rules thereof may direct a client device to request rules for a given service endpoint such as a service endpoint provisioned for user facing services.

In some embodiments rules may utilize filtering or sorting techniques to determine one or more aspects of a resource request received from a client or a resource identifier within the request. For example where a client resource request includes text fields of given names resolution rules may use regular expressions to determine the value of each field. Further regular expressions or similar filtering techniques could be used to extract information contained within portions of a resource identifier e.g. based on a known format of resource identifier .

Returning now to after a resource space A has determined a set of resource resolution rules it may at 2 transmit the determined resource resolution rules to a resource resolution server . The resource resolution server may thereafter make available the resource resolution rules to client devices . For example the resource resolution server may store the transmitted resolution rules within the resolution rules data store . As will be described in more detail below with respect to the resolution rules may be made available to requesting client devices in order to resolve resource addresses.

Thereafter at 3 the resource space A may receive a request for creation of a new resource. Illustratively creation of a new resource may correspond to any creation of information or addressable object on a resource space such as resource space A . For example where a resource space corresponds to a portion of a collaborative website a new resource may correspond to a new article or page created on the object. As a further example where a resource space corresponds to an e commerce site a new resource may correspond to a new order created by a customer of the site. At 4 the new resource item may be created stored or otherwise maintained on the resource space A e.g. in a database . Thereafter at 5 the resource space A may assign a unique resource identifier to the resource. For example in the examples given above a resource identifier may follow the form Identifier Resource Space Hint Unique Number String where Resource Space corresponds to an identifier of a resource space Hint corresponds to information regarding lookup of the resource identifier and Unique Number String corresponds to a unique number assigned to the resource. Illustratively if a newly created resource is the eight hundredth resource on the resource space A a generated resource identifier may correspond to Identifier RS100A 2.US 0800. At 6 this generated resource identifier may be returned to the requesting client device . As will be described in more detail below the client device or other client devices may utilize the returned resource identifier in conjunction with resource resolution rules to retrieve information regarding the resource corresponding to the resource identifier e.g. the web page the order etc. .

With reference now to a block diagram is shown depicting the resolution of a resource address based on resource resolution rules as well as on a resource identifier. In this regard a client device such as client device of may at 1 request resource resolution rules from a resource resolution server such as resource resolution server of . In some embodiments a client device may request global resource resolution rules e.g. rules applicable to all resource spaces . Thereafter a client device may utilize such global resolution rules in order to determine a resource space associated with a requested resource. In other embodiments a client device may be configured to determine a resource space from which a resource is requested. In some embodiments identifiers may include a direct reference to the resource space in which the identified resource is located. As such in these embodiments a client device may request rules directed to a specific resource space . Thereafter the resource resolution server may transmit the requested resource resolution rules to the client device .

At 3 the client device may utilize the resolution rules to determine a resource address at which to request the required resource. For example in some embodiments resource rules may directly link a resource identifier to a resource address. Illustratively resource rules may specify that resource identifier 1 is located at http myfirstresource.TLD resource identifier 2 is located at http mysecondresource.TLD etc. In other embodiments resource rules may parse filter or sort information regarding a client device or resource identifier in order to resolve a resource address. Illustratively as described above a first set of resource resolution rules may lead to a number of sub sets of resolution rules based on for example an aspect of the client device e.g. user facing or non user facing production or non production geographic location etc. or a portion of resource identifier e.g. an included hint a format etc. . As a further example a first rule set may specify individual sub rule sets based on a requested protocol of interaction with a service endpoint e.g. service endpoints of . Each protocol based sub rule set may specify further sub rule sets based on e.g. a geographic location associated with the requested resource e.g. North American resource European resource etc. . As will be appreciated by one skilled in the art any number of sub rule sets may be provided to arrange resource identifiers according to any hierarchy. In such a hierarchy a final rule set may be provided which directs a requesting client device to an address at which to locate a resource. For example a resource identifier of Identifier RS100A 2.US 0800 corresponding to the format Identifier Resource Space Hint Unique Number String described in more detail above and requested via the REST HTTP protocol may resolve to a resource address of http RS100A.US.myDomain.TLD getResource resourceID 0800 at which the client device may interact with the desired resource as will be described below.

In some embodiments client devices may be configured to cache received resolution rules such that future resource resolution may occur without requiring interaction with the resource resolution server . Illustratively such caching may include storing resource resolution rules on the client device for further use. In some such embodiments techniques may be employed to verify the authority of such cached resolution rules. For example a client device may compare a hash value of the cached resolution rules to a hash value provided by the resource resolution server thereby ensuring that the cached rules match those available from the resource resolution server . In other embodiments cached resolution rules may be refreshed only if a resource address fails to return and expected resource.

After resolving a resource address for a given resource identifier the client device may transmit at 5 a request for the identified resource to the determined resource address which may correspond to a service endpoint such as service endpoint of within a resource space A. Thereafter the resource space A may return the requested resource to the client device for use. Though generally described in terms of a requested and a returned resource the present disclosure is not limited to information resources that may be returned to client devices but may include any resource addressable within a resource space. For example resources may include locations of services APIs etc. that may be accessed by a client device via a resource address.

With reference to a flow diagram is shown depicting an illustrative routine for processing a resource request based on a resource identifier including resolving a resource address based on a set of resource resolution rules. For example the routine may be carried out by a client device in order to access a required resource. Specifically at block a resource identifier may be determined that corresponds to a desired resource. In some embodiments this resource identifier may have been returned from a resource space e.g. resource space A of at the time of creation of a resource. In other embodiments a resource identifier may have been received by indirect channels. For example a client device may have received the resource identifier from a database or other data store which in turn originally received the resource identifier from the resource space A at the time of creation of a resource. Illustratively a user may have at some point in the past created an order for an item from an e commerce site. Thereafter a resource identifier corresponding to the order may have been generated and stored in a database of the user s order history. At a later point in time the user may request information regarding the order. As such a client device e.g. a web site serving the user or the user s device may retrieve the resource identifier corresponding to the order and attempt to gather information regarding the order.

Accordingly at block the client device may retrieve an initial set of resource resolution rules. As described above with respect to such retrieval may include requesting resource resolution rules from a resource resolution server e.g. resource resolution server of . In some embodiments an initial set of resource resolution rules may be a set of global rules used for identifying all resource addresses. In other embodiments an initial set of resource rules may be a set of rules specific to a resource space e.g. determined based on a resource identifier . At the client device may utilize the retrieved resource rules to determine a service endpoint. As described above such a determination may include comparing a desired resource identifier and or aspects of the client request to the retrieved resource rules in order to determine either 1 additional rules that are required to resolve a request 2 a resolved resource address or 3 an error condition. For example resource rules may state that for a given identifier all requests should be addressed to a given default resource address. Moreover resource rules may state that for certain specific identifiers further rules are required to resolve a resource address. Still further resource rules may state that for other identifiers e.g. malformed identifiers an error should be returned to the client device .

At block the client device may make a determination of whether additional rules are required to resolve a resource address. For example as described above with respect to each level of a hierarchy of resources may specify rules for resolving resources managed by that hierarchy component. As such an initial set of rules may correspond to a first level of hierarchy and may direct the client device for to specific rules for one or more components of a second level of the hierarchy component etc. until a final resource address is specified. Accordingly if additional rules are required in order to resolve a resource address the routine may continue at block where additional resource rules may be retrieved e.g. from the resource resolution server . The routine may then return to blocks and as discussed above.

Subsequent to determining a resource address for a given resource identifier the routine may then continue at block where the client device may access the required resource e.g. by use of a service endpoint of . Illustratively access to a required resource may include requesting information regarding the resource implementing the resource or otherwise interacting with a resource. Subsequent to such access the routine may terminate at block .

Though the routine is generally described above with reference to a client device in some embodiments one or more aspects of the routine may be carried out by additional or alternative computing devices such as a resource resolution server . For example in some embodiments a resource resolution server may be configured to receive a resource identifier from a client device to resolve the resource address utilizing a set of resolution rules and to return the address to the client device .

In addition though a single resource resolution server is generally described herein in some embodiments multiple resource resolution servers may be implemented. In some embodiments each of a number of resource resolution services may contain a portion of all resolution rules. Such portions of resolution rules may be divided accordingly to any grouping and may include overlapping or duplicative storage of resolution rules. For example each resource space may be associated with one of a number of resource resolution server such that client requests initially are directed to a global resource resolution server and then redirected to a resource space specific resource resolution server . Additional resource resolution servers may be provided within each resource space e.g. corresponding to each service interface each service endpoint etc. .

All of the processes described herein may be embodied in and fully automated via software code modules executed by one or more general purpose computers or processors. The code modules may be stored in any type of computer readable medium or other computer storage device. Some or all the methods may alternatively be embodied in specialized computer hardware. In addition the components referred to herein may be implemented in hardware software firmware or a combination thereof.

Conditional language such as among others can could might or may unless specifically stated otherwise are otherwise understood within the context as used in general to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Conjunctive language such as the phrase at least one of X Y and Z unless specifically stated otherwise is otherwise understood with the context as used in general to convey that an item term etc. may be either X Y or Z or a combination thereof. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of X at least one of Y and at least one of Z to each be present.

Any process descriptions elements or blocks in the flow diagrams described herein and or depicted in the attached figures should be understood as potentially representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or elements in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved as would be understood by those skilled in the art.

It should be emphasized that many variations and modifications may be made to the above described embodiments the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

