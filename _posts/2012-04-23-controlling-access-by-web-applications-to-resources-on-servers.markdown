---

title: Controlling access by web applications to resources on servers
abstract: Techniques are shown for providing third-party applications access to user resources based on user actions and processes that provide the third-party applications with the correct security tokens. The scope of access granted in various implementations of the disclosure is all documents which the user has already opened with the third-party application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09148429&OS=09148429&RS=09148429
owner: Google Inc.
number: 09148429
owner_city: Mountain View
owner_country: US
publication_date: 20120423
---
Security and privacy of online data and content are a concern for most users of the Internet and web based storage systems. A user who would like to create new resources for or who has stored certain personal or sensitive resources or content on a web based storage system would like to control access to these user resources.

Techniques are disclosed for granting a third party application access to a user resource located on a network system. A security model controls access to the resource and includes a user based access control list ACL checking utility configured for determining whether a user is on a user based ACL granting the user access to the one or more resources. An authorization token checking utility is also provided and is configured for determining whether an access token has been granted by a token grant server authenticating the third party application with the network system to access the one or more resources. A resource based ACL checking utility is configured for determining whether a third party application has permission to access a particular user resource on behalf of a particular user based at least in part on metadata associated with the user resource. This metadata provides a record of whether the third party application has been used by the particular user to access the one or more resources. An application audit list checking utility is configured for determining whether any user has employed the third party application to access the one or more resources. An installation record checking utility determines whether the third party application has been installed by the user. An authentication enablement utility is configured to enable an authentication of the third party application and grant the third party application permission to access the one or more resources upon receiving affirmative determinations in all of the group or a subset of the group of determinations made by the system.

Implementations may include corresponding systems apparatus and computer programs configured to perform the actions of the methods and encoded on computer storage devices. This Summary is not intended to introduce key features or essential features of the claimed subject matter but merely provides a selection of concepts that are further described in the Detailed Description. Further implementations features and advantages as well as the structure and operation of the various implementations are described in detail below with reference to accompanying drawings.

Techniques are described for among other things managing access to specific user resources in a web based online or network system hereinafter referred to a network system . User resources may include files data and other content that a user has created or otherwise obtained and wants to maintain access to ownership of and or control over. Third party applications may be granted access to the resources on the network system based on user actions and processes that provide the third party applications with the correct security authentication. An application that has been granted access to a resource can be used to open create modify or perform other functionalities on that resource.

Third party applications may be one or more of software applications or programs developed or supplied by a party other than the owner or operator of the network system or software applications or programs located on different servers or having different access control than the network system irrespective of ownership. A user can discover a third party application that they are interested in by using a web browser an application store or marketplace a search engine a developer s website shared content from another user and advertisements in conventional media or on the internet. The user may then install the discovered application. The installation can be done by any of different means that include directly from an application store or marketplace using a uniform resource locator URL provided by the third party developer by opening a shared document or other methods. Security tokens are granted to user authorized third party applications and include an identification of the user and an identification of the application. Although not necessary a description of the scope of authorization provided by the user for the resources to which access is granted can also be included. The security token is an authentication security device that may be used for example to authorize the use of computer services by a particular party with regard to any of the user s resources stored on the network system and under certain constraints. The scope of access granted by an access token in various implementations of the disclosure is for example read and or write access for selected documents files data or other content which the user previously accessed with the third party application.

A third party application is granted access to a particular user resource stored on web based storage of the network system when several different checking utilities have made individual determinations that taken together result in authentication fulfillment and granting of access to the third party application.

Referring initially to in one example implementation the network system may create and store a user based access control list ACL data record . This user based ACL record lists users or user groups that are granted access to a particular resource. A user based ACL checking utility is configured to determine whether a user should be granted access to a resource such as data files documents or other content stored on web based storage of the network system based on user based ACL . The user based ACL can also specify what level of access is provided to the user e.g. read write or other specified permissions. A resource that is confirmed to be accessible to a user based on the permissions specified by the user based ACL is referred to as a user resource. This determination is one of a group of determinations that may be completed before the network system fulfills a third party application access request and grants the third party application permission to access the user resource. One of ordinary skill in the art after reading this entire description and the claims will understand that the group of determinations made does not necessarily have to include all of the determinations shown in and discussed herein.

As shown in token grant server may grant an access token to a third party application as a result of actions taken by a user. The third party application developer can provide a uniform resource locator URL pointing back to the third party application that a user has installed. In one example a user may select a document or resource on the network system and a third party application to open it with. In an alternative scenario the user may select a third party application to create a new document with. When the user makes this selection the network system redirects the user to the URL for the third party application. A user clicks on that URL when they want to use the third party application to open create or modify a resource such as a file data a document or other content on the target network system. In alternative implementations communication between the third party application and the network system can be facilitated through any suitable network protocol.

In at least one implementation if the token grant server has not previously granted an access token to a third party application a security page may be provided that pops up and asks the user if they want to grant the third party application access to any of the user resources stored on the network system. If the user accepts the token grant server sends an authorization code to the third party application. The third party application then sends the token grant server the authorization code along with a client secret that is unique to the third party and is used to verify the identity of the third party. The token grant server then sends an access token back to the third party application which is used by the third party application to gain access to the resource the user is attempting to open or otherwise operate on using the third party application.

A token grant server checking utility may be configured to determine whether an access token has been sent by the token grant server to the third party application granting the third party application access to the user resources. This determination is one of a group of determinations that may be made before the network system fulfills a third party application access request and grants the third party application permission to access a user resource.

The network system creates a record to track which applications a particular user has used to open create modify or otherwise work with a particular resource. This per user metadata record may preferably list all the applications used by each particular user to open a particular resource. As shown in resource based ACL checking utility is configured to determine from this per user metadata record whether a user has used a particular third party application to access the user resource. The per user metadata can be associated with the particular user resource such that retrieval of or access to the particular resource includes the summary information provided by the metadata including that a particular user has previously used a particular third party application to access that resource. This determination is one of a group of determinations that may be made before fulfilling a third party application access request and granting the third party application permission to access the user resource.

The network system may also create an application audit list record to track which applications have been used to open create or modify a particular resource irrespective of any particular user. This item metadata record lists all the applications used by any user to open a particular resource. Any application that has been added to the per user metadata record discussed above is also added to the item metadata record . There is only one item metadata record per resource and once added to this metadata record an application is not removed. While a user can revoke a third party application s access to the user s resources by uninstalling the application and removing the application from the per user metadata record discussed above the application is not removed from the item metadata record . This ensures that the item metadata record provides a record of which applications have ever accessed a resource. An application audit list checking utility is configured to determine from this item metadata record whether any user has used a particular third party application to access the user resource. This determination is not required as one of a group of determinations made before fulfilling a third party application access request and granting the third party application permission to access the user resource. This is because a third party application that has been added to the per user metadata record has also automatically been added to the item metadata record .

Installing an application is not to be confused with typical installation of software in which multiple files are copied to a user s hard drive or solid state drive and reside there until the software is uninstalled. Instead the act of installing the third party application constitutes registering a relationship between a user and the third party application and acts as a step toward allowing the third party application to access user resources on network system .

When a user has decided to install a third party application the user can click on an install button at an installation notification provided by the third party application or network system in an application marketplace where the third party application is available. Alternative implementations for installing a third party application can include any user action signifying recognition on the part of the user that they are about to grant the third party application access to one or more resources on network system . A decision by the user to accept the parameters detailed on the security page associated with a third party application results in the user installing the application. The network system records this installation on install record shown in . The act of installing the third party application constitutes registering a relationship between a user s account or web presence and the third party application and acts as a step toward allowing the third party application to access the user s resources on the network system.

As shown in when a user installs a third party application the network system stores a record in an installation database . In various implementations such an install record is also represented as the install record shown in and the install record shown in . The install records list the third party applications installed by a user.

As shown in an installation registry confirmation utility is configured to determine from the install record whether a third party application has been installed. This determination is one of a group of determinations that may be made before fulfilling a third party application access request and granting the third party application permission to access the user resource.

The network system may also include an authentication fulfillment utility configured to authenticate the third party application and grant the third party application permission to access a user resource upon receiving affirmative determinations from a suitable combination of at least some of the user based ACL checking utility the token grant server checking utility the resource based ACL checking utility the application audit list ACL checking utility and the installation registry confirmation utility .

Referring to and as discussed above a user can install a third party application written by a developer and elect to allow that third party application to open files owned by the user and stored on the web based storage using open with or default open with functionality provided by the network system. The user can also use the third party application to create new files and other content on the network system using create with functionality provided on the user s browser. The third party application can operate on data stored on the web based storage after being granted access or create new data to be stored on the network system. As shown in the third party application communicates over a network through an application programming interface API for the online storage system . The user thereby gains the benefits of third party applications that did not already exist on the network system and can share those benefits with other users.

A user can discover a third party application that they are interested in by using a web browser an application store a search engine a developer s website shared content from another user and advertisements in conventional media or on the internet. The user may then install the discovered application. As discussed above the act of installing the third party application constitutes registering a relationship between a user s account and the third party application and acts as a step toward allowing the third party application to access the user s resources on the network system that are associated with that user s account. When a user installs a third party application the network system stores a record in an installation database .

The user then launches the third party application using functionality provided by the network system and accessed e.g. by their browser or through script provided with a browser extension such as create with open with or default open with . The third party applications that the user has installed and that are of a type appropriate for working with a particular resource appear in a drop down menu or list associated with the create with open with or default open with selections accessed by their browser or browser extension. At any time the user decides that they no longer want an installed third party application to have access to their user resources on the network system the user can uninstall the third party application. A third party application that has been installed by a user and granted permissions in accordance with the security protocols described herein can work on data that is stored on the network system or on data that is kept on the third party server.

An example sequence of techniques performed in accordance with an implementation of this disclosure involves the application of a third party photo editing program for modifying a user s images stored on the network system. A user may discover a photo editing program developed by a third party from the third party developer s website as a result of a search of the internet from a shared link to the program provided by another user on an application store or other means.

Referring to the user then installs the third party photo editing program by clicking on an install button at the installation page for the program discovered e.g. on an application store or marketplace. When the user clicks on the install button information regarding the third party program is presented to the user including the types of images the application can work on who the developer is other application configuration attributes and any temporal or other limitations on the access the third party application will be granted to the user s resources on the network system.

A security page appears the first time the user accesses the URL for a particular third party application. The user is asked if they want to grant the third party application access to certain of the user resources stored on the network system. If the user clicks on an accept button and the token grant server has not already done so the token grant server shown in generates an access token to grant access to the user s resources. The access token granted by the token grant server can provide different permission levels for different classes of resources. As several non limiting examples permission may be granted for the third party application to open all images belonging to the user to open and edit all images belonging to the user to open and edit all files owned by the user to read only files owned by the user etc. The token grant server retrieves an application ID from an application configuration database . Application configuration database can store configuration attributes for third party applications that allows the third party application to communicate with the web based storage system. An authorization code is passed to the third party application . The third party application will need this authorization code along with a client secret verifying that the third party application is the correct application to pass back to the token grant server in exchange for an access token. The token grant server knows from receipt of the authorization code and client secret that the access token is being sent to the correct third party application. The third party application can then send the access token along with a document ID to the application programming interface API for the web based system to gain access to the file data for the user resource.

In the example of editing a user photo stored on the web based system if a user has installed one or more photo editing programs the user could left click or right click on an image that they wish to edit and then select the desired third party photo editing program they have installed from the drop down list that would be associated with the open with functionality presented by the user interface UI . Another possible alternative could include left clicking or right clicking on the image to result in default open with functionality where the user has previously selected a particular photo editing program to be their default program for editing images. The user could then use the photo editing program they selected to edit the image and save the edited image back to their document list on the web based storage system share the edited image with friends or family or other functionality. Yet another alternative could include create with functionality available to the user on their browser or browser extension which could present a number of programs previously installed by the user and available to facilitate the creation of an image or other object for storage on the web based storage system.

Referring to a diagram of a security model in accordance with one implementation is illustrated. The security model controls access to a user s files and data on the web based storage system. The security model only allows a third party application to access documents that the user previously opened with that application and or where the user has explicitly authorized access by that third party application. This security model of is described in greater detail below with reference to .

Referring to the determinations that are made by the above discussed utilities are shown. One of ordinary skill in the art will recognize that the determinations illustrated in could be made in any order and the example order of determinations shown in is just one implementation and is not in any way limiting. At the security model employs a user based ACL checking utility in to determine whether the user is on a user based ACL in for the particular resource now being accessed.

As discussed above when the user opens a document from a document list on the web based storage system using a third party application the user must first install the application. At in the installation registry confirmation utility of checks the install record to determine whether the third party application has been installed.

Referring back to the application ID for the third party application used to open the document is retrieved from an application configuration database maintained on the storage of web based storage system . The application ID is written into a piece of metadata that is kept on the document itself. This per user metadata is recorded in per user metadata record shown in and is specific for a document and for the particular user who used that application to open that document.

As shown in an installation database and application configuration database are part of or communicatively coupled with the web based storage system . A token grant server is also provided in communication with the web based storage system and with the third party application selected by a user to open a user resource on the web based storage system . Third party application makes an API call through API of the web based system with the required security credentials such as the document ID of a resource and an access token to gain access to the resource on the web based storage system .

Referring to a diagram illustrates the various records that are checked before granting a third party application access to user resources on the web based storage system. Referring to at a user based ACL checking utility determines whether a user is on a user based ACL which confirms that the user has access to the particular resource. As shown at of an installation registry confirmation utility checks an installation record on the web based storage system to determine whether a particular user has installed the third party application. In the user Brian has installed at least application 1. When the user Brian installed application 1 the configuration attributes of application 1 were entered into an application configuration record . These attributes could include the URL of the third party application s web site the application ID the multipurpose internet mailbox extension MIME types of files the third party application can work on etc.

A per user metadata record registers the applications that have been used by each user Brian Mike and Eric in to open a particular file record A resource stored on the web based system. As discussed above the resource based ACL checking utility checks this per user metadata record shown as in to determine whether a particular user has used a particular application to open a particular file record. A separate item metadata record is also written to the web based storage system with the item metadata record registering all third party applications that have been used by any user to open the particular file record A resource . As shown in an application based ACL checking utility checks this item metadata record shown as in to determine whether any user has used a particular application to open a particular file record.

At of the resource based ACL checking utility in and the application based ACL checking utility in determine whether a third party application is on a user specific list per user metadata record in and in and on a resource specific list item metadata record in and in lists. As further shown at of a token grant server checking utility in determines whether an authorization access token has been granted. The authorization access token is granted per user per third party application and per scope specifying which resource a particular user has granted access to for a particular third party application along with any other limitations on the access such as temporal restrictions etc. The scope granted per authorization access token in accordance with an implementation of this disclosure is to allow a third party application access to a resource that the third party application has previously been used to open.

The security model in accordance with various implementations of this disclosure therefore provides four layers of protection. One layer of protection requires that a user based access control list ACL shown in is checked to confirm that the user has access to the resource. Another layer of protection requires that an application installation record is checked to see whether the user has installed the third party application. Yet another layer of protection requires that the user must have authorized a token grant server to provide an authorization access token e.g. using OAuth 2.0 protocol to the third party application. The authorization access token includes the user ID from cookies on the user s device the third party application ID retrieved from the application configuration database maintained on the web based storage system and the resource scope that is being granted. Still another layer of protection requires that application specific lists are checked. The third party application must be on a user specific list per user metadata indicating that a particular user has used that application to access a particular resource or file and on an item specific list item metadata indicating that the application has been used by any user to access that particular resource or file.

In one example implementation the user specific list per user metadata can be limited in number such that e.g. no more than 20 third party applications are being used at one time by a particular user to open a particular resource. In this implementation when the user opens the particular resource with a 21third party application the 1third party application used by that user to open the resource would drop off the user specific list and would no longer be allowed to access that particular resource. The number is just one non limiting example of a number of third party applications that could be allowed to open a particular resource simultaneously for one particular user.

A security model that grants a third party application general access to a user s document list or web based storage drive would allow the third party application to read from and write to any user files on the list or drive. A security model in accordance with one or more implementations of the present disclosure grants access to user resources for the third party application at a file level or individual resource level rather than at a file folder level or drive level. To avoid inconveniencing users by requiring that a third party application request access to the user resources on a per file basis when a user opens a file the third party application used to open that file is granted access to that particular file from that point on until the access is revoked.

When a user wants to grant an authorization token to a third party application the user is granting that third party application access to user resources that the third party application will process on behalf of the user. The third party generates a URL that points to an API for a server of the target web based storage system. The user who has discovered the third party application clicks on the URL and is taken to a security page that asks the user if they want to grant the third party application access to particular user resources. If the user clicks accept the web based system generates a token which is then passed to the third party and that token is the thing that the third party application needs to provide back to the web based storage system to authorize their requests. As explained above the token includes information on the particular user the particular third party application and the particular resource that the user authorized the third party application to access.

The approaches and systems described herein may be deployed in part or in whole through a machine that executes computer software program codes and or instructions on one or more processors contained in the client devices and or the server or servers associated with the web based storage system.

Implementations of the disclosure may include a method on a machine a system or apparatus as part of or in relation to the machine or a computer program product embodied in a computer readable medium executing on one or more of the machines. The one or more processors may be part of a server client network infrastructure mobile computing platform stationary computing platform or other computing platform.

A processor may be any kind of computational or processing device capable of executing program instructions codes binary instructions and the like. The processor may include memory that stores methods codes instructions and programs as described herein and elsewhere. The processor may access a storage medium through an interface that may store methods codes and instructions as described herein and elsewhere. The storage medium associated with the processor for storing methods programs codes program instructions or other type of instructions capable of being executed by the computing or processing device may include but may not be limited to one or more of a CD ROM DVD memory hard disk flash drive RAM ROM cache and the like.

Computer system includes a bus or other communication mechanism for communicating information and a processor coupled with bus for processing information. By way of example the computer system may be implemented with one or more processors .

Computer system can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them stored in an included memory such as a Random Access Memory RAM a flash memory a Read Only Memory ROM a Programmable Read Only Memory PROM an Erasable PROM EPROM registers a hard disk a removable disk a CD ROM a DVD or any other suitable storage device coupled to bus for storing information and instructions to be executed by processor . The processor and the memory can be supplemented by or incorporated in logic circuitry.

The methods and systems described herein may be deployed in part or in whole through a machine that executes computer software on a server client firewall gateway hub router or other such computer and or networking hardware. The software program may be associated with a server that may include a file server print server domain server internet server intranet server and other variants such as secondary server host server distributed server and the like. The server may include one or more of memories processors computer readable media storage media ports physical and virtual communication devices and interfaces capable of accessing other servers clients machines and devices through a wired or a wireless medium and the like. The methods programs or codes as described herein and elsewhere may be executed by the server. In addition other devices required for execution of methods as described in this application may be considered as a part of the infrastructure associated with the server.

The server may provide an interface to other devices including without limitation clients other servers printers database servers print servers file servers communication servers distributed servers and the like. Additionally this coupling and or connection may facilitate remote execution of programs across the network. The networking of some or all of these devices may facilitate parallel processing of a program or method at one or more location without deviating from the scope of the disclosed subject matter. In addition any of the devices attached to the server through an interface may include at least one storage medium capable of storing methods programs code and or instructions. A central repository may provide program instructions to be executed on different devices. In this implementation the remote repository may act as a storage medium for program code instructions and programs.

The methods and systems described herein may be deployed in part or in whole through network infrastructures. The network infrastructure may include elements such as computing devices servers routers hubs firewalls clients personal computers communication devices routing devices and other active and passive devices modules and or components as known in the art. The computing and or non computing device s associated with the network infrastructure may include apart from other components a storage medium such as flash memory buffer stack RAM ROM and the like. The processes methods program codes instructions described herein and elsewhere may be executed by one or more of the network infrastructural elements.

The computer software program codes and or instructions may be stored and or accessed on machine readable media that may include computer components devices and recording media that retain digital data used for computing for some interval of time semiconductor storage known as random access memory RAM mass storage typically for more permanent storage such as optical discs forms of magnetic storage like hard disks tapes drums cards and other types processor registers cache memory volatile memory non volatile memory optical storage such as CD DVD removable media such as flash memory e.g. USB sticks or keys floppy disks magnetic tape paper tape punch cards standalone RAM disks Zip drives removable mass storage off line and the like other computer memory such as dynamic memory static memory read write storage mutable storage read only random access sequential access location addressable file addressable content addressable network attached storage storage area network bar codes magnetic ink and the like.

The elements described and depicted herein including in flow charts and block diagrams throughout the figures imply logical boundaries between the elements. However according to software or hardware engineering practices the depicted elements and the functions thereof may be implemented on machines through computer executable media having a processor capable of executing program instructions stored thereon as a monolithic software structure as standalone software modules or as modules that employ external routines code services and so forth or any combination of these and all such implementations may be within the scope of the present disclosure.

Thus while the foregoing drawings and descriptions set forth functional aspects of the disclosed systems no particular arrangement of software for implementing these functional aspects should be inferred from these descriptions unless explicitly stated or otherwise clear from the context. Similarly it will be appreciated that the various techniques identified and described above may be varied and that the order of techniques may be adapted to particular applications of the techniques disclosed herein. All such variations and modifications are intended to fall within the scope of this disclosure. As such the depiction and or description of an order for various techniques should not be understood to require a particular order of execution for those techniques unless required by a particular application or explicitly stated or otherwise clear from the context.

The methods and or processes described above and techniques thereof may be realized in hardware or any combination of hardware and software suitable for a particular application. The hardware may include a general purpose computer and or dedicated computing device or specific computing device or particular aspect or component of a specific computing device. The processes may be realized in one or more microprocessors microcontrollers embedded microcontrollers programmable digital signal processors or other programmable device along with internal and or external memory. The processes may also or instead be embodied in an application specific integrated circuit a programmable gate array programmable array logic or any other device or combination of devices that may be configured to process electronic signals. It will further be appreciated that one or more of the processes may be realized as a computer executable code capable of being executed on a machine readable medium.

The instructions may be stored in the memory and implemented in one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of the computer system and according to any method well known to those of skill in the art including but not limited to computer languages such as data oriented languages e.g. SQL dBase system languages e.g. C Objective C C Assembly architectural languages e.g. Java .NET and application languages e.g. PHP Ruby Perl Python .

A computer program as discussed herein does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules subprograms or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network. The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.

Computer system further includes a data storage device such as a magnetic disk or optical disk coupled to bus for storing information and instructions. Computer system may be coupled via input output module to various devices. The input output module can be any input output module. Example input output modules include data ports such as USB ports. The input output module is configured to connect to a communications module . Example communications modules include networking interface cards such as Ethernet cards and modems. In certain aspects the input output module is configured to connect to a plurality of devices such as an input device and or an output device . Example input devices include a keyboard and a pointing device e.g. a mouse or a trackball by which a user can provide input to the computer system . Other kinds of input devices can be used to provide for interaction with a user as well such as a tactile input device visual input device audio input device or brain computer interface device. For example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech tactile or brain wave input. Example output devices include display devices such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user.

According to one aspect of the present disclosure the web based system as shown in can be implemented using a computer system in response to processor executing one or more sequences of one or more instructions contained in memory . Such instructions may be read into memory from another machine readable medium such as data storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process s described herein. One or more processors in a multi processing arrangement may also be employed to execute the sequences of instructions contained in memory . In alternative aspects hard wired circuitry may be used in place of or in combination with software instructions to implement various aspects of the present disclosure. Thus aspects of the present disclosure are not limited to any specific combination of hardware circuitry and software.

Various aspects of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. The communication network can include for example any one or more of a personal area network PAN a local area network LAN a campus area network CAN a metropolitan area network MAN a wide area network WAN a broadband network BBN the Internet and the like. Further the communication networks can include but are not limited to for example any one or more of the following network topologies including a bus network a star network a ring network a mesh network a star bus network tree or hierarchical network or the like. The communications modules can be for example modems or Ethernet cards.

As discussed above computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. Computer system can be for example and without limitation an enterprise server or group of servers one or more desktop computers one or more laptop computers etc. Computer system can also be embedded in another device for example and without limitation a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver a video game console and or a television set top box.

The term machine readable storage medium or computer readable medium as used herein refers to any medium or media that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as data storage device . Volatile media include dynamic memory such as memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise bus . Common forms of machine readable media include for example floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM an EPROM a FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read. The machine readable storage medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them.

While this specification contains many specifics these should not be construed as limitations on the scope of what may be claimed but rather as descriptions of particular implementations of the subject matter. Certain features that are described in this specification in the context of separate embodiments or implementations can also be implemented in combination in a single embodiment or implementation. Conversely various features that are described in the context of a single embodiment or implementation can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

While operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the aspects described above should not be understood as requiring such separation in all aspects and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

The subject matter of this specification has been described in terms of particular aspects but other aspects can be implemented and are within the scope of the following claims. For example the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous. Other variations are within the scope of the following claims.

In the claims appended herein the inventor invokes 35 U.S.C. 112 paragraph 6 only when the words means for or steps for are used in the claim. If such words are not used in a claim then the inventor does not intend for the claim to be construed to cover the corresponding structure material or acts described herein and equivalents thereof in accordance with 35 U.S.C. 112 paragraph 6.

